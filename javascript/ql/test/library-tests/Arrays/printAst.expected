nodes
| arrays.js:1:1:93:2 | [ParExpr] (functi ... T OK }) | semmle.label | [ParExpr] (functi ... T OK }) |
| arrays.js:1:1:93:3 | [ExprStmt] (functi ... OK }); | semmle.label | [ExprStmt] (functi ... OK }); |
| arrays.js:1:1:93:3 | [ExprStmt] (functi ... OK }); | semmle.order | 1 |
| arrays.js:1:2:93:1 | [FunctionExpr] functio ... OT OK } | semmle.label | [FunctionExpr] functio ... OT OK } |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | semmle.label | [BlockStmt] { let ... OT OK } |
| arrays.js:2:3:2:24 | [DeclStmt] let source = ... | semmle.label | [DeclStmt] let source = ... |
| arrays.js:2:7:2:12 | [VarDecl] source | semmle.label | [VarDecl] source |
| arrays.js:2:7:2:23 | [VariableDeclarator] source = "source" | semmle.label | [VariableDeclarator] source = "source" |
| arrays.js:2:16:2:23 | [Literal] "source" | semmle.label | [Literal] "source" |
| arrays.js:4:3:4:28 | [DeclStmt] var obj = ... | semmle.label | [DeclStmt] var obj = ... |
| arrays.js:4:7:4:9 | [VarDecl] obj | semmle.label | [VarDecl] obj |
| arrays.js:4:7:4:27 | [VariableDeclarator] obj = { ... ource } | semmle.label | [VariableDeclarator] obj = { ... ource } |
| arrays.js:4:13:4:27 | [ObjectExpr] {foo: ...} | semmle.label | [ObjectExpr] {foo: ...} |
| arrays.js:4:15:4:17 | [Label] foo | semmle.label | [Label] foo |
| arrays.js:4:15:4:25 | [Property] foo: source | semmle.label | [Property] foo: source |
| arrays.js:4:20:4:25 | [VarRef] source | semmle.label | [VarRef] source |
| arrays.js:5:3:5:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:5:3:5:15 | [CallExpr] sink(obj.foo) | semmle.label | [CallExpr] sink(obj.foo) |
| arrays.js:5:3:5:16 | [ExprStmt] sink(obj.foo); | semmle.label | [ExprStmt] sink(obj.foo); |
| arrays.js:5:8:5:10 | [VarRef] obj | semmle.label | [VarRef] obj |
| arrays.js:5:8:5:14 | [DotExpr] obj.foo | semmle.label | [DotExpr] obj.foo |
| arrays.js:5:12:5:14 | [Label] foo | semmle.label | [Label] foo |
| arrays.js:7:3:7:15 | [DeclStmt] var arr = ... | semmle.label | [DeclStmt] var arr = ... |
| arrays.js:7:7:7:9 | [VarDecl] arr | semmle.label | [VarDecl] arr |
| arrays.js:7:7:7:14 | [VariableDeclarator] arr = [] | semmle.label | [VariableDeclarator] arr = [] |
| arrays.js:7:13:7:14 | [ArrayExpr] [] | semmle.label | [ArrayExpr] [] |
| arrays.js:8:3:8:5 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:8:3:8:10 | [DotExpr] arr.push | semmle.label | [DotExpr] arr.push |
| arrays.js:8:3:8:18 | [MethodCallExpr] arr.push(source) | semmle.label | [MethodCallExpr] arr.push(source) |
| arrays.js:8:3:8:19 | [ExprStmt] arr.push(source); | semmle.label | [ExprStmt] arr.push(source); |
| arrays.js:8:7:8:10 | [Label] push | semmle.label | [Label] push |
| arrays.js:8:12:8:17 | [VarRef] source | semmle.label | [VarRef] source |
| arrays.js:10:3:12:3 | [ForStmt] for (va ... OK } | semmle.label | [ForStmt] for (va ... OK } |
| arrays.js:10:8:10:16 | [DeclStmt] var i = ... | semmle.label | [DeclStmt] var i = ... |
| arrays.js:10:12:10:12 | [VarDecl] i | semmle.label | [VarDecl] i |
| arrays.js:10:12:10:16 | [VariableDeclarator] i = 0 | semmle.label | [VariableDeclarator] i = 0 |
| arrays.js:10:16:10:16 | [Literal] 0 | semmle.label | [Literal] 0 |
| arrays.js:10:19:10:19 | [VarRef] i | semmle.label | [VarRef] i |
| arrays.js:10:19:10:32 | [BinaryExpr] i < arr.length | semmle.label | [BinaryExpr] i < arr.length |
| arrays.js:10:23:10:25 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:10:23:10:32 | [DotExpr] arr.length | semmle.label | [DotExpr] arr.length |
| arrays.js:10:27:10:32 | [Label] length | semmle.label | [Label] length |
| arrays.js:10:35:10:35 | [VarRef] i | semmle.label | [VarRef] i |
| arrays.js:10:35:10:37 | [UpdateExpr] i++ | semmle.label | [UpdateExpr] i++ |
| arrays.js:10:40:12:3 | [BlockStmt] { s ... OK } | semmle.label | [BlockStmt] { s ... OK } |
| arrays.js:11:5:11:8 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:11:5:11:16 | [CallExpr] sink(arr[i]) | semmle.label | [CallExpr] sink(arr[i]) |
| arrays.js:11:5:11:17 | [ExprStmt] sink(arr[i]); | semmle.label | [ExprStmt] sink(arr[i]); |
| arrays.js:11:10:11:12 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:11:10:11:15 | [IndexExpr] arr[i] | semmle.label | [IndexExpr] arr[i] |
| arrays.js:11:14:11:14 | [VarRef] i | semmle.label | [VarRef] i |
| arrays.js:15:3:15:5 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:15:3:15:13 | [DotExpr] arr.forEach | semmle.label | [DotExpr] arr.forEach |
| arrays.js:15:3:15:29 | [MethodCallExpr] arr.for ... ink(e)) | semmle.label | [MethodCallExpr] arr.for ... ink(e)) |
| arrays.js:15:3:15:30 | [ExprStmt] arr.for ... nk(e)); | semmle.label | [ExprStmt] arr.for ... nk(e)); |
| arrays.js:15:7:15:13 | [Label] forEach | semmle.label | [Label] forEach |
| arrays.js:15:15:15:28 | [ArrowFunctionExpr] (e) => sink(e) | semmle.label | [ArrowFunctionExpr] (e) => sink(e) |
| arrays.js:15:16:15:16 | [SimpleParameter] e | semmle.label | [SimpleParameter] e |
| arrays.js:15:22:15:25 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:15:22:15:28 | [CallExpr] sink(e) | semmle.label | [CallExpr] sink(e) |
| arrays.js:15:27:15:27 | [VarRef] e | semmle.label | [VarRef] e |
| arrays.js:16:3:16:5 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:16:3:16:9 | [DotExpr] arr.map | semmle.label | [DotExpr] arr.map |
| arrays.js:16:3:16:25 | [MethodCallExpr] arr.map ... ink(e)) | semmle.label | [MethodCallExpr] arr.map ... ink(e)) |
| arrays.js:16:3:16:26 | [ExprStmt] arr.map ... nk(e)); | semmle.label | [ExprStmt] arr.map ... nk(e)); |
| arrays.js:16:7:16:9 | [Label] map | semmle.label | [Label] map |
| arrays.js:16:11:16:24 | [ArrowFunctionExpr] (e) => sink(e) | semmle.label | [ArrowFunctionExpr] (e) => sink(e) |
| arrays.js:16:12:16:12 | [SimpleParameter] e | semmle.label | [SimpleParameter] e |
| arrays.js:16:18:16:21 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:16:18:16:24 | [CallExpr] sink(e) | semmle.label | [CallExpr] sink(e) |
| arrays.js:16:23:16:23 | [VarRef] e | semmle.label | [VarRef] e |
| arrays.js:18:3:18:11 | [ArrayExpr] [1, 2, 3] | semmle.label | [ArrayExpr] [1, 2, 3] |
| arrays.js:18:3:18:15 | [DotExpr] [1, 2, 3].map | semmle.label | [DotExpr] [1, 2, 3].map |
| arrays.js:18:3:18:30 | [MethodCallExpr] [1, 2, ... ource") | semmle.label | [MethodCallExpr] [1, 2, ... ource") |
| arrays.js:18:3:18:38 | [DotExpr] [1, 2, ... forEach | semmle.label | [DotExpr] [1, 2, ... forEach |
| arrays.js:18:3:18:52 | [MethodCallExpr] [1, 2, ... ink(e)) | semmle.label | [MethodCallExpr] [1, 2, ... ink(e)) |
| arrays.js:18:3:18:53 | [ExprStmt] [1, 2, ... nk(e)); | semmle.label | [ExprStmt] [1, 2, ... nk(e)); |
| arrays.js:18:4:18:4 | [Literal] 1 | semmle.label | [Literal] 1 |
| arrays.js:18:7:18:7 | [Literal] 2 | semmle.label | [Literal] 2 |
| arrays.js:18:10:18:10 | [Literal] 3 | semmle.label | [Literal] 3 |
| arrays.js:18:13:18:15 | [Label] map | semmle.label | [Label] map |
| arrays.js:18:17:18:17 | [SimpleParameter] i | semmle.label | [SimpleParameter] i |
| arrays.js:18:17:18:29 | [ArrowFunctionExpr] i => "source" | semmle.label | [ArrowFunctionExpr] i => "source" |
| arrays.js:18:22:18:29 | [Literal] "source" | semmle.label | [Literal] "source" |
| arrays.js:18:32:18:38 | [Label] forEach | semmle.label | [Label] forEach |
| arrays.js:18:40:18:40 | [SimpleParameter] e | semmle.label | [SimpleParameter] e |
| arrays.js:18:40:18:51 | [ArrowFunctionExpr] e => sink(e) | semmle.label | [ArrowFunctionExpr] e => sink(e) |
| arrays.js:18:45:18:48 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:18:45:18:51 | [CallExpr] sink(e) | semmle.label | [CallExpr] sink(e) |
| arrays.js:18:50:18:50 | [VarRef] e | semmle.label | [VarRef] e |
| arrays.js:20:3:20:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:20:3:20:17 | [CallExpr] sink(arr.pop()) | semmle.label | [CallExpr] sink(arr.pop()) |
| arrays.js:20:3:20:18 | [ExprStmt] sink(arr.pop()); | semmle.label | [ExprStmt] sink(arr.pop()); |
| arrays.js:20:8:20:10 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:20:8:20:14 | [DotExpr] arr.pop | semmle.label | [DotExpr] arr.pop |
| arrays.js:20:8:20:16 | [MethodCallExpr] arr.pop() | semmle.label | [MethodCallExpr] arr.pop() |
| arrays.js:20:12:20:14 | [Label] pop | semmle.label | [Label] pop |
| arrays.js:22:3:22:24 | [DeclStmt] var arr2 = ... | semmle.label | [DeclStmt] var arr2 = ... |
| arrays.js:22:7:22:10 | [VarDecl] arr2 | semmle.label | [VarDecl] arr2 |
| arrays.js:22:7:22:23 | [VariableDeclarator] arr2 = ["source"] | semmle.label | [VariableDeclarator] arr2 = ["source"] |
| arrays.js:22:14:22:23 | [ArrayExpr] ["source"] | semmle.label | [ArrayExpr] ["source"] |
| arrays.js:22:15:22:22 | [Literal] "source" | semmle.label | [Literal] "source" |
| arrays.js:23:3:23:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:23:3:23:18 | [CallExpr] sink(arr2.pop()) | semmle.label | [CallExpr] sink(arr2.pop()) |
| arrays.js:23:3:23:19 | [ExprStmt] sink(arr2.pop()); | semmle.label | [ExprStmt] sink(arr2.pop()); |
| arrays.js:23:8:23:11 | [VarRef] arr2 | semmle.label | [VarRef] arr2 |
| arrays.js:23:8:23:15 | [DotExpr] arr2.pop | semmle.label | [DotExpr] arr2.pop |
| arrays.js:23:8:23:17 | [MethodCallExpr] arr2.pop() | semmle.label | [MethodCallExpr] arr2.pop() |
| arrays.js:23:13:23:15 | [Label] pop | semmle.label | [Label] pop |
| arrays.js:25:3:25:24 | [DeclStmt] var arr3 = ... | semmle.label | [DeclStmt] var arr3 = ... |
| arrays.js:25:7:25:10 | [VarDecl] arr3 | semmle.label | [VarDecl] arr3 |
| arrays.js:25:7:25:23 | [VariableDeclarator] arr3 = ["source"] | semmle.label | [VariableDeclarator] arr3 = ["source"] |
| arrays.js:25:14:25:23 | [ArrayExpr] ["source"] | semmle.label | [ArrayExpr] ["source"] |
| arrays.js:25:15:25:22 | [Literal] "source" | semmle.label | [Literal] "source" |
| arrays.js:26:3:26:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:26:3:26:18 | [CallExpr] sink(arr3.pop()) | semmle.label | [CallExpr] sink(arr3.pop()) |
| arrays.js:26:3:26:19 | [ExprStmt] sink(arr3.pop()); | semmle.label | [ExprStmt] sink(arr3.pop()); |
| arrays.js:26:8:26:11 | [VarRef] arr3 | semmle.label | [VarRef] arr3 |
| arrays.js:26:8:26:15 | [DotExpr] arr3.pop | semmle.label | [DotExpr] arr3.pop |
| arrays.js:26:8:26:17 | [MethodCallExpr] arr3.pop() | semmle.label | [MethodCallExpr] arr3.pop() |
| arrays.js:26:13:26:15 | [Label] pop | semmle.label | [Label] pop |
| arrays.js:28:3:28:16 | [DeclStmt] var arr4 = ... | semmle.label | [DeclStmt] var arr4 = ... |
| arrays.js:28:7:28:10 | [VarDecl] arr4 | semmle.label | [VarDecl] arr4 |
| arrays.js:28:7:28:15 | [VariableDeclarator] arr4 = [] | semmle.label | [VariableDeclarator] arr4 = [] |
| arrays.js:28:14:28:15 | [ArrayExpr] [] | semmle.label | [ArrayExpr] [] |
| arrays.js:29:3:29:6 | [VarRef] arr4 | semmle.label | [VarRef] arr4 |
| arrays.js:29:3:29:13 | [DotExpr] arr4.splice | semmle.label | [DotExpr] arr4.splice |
| arrays.js:29:3:29:29 | [MethodCallExpr] arr4.sp ... ource") | semmle.label | [MethodCallExpr] arr4.sp ... ource") |
| arrays.js:29:3:29:30 | [ExprStmt] arr4.sp ... urce"); | semmle.label | [ExprStmt] arr4.sp ... urce"); |
| arrays.js:29:8:29:13 | [Label] splice | semmle.label | [Label] splice |
| arrays.js:29:15:29:15 | [Literal] 0 | semmle.label | [Literal] 0 |
| arrays.js:29:18:29:18 | [Literal] 0 | semmle.label | [Literal] 0 |
| arrays.js:29:21:29:28 | [Literal] "source" | semmle.label | [Literal] "source" |
| arrays.js:30:3:30:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:30:3:30:18 | [CallExpr] sink(arr4.pop()) | semmle.label | [CallExpr] sink(arr4.pop()) |
| arrays.js:30:3:30:19 | [ExprStmt] sink(arr4.pop()); | semmle.label | [ExprStmt] sink(arr4.pop()); |
| arrays.js:30:8:30:11 | [VarRef] arr4 | semmle.label | [VarRef] arr4 |
| arrays.js:30:8:30:15 | [DotExpr] arr4.pop | semmle.label | [DotExpr] arr4.pop |
| arrays.js:30:8:30:17 | [MethodCallExpr] arr4.pop() | semmle.label | [MethodCallExpr] arr4.pop() |
| arrays.js:30:13:30:15 | [Label] pop | semmle.label | [Label] pop |
| arrays.js:37:3:37:29 | [DeclStmt] var arr5 = ... | semmle.label | [DeclStmt] var arr5 = ... |
| arrays.js:37:7:37:10 | [VarDecl] arr5 | semmle.label | [VarDecl] arr5 |
| arrays.js:37:7:37:28 | [VariableDeclarator] arr5 = ... t(arr4) | semmle.label | [VariableDeclarator] arr5 = ... t(arr4) |
| arrays.js:37:14:37:15 | [ArrayExpr] [] | semmle.label | [ArrayExpr] [] |
| arrays.js:37:14:37:22 | [DotExpr] [].concat | semmle.label | [DotExpr] [].concat |
| arrays.js:37:14:37:28 | [MethodCallExpr] [].concat(arr4) | semmle.label | [MethodCallExpr] [].concat(arr4) |
| arrays.js:37:17:37:22 | [Label] concat | semmle.label | [Label] concat |
| arrays.js:37:24:37:27 | [VarRef] arr4 | semmle.label | [VarRef] arr4 |
| arrays.js:38:3:38:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:38:3:38:18 | [CallExpr] sink(arr5.pop()) | semmle.label | [CallExpr] sink(arr5.pop()) |
| arrays.js:38:3:38:19 | [ExprStmt] sink(arr5.pop()); | semmle.label | [ExprStmt] sink(arr5.pop()); |
| arrays.js:38:8:38:11 | [VarRef] arr5 | semmle.label | [VarRef] arr5 |
| arrays.js:38:8:38:15 | [DotExpr] arr5.pop | semmle.label | [DotExpr] arr5.pop |
| arrays.js:38:8:38:17 | [MethodCallExpr] arr5.pop() | semmle.label | [MethodCallExpr] arr5.pop() |
| arrays.js:38:13:38:15 | [Label] pop | semmle.label | [Label] pop |
| arrays.js:40:3:40:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:40:3:40:27 | [CallExpr] sink(ar ... .pop()) | semmle.label | [CallExpr] sink(ar ... .pop()) |
| arrays.js:40:3:40:28 | [ExprStmt] sink(ar ... pop()); | semmle.label | [ExprStmt] sink(ar ... pop()); |
| arrays.js:40:8:40:11 | [VarRef] arr5 | semmle.label | [VarRef] arr5 |
| arrays.js:40:8:40:17 | [DotExpr] arr5.slice | semmle.label | [DotExpr] arr5.slice |
| arrays.js:40:8:40:20 | [MethodCallExpr] arr5.slice(2) | semmle.label | [MethodCallExpr] arr5.slice(2) |
| arrays.js:40:8:40:24 | [DotExpr] arr5.slice(2).pop | semmle.label | [DotExpr] arr5.slice(2).pop |
| arrays.js:40:8:40:26 | [MethodCallExpr] arr5.slice(2).pop() | semmle.label | [MethodCallExpr] arr5.slice(2).pop() |
| arrays.js:40:13:40:17 | [Label] slice | semmle.label | [Label] slice |
| arrays.js:40:19:40:19 | [Literal] 2 | semmle.label | [Literal] 2 |
| arrays.js:40:22:40:24 | [Label] pop | semmle.label | [Label] pop |
| arrays.js:42:3:42:16 | [DeclStmt] var arr6 = ... | semmle.label | [DeclStmt] var arr6 = ... |
| arrays.js:42:7:42:10 | [VarDecl] arr6 | semmle.label | [VarDecl] arr6 |
| arrays.js:42:7:42:15 | [VariableDeclarator] arr6 = [] | semmle.label | [VariableDeclarator] arr6 = [] |
| arrays.js:42:14:42:15 | [ArrayExpr] [] | semmle.label | [ArrayExpr] [] |
| arrays.js:43:3:45:3 | [ForStmt] for (va ... i]; } | semmle.label | [ForStmt] for (va ... i]; } |
| arrays.js:43:8:43:16 | [DeclStmt] var i = ... | semmle.label | [DeclStmt] var i = ... |
| arrays.js:43:12:43:12 | [VarDecl] i | semmle.label | [VarDecl] i |
| arrays.js:43:12:43:16 | [VariableDeclarator] i = 0 | semmle.label | [VariableDeclarator] i = 0 |
| arrays.js:43:16:43:16 | [Literal] 0 | semmle.label | [Literal] 0 |
| arrays.js:43:19:43:19 | [VarRef] i | semmle.label | [VarRef] i |
| arrays.js:43:19:43:33 | [BinaryExpr] i < arr5.length | semmle.label | [BinaryExpr] i < arr5.length |
| arrays.js:43:23:43:26 | [VarRef] arr5 | semmle.label | [VarRef] arr5 |
| arrays.js:43:23:43:33 | [DotExpr] arr5.length | semmle.label | [DotExpr] arr5.length |
| arrays.js:43:28:43:33 | [Label] length | semmle.label | [Label] length |
| arrays.js:43:36:43:36 | [VarRef] i | semmle.label | [VarRef] i |
| arrays.js:43:36:43:38 | [UpdateExpr] i++ | semmle.label | [UpdateExpr] i++ |
| arrays.js:43:41:45:3 | [BlockStmt] { a ... i]; } | semmle.label | [BlockStmt] { a ... i]; } |
| arrays.js:44:5:44:8 | [VarRef] arr6 | semmle.label | [VarRef] arr6 |
| arrays.js:44:5:44:11 | [IndexExpr] arr6[i] | semmle.label | [IndexExpr] arr6[i] |
| arrays.js:44:5:44:21 | [AssignExpr] arr6[i] = arr5[i] | semmle.label | [AssignExpr] arr6[i] = arr5[i] |
| arrays.js:44:5:44:22 | [ExprStmt] arr6[i] = arr5[i]; | semmle.label | [ExprStmt] arr6[i] = arr5[i]; |
| arrays.js:44:10:44:10 | [VarRef] i | semmle.label | [VarRef] i |
| arrays.js:44:15:44:18 | [VarRef] arr5 | semmle.label | [VarRef] arr5 |
| arrays.js:44:15:44:21 | [IndexExpr] arr5[i] | semmle.label | [IndexExpr] arr5[i] |
| arrays.js:44:20:44:20 | [VarRef] i | semmle.label | [VarRef] i |
| arrays.js:46:3:46:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:46:3:46:18 | [CallExpr] sink(arr6.pop()) | semmle.label | [CallExpr] sink(arr6.pop()) |
| arrays.js:46:3:46:19 | [ExprStmt] sink(arr6.pop()); | semmle.label | [ExprStmt] sink(arr6.pop()); |
| arrays.js:46:8:46:11 | [VarRef] arr6 | semmle.label | [VarRef] arr6 |
| arrays.js:46:8:46:15 | [DotExpr] arr6.pop | semmle.label | [DotExpr] arr6.pop |
| arrays.js:46:8:46:17 | [MethodCallExpr] arr6.pop() | semmle.label | [MethodCallExpr] arr6.pop() |
| arrays.js:46:13:46:15 | [Label] pop | semmle.label | [Label] pop |
| arrays.js:49:3:49:12 | [ArrayExpr] ["source"] | semmle.label | [ArrayExpr] ["source"] |
| arrays.js:49:3:49:20 | [DotExpr] ["source"].forEach | semmle.label | [DotExpr] ["source"].forEach |
| arrays.js:49:3:52:4 | [MethodCallExpr] ["sourc ... t. }) | semmle.label | [MethodCallExpr] ["sourc ... t. }) |
| arrays.js:49:3:52:5 | [ExprStmt] ["sourc ... . }); | semmle.label | [ExprStmt] ["sourc ... . }); |
| arrays.js:49:4:49:11 | [Literal] "source" | semmle.label | [Literal] "source" |
| arrays.js:49:14:49:20 | [Label] forEach | semmle.label | [Label] forEach |
| arrays.js:49:22:52:3 | [ArrowFunctionExpr] (e, i, ... nt. } | semmle.label | [ArrowFunctionExpr] (e, i, ... nt. } |
| arrays.js:49:23:49:23 | [SimpleParameter] e | semmle.label | [SimpleParameter] e |
| arrays.js:49:26:49:26 | [SimpleParameter] i | semmle.label | [SimpleParameter] i |
| arrays.js:49:29:49:31 | [SimpleParameter] ary | semmle.label | [SimpleParameter] ary |
| arrays.js:49:37:52:3 | [BlockStmt] { s ... nt. } | semmle.label | [BlockStmt] { s ... nt. } |
| arrays.js:50:5:50:8 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:50:5:50:19 | [CallExpr] sink(ary.pop()) | semmle.label | [CallExpr] sink(ary.pop()) |
| arrays.js:50:5:50:20 | [ExprStmt] sink(ary.pop()); | semmle.label | [ExprStmt] sink(ary.pop()); |
| arrays.js:50:10:50:12 | [VarRef] ary | semmle.label | [VarRef] ary |
| arrays.js:50:10:50:16 | [DotExpr] ary.pop | semmle.label | [DotExpr] ary.pop |
| arrays.js:50:10:50:18 | [MethodCallExpr] ary.pop() | semmle.label | [MethodCallExpr] ary.pop() |
| arrays.js:50:14:50:16 | [Label] pop | semmle.label | [Label] pop |
| arrays.js:51:5:51:8 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:51:5:51:13 | [CallExpr] sink(ary) | semmle.label | [CallExpr] sink(ary) |
| arrays.js:51:5:51:14 | [ExprStmt] sink(ary); | semmle.label | [ExprStmt] sink(ary); |
| arrays.js:51:10:51:12 | [VarRef] ary | semmle.label | [VarRef] ary |
| arrays.js:54:3:54:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:54:3:54:14 | [CallExpr] sink(arr[0]) | semmle.label | [CallExpr] sink(arr[0]) |
| arrays.js:54:3:54:15 | [ExprStmt] sink(arr[0]); | semmle.label | [ExprStmt] sink(arr[0]); |
| arrays.js:54:8:54:10 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:54:8:54:13 | [IndexExpr] arr[0] | semmle.label | [IndexExpr] arr[0] |
| arrays.js:54:12:54:12 | [Literal] 0 | semmle.label | [Literal] 0 |
| arrays.js:56:3:58:3 | [ForOfStmt] for (co ... OK } | semmle.label | [ForOfStmt] for (co ... OK } |
| arrays.js:56:8:56:14 | [DeclStmt] const x = ... | semmle.label | [DeclStmt] const x = ... |
| arrays.js:56:14:56:14 | [VarDecl] x | semmle.label | [VarDecl] x |
| arrays.js:56:14:56:14 | [VariableDeclarator] x | semmle.label | [VariableDeclarator] x |
| arrays.js:56:19:56:21 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:56:24:58:3 | [BlockStmt] { s ... OK } | semmle.label | [BlockStmt] { s ... OK } |
| arrays.js:57:5:57:8 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:57:5:57:11 | [CallExpr] sink(x) | semmle.label | [CallExpr] sink(x) |
| arrays.js:57:5:57:12 | [ExprStmt] sink(x); | semmle.label | [ExprStmt] sink(x); |
| arrays.js:57:10:57:10 | [VarRef] x | semmle.label | [VarRef] x |
| arrays.js:60:3:62:3 | [ForOfStmt] for (co ... OK } | semmle.label | [ForOfStmt] for (co ... OK } |
| arrays.js:60:8:60:14 | [DeclStmt] const x = ... | semmle.label | [DeclStmt] const x = ... |
| arrays.js:60:14:60:14 | [VarDecl] x | semmle.label | [VarDecl] x |
| arrays.js:60:14:60:14 | [VariableDeclarator] x | semmle.label | [VariableDeclarator] x |
| arrays.js:60:19:60:23 | [VarRef] Array | semmle.label | [VarRef] Array |
| arrays.js:60:19:60:28 | [DotExpr] Array.from | semmle.label | [DotExpr] Array.from |
| arrays.js:60:19:60:33 | [MethodCallExpr] Array.from(arr) | semmle.label | [MethodCallExpr] Array.from(arr) |
| arrays.js:60:25:60:28 | [Label] from | semmle.label | [Label] from |
| arrays.js:60:30:60:32 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:60:36:62:3 | [BlockStmt] { s ... OK } | semmle.label | [BlockStmt] { s ... OK } |
| arrays.js:61:5:61:8 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:61:5:61:11 | [CallExpr] sink(x) | semmle.label | [CallExpr] sink(x) |
| arrays.js:61:5:61:12 | [ExprStmt] sink(x); | semmle.label | [ExprStmt] sink(x); |
| arrays.js:61:10:61:10 | [VarRef] x | semmle.label | [VarRef] x |
| arrays.js:64:3:66:3 | [ForOfStmt] for (co ... OK } | semmle.label | [ForOfStmt] for (co ... OK } |
| arrays.js:64:8:64:14 | [DeclStmt] const x = ... | semmle.label | [DeclStmt] const x = ... |
| arrays.js:64:14:64:14 | [VarDecl] x | semmle.label | [VarDecl] x |
| arrays.js:64:14:64:14 | [VariableDeclarator] x | semmle.label | [VariableDeclarator] x |
| arrays.js:64:19:64:26 | [ArrayExpr] [...arr] | semmle.label | [ArrayExpr] [...arr] |
| arrays.js:64:20:64:25 | [SpreadElement] ...arr | semmle.label | [SpreadElement] ...arr |
| arrays.js:64:23:64:25 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:64:29:66:3 | [BlockStmt] { s ... OK } | semmle.label | [BlockStmt] { s ... OK } |
| arrays.js:65:5:65:8 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:65:5:65:11 | [CallExpr] sink(x) | semmle.label | [CallExpr] sink(x) |
| arrays.js:65:5:65:12 | [ExprStmt] sink(x); | semmle.label | [ExprStmt] sink(x); |
| arrays.js:65:10:65:10 | [VarRef] x | semmle.label | [VarRef] x |
| arrays.js:68:3:68:16 | [DeclStmt] var arr7 = ... | semmle.label | [DeclStmt] var arr7 = ... |
| arrays.js:68:7:68:10 | [VarDecl] arr7 | semmle.label | [VarDecl] arr7 |
| arrays.js:68:7:68:15 | [VariableDeclarator] arr7 = [] | semmle.label | [VariableDeclarator] arr7 = [] |
| arrays.js:68:14:68:15 | [ArrayExpr] [] | semmle.label | [ArrayExpr] [] |
| arrays.js:69:3:69:6 | [VarRef] arr7 | semmle.label | [VarRef] arr7 |
| arrays.js:69:3:69:11 | [DotExpr] arr7.push | semmle.label | [DotExpr] arr7.push |
| arrays.js:69:3:69:19 | [MethodCallExpr] arr7.push(...arr) | semmle.label | [MethodCallExpr] arr7.push(...arr) |
| arrays.js:69:3:69:20 | [ExprStmt] arr7.push(...arr); | semmle.label | [ExprStmt] arr7.push(...arr); |
| arrays.js:69:8:69:11 | [Label] push | semmle.label | [Label] push |
| arrays.js:69:13:69:18 | [SpreadElement] ...arr | semmle.label | [SpreadElement] ...arr |
| arrays.js:69:16:69:18 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:70:3:72:3 | [ForOfStmt] for (co ... OK } | semmle.label | [ForOfStmt] for (co ... OK } |
| arrays.js:70:8:70:14 | [DeclStmt] const x = ... | semmle.label | [DeclStmt] const x = ... |
| arrays.js:70:14:70:14 | [VarDecl] x | semmle.label | [VarDecl] x |
| arrays.js:70:14:70:14 | [VariableDeclarator] x | semmle.label | [VariableDeclarator] x |
| arrays.js:70:19:70:22 | [VarRef] arr7 | semmle.label | [VarRef] arr7 |
| arrays.js:70:25:72:3 | [BlockStmt] { s ... OK } | semmle.label | [BlockStmt] { s ... OK } |
| arrays.js:71:5:71:8 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:71:5:71:11 | [CallExpr] sink(x) | semmle.label | [CallExpr] sink(x) |
| arrays.js:71:5:71:12 | [ExprStmt] sink(x); | semmle.label | [ExprStmt] sink(x); |
| arrays.js:71:10:71:10 | [VarRef] x | semmle.label | [VarRef] x |
| arrays.js:74:3:74:42 | [DeclStmt] const arrayFrom = ... | semmle.label | [DeclStmt] const arrayFrom = ... |
| arrays.js:74:9:74:17 | [VarDecl] arrayFrom | semmle.label | [VarDecl] arrayFrom |
| arrays.js:74:9:74:41 | [VariableDeclarator] arrayFr ... -from") | semmle.label | [VariableDeclarator] arrayFr ... -from") |
| arrays.js:74:21:74:27 | [VarRef] require | semmle.label | [VarRef] require |
| arrays.js:74:21:74:41 | [CallExpr] require ... -from") | semmle.label | [CallExpr] require ... -from") |
| arrays.js:74:29:74:40 | [Literal] "array-from" | semmle.label | [Literal] "array-from" |
| arrays.js:75:3:77:3 | [ForOfStmt] for (co ... OK } | semmle.label | [ForOfStmt] for (co ... OK } |
| arrays.js:75:8:75:14 | [DeclStmt] const x = ... | semmle.label | [DeclStmt] const x = ... |
| arrays.js:75:14:75:14 | [VarDecl] x | semmle.label | [VarDecl] x |
| arrays.js:75:14:75:14 | [VariableDeclarator] x | semmle.label | [VariableDeclarator] x |
| arrays.js:75:19:75:27 | [VarRef] arrayFrom | semmle.label | [VarRef] arrayFrom |
| arrays.js:75:19:75:32 | [CallExpr] arrayFrom(arr) | semmle.label | [CallExpr] arrayFrom(arr) |
| arrays.js:75:29:75:31 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:75:35:77:3 | [BlockStmt] { s ... OK } | semmle.label | [BlockStmt] { s ... OK } |
| arrays.js:76:5:76:8 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:76:5:76:11 | [CallExpr] sink(x) | semmle.label | [CallExpr] sink(x) |
| arrays.js:76:5:76:12 | [ExprStmt] sink(x); | semmle.label | [ExprStmt] sink(x); |
| arrays.js:76:10:76:10 | [VarRef] x | semmle.label | [VarRef] x |
| arrays.js:79:3:79:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:79:3:79:30 | [CallExpr] sink(ar ... lback)) | semmle.label | [CallExpr] sink(ar ... lback)) |
| arrays.js:79:3:79:31 | [ExprStmt] sink(ar ... back)); | semmle.label | [ExprStmt] sink(ar ... back)); |
| arrays.js:79:8:79:10 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:79:8:79:15 | [DotExpr] arr.find | semmle.label | [DotExpr] arr.find |
| arrays.js:79:8:79:29 | [MethodCallExpr] arr.fin ... llback) | semmle.label | [MethodCallExpr] arr.fin ... llback) |
| arrays.js:79:12:79:15 | [Label] find | semmle.label | [Label] find |
| arrays.js:79:17:79:28 | [VarRef] someCallback | semmle.label | [VarRef] someCallback |
| arrays.js:81:3:81:42 | [DeclStmt] const arrayFind = ... | semmle.label | [DeclStmt] const arrayFind = ... |
| arrays.js:81:9:81:17 | [VarDecl] arrayFind | semmle.label | [VarDecl] arrayFind |
| arrays.js:81:9:81:41 | [VariableDeclarator] arrayFi ... -find") | semmle.label | [VariableDeclarator] arrayFi ... -find") |
| arrays.js:81:21:81:27 | [VarRef] require | semmle.label | [VarRef] require |
| arrays.js:81:21:81:41 | [CallExpr] require ... -find") | semmle.label | [CallExpr] require ... -find") |
| arrays.js:81:29:81:40 | [Literal] "array-find" | semmle.label | [Literal] "array-find" |
| arrays.js:82:3:82:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:82:3:82:36 | [CallExpr] sink(ar ... lback)) | semmle.label | [CallExpr] sink(ar ... lback)) |
| arrays.js:82:3:82:37 | [ExprStmt] sink(ar ... back)); | semmle.label | [ExprStmt] sink(ar ... back)); |
| arrays.js:82:8:82:16 | [VarRef] arrayFind | semmle.label | [VarRef] arrayFind |
| arrays.js:82:8:82:35 | [CallExpr] arrayFi ... llback) | semmle.label | [CallExpr] arrayFi ... llback) |
| arrays.js:82:18:82:20 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:82:23:82:34 | [VarRef] someCallback | semmle.label | [VarRef] someCallback |
| arrays.js:84:3:84:31 | [DeclStmt] const uniq = ... | semmle.label | [DeclStmt] const uniq = ... |
| arrays.js:84:9:84:12 | [VarDecl] uniq | semmle.label | [VarDecl] uniq |
| arrays.js:84:9:84:30 | [VariableDeclarator] uniq = ... "uniq") | semmle.label | [VariableDeclarator] uniq = ... "uniq") |
| arrays.js:84:16:84:22 | [VarRef] require | semmle.label | [VarRef] require |
| arrays.js:84:16:84:30 | [CallExpr] require("uniq") | semmle.label | [CallExpr] require("uniq") |
| arrays.js:84:24:84:29 | [Literal] "uniq" | semmle.label | [Literal] "uniq" |
| arrays.js:85:3:87:3 | [ForOfStmt] for (co ... OK } | semmle.label | [ForOfStmt] for (co ... OK } |
| arrays.js:85:8:85:14 | [DeclStmt] const x = ... | semmle.label | [DeclStmt] const x = ... |
| arrays.js:85:14:85:14 | [VarDecl] x | semmle.label | [VarDecl] x |
| arrays.js:85:14:85:14 | [VariableDeclarator] x | semmle.label | [VariableDeclarator] x |
| arrays.js:85:19:85:22 | [VarRef] uniq | semmle.label | [VarRef] uniq |
| arrays.js:85:19:85:27 | [CallExpr] uniq(arr) | semmle.label | [CallExpr] uniq(arr) |
| arrays.js:85:24:85:26 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:85:30:87:3 | [BlockStmt] { s ... OK } | semmle.label | [BlockStmt] { s ... OK } |
| arrays.js:86:5:86:8 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:86:5:86:11 | [CallExpr] sink(x) | semmle.label | [CallExpr] sink(x) |
| arrays.js:86:5:86:12 | [ExprStmt] sink(x); | semmle.label | [ExprStmt] sink(x); |
| arrays.js:86:10:86:10 | [VarRef] x | semmle.label | [VarRef] x |
| arrays.js:89:3:89:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:89:3:89:18 | [CallExpr] sink(arr.at(-1)) | semmle.label | [CallExpr] sink(arr.at(-1)) |
| arrays.js:89:3:89:19 | [ExprStmt] sink(arr.at(-1)); | semmle.label | [ExprStmt] sink(arr.at(-1)); |
| arrays.js:89:8:89:10 | [VarRef] arr | semmle.label | [VarRef] arr |
| arrays.js:89:8:89:13 | [DotExpr] arr.at | semmle.label | [DotExpr] arr.at |
| arrays.js:89:8:89:17 | [MethodCallExpr] arr.at(-1) | semmle.label | [MethodCallExpr] arr.at(-1) |
| arrays.js:89:12:89:13 | [Label] at | semmle.label | [Label] at |
| arrays.js:89:15:89:16 | [UnaryExpr] -1 | semmle.label | [UnaryExpr] -1 |
| arrays.js:89:16:89:16 | [Literal] 1 | semmle.label | [Literal] 1 |
| arrays.js:91:3:91:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:91:3:91:35 | [CallExpr] sink([" ... => x)) | semmle.label | [CallExpr] sink([" ... => x)) |
| arrays.js:91:3:91:36 | [ExprStmt] sink([" ... => x)); | semmle.label | [ExprStmt] sink([" ... => x)); |
| arrays.js:91:8:91:17 | [ArrayExpr] ["source"] | semmle.label | [ArrayExpr] ["source"] |
| arrays.js:91:8:91:24 | [DotExpr] ["source"].filter | semmle.label | [DotExpr] ["source"].filter |
| arrays.js:91:8:91:34 | [MethodCallExpr] ["sourc ... ) => x) | semmle.label | [MethodCallExpr] ["sourc ... ) => x) |
| arrays.js:91:9:91:16 | [Literal] "source" | semmle.label | [Literal] "source" |
| arrays.js:91:19:91:24 | [Label] filter | semmle.label | [Label] filter |
| arrays.js:91:26:91:33 | [ArrowFunctionExpr] (x) => x | semmle.label | [ArrowFunctionExpr] (x) => x |
| arrays.js:91:27:91:27 | [SimpleParameter] x | semmle.label | [SimpleParameter] x |
| arrays.js:91:33:91:33 | [VarRef] x | semmle.label | [VarRef] x |
| arrays.js:92:3:92:6 | [VarRef] sink | semmle.label | [VarRef] sink |
| arrays.js:92:3:92:37 | [CallExpr] sink([" ... > !!x)) | semmle.label | [CallExpr] sink([" ... > !!x)) |
| arrays.js:92:3:92:38 | [ExprStmt] sink([" ... !!x)); | semmle.label | [ExprStmt] sink([" ... !!x)); |
| arrays.js:92:8:92:17 | [ArrayExpr] ["source"] | semmle.label | [ArrayExpr] ["source"] |
| arrays.js:92:8:92:24 | [DotExpr] ["source"].filter | semmle.label | [DotExpr] ["source"].filter |
| arrays.js:92:8:92:36 | [MethodCallExpr] ["sourc ... => !!x) | semmle.label | [MethodCallExpr] ["sourc ... => !!x) |
| arrays.js:92:9:92:16 | [Literal] "source" | semmle.label | [Literal] "source" |
| arrays.js:92:19:92:24 | [Label] filter | semmle.label | [Label] filter |
| arrays.js:92:26:92:35 | [ArrowFunctionExpr] (x) => !!x | semmle.label | [ArrowFunctionExpr] (x) => !!x |
| arrays.js:92:27:92:27 | [SimpleParameter] x | semmle.label | [SimpleParameter] x |
| arrays.js:92:33:92:35 | [UnaryExpr] !!x | semmle.label | [UnaryExpr] !!x |
| arrays.js:92:34:92:35 | [UnaryExpr] !x | semmle.label | [UnaryExpr] !x |
| arrays.js:92:35:92:35 | [VarRef] x | semmle.label | [VarRef] x |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Arguments) | semmle.label | (Arguments) |
| file://:0:0:0:0 | (Parameters) | semmle.label | (Parameters) |
| file://:0:0:0:0 | (Parameters) | semmle.label | (Parameters) |
| file://:0:0:0:0 | (Parameters) | semmle.label | (Parameters) |
| file://:0:0:0:0 | (Parameters) | semmle.label | (Parameters) |
| file://:0:0:0:0 | (Parameters) | semmle.label | (Parameters) |
| file://:0:0:0:0 | (Parameters) | semmle.label | (Parameters) |
| file://:0:0:0:0 | (Parameters) | semmle.label | (Parameters) |
edges
| arrays.js:1:1:93:2 | [ParExpr] (functi ... T OK }) | arrays.js:1:2:93:1 | [FunctionExpr] functio ... OT OK } | semmle.label | 1 |
| arrays.js:1:1:93:2 | [ParExpr] (functi ... T OK }) | arrays.js:1:2:93:1 | [FunctionExpr] functio ... OT OK } | semmle.order | 1 |
| arrays.js:1:1:93:3 | [ExprStmt] (functi ... OK }); | arrays.js:1:1:93:2 | [ParExpr] (functi ... T OK }) | semmle.label | 1 |
| arrays.js:1:1:93:3 | [ExprStmt] (functi ... OK }); | arrays.js:1:1:93:2 | [ParExpr] (functi ... T OK }) | semmle.order | 1 |
| arrays.js:1:2:93:1 | [FunctionExpr] functio ... OT OK } | arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | semmle.label | 5 |
| arrays.js:1:2:93:1 | [FunctionExpr] functio ... OT OK } | arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | semmle.order | 5 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:2:3:2:24 | [DeclStmt] let source = ... | semmle.label | 1 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:2:3:2:24 | [DeclStmt] let source = ... | semmle.order | 1 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:4:3:4:28 | [DeclStmt] var obj = ... | semmle.label | 2 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:4:3:4:28 | [DeclStmt] var obj = ... | semmle.order | 2 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:5:3:5:16 | [ExprStmt] sink(obj.foo); | semmle.label | 3 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:5:3:5:16 | [ExprStmt] sink(obj.foo); | semmle.order | 3 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:7:3:7:15 | [DeclStmt] var arr = ... | semmle.label | 4 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:7:3:7:15 | [DeclStmt] var arr = ... | semmle.order | 4 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:8:3:8:19 | [ExprStmt] arr.push(source); | semmle.label | 5 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:8:3:8:19 | [ExprStmt] arr.push(source); | semmle.order | 5 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:10:3:12:3 | [ForStmt] for (va ... OK } | semmle.label | 6 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:10:3:12:3 | [ForStmt] for (va ... OK } | semmle.order | 6 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:15:3:15:30 | [ExprStmt] arr.for ... nk(e)); | semmle.label | 7 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:15:3:15:30 | [ExprStmt] arr.for ... nk(e)); | semmle.order | 7 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:16:3:16:26 | [ExprStmt] arr.map ... nk(e)); | semmle.label | 8 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:16:3:16:26 | [ExprStmt] arr.map ... nk(e)); | semmle.order | 8 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:18:3:18:53 | [ExprStmt] [1, 2, ... nk(e)); | semmle.label | 9 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:18:3:18:53 | [ExprStmt] [1, 2, ... nk(e)); | semmle.order | 9 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:20:3:20:18 | [ExprStmt] sink(arr.pop()); | semmle.label | 10 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:20:3:20:18 | [ExprStmt] sink(arr.pop()); | semmle.order | 10 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:22:3:22:24 | [DeclStmt] var arr2 = ... | semmle.label | 11 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:22:3:22:24 | [DeclStmt] var arr2 = ... | semmle.order | 11 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:23:3:23:19 | [ExprStmt] sink(arr2.pop()); | semmle.label | 12 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:23:3:23:19 | [ExprStmt] sink(arr2.pop()); | semmle.order | 12 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:25:3:25:24 | [DeclStmt] var arr3 = ... | semmle.label | 13 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:25:3:25:24 | [DeclStmt] var arr3 = ... | semmle.order | 13 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:26:3:26:19 | [ExprStmt] sink(arr3.pop()); | semmle.label | 14 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:26:3:26:19 | [ExprStmt] sink(arr3.pop()); | semmle.order | 14 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:28:3:28:16 | [DeclStmt] var arr4 = ... | semmle.label | 15 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:28:3:28:16 | [DeclStmt] var arr4 = ... | semmle.order | 15 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:29:3:29:30 | [ExprStmt] arr4.sp ... urce"); | semmle.label | 16 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:29:3:29:30 | [ExprStmt] arr4.sp ... urce"); | semmle.order | 16 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:30:3:30:19 | [ExprStmt] sink(arr4.pop()); | semmle.label | 17 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:30:3:30:19 | [ExprStmt] sink(arr4.pop()); | semmle.order | 17 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:37:3:37:29 | [DeclStmt] var arr5 = ... | semmle.label | 18 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:37:3:37:29 | [DeclStmt] var arr5 = ... | semmle.order | 18 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:38:3:38:19 | [ExprStmt] sink(arr5.pop()); | semmle.label | 19 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:38:3:38:19 | [ExprStmt] sink(arr5.pop()); | semmle.order | 19 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:40:3:40:28 | [ExprStmt] sink(ar ... pop()); | semmle.label | 20 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:40:3:40:28 | [ExprStmt] sink(ar ... pop()); | semmle.order | 20 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:42:3:42:16 | [DeclStmt] var arr6 = ... | semmle.label | 21 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:42:3:42:16 | [DeclStmt] var arr6 = ... | semmle.order | 21 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:43:3:45:3 | [ForStmt] for (va ... i]; } | semmle.label | 22 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:43:3:45:3 | [ForStmt] for (va ... i]; } | semmle.order | 22 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:46:3:46:19 | [ExprStmt] sink(arr6.pop()); | semmle.label | 23 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:46:3:46:19 | [ExprStmt] sink(arr6.pop()); | semmle.order | 23 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:49:3:52:5 | [ExprStmt] ["sourc ... . }); | semmle.label | 24 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:49:3:52:5 | [ExprStmt] ["sourc ... . }); | semmle.order | 24 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:54:3:54:15 | [ExprStmt] sink(arr[0]); | semmle.label | 25 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:54:3:54:15 | [ExprStmt] sink(arr[0]); | semmle.order | 25 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:56:3:58:3 | [ForOfStmt] for (co ... OK } | semmle.label | 26 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:56:3:58:3 | [ForOfStmt] for (co ... OK } | semmle.order | 26 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:60:3:62:3 | [ForOfStmt] for (co ... OK } | semmle.label | 27 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:60:3:62:3 | [ForOfStmt] for (co ... OK } | semmle.order | 27 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:64:3:66:3 | [ForOfStmt] for (co ... OK } | semmle.label | 28 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:64:3:66:3 | [ForOfStmt] for (co ... OK } | semmle.order | 28 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:68:3:68:16 | [DeclStmt] var arr7 = ... | semmle.label | 29 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:68:3:68:16 | [DeclStmt] var arr7 = ... | semmle.order | 29 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:69:3:69:20 | [ExprStmt] arr7.push(...arr); | semmle.label | 30 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:69:3:69:20 | [ExprStmt] arr7.push(...arr); | semmle.order | 30 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:70:3:72:3 | [ForOfStmt] for (co ... OK } | semmle.label | 31 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:70:3:72:3 | [ForOfStmt] for (co ... OK } | semmle.order | 31 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:74:3:74:42 | [DeclStmt] const arrayFrom = ... | semmle.label | 32 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:74:3:74:42 | [DeclStmt] const arrayFrom = ... | semmle.order | 32 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:75:3:77:3 | [ForOfStmt] for (co ... OK } | semmle.label | 33 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:75:3:77:3 | [ForOfStmt] for (co ... OK } | semmle.order | 33 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:79:3:79:31 | [ExprStmt] sink(ar ... back)); | semmle.label | 34 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:79:3:79:31 | [ExprStmt] sink(ar ... back)); | semmle.order | 34 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:81:3:81:42 | [DeclStmt] const arrayFind = ... | semmle.label | 35 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:81:3:81:42 | [DeclStmt] const arrayFind = ... | semmle.order | 35 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:82:3:82:37 | [ExprStmt] sink(ar ... back)); | semmle.label | 36 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:82:3:82:37 | [ExprStmt] sink(ar ... back)); | semmle.order | 36 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:84:3:84:31 | [DeclStmt] const uniq = ... | semmle.label | 37 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:84:3:84:31 | [DeclStmt] const uniq = ... | semmle.order | 37 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:85:3:87:3 | [ForOfStmt] for (co ... OK } | semmle.label | 38 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:85:3:87:3 | [ForOfStmt] for (co ... OK } | semmle.order | 38 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:89:3:89:19 | [ExprStmt] sink(arr.at(-1)); | semmle.label | 39 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:89:3:89:19 | [ExprStmt] sink(arr.at(-1)); | semmle.order | 39 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:91:3:91:36 | [ExprStmt] sink([" ... => x)); | semmle.label | 40 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:91:3:91:36 | [ExprStmt] sink([" ... => x)); | semmle.order | 40 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:92:3:92:38 | [ExprStmt] sink([" ... !!x)); | semmle.label | 41 |
| arrays.js:1:14:93:1 | [BlockStmt] { let ... OT OK } | arrays.js:92:3:92:38 | [ExprStmt] sink([" ... !!x)); | semmle.order | 41 |
| arrays.js:2:3:2:24 | [DeclStmt] let source = ... | arrays.js:2:7:2:23 | [VariableDeclarator] source = "source" | semmle.label | 1 |
| arrays.js:2:3:2:24 | [DeclStmt] let source = ... | arrays.js:2:7:2:23 | [VariableDeclarator] source = "source" | semmle.order | 1 |
| arrays.js:2:7:2:23 | [VariableDeclarator] source = "source" | arrays.js:2:7:2:12 | [VarDecl] source | semmle.label | 1 |
| arrays.js:2:7:2:23 | [VariableDeclarator] source = "source" | arrays.js:2:7:2:12 | [VarDecl] source | semmle.order | 1 |
| arrays.js:2:7:2:23 | [VariableDeclarator] source = "source" | arrays.js:2:16:2:23 | [Literal] "source" | semmle.label | 2 |
| arrays.js:2:7:2:23 | [VariableDeclarator] source = "source" | arrays.js:2:16:2:23 | [Literal] "source" | semmle.order | 2 |
| arrays.js:4:3:4:28 | [DeclStmt] var obj = ... | arrays.js:4:7:4:27 | [VariableDeclarator] obj = { ... ource } | semmle.label | 1 |
| arrays.js:4:3:4:28 | [DeclStmt] var obj = ... | arrays.js:4:7:4:27 | [VariableDeclarator] obj = { ... ource } | semmle.order | 1 |
| arrays.js:4:7:4:27 | [VariableDeclarator] obj = { ... ource } | arrays.js:4:7:4:9 | [VarDecl] obj | semmle.label | 1 |
| arrays.js:4:7:4:27 | [VariableDeclarator] obj = { ... ource } | arrays.js:4:7:4:9 | [VarDecl] obj | semmle.order | 1 |
| arrays.js:4:7:4:27 | [VariableDeclarator] obj = { ... ource } | arrays.js:4:13:4:27 | [ObjectExpr] {foo: ...} | semmle.label | 2 |
| arrays.js:4:7:4:27 | [VariableDeclarator] obj = { ... ource } | arrays.js:4:13:4:27 | [ObjectExpr] {foo: ...} | semmle.order | 2 |
| arrays.js:4:13:4:27 | [ObjectExpr] {foo: ...} | arrays.js:4:15:4:25 | [Property] foo: source | semmle.label | 1 |
| arrays.js:4:13:4:27 | [ObjectExpr] {foo: ...} | arrays.js:4:15:4:25 | [Property] foo: source | semmle.order | 1 |
| arrays.js:4:15:4:25 | [Property] foo: source | arrays.js:4:15:4:17 | [Label] foo | semmle.label | 1 |
| arrays.js:4:15:4:25 | [Property] foo: source | arrays.js:4:15:4:17 | [Label] foo | semmle.order | 1 |
| arrays.js:4:15:4:25 | [Property] foo: source | arrays.js:4:20:4:25 | [VarRef] source | semmle.label | 2 |
| arrays.js:4:15:4:25 | [Property] foo: source | arrays.js:4:20:4:25 | [VarRef] source | semmle.order | 2 |
| arrays.js:5:3:5:15 | [CallExpr] sink(obj.foo) | arrays.js:5:3:5:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:5:3:5:15 | [CallExpr] sink(obj.foo) | arrays.js:5:3:5:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:5:3:5:15 | [CallExpr] sink(obj.foo) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:5:3:5:15 | [CallExpr] sink(obj.foo) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:5:3:5:16 | [ExprStmt] sink(obj.foo); | arrays.js:5:3:5:15 | [CallExpr] sink(obj.foo) | semmle.label | 1 |
| arrays.js:5:3:5:16 | [ExprStmt] sink(obj.foo); | arrays.js:5:3:5:15 | [CallExpr] sink(obj.foo) | semmle.order | 1 |
| arrays.js:5:8:5:14 | [DotExpr] obj.foo | arrays.js:5:8:5:10 | [VarRef] obj | semmle.label | 1 |
| arrays.js:5:8:5:14 | [DotExpr] obj.foo | arrays.js:5:8:5:10 | [VarRef] obj | semmle.order | 1 |
| arrays.js:5:8:5:14 | [DotExpr] obj.foo | arrays.js:5:12:5:14 | [Label] foo | semmle.label | 2 |
| arrays.js:5:8:5:14 | [DotExpr] obj.foo | arrays.js:5:12:5:14 | [Label] foo | semmle.order | 2 |
| arrays.js:7:3:7:15 | [DeclStmt] var arr = ... | arrays.js:7:7:7:14 | [VariableDeclarator] arr = [] | semmle.label | 1 |
| arrays.js:7:3:7:15 | [DeclStmt] var arr = ... | arrays.js:7:7:7:14 | [VariableDeclarator] arr = [] | semmle.order | 1 |
| arrays.js:7:7:7:14 | [VariableDeclarator] arr = [] | arrays.js:7:7:7:9 | [VarDecl] arr | semmle.label | 1 |
| arrays.js:7:7:7:14 | [VariableDeclarator] arr = [] | arrays.js:7:7:7:9 | [VarDecl] arr | semmle.order | 1 |
| arrays.js:7:7:7:14 | [VariableDeclarator] arr = [] | arrays.js:7:13:7:14 | [ArrayExpr] [] | semmle.label | 2 |
| arrays.js:7:7:7:14 | [VariableDeclarator] arr = [] | arrays.js:7:13:7:14 | [ArrayExpr] [] | semmle.order | 2 |
| arrays.js:8:3:8:10 | [DotExpr] arr.push | arrays.js:8:3:8:5 | [VarRef] arr | semmle.label | 1 |
| arrays.js:8:3:8:10 | [DotExpr] arr.push | arrays.js:8:3:8:5 | [VarRef] arr | semmle.order | 1 |
| arrays.js:8:3:8:10 | [DotExpr] arr.push | arrays.js:8:7:8:10 | [Label] push | semmle.label | 2 |
| arrays.js:8:3:8:10 | [DotExpr] arr.push | arrays.js:8:7:8:10 | [Label] push | semmle.order | 2 |
| arrays.js:8:3:8:18 | [MethodCallExpr] arr.push(source) | arrays.js:8:3:8:10 | [DotExpr] arr.push | semmle.label | 0 |
| arrays.js:8:3:8:18 | [MethodCallExpr] arr.push(source) | arrays.js:8:3:8:10 | [DotExpr] arr.push | semmle.order | 0 |
| arrays.js:8:3:8:18 | [MethodCallExpr] arr.push(source) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:8:3:8:18 | [MethodCallExpr] arr.push(source) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:8:3:8:19 | [ExprStmt] arr.push(source); | arrays.js:8:3:8:18 | [MethodCallExpr] arr.push(source) | semmle.label | 1 |
| arrays.js:8:3:8:19 | [ExprStmt] arr.push(source); | arrays.js:8:3:8:18 | [MethodCallExpr] arr.push(source) | semmle.order | 1 |
| arrays.js:10:3:12:3 | [ForStmt] for (va ... OK } | arrays.js:10:8:10:16 | [DeclStmt] var i = ... | semmle.label | 1 |
| arrays.js:10:3:12:3 | [ForStmt] for (va ... OK } | arrays.js:10:8:10:16 | [DeclStmt] var i = ... | semmle.order | 1 |
| arrays.js:10:3:12:3 | [ForStmt] for (va ... OK } | arrays.js:10:19:10:32 | [BinaryExpr] i < arr.length | semmle.label | 2 |
| arrays.js:10:3:12:3 | [ForStmt] for (va ... OK } | arrays.js:10:19:10:32 | [BinaryExpr] i < arr.length | semmle.order | 2 |
| arrays.js:10:3:12:3 | [ForStmt] for (va ... OK } | arrays.js:10:35:10:37 | [UpdateExpr] i++ | semmle.label | 3 |
| arrays.js:10:3:12:3 | [ForStmt] for (va ... OK } | arrays.js:10:35:10:37 | [UpdateExpr] i++ | semmle.order | 3 |
| arrays.js:10:3:12:3 | [ForStmt] for (va ... OK } | arrays.js:10:40:12:3 | [BlockStmt] { s ... OK } | semmle.label | 4 |
| arrays.js:10:3:12:3 | [ForStmt] for (va ... OK } | arrays.js:10:40:12:3 | [BlockStmt] { s ... OK } | semmle.order | 4 |
| arrays.js:10:8:10:16 | [DeclStmt] var i = ... | arrays.js:10:12:10:16 | [VariableDeclarator] i = 0 | semmle.label | 1 |
| arrays.js:10:8:10:16 | [DeclStmt] var i = ... | arrays.js:10:12:10:16 | [VariableDeclarator] i = 0 | semmle.order | 1 |
| arrays.js:10:12:10:16 | [VariableDeclarator] i = 0 | arrays.js:10:12:10:12 | [VarDecl] i | semmle.label | 1 |
| arrays.js:10:12:10:16 | [VariableDeclarator] i = 0 | arrays.js:10:12:10:12 | [VarDecl] i | semmle.order | 1 |
| arrays.js:10:12:10:16 | [VariableDeclarator] i = 0 | arrays.js:10:16:10:16 | [Literal] 0 | semmle.label | 2 |
| arrays.js:10:12:10:16 | [VariableDeclarator] i = 0 | arrays.js:10:16:10:16 | [Literal] 0 | semmle.order | 2 |
| arrays.js:10:19:10:32 | [BinaryExpr] i < arr.length | arrays.js:10:19:10:19 | [VarRef] i | semmle.label | 1 |
| arrays.js:10:19:10:32 | [BinaryExpr] i < arr.length | arrays.js:10:19:10:19 | [VarRef] i | semmle.order | 1 |
| arrays.js:10:19:10:32 | [BinaryExpr] i < arr.length | arrays.js:10:23:10:32 | [DotExpr] arr.length | semmle.label | 2 |
| arrays.js:10:19:10:32 | [BinaryExpr] i < arr.length | arrays.js:10:23:10:32 | [DotExpr] arr.length | semmle.order | 2 |
| arrays.js:10:23:10:32 | [DotExpr] arr.length | arrays.js:10:23:10:25 | [VarRef] arr | semmle.label | 1 |
| arrays.js:10:23:10:32 | [DotExpr] arr.length | arrays.js:10:23:10:25 | [VarRef] arr | semmle.order | 1 |
| arrays.js:10:23:10:32 | [DotExpr] arr.length | arrays.js:10:27:10:32 | [Label] length | semmle.label | 2 |
| arrays.js:10:23:10:32 | [DotExpr] arr.length | arrays.js:10:27:10:32 | [Label] length | semmle.order | 2 |
| arrays.js:10:35:10:37 | [UpdateExpr] i++ | arrays.js:10:35:10:35 | [VarRef] i | semmle.label | 1 |
| arrays.js:10:35:10:37 | [UpdateExpr] i++ | arrays.js:10:35:10:35 | [VarRef] i | semmle.order | 1 |
| arrays.js:10:40:12:3 | [BlockStmt] { s ... OK } | arrays.js:11:5:11:17 | [ExprStmt] sink(arr[i]); | semmle.label | 1 |
| arrays.js:10:40:12:3 | [BlockStmt] { s ... OK } | arrays.js:11:5:11:17 | [ExprStmt] sink(arr[i]); | semmle.order | 1 |
| arrays.js:11:5:11:16 | [CallExpr] sink(arr[i]) | arrays.js:11:5:11:8 | [VarRef] sink | semmle.label | 0 |
| arrays.js:11:5:11:16 | [CallExpr] sink(arr[i]) | arrays.js:11:5:11:8 | [VarRef] sink | semmle.order | 0 |
| arrays.js:11:5:11:16 | [CallExpr] sink(arr[i]) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:11:5:11:16 | [CallExpr] sink(arr[i]) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:11:5:11:17 | [ExprStmt] sink(arr[i]); | arrays.js:11:5:11:16 | [CallExpr] sink(arr[i]) | semmle.label | 1 |
| arrays.js:11:5:11:17 | [ExprStmt] sink(arr[i]); | arrays.js:11:5:11:16 | [CallExpr] sink(arr[i]) | semmle.order | 1 |
| arrays.js:11:10:11:15 | [IndexExpr] arr[i] | arrays.js:11:10:11:12 | [VarRef] arr | semmle.label | 1 |
| arrays.js:11:10:11:15 | [IndexExpr] arr[i] | arrays.js:11:10:11:12 | [VarRef] arr | semmle.order | 1 |
| arrays.js:11:10:11:15 | [IndexExpr] arr[i] | arrays.js:11:14:11:14 | [VarRef] i | semmle.label | 2 |
| arrays.js:11:10:11:15 | [IndexExpr] arr[i] | arrays.js:11:14:11:14 | [VarRef] i | semmle.order | 2 |
| arrays.js:15:3:15:13 | [DotExpr] arr.forEach | arrays.js:15:3:15:5 | [VarRef] arr | semmle.label | 1 |
| arrays.js:15:3:15:13 | [DotExpr] arr.forEach | arrays.js:15:3:15:5 | [VarRef] arr | semmle.order | 1 |
| arrays.js:15:3:15:13 | [DotExpr] arr.forEach | arrays.js:15:7:15:13 | [Label] forEach | semmle.label | 2 |
| arrays.js:15:3:15:13 | [DotExpr] arr.forEach | arrays.js:15:7:15:13 | [Label] forEach | semmle.order | 2 |
| arrays.js:15:3:15:29 | [MethodCallExpr] arr.for ... ink(e)) | arrays.js:15:3:15:13 | [DotExpr] arr.forEach | semmle.label | 0 |
| arrays.js:15:3:15:29 | [MethodCallExpr] arr.for ... ink(e)) | arrays.js:15:3:15:13 | [DotExpr] arr.forEach | semmle.order | 0 |
| arrays.js:15:3:15:29 | [MethodCallExpr] arr.for ... ink(e)) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:15:3:15:29 | [MethodCallExpr] arr.for ... ink(e)) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:15:3:15:30 | [ExprStmt] arr.for ... nk(e)); | arrays.js:15:3:15:29 | [MethodCallExpr] arr.for ... ink(e)) | semmle.label | 1 |
| arrays.js:15:3:15:30 | [ExprStmt] arr.for ... nk(e)); | arrays.js:15:3:15:29 | [MethodCallExpr] arr.for ... ink(e)) | semmle.order | 1 |
| arrays.js:15:15:15:28 | [ArrowFunctionExpr] (e) => sink(e) | arrays.js:15:22:15:28 | [CallExpr] sink(e) | semmle.label | 5 |
| arrays.js:15:15:15:28 | [ArrowFunctionExpr] (e) => sink(e) | arrays.js:15:22:15:28 | [CallExpr] sink(e) | semmle.order | 5 |
| arrays.js:15:15:15:28 | [ArrowFunctionExpr] (e) => sink(e) | file://:0:0:0:0 | (Parameters) | semmle.label | 1 |
| arrays.js:15:15:15:28 | [ArrowFunctionExpr] (e) => sink(e) | file://:0:0:0:0 | (Parameters) | semmle.order | 1 |
| arrays.js:15:22:15:28 | [CallExpr] sink(e) | arrays.js:15:22:15:25 | [VarRef] sink | semmle.label | 0 |
| arrays.js:15:22:15:28 | [CallExpr] sink(e) | arrays.js:15:22:15:25 | [VarRef] sink | semmle.order | 0 |
| arrays.js:15:22:15:28 | [CallExpr] sink(e) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:15:22:15:28 | [CallExpr] sink(e) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:16:3:16:9 | [DotExpr] arr.map | arrays.js:16:3:16:5 | [VarRef] arr | semmle.label | 1 |
| arrays.js:16:3:16:9 | [DotExpr] arr.map | arrays.js:16:3:16:5 | [VarRef] arr | semmle.order | 1 |
| arrays.js:16:3:16:9 | [DotExpr] arr.map | arrays.js:16:7:16:9 | [Label] map | semmle.label | 2 |
| arrays.js:16:3:16:9 | [DotExpr] arr.map | arrays.js:16:7:16:9 | [Label] map | semmle.order | 2 |
| arrays.js:16:3:16:25 | [MethodCallExpr] arr.map ... ink(e)) | arrays.js:16:3:16:9 | [DotExpr] arr.map | semmle.label | 0 |
| arrays.js:16:3:16:25 | [MethodCallExpr] arr.map ... ink(e)) | arrays.js:16:3:16:9 | [DotExpr] arr.map | semmle.order | 0 |
| arrays.js:16:3:16:25 | [MethodCallExpr] arr.map ... ink(e)) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:16:3:16:25 | [MethodCallExpr] arr.map ... ink(e)) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:16:3:16:26 | [ExprStmt] arr.map ... nk(e)); | arrays.js:16:3:16:25 | [MethodCallExpr] arr.map ... ink(e)) | semmle.label | 1 |
| arrays.js:16:3:16:26 | [ExprStmt] arr.map ... nk(e)); | arrays.js:16:3:16:25 | [MethodCallExpr] arr.map ... ink(e)) | semmle.order | 1 |
| arrays.js:16:11:16:24 | [ArrowFunctionExpr] (e) => sink(e) | arrays.js:16:18:16:24 | [CallExpr] sink(e) | semmle.label | 5 |
| arrays.js:16:11:16:24 | [ArrowFunctionExpr] (e) => sink(e) | arrays.js:16:18:16:24 | [CallExpr] sink(e) | semmle.order | 5 |
| arrays.js:16:11:16:24 | [ArrowFunctionExpr] (e) => sink(e) | file://:0:0:0:0 | (Parameters) | semmle.label | 1 |
| arrays.js:16:11:16:24 | [ArrowFunctionExpr] (e) => sink(e) | file://:0:0:0:0 | (Parameters) | semmle.order | 1 |
| arrays.js:16:18:16:24 | [CallExpr] sink(e) | arrays.js:16:18:16:21 | [VarRef] sink | semmle.label | 0 |
| arrays.js:16:18:16:24 | [CallExpr] sink(e) | arrays.js:16:18:16:21 | [VarRef] sink | semmle.order | 0 |
| arrays.js:16:18:16:24 | [CallExpr] sink(e) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:16:18:16:24 | [CallExpr] sink(e) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:18:3:18:11 | [ArrayExpr] [1, 2, 3] | arrays.js:18:4:18:4 | [Literal] 1 | semmle.label | 1 |
| arrays.js:18:3:18:11 | [ArrayExpr] [1, 2, 3] | arrays.js:18:4:18:4 | [Literal] 1 | semmle.order | 1 |
| arrays.js:18:3:18:11 | [ArrayExpr] [1, 2, 3] | arrays.js:18:7:18:7 | [Literal] 2 | semmle.label | 2 |
| arrays.js:18:3:18:11 | [ArrayExpr] [1, 2, 3] | arrays.js:18:7:18:7 | [Literal] 2 | semmle.order | 2 |
| arrays.js:18:3:18:11 | [ArrayExpr] [1, 2, 3] | arrays.js:18:10:18:10 | [Literal] 3 | semmle.label | 3 |
| arrays.js:18:3:18:11 | [ArrayExpr] [1, 2, 3] | arrays.js:18:10:18:10 | [Literal] 3 | semmle.order | 3 |
| arrays.js:18:3:18:15 | [DotExpr] [1, 2, 3].map | arrays.js:18:3:18:11 | [ArrayExpr] [1, 2, 3] | semmle.label | 1 |
| arrays.js:18:3:18:15 | [DotExpr] [1, 2, 3].map | arrays.js:18:3:18:11 | [ArrayExpr] [1, 2, 3] | semmle.order | 1 |
| arrays.js:18:3:18:15 | [DotExpr] [1, 2, 3].map | arrays.js:18:13:18:15 | [Label] map | semmle.label | 2 |
| arrays.js:18:3:18:15 | [DotExpr] [1, 2, 3].map | arrays.js:18:13:18:15 | [Label] map | semmle.order | 2 |
| arrays.js:18:3:18:30 | [MethodCallExpr] [1, 2, ... ource") | arrays.js:18:3:18:15 | [DotExpr] [1, 2, 3].map | semmle.label | 0 |
| arrays.js:18:3:18:30 | [MethodCallExpr] [1, 2, ... ource") | arrays.js:18:3:18:15 | [DotExpr] [1, 2, 3].map | semmle.order | 0 |
| arrays.js:18:3:18:30 | [MethodCallExpr] [1, 2, ... ource") | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:18:3:18:30 | [MethodCallExpr] [1, 2, ... ource") | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:18:3:18:38 | [DotExpr] [1, 2, ... forEach | arrays.js:18:3:18:30 | [MethodCallExpr] [1, 2, ... ource") | semmle.label | 1 |
| arrays.js:18:3:18:38 | [DotExpr] [1, 2, ... forEach | arrays.js:18:3:18:30 | [MethodCallExpr] [1, 2, ... ource") | semmle.order | 1 |
| arrays.js:18:3:18:38 | [DotExpr] [1, 2, ... forEach | arrays.js:18:32:18:38 | [Label] forEach | semmle.label | 2 |
| arrays.js:18:3:18:38 | [DotExpr] [1, 2, ... forEach | arrays.js:18:32:18:38 | [Label] forEach | semmle.order | 2 |
| arrays.js:18:3:18:52 | [MethodCallExpr] [1, 2, ... ink(e)) | arrays.js:18:3:18:38 | [DotExpr] [1, 2, ... forEach | semmle.label | 0 |
| arrays.js:18:3:18:52 | [MethodCallExpr] [1, 2, ... ink(e)) | arrays.js:18:3:18:38 | [DotExpr] [1, 2, ... forEach | semmle.order | 0 |
| arrays.js:18:3:18:52 | [MethodCallExpr] [1, 2, ... ink(e)) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:18:3:18:52 | [MethodCallExpr] [1, 2, ... ink(e)) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:18:3:18:53 | [ExprStmt] [1, 2, ... nk(e)); | arrays.js:18:3:18:52 | [MethodCallExpr] [1, 2, ... ink(e)) | semmle.label | 1 |
| arrays.js:18:3:18:53 | [ExprStmt] [1, 2, ... nk(e)); | arrays.js:18:3:18:52 | [MethodCallExpr] [1, 2, ... ink(e)) | semmle.order | 1 |
| arrays.js:18:17:18:29 | [ArrowFunctionExpr] i => "source" | arrays.js:18:22:18:29 | [Literal] "source" | semmle.label | 5 |
| arrays.js:18:17:18:29 | [ArrowFunctionExpr] i => "source" | arrays.js:18:22:18:29 | [Literal] "source" | semmle.order | 5 |
| arrays.js:18:17:18:29 | [ArrowFunctionExpr] i => "source" | file://:0:0:0:0 | (Parameters) | semmle.label | 1 |
| arrays.js:18:17:18:29 | [ArrowFunctionExpr] i => "source" | file://:0:0:0:0 | (Parameters) | semmle.order | 1 |
| arrays.js:18:40:18:51 | [ArrowFunctionExpr] e => sink(e) | arrays.js:18:45:18:51 | [CallExpr] sink(e) | semmle.label | 5 |
| arrays.js:18:40:18:51 | [ArrowFunctionExpr] e => sink(e) | arrays.js:18:45:18:51 | [CallExpr] sink(e) | semmle.order | 5 |
| arrays.js:18:40:18:51 | [ArrowFunctionExpr] e => sink(e) | file://:0:0:0:0 | (Parameters) | semmle.label | 1 |
| arrays.js:18:40:18:51 | [ArrowFunctionExpr] e => sink(e) | file://:0:0:0:0 | (Parameters) | semmle.order | 1 |
| arrays.js:18:45:18:51 | [CallExpr] sink(e) | arrays.js:18:45:18:48 | [VarRef] sink | semmle.label | 0 |
| arrays.js:18:45:18:51 | [CallExpr] sink(e) | arrays.js:18:45:18:48 | [VarRef] sink | semmle.order | 0 |
| arrays.js:18:45:18:51 | [CallExpr] sink(e) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:18:45:18:51 | [CallExpr] sink(e) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:20:3:20:17 | [CallExpr] sink(arr.pop()) | arrays.js:20:3:20:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:20:3:20:17 | [CallExpr] sink(arr.pop()) | arrays.js:20:3:20:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:20:3:20:17 | [CallExpr] sink(arr.pop()) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:20:3:20:17 | [CallExpr] sink(arr.pop()) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:20:3:20:18 | [ExprStmt] sink(arr.pop()); | arrays.js:20:3:20:17 | [CallExpr] sink(arr.pop()) | semmle.label | 1 |
| arrays.js:20:3:20:18 | [ExprStmt] sink(arr.pop()); | arrays.js:20:3:20:17 | [CallExpr] sink(arr.pop()) | semmle.order | 1 |
| arrays.js:20:8:20:14 | [DotExpr] arr.pop | arrays.js:20:8:20:10 | [VarRef] arr | semmle.label | 1 |
| arrays.js:20:8:20:14 | [DotExpr] arr.pop | arrays.js:20:8:20:10 | [VarRef] arr | semmle.order | 1 |
| arrays.js:20:8:20:14 | [DotExpr] arr.pop | arrays.js:20:12:20:14 | [Label] pop | semmle.label | 2 |
| arrays.js:20:8:20:14 | [DotExpr] arr.pop | arrays.js:20:12:20:14 | [Label] pop | semmle.order | 2 |
| arrays.js:20:8:20:16 | [MethodCallExpr] arr.pop() | arrays.js:20:8:20:14 | [DotExpr] arr.pop | semmle.label | 0 |
| arrays.js:20:8:20:16 | [MethodCallExpr] arr.pop() | arrays.js:20:8:20:14 | [DotExpr] arr.pop | semmle.order | 0 |
| arrays.js:22:3:22:24 | [DeclStmt] var arr2 = ... | arrays.js:22:7:22:23 | [VariableDeclarator] arr2 = ["source"] | semmle.label | 1 |
| arrays.js:22:3:22:24 | [DeclStmt] var arr2 = ... | arrays.js:22:7:22:23 | [VariableDeclarator] arr2 = ["source"] | semmle.order | 1 |
| arrays.js:22:7:22:23 | [VariableDeclarator] arr2 = ["source"] | arrays.js:22:7:22:10 | [VarDecl] arr2 | semmle.label | 1 |
| arrays.js:22:7:22:23 | [VariableDeclarator] arr2 = ["source"] | arrays.js:22:7:22:10 | [VarDecl] arr2 | semmle.order | 1 |
| arrays.js:22:7:22:23 | [VariableDeclarator] arr2 = ["source"] | arrays.js:22:14:22:23 | [ArrayExpr] ["source"] | semmle.label | 2 |
| arrays.js:22:7:22:23 | [VariableDeclarator] arr2 = ["source"] | arrays.js:22:14:22:23 | [ArrayExpr] ["source"] | semmle.order | 2 |
| arrays.js:22:14:22:23 | [ArrayExpr] ["source"] | arrays.js:22:15:22:22 | [Literal] "source" | semmle.label | 1 |
| arrays.js:22:14:22:23 | [ArrayExpr] ["source"] | arrays.js:22:15:22:22 | [Literal] "source" | semmle.order | 1 |
| arrays.js:23:3:23:18 | [CallExpr] sink(arr2.pop()) | arrays.js:23:3:23:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:23:3:23:18 | [CallExpr] sink(arr2.pop()) | arrays.js:23:3:23:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:23:3:23:18 | [CallExpr] sink(arr2.pop()) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:23:3:23:18 | [CallExpr] sink(arr2.pop()) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:23:3:23:19 | [ExprStmt] sink(arr2.pop()); | arrays.js:23:3:23:18 | [CallExpr] sink(arr2.pop()) | semmle.label | 1 |
| arrays.js:23:3:23:19 | [ExprStmt] sink(arr2.pop()); | arrays.js:23:3:23:18 | [CallExpr] sink(arr2.pop()) | semmle.order | 1 |
| arrays.js:23:8:23:15 | [DotExpr] arr2.pop | arrays.js:23:8:23:11 | [VarRef] arr2 | semmle.label | 1 |
| arrays.js:23:8:23:15 | [DotExpr] arr2.pop | arrays.js:23:8:23:11 | [VarRef] arr2 | semmle.order | 1 |
| arrays.js:23:8:23:15 | [DotExpr] arr2.pop | arrays.js:23:13:23:15 | [Label] pop | semmle.label | 2 |
| arrays.js:23:8:23:15 | [DotExpr] arr2.pop | arrays.js:23:13:23:15 | [Label] pop | semmle.order | 2 |
| arrays.js:23:8:23:17 | [MethodCallExpr] arr2.pop() | arrays.js:23:8:23:15 | [DotExpr] arr2.pop | semmle.label | 0 |
| arrays.js:23:8:23:17 | [MethodCallExpr] arr2.pop() | arrays.js:23:8:23:15 | [DotExpr] arr2.pop | semmle.order | 0 |
| arrays.js:25:3:25:24 | [DeclStmt] var arr3 = ... | arrays.js:25:7:25:23 | [VariableDeclarator] arr3 = ["source"] | semmle.label | 1 |
| arrays.js:25:3:25:24 | [DeclStmt] var arr3 = ... | arrays.js:25:7:25:23 | [VariableDeclarator] arr3 = ["source"] | semmle.order | 1 |
| arrays.js:25:7:25:23 | [VariableDeclarator] arr3 = ["source"] | arrays.js:25:7:25:10 | [VarDecl] arr3 | semmle.label | 1 |
| arrays.js:25:7:25:23 | [VariableDeclarator] arr3 = ["source"] | arrays.js:25:7:25:10 | [VarDecl] arr3 | semmle.order | 1 |
| arrays.js:25:7:25:23 | [VariableDeclarator] arr3 = ["source"] | arrays.js:25:14:25:23 | [ArrayExpr] ["source"] | semmle.label | 2 |
| arrays.js:25:7:25:23 | [VariableDeclarator] arr3 = ["source"] | arrays.js:25:14:25:23 | [ArrayExpr] ["source"] | semmle.order | 2 |
| arrays.js:25:14:25:23 | [ArrayExpr] ["source"] | arrays.js:25:15:25:22 | [Literal] "source" | semmle.label | 1 |
| arrays.js:25:14:25:23 | [ArrayExpr] ["source"] | arrays.js:25:15:25:22 | [Literal] "source" | semmle.order | 1 |
| arrays.js:26:3:26:18 | [CallExpr] sink(arr3.pop()) | arrays.js:26:3:26:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:26:3:26:18 | [CallExpr] sink(arr3.pop()) | arrays.js:26:3:26:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:26:3:26:18 | [CallExpr] sink(arr3.pop()) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:26:3:26:18 | [CallExpr] sink(arr3.pop()) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:26:3:26:19 | [ExprStmt] sink(arr3.pop()); | arrays.js:26:3:26:18 | [CallExpr] sink(arr3.pop()) | semmle.label | 1 |
| arrays.js:26:3:26:19 | [ExprStmt] sink(arr3.pop()); | arrays.js:26:3:26:18 | [CallExpr] sink(arr3.pop()) | semmle.order | 1 |
| arrays.js:26:8:26:15 | [DotExpr] arr3.pop | arrays.js:26:8:26:11 | [VarRef] arr3 | semmle.label | 1 |
| arrays.js:26:8:26:15 | [DotExpr] arr3.pop | arrays.js:26:8:26:11 | [VarRef] arr3 | semmle.order | 1 |
| arrays.js:26:8:26:15 | [DotExpr] arr3.pop | arrays.js:26:13:26:15 | [Label] pop | semmle.label | 2 |
| arrays.js:26:8:26:15 | [DotExpr] arr3.pop | arrays.js:26:13:26:15 | [Label] pop | semmle.order | 2 |
| arrays.js:26:8:26:17 | [MethodCallExpr] arr3.pop() | arrays.js:26:8:26:15 | [DotExpr] arr3.pop | semmle.label | 0 |
| arrays.js:26:8:26:17 | [MethodCallExpr] arr3.pop() | arrays.js:26:8:26:15 | [DotExpr] arr3.pop | semmle.order | 0 |
| arrays.js:28:3:28:16 | [DeclStmt] var arr4 = ... | arrays.js:28:7:28:15 | [VariableDeclarator] arr4 = [] | semmle.label | 1 |
| arrays.js:28:3:28:16 | [DeclStmt] var arr4 = ... | arrays.js:28:7:28:15 | [VariableDeclarator] arr4 = [] | semmle.order | 1 |
| arrays.js:28:7:28:15 | [VariableDeclarator] arr4 = [] | arrays.js:28:7:28:10 | [VarDecl] arr4 | semmle.label | 1 |
| arrays.js:28:7:28:15 | [VariableDeclarator] arr4 = [] | arrays.js:28:7:28:10 | [VarDecl] arr4 | semmle.order | 1 |
| arrays.js:28:7:28:15 | [VariableDeclarator] arr4 = [] | arrays.js:28:14:28:15 | [ArrayExpr] [] | semmle.label | 2 |
| arrays.js:28:7:28:15 | [VariableDeclarator] arr4 = [] | arrays.js:28:14:28:15 | [ArrayExpr] [] | semmle.order | 2 |
| arrays.js:29:3:29:13 | [DotExpr] arr4.splice | arrays.js:29:3:29:6 | [VarRef] arr4 | semmle.label | 1 |
| arrays.js:29:3:29:13 | [DotExpr] arr4.splice | arrays.js:29:3:29:6 | [VarRef] arr4 | semmle.order | 1 |
| arrays.js:29:3:29:13 | [DotExpr] arr4.splice | arrays.js:29:8:29:13 | [Label] splice | semmle.label | 2 |
| arrays.js:29:3:29:13 | [DotExpr] arr4.splice | arrays.js:29:8:29:13 | [Label] splice | semmle.order | 2 |
| arrays.js:29:3:29:29 | [MethodCallExpr] arr4.sp ... ource") | arrays.js:29:3:29:13 | [DotExpr] arr4.splice | semmle.label | 0 |
| arrays.js:29:3:29:29 | [MethodCallExpr] arr4.sp ... ource") | arrays.js:29:3:29:13 | [DotExpr] arr4.splice | semmle.order | 0 |
| arrays.js:29:3:29:29 | [MethodCallExpr] arr4.sp ... ource") | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:29:3:29:29 | [MethodCallExpr] arr4.sp ... ource") | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:29:3:29:30 | [ExprStmt] arr4.sp ... urce"); | arrays.js:29:3:29:29 | [MethodCallExpr] arr4.sp ... ource") | semmle.label | 1 |
| arrays.js:29:3:29:30 | [ExprStmt] arr4.sp ... urce"); | arrays.js:29:3:29:29 | [MethodCallExpr] arr4.sp ... ource") | semmle.order | 1 |
| arrays.js:30:3:30:18 | [CallExpr] sink(arr4.pop()) | arrays.js:30:3:30:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:30:3:30:18 | [CallExpr] sink(arr4.pop()) | arrays.js:30:3:30:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:30:3:30:18 | [CallExpr] sink(arr4.pop()) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:30:3:30:18 | [CallExpr] sink(arr4.pop()) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:30:3:30:19 | [ExprStmt] sink(arr4.pop()); | arrays.js:30:3:30:18 | [CallExpr] sink(arr4.pop()) | semmle.label | 1 |
| arrays.js:30:3:30:19 | [ExprStmt] sink(arr4.pop()); | arrays.js:30:3:30:18 | [CallExpr] sink(arr4.pop()) | semmle.order | 1 |
| arrays.js:30:8:30:15 | [DotExpr] arr4.pop | arrays.js:30:8:30:11 | [VarRef] arr4 | semmle.label | 1 |
| arrays.js:30:8:30:15 | [DotExpr] arr4.pop | arrays.js:30:8:30:11 | [VarRef] arr4 | semmle.order | 1 |
| arrays.js:30:8:30:15 | [DotExpr] arr4.pop | arrays.js:30:13:30:15 | [Label] pop | semmle.label | 2 |
| arrays.js:30:8:30:15 | [DotExpr] arr4.pop | arrays.js:30:13:30:15 | [Label] pop | semmle.order | 2 |
| arrays.js:30:8:30:17 | [MethodCallExpr] arr4.pop() | arrays.js:30:8:30:15 | [DotExpr] arr4.pop | semmle.label | 0 |
| arrays.js:30:8:30:17 | [MethodCallExpr] arr4.pop() | arrays.js:30:8:30:15 | [DotExpr] arr4.pop | semmle.order | 0 |
| arrays.js:37:3:37:29 | [DeclStmt] var arr5 = ... | arrays.js:37:7:37:28 | [VariableDeclarator] arr5 = ... t(arr4) | semmle.label | 1 |
| arrays.js:37:3:37:29 | [DeclStmt] var arr5 = ... | arrays.js:37:7:37:28 | [VariableDeclarator] arr5 = ... t(arr4) | semmle.order | 1 |
| arrays.js:37:7:37:28 | [VariableDeclarator] arr5 = ... t(arr4) | arrays.js:37:7:37:10 | [VarDecl] arr5 | semmle.label | 1 |
| arrays.js:37:7:37:28 | [VariableDeclarator] arr5 = ... t(arr4) | arrays.js:37:7:37:10 | [VarDecl] arr5 | semmle.order | 1 |
| arrays.js:37:7:37:28 | [VariableDeclarator] arr5 = ... t(arr4) | arrays.js:37:14:37:28 | [MethodCallExpr] [].concat(arr4) | semmle.label | 2 |
| arrays.js:37:7:37:28 | [VariableDeclarator] arr5 = ... t(arr4) | arrays.js:37:14:37:28 | [MethodCallExpr] [].concat(arr4) | semmle.order | 2 |
| arrays.js:37:14:37:22 | [DotExpr] [].concat | arrays.js:37:14:37:15 | [ArrayExpr] [] | semmle.label | 1 |
| arrays.js:37:14:37:22 | [DotExpr] [].concat | arrays.js:37:14:37:15 | [ArrayExpr] [] | semmle.order | 1 |
| arrays.js:37:14:37:22 | [DotExpr] [].concat | arrays.js:37:17:37:22 | [Label] concat | semmle.label | 2 |
| arrays.js:37:14:37:22 | [DotExpr] [].concat | arrays.js:37:17:37:22 | [Label] concat | semmle.order | 2 |
| arrays.js:37:14:37:28 | [MethodCallExpr] [].concat(arr4) | arrays.js:37:14:37:22 | [DotExpr] [].concat | semmle.label | 0 |
| arrays.js:37:14:37:28 | [MethodCallExpr] [].concat(arr4) | arrays.js:37:14:37:22 | [DotExpr] [].concat | semmle.order | 0 |
| arrays.js:37:14:37:28 | [MethodCallExpr] [].concat(arr4) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:37:14:37:28 | [MethodCallExpr] [].concat(arr4) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:38:3:38:18 | [CallExpr] sink(arr5.pop()) | arrays.js:38:3:38:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:38:3:38:18 | [CallExpr] sink(arr5.pop()) | arrays.js:38:3:38:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:38:3:38:18 | [CallExpr] sink(arr5.pop()) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:38:3:38:18 | [CallExpr] sink(arr5.pop()) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:38:3:38:19 | [ExprStmt] sink(arr5.pop()); | arrays.js:38:3:38:18 | [CallExpr] sink(arr5.pop()) | semmle.label | 1 |
| arrays.js:38:3:38:19 | [ExprStmt] sink(arr5.pop()); | arrays.js:38:3:38:18 | [CallExpr] sink(arr5.pop()) | semmle.order | 1 |
| arrays.js:38:8:38:15 | [DotExpr] arr5.pop | arrays.js:38:8:38:11 | [VarRef] arr5 | semmle.label | 1 |
| arrays.js:38:8:38:15 | [DotExpr] arr5.pop | arrays.js:38:8:38:11 | [VarRef] arr5 | semmle.order | 1 |
| arrays.js:38:8:38:15 | [DotExpr] arr5.pop | arrays.js:38:13:38:15 | [Label] pop | semmle.label | 2 |
| arrays.js:38:8:38:15 | [DotExpr] arr5.pop | arrays.js:38:13:38:15 | [Label] pop | semmle.order | 2 |
| arrays.js:38:8:38:17 | [MethodCallExpr] arr5.pop() | arrays.js:38:8:38:15 | [DotExpr] arr5.pop | semmle.label | 0 |
| arrays.js:38:8:38:17 | [MethodCallExpr] arr5.pop() | arrays.js:38:8:38:15 | [DotExpr] arr5.pop | semmle.order | 0 |
| arrays.js:40:3:40:27 | [CallExpr] sink(ar ... .pop()) | arrays.js:40:3:40:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:40:3:40:27 | [CallExpr] sink(ar ... .pop()) | arrays.js:40:3:40:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:40:3:40:27 | [CallExpr] sink(ar ... .pop()) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:40:3:40:27 | [CallExpr] sink(ar ... .pop()) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:40:3:40:28 | [ExprStmt] sink(ar ... pop()); | arrays.js:40:3:40:27 | [CallExpr] sink(ar ... .pop()) | semmle.label | 1 |
| arrays.js:40:3:40:28 | [ExprStmt] sink(ar ... pop()); | arrays.js:40:3:40:27 | [CallExpr] sink(ar ... .pop()) | semmle.order | 1 |
| arrays.js:40:8:40:17 | [DotExpr] arr5.slice | arrays.js:40:8:40:11 | [VarRef] arr5 | semmle.label | 1 |
| arrays.js:40:8:40:17 | [DotExpr] arr5.slice | arrays.js:40:8:40:11 | [VarRef] arr5 | semmle.order | 1 |
| arrays.js:40:8:40:17 | [DotExpr] arr5.slice | arrays.js:40:13:40:17 | [Label] slice | semmle.label | 2 |
| arrays.js:40:8:40:17 | [DotExpr] arr5.slice | arrays.js:40:13:40:17 | [Label] slice | semmle.order | 2 |
| arrays.js:40:8:40:20 | [MethodCallExpr] arr5.slice(2) | arrays.js:40:8:40:17 | [DotExpr] arr5.slice | semmle.label | 0 |
| arrays.js:40:8:40:20 | [MethodCallExpr] arr5.slice(2) | arrays.js:40:8:40:17 | [DotExpr] arr5.slice | semmle.order | 0 |
| arrays.js:40:8:40:20 | [MethodCallExpr] arr5.slice(2) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:40:8:40:20 | [MethodCallExpr] arr5.slice(2) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:40:8:40:24 | [DotExpr] arr5.slice(2).pop | arrays.js:40:8:40:20 | [MethodCallExpr] arr5.slice(2) | semmle.label | 1 |
| arrays.js:40:8:40:24 | [DotExpr] arr5.slice(2).pop | arrays.js:40:8:40:20 | [MethodCallExpr] arr5.slice(2) | semmle.order | 1 |
| arrays.js:40:8:40:24 | [DotExpr] arr5.slice(2).pop | arrays.js:40:22:40:24 | [Label] pop | semmle.label | 2 |
| arrays.js:40:8:40:24 | [DotExpr] arr5.slice(2).pop | arrays.js:40:22:40:24 | [Label] pop | semmle.order | 2 |
| arrays.js:40:8:40:26 | [MethodCallExpr] arr5.slice(2).pop() | arrays.js:40:8:40:24 | [DotExpr] arr5.slice(2).pop | semmle.label | 0 |
| arrays.js:40:8:40:26 | [MethodCallExpr] arr5.slice(2).pop() | arrays.js:40:8:40:24 | [DotExpr] arr5.slice(2).pop | semmle.order | 0 |
| arrays.js:42:3:42:16 | [DeclStmt] var arr6 = ... | arrays.js:42:7:42:15 | [VariableDeclarator] arr6 = [] | semmle.label | 1 |
| arrays.js:42:3:42:16 | [DeclStmt] var arr6 = ... | arrays.js:42:7:42:15 | [VariableDeclarator] arr6 = [] | semmle.order | 1 |
| arrays.js:42:7:42:15 | [VariableDeclarator] arr6 = [] | arrays.js:42:7:42:10 | [VarDecl] arr6 | semmle.label | 1 |
| arrays.js:42:7:42:15 | [VariableDeclarator] arr6 = [] | arrays.js:42:7:42:10 | [VarDecl] arr6 | semmle.order | 1 |
| arrays.js:42:7:42:15 | [VariableDeclarator] arr6 = [] | arrays.js:42:14:42:15 | [ArrayExpr] [] | semmle.label | 2 |
| arrays.js:42:7:42:15 | [VariableDeclarator] arr6 = [] | arrays.js:42:14:42:15 | [ArrayExpr] [] | semmle.order | 2 |
| arrays.js:43:3:45:3 | [ForStmt] for (va ... i]; } | arrays.js:43:8:43:16 | [DeclStmt] var i = ... | semmle.label | 1 |
| arrays.js:43:3:45:3 | [ForStmt] for (va ... i]; } | arrays.js:43:8:43:16 | [DeclStmt] var i = ... | semmle.order | 1 |
| arrays.js:43:3:45:3 | [ForStmt] for (va ... i]; } | arrays.js:43:19:43:33 | [BinaryExpr] i < arr5.length | semmle.label | 2 |
| arrays.js:43:3:45:3 | [ForStmt] for (va ... i]; } | arrays.js:43:19:43:33 | [BinaryExpr] i < arr5.length | semmle.order | 2 |
| arrays.js:43:3:45:3 | [ForStmt] for (va ... i]; } | arrays.js:43:36:43:38 | [UpdateExpr] i++ | semmle.label | 3 |
| arrays.js:43:3:45:3 | [ForStmt] for (va ... i]; } | arrays.js:43:36:43:38 | [UpdateExpr] i++ | semmle.order | 3 |
| arrays.js:43:3:45:3 | [ForStmt] for (va ... i]; } | arrays.js:43:41:45:3 | [BlockStmt] { a ... i]; } | semmle.label | 4 |
| arrays.js:43:3:45:3 | [ForStmt] for (va ... i]; } | arrays.js:43:41:45:3 | [BlockStmt] { a ... i]; } | semmle.order | 4 |
| arrays.js:43:8:43:16 | [DeclStmt] var i = ... | arrays.js:43:12:43:16 | [VariableDeclarator] i = 0 | semmle.label | 1 |
| arrays.js:43:8:43:16 | [DeclStmt] var i = ... | arrays.js:43:12:43:16 | [VariableDeclarator] i = 0 | semmle.order | 1 |
| arrays.js:43:12:43:16 | [VariableDeclarator] i = 0 | arrays.js:43:12:43:12 | [VarDecl] i | semmle.label | 1 |
| arrays.js:43:12:43:16 | [VariableDeclarator] i = 0 | arrays.js:43:12:43:12 | [VarDecl] i | semmle.order | 1 |
| arrays.js:43:12:43:16 | [VariableDeclarator] i = 0 | arrays.js:43:16:43:16 | [Literal] 0 | semmle.label | 2 |
| arrays.js:43:12:43:16 | [VariableDeclarator] i = 0 | arrays.js:43:16:43:16 | [Literal] 0 | semmle.order | 2 |
| arrays.js:43:19:43:33 | [BinaryExpr] i < arr5.length | arrays.js:43:19:43:19 | [VarRef] i | semmle.label | 1 |
| arrays.js:43:19:43:33 | [BinaryExpr] i < arr5.length | arrays.js:43:19:43:19 | [VarRef] i | semmle.order | 1 |
| arrays.js:43:19:43:33 | [BinaryExpr] i < arr5.length | arrays.js:43:23:43:33 | [DotExpr] arr5.length | semmle.label | 2 |
| arrays.js:43:19:43:33 | [BinaryExpr] i < arr5.length | arrays.js:43:23:43:33 | [DotExpr] arr5.length | semmle.order | 2 |
| arrays.js:43:23:43:33 | [DotExpr] arr5.length | arrays.js:43:23:43:26 | [VarRef] arr5 | semmle.label | 1 |
| arrays.js:43:23:43:33 | [DotExpr] arr5.length | arrays.js:43:23:43:26 | [VarRef] arr5 | semmle.order | 1 |
| arrays.js:43:23:43:33 | [DotExpr] arr5.length | arrays.js:43:28:43:33 | [Label] length | semmle.label | 2 |
| arrays.js:43:23:43:33 | [DotExpr] arr5.length | arrays.js:43:28:43:33 | [Label] length | semmle.order | 2 |
| arrays.js:43:36:43:38 | [UpdateExpr] i++ | arrays.js:43:36:43:36 | [VarRef] i | semmle.label | 1 |
| arrays.js:43:36:43:38 | [UpdateExpr] i++ | arrays.js:43:36:43:36 | [VarRef] i | semmle.order | 1 |
| arrays.js:43:41:45:3 | [BlockStmt] { a ... i]; } | arrays.js:44:5:44:22 | [ExprStmt] arr6[i] = arr5[i]; | semmle.label | 1 |
| arrays.js:43:41:45:3 | [BlockStmt] { a ... i]; } | arrays.js:44:5:44:22 | [ExprStmt] arr6[i] = arr5[i]; | semmle.order | 1 |
| arrays.js:44:5:44:11 | [IndexExpr] arr6[i] | arrays.js:44:5:44:8 | [VarRef] arr6 | semmle.label | 1 |
| arrays.js:44:5:44:11 | [IndexExpr] arr6[i] | arrays.js:44:5:44:8 | [VarRef] arr6 | semmle.order | 1 |
| arrays.js:44:5:44:11 | [IndexExpr] arr6[i] | arrays.js:44:10:44:10 | [VarRef] i | semmle.label | 2 |
| arrays.js:44:5:44:11 | [IndexExpr] arr6[i] | arrays.js:44:10:44:10 | [VarRef] i | semmle.order | 2 |
| arrays.js:44:5:44:21 | [AssignExpr] arr6[i] = arr5[i] | arrays.js:44:5:44:11 | [IndexExpr] arr6[i] | semmle.label | 1 |
| arrays.js:44:5:44:21 | [AssignExpr] arr6[i] = arr5[i] | arrays.js:44:5:44:11 | [IndexExpr] arr6[i] | semmle.order | 1 |
| arrays.js:44:5:44:21 | [AssignExpr] arr6[i] = arr5[i] | arrays.js:44:15:44:21 | [IndexExpr] arr5[i] | semmle.label | 2 |
| arrays.js:44:5:44:21 | [AssignExpr] arr6[i] = arr5[i] | arrays.js:44:15:44:21 | [IndexExpr] arr5[i] | semmle.order | 2 |
| arrays.js:44:5:44:22 | [ExprStmt] arr6[i] = arr5[i]; | arrays.js:44:5:44:21 | [AssignExpr] arr6[i] = arr5[i] | semmle.label | 1 |
| arrays.js:44:5:44:22 | [ExprStmt] arr6[i] = arr5[i]; | arrays.js:44:5:44:21 | [AssignExpr] arr6[i] = arr5[i] | semmle.order | 1 |
| arrays.js:44:15:44:21 | [IndexExpr] arr5[i] | arrays.js:44:15:44:18 | [VarRef] arr5 | semmle.label | 1 |
| arrays.js:44:15:44:21 | [IndexExpr] arr5[i] | arrays.js:44:15:44:18 | [VarRef] arr5 | semmle.order | 1 |
| arrays.js:44:15:44:21 | [IndexExpr] arr5[i] | arrays.js:44:20:44:20 | [VarRef] i | semmle.label | 2 |
| arrays.js:44:15:44:21 | [IndexExpr] arr5[i] | arrays.js:44:20:44:20 | [VarRef] i | semmle.order | 2 |
| arrays.js:46:3:46:18 | [CallExpr] sink(arr6.pop()) | arrays.js:46:3:46:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:46:3:46:18 | [CallExpr] sink(arr6.pop()) | arrays.js:46:3:46:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:46:3:46:18 | [CallExpr] sink(arr6.pop()) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:46:3:46:18 | [CallExpr] sink(arr6.pop()) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:46:3:46:19 | [ExprStmt] sink(arr6.pop()); | arrays.js:46:3:46:18 | [CallExpr] sink(arr6.pop()) | semmle.label | 1 |
| arrays.js:46:3:46:19 | [ExprStmt] sink(arr6.pop()); | arrays.js:46:3:46:18 | [CallExpr] sink(arr6.pop()) | semmle.order | 1 |
| arrays.js:46:8:46:15 | [DotExpr] arr6.pop | arrays.js:46:8:46:11 | [VarRef] arr6 | semmle.label | 1 |
| arrays.js:46:8:46:15 | [DotExpr] arr6.pop | arrays.js:46:8:46:11 | [VarRef] arr6 | semmle.order | 1 |
| arrays.js:46:8:46:15 | [DotExpr] arr6.pop | arrays.js:46:13:46:15 | [Label] pop | semmle.label | 2 |
| arrays.js:46:8:46:15 | [DotExpr] arr6.pop | arrays.js:46:13:46:15 | [Label] pop | semmle.order | 2 |
| arrays.js:46:8:46:17 | [MethodCallExpr] arr6.pop() | arrays.js:46:8:46:15 | [DotExpr] arr6.pop | semmle.label | 0 |
| arrays.js:46:8:46:17 | [MethodCallExpr] arr6.pop() | arrays.js:46:8:46:15 | [DotExpr] arr6.pop | semmle.order | 0 |
| arrays.js:49:3:49:12 | [ArrayExpr] ["source"] | arrays.js:49:4:49:11 | [Literal] "source" | semmle.label | 1 |
| arrays.js:49:3:49:12 | [ArrayExpr] ["source"] | arrays.js:49:4:49:11 | [Literal] "source" | semmle.order | 1 |
| arrays.js:49:3:49:20 | [DotExpr] ["source"].forEach | arrays.js:49:3:49:12 | [ArrayExpr] ["source"] | semmle.label | 1 |
| arrays.js:49:3:49:20 | [DotExpr] ["source"].forEach | arrays.js:49:3:49:12 | [ArrayExpr] ["source"] | semmle.order | 1 |
| arrays.js:49:3:49:20 | [DotExpr] ["source"].forEach | arrays.js:49:14:49:20 | [Label] forEach | semmle.label | 2 |
| arrays.js:49:3:49:20 | [DotExpr] ["source"].forEach | arrays.js:49:14:49:20 | [Label] forEach | semmle.order | 2 |
| arrays.js:49:3:52:4 | [MethodCallExpr] ["sourc ... t. }) | arrays.js:49:3:49:20 | [DotExpr] ["source"].forEach | semmle.label | 0 |
| arrays.js:49:3:52:4 | [MethodCallExpr] ["sourc ... t. }) | arrays.js:49:3:49:20 | [DotExpr] ["source"].forEach | semmle.order | 0 |
| arrays.js:49:3:52:4 | [MethodCallExpr] ["sourc ... t. }) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:49:3:52:4 | [MethodCallExpr] ["sourc ... t. }) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:49:3:52:5 | [ExprStmt] ["sourc ... . }); | arrays.js:49:3:52:4 | [MethodCallExpr] ["sourc ... t. }) | semmle.label | 1 |
| arrays.js:49:3:52:5 | [ExprStmt] ["sourc ... . }); | arrays.js:49:3:52:4 | [MethodCallExpr] ["sourc ... t. }) | semmle.order | 1 |
| arrays.js:49:22:52:3 | [ArrowFunctionExpr] (e, i, ... nt. } | arrays.js:49:37:52:3 | [BlockStmt] { s ... nt. } | semmle.label | 5 |
| arrays.js:49:22:52:3 | [ArrowFunctionExpr] (e, i, ... nt. } | arrays.js:49:37:52:3 | [BlockStmt] { s ... nt. } | semmle.order | 5 |
| arrays.js:49:22:52:3 | [ArrowFunctionExpr] (e, i, ... nt. } | file://:0:0:0:0 | (Parameters) | semmle.label | 1 |
| arrays.js:49:22:52:3 | [ArrowFunctionExpr] (e, i, ... nt. } | file://:0:0:0:0 | (Parameters) | semmle.order | 1 |
| arrays.js:49:37:52:3 | [BlockStmt] { s ... nt. } | arrays.js:50:5:50:20 | [ExprStmt] sink(ary.pop()); | semmle.label | 1 |
| arrays.js:49:37:52:3 | [BlockStmt] { s ... nt. } | arrays.js:50:5:50:20 | [ExprStmt] sink(ary.pop()); | semmle.order | 1 |
| arrays.js:49:37:52:3 | [BlockStmt] { s ... nt. } | arrays.js:51:5:51:14 | [ExprStmt] sink(ary); | semmle.label | 2 |
| arrays.js:49:37:52:3 | [BlockStmt] { s ... nt. } | arrays.js:51:5:51:14 | [ExprStmt] sink(ary); | semmle.order | 2 |
| arrays.js:50:5:50:19 | [CallExpr] sink(ary.pop()) | arrays.js:50:5:50:8 | [VarRef] sink | semmle.label | 0 |
| arrays.js:50:5:50:19 | [CallExpr] sink(ary.pop()) | arrays.js:50:5:50:8 | [VarRef] sink | semmle.order | 0 |
| arrays.js:50:5:50:19 | [CallExpr] sink(ary.pop()) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:50:5:50:19 | [CallExpr] sink(ary.pop()) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:50:5:50:20 | [ExprStmt] sink(ary.pop()); | arrays.js:50:5:50:19 | [CallExpr] sink(ary.pop()) | semmle.label | 1 |
| arrays.js:50:5:50:20 | [ExprStmt] sink(ary.pop()); | arrays.js:50:5:50:19 | [CallExpr] sink(ary.pop()) | semmle.order | 1 |
| arrays.js:50:10:50:16 | [DotExpr] ary.pop | arrays.js:50:10:50:12 | [VarRef] ary | semmle.label | 1 |
| arrays.js:50:10:50:16 | [DotExpr] ary.pop | arrays.js:50:10:50:12 | [VarRef] ary | semmle.order | 1 |
| arrays.js:50:10:50:16 | [DotExpr] ary.pop | arrays.js:50:14:50:16 | [Label] pop | semmle.label | 2 |
| arrays.js:50:10:50:16 | [DotExpr] ary.pop | arrays.js:50:14:50:16 | [Label] pop | semmle.order | 2 |
| arrays.js:50:10:50:18 | [MethodCallExpr] ary.pop() | arrays.js:50:10:50:16 | [DotExpr] ary.pop | semmle.label | 0 |
| arrays.js:50:10:50:18 | [MethodCallExpr] ary.pop() | arrays.js:50:10:50:16 | [DotExpr] ary.pop | semmle.order | 0 |
| arrays.js:51:5:51:13 | [CallExpr] sink(ary) | arrays.js:51:5:51:8 | [VarRef] sink | semmle.label | 0 |
| arrays.js:51:5:51:13 | [CallExpr] sink(ary) | arrays.js:51:5:51:8 | [VarRef] sink | semmle.order | 0 |
| arrays.js:51:5:51:13 | [CallExpr] sink(ary) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:51:5:51:13 | [CallExpr] sink(ary) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:51:5:51:14 | [ExprStmt] sink(ary); | arrays.js:51:5:51:13 | [CallExpr] sink(ary) | semmle.label | 1 |
| arrays.js:51:5:51:14 | [ExprStmt] sink(ary); | arrays.js:51:5:51:13 | [CallExpr] sink(ary) | semmle.order | 1 |
| arrays.js:54:3:54:14 | [CallExpr] sink(arr[0]) | arrays.js:54:3:54:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:54:3:54:14 | [CallExpr] sink(arr[0]) | arrays.js:54:3:54:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:54:3:54:14 | [CallExpr] sink(arr[0]) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:54:3:54:14 | [CallExpr] sink(arr[0]) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:54:3:54:15 | [ExprStmt] sink(arr[0]); | arrays.js:54:3:54:14 | [CallExpr] sink(arr[0]) | semmle.label | 1 |
| arrays.js:54:3:54:15 | [ExprStmt] sink(arr[0]); | arrays.js:54:3:54:14 | [CallExpr] sink(arr[0]) | semmle.order | 1 |
| arrays.js:54:8:54:13 | [IndexExpr] arr[0] | arrays.js:54:8:54:10 | [VarRef] arr | semmle.label | 1 |
| arrays.js:54:8:54:13 | [IndexExpr] arr[0] | arrays.js:54:8:54:10 | [VarRef] arr | semmle.order | 1 |
| arrays.js:54:8:54:13 | [IndexExpr] arr[0] | arrays.js:54:12:54:12 | [Literal] 0 | semmle.label | 2 |
| arrays.js:54:8:54:13 | [IndexExpr] arr[0] | arrays.js:54:12:54:12 | [Literal] 0 | semmle.order | 2 |
| arrays.js:56:3:58:3 | [ForOfStmt] for (co ... OK } | arrays.js:56:8:56:14 | [DeclStmt] const x = ... | semmle.label | 1 |
| arrays.js:56:3:58:3 | [ForOfStmt] for (co ... OK } | arrays.js:56:8:56:14 | [DeclStmt] const x = ... | semmle.order | 1 |
| arrays.js:56:3:58:3 | [ForOfStmt] for (co ... OK } | arrays.js:56:19:56:21 | [VarRef] arr | semmle.label | 2 |
| arrays.js:56:3:58:3 | [ForOfStmt] for (co ... OK } | arrays.js:56:19:56:21 | [VarRef] arr | semmle.order | 2 |
| arrays.js:56:3:58:3 | [ForOfStmt] for (co ... OK } | arrays.js:56:24:58:3 | [BlockStmt] { s ... OK } | semmle.label | 3 |
| arrays.js:56:3:58:3 | [ForOfStmt] for (co ... OK } | arrays.js:56:24:58:3 | [BlockStmt] { s ... OK } | semmle.order | 3 |
| arrays.js:56:8:56:14 | [DeclStmt] const x = ... | arrays.js:56:14:56:14 | [VariableDeclarator] x | semmle.label | 1 |
| arrays.js:56:8:56:14 | [DeclStmt] const x = ... | arrays.js:56:14:56:14 | [VariableDeclarator] x | semmle.order | 1 |
| arrays.js:56:14:56:14 | [VariableDeclarator] x | arrays.js:56:14:56:14 | [VarDecl] x | semmle.label | 1 |
| arrays.js:56:14:56:14 | [VariableDeclarator] x | arrays.js:56:14:56:14 | [VarDecl] x | semmle.order | 1 |
| arrays.js:56:24:58:3 | [BlockStmt] { s ... OK } | arrays.js:57:5:57:12 | [ExprStmt] sink(x); | semmle.label | 1 |
| arrays.js:56:24:58:3 | [BlockStmt] { s ... OK } | arrays.js:57:5:57:12 | [ExprStmt] sink(x); | semmle.order | 1 |
| arrays.js:57:5:57:11 | [CallExpr] sink(x) | arrays.js:57:5:57:8 | [VarRef] sink | semmle.label | 0 |
| arrays.js:57:5:57:11 | [CallExpr] sink(x) | arrays.js:57:5:57:8 | [VarRef] sink | semmle.order | 0 |
| arrays.js:57:5:57:11 | [CallExpr] sink(x) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:57:5:57:11 | [CallExpr] sink(x) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:57:5:57:12 | [ExprStmt] sink(x); | arrays.js:57:5:57:11 | [CallExpr] sink(x) | semmle.label | 1 |
| arrays.js:57:5:57:12 | [ExprStmt] sink(x); | arrays.js:57:5:57:11 | [CallExpr] sink(x) | semmle.order | 1 |
| arrays.js:60:3:62:3 | [ForOfStmt] for (co ... OK } | arrays.js:60:8:60:14 | [DeclStmt] const x = ... | semmle.label | 1 |
| arrays.js:60:3:62:3 | [ForOfStmt] for (co ... OK } | arrays.js:60:8:60:14 | [DeclStmt] const x = ... | semmle.order | 1 |
| arrays.js:60:3:62:3 | [ForOfStmt] for (co ... OK } | arrays.js:60:19:60:33 | [MethodCallExpr] Array.from(arr) | semmle.label | 2 |
| arrays.js:60:3:62:3 | [ForOfStmt] for (co ... OK } | arrays.js:60:19:60:33 | [MethodCallExpr] Array.from(arr) | semmle.order | 2 |
| arrays.js:60:3:62:3 | [ForOfStmt] for (co ... OK } | arrays.js:60:36:62:3 | [BlockStmt] { s ... OK } | semmle.label | 3 |
| arrays.js:60:3:62:3 | [ForOfStmt] for (co ... OK } | arrays.js:60:36:62:3 | [BlockStmt] { s ... OK } | semmle.order | 3 |
| arrays.js:60:8:60:14 | [DeclStmt] const x = ... | arrays.js:60:14:60:14 | [VariableDeclarator] x | semmle.label | 1 |
| arrays.js:60:8:60:14 | [DeclStmt] const x = ... | arrays.js:60:14:60:14 | [VariableDeclarator] x | semmle.order | 1 |
| arrays.js:60:14:60:14 | [VariableDeclarator] x | arrays.js:60:14:60:14 | [VarDecl] x | semmle.label | 1 |
| arrays.js:60:14:60:14 | [VariableDeclarator] x | arrays.js:60:14:60:14 | [VarDecl] x | semmle.order | 1 |
| arrays.js:60:19:60:28 | [DotExpr] Array.from | arrays.js:60:19:60:23 | [VarRef] Array | semmle.label | 1 |
| arrays.js:60:19:60:28 | [DotExpr] Array.from | arrays.js:60:19:60:23 | [VarRef] Array | semmle.order | 1 |
| arrays.js:60:19:60:28 | [DotExpr] Array.from | arrays.js:60:25:60:28 | [Label] from | semmle.label | 2 |
| arrays.js:60:19:60:28 | [DotExpr] Array.from | arrays.js:60:25:60:28 | [Label] from | semmle.order | 2 |
| arrays.js:60:19:60:33 | [MethodCallExpr] Array.from(arr) | arrays.js:60:19:60:28 | [DotExpr] Array.from | semmle.label | 0 |
| arrays.js:60:19:60:33 | [MethodCallExpr] Array.from(arr) | arrays.js:60:19:60:28 | [DotExpr] Array.from | semmle.order | 0 |
| arrays.js:60:19:60:33 | [MethodCallExpr] Array.from(arr) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:60:19:60:33 | [MethodCallExpr] Array.from(arr) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:60:36:62:3 | [BlockStmt] { s ... OK } | arrays.js:61:5:61:12 | [ExprStmt] sink(x); | semmle.label | 1 |
| arrays.js:60:36:62:3 | [BlockStmt] { s ... OK } | arrays.js:61:5:61:12 | [ExprStmt] sink(x); | semmle.order | 1 |
| arrays.js:61:5:61:11 | [CallExpr] sink(x) | arrays.js:61:5:61:8 | [VarRef] sink | semmle.label | 0 |
| arrays.js:61:5:61:11 | [CallExpr] sink(x) | arrays.js:61:5:61:8 | [VarRef] sink | semmle.order | 0 |
| arrays.js:61:5:61:11 | [CallExpr] sink(x) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:61:5:61:11 | [CallExpr] sink(x) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:61:5:61:12 | [ExprStmt] sink(x); | arrays.js:61:5:61:11 | [CallExpr] sink(x) | semmle.label | 1 |
| arrays.js:61:5:61:12 | [ExprStmt] sink(x); | arrays.js:61:5:61:11 | [CallExpr] sink(x) | semmle.order | 1 |
| arrays.js:64:3:66:3 | [ForOfStmt] for (co ... OK } | arrays.js:64:8:64:14 | [DeclStmt] const x = ... | semmle.label | 1 |
| arrays.js:64:3:66:3 | [ForOfStmt] for (co ... OK } | arrays.js:64:8:64:14 | [DeclStmt] const x = ... | semmle.order | 1 |
| arrays.js:64:3:66:3 | [ForOfStmt] for (co ... OK } | arrays.js:64:19:64:26 | [ArrayExpr] [...arr] | semmle.label | 2 |
| arrays.js:64:3:66:3 | [ForOfStmt] for (co ... OK } | arrays.js:64:19:64:26 | [ArrayExpr] [...arr] | semmle.order | 2 |
| arrays.js:64:3:66:3 | [ForOfStmt] for (co ... OK } | arrays.js:64:29:66:3 | [BlockStmt] { s ... OK } | semmle.label | 3 |
| arrays.js:64:3:66:3 | [ForOfStmt] for (co ... OK } | arrays.js:64:29:66:3 | [BlockStmt] { s ... OK } | semmle.order | 3 |
| arrays.js:64:8:64:14 | [DeclStmt] const x = ... | arrays.js:64:14:64:14 | [VariableDeclarator] x | semmle.label | 1 |
| arrays.js:64:8:64:14 | [DeclStmt] const x = ... | arrays.js:64:14:64:14 | [VariableDeclarator] x | semmle.order | 1 |
| arrays.js:64:14:64:14 | [VariableDeclarator] x | arrays.js:64:14:64:14 | [VarDecl] x | semmle.label | 1 |
| arrays.js:64:14:64:14 | [VariableDeclarator] x | arrays.js:64:14:64:14 | [VarDecl] x | semmle.order | 1 |
| arrays.js:64:19:64:26 | [ArrayExpr] [...arr] | arrays.js:64:20:64:25 | [SpreadElement] ...arr | semmle.label | 1 |
| arrays.js:64:19:64:26 | [ArrayExpr] [...arr] | arrays.js:64:20:64:25 | [SpreadElement] ...arr | semmle.order | 1 |
| arrays.js:64:20:64:25 | [SpreadElement] ...arr | arrays.js:64:23:64:25 | [VarRef] arr | semmle.label | 1 |
| arrays.js:64:20:64:25 | [SpreadElement] ...arr | arrays.js:64:23:64:25 | [VarRef] arr | semmle.order | 1 |
| arrays.js:64:29:66:3 | [BlockStmt] { s ... OK } | arrays.js:65:5:65:12 | [ExprStmt] sink(x); | semmle.label | 1 |
| arrays.js:64:29:66:3 | [BlockStmt] { s ... OK } | arrays.js:65:5:65:12 | [ExprStmt] sink(x); | semmle.order | 1 |
| arrays.js:65:5:65:11 | [CallExpr] sink(x) | arrays.js:65:5:65:8 | [VarRef] sink | semmle.label | 0 |
| arrays.js:65:5:65:11 | [CallExpr] sink(x) | arrays.js:65:5:65:8 | [VarRef] sink | semmle.order | 0 |
| arrays.js:65:5:65:11 | [CallExpr] sink(x) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:65:5:65:11 | [CallExpr] sink(x) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:65:5:65:12 | [ExprStmt] sink(x); | arrays.js:65:5:65:11 | [CallExpr] sink(x) | semmle.label | 1 |
| arrays.js:65:5:65:12 | [ExprStmt] sink(x); | arrays.js:65:5:65:11 | [CallExpr] sink(x) | semmle.order | 1 |
| arrays.js:68:3:68:16 | [DeclStmt] var arr7 = ... | arrays.js:68:7:68:15 | [VariableDeclarator] arr7 = [] | semmle.label | 1 |
| arrays.js:68:3:68:16 | [DeclStmt] var arr7 = ... | arrays.js:68:7:68:15 | [VariableDeclarator] arr7 = [] | semmle.order | 1 |
| arrays.js:68:7:68:15 | [VariableDeclarator] arr7 = [] | arrays.js:68:7:68:10 | [VarDecl] arr7 | semmle.label | 1 |
| arrays.js:68:7:68:15 | [VariableDeclarator] arr7 = [] | arrays.js:68:7:68:10 | [VarDecl] arr7 | semmle.order | 1 |
| arrays.js:68:7:68:15 | [VariableDeclarator] arr7 = [] | arrays.js:68:14:68:15 | [ArrayExpr] [] | semmle.label | 2 |
| arrays.js:68:7:68:15 | [VariableDeclarator] arr7 = [] | arrays.js:68:14:68:15 | [ArrayExpr] [] | semmle.order | 2 |
| arrays.js:69:3:69:11 | [DotExpr] arr7.push | arrays.js:69:3:69:6 | [VarRef] arr7 | semmle.label | 1 |
| arrays.js:69:3:69:11 | [DotExpr] arr7.push | arrays.js:69:3:69:6 | [VarRef] arr7 | semmle.order | 1 |
| arrays.js:69:3:69:11 | [DotExpr] arr7.push | arrays.js:69:8:69:11 | [Label] push | semmle.label | 2 |
| arrays.js:69:3:69:11 | [DotExpr] arr7.push | arrays.js:69:8:69:11 | [Label] push | semmle.order | 2 |
| arrays.js:69:3:69:19 | [MethodCallExpr] arr7.push(...arr) | arrays.js:69:3:69:11 | [DotExpr] arr7.push | semmle.label | 0 |
| arrays.js:69:3:69:19 | [MethodCallExpr] arr7.push(...arr) | arrays.js:69:3:69:11 | [DotExpr] arr7.push | semmle.order | 0 |
| arrays.js:69:3:69:19 | [MethodCallExpr] arr7.push(...arr) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:69:3:69:19 | [MethodCallExpr] arr7.push(...arr) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:69:3:69:20 | [ExprStmt] arr7.push(...arr); | arrays.js:69:3:69:19 | [MethodCallExpr] arr7.push(...arr) | semmle.label | 1 |
| arrays.js:69:3:69:20 | [ExprStmt] arr7.push(...arr); | arrays.js:69:3:69:19 | [MethodCallExpr] arr7.push(...arr) | semmle.order | 1 |
| arrays.js:69:13:69:18 | [SpreadElement] ...arr | arrays.js:69:16:69:18 | [VarRef] arr | semmle.label | 1 |
| arrays.js:69:13:69:18 | [SpreadElement] ...arr | arrays.js:69:16:69:18 | [VarRef] arr | semmle.order | 1 |
| arrays.js:70:3:72:3 | [ForOfStmt] for (co ... OK } | arrays.js:70:8:70:14 | [DeclStmt] const x = ... | semmle.label | 1 |
| arrays.js:70:3:72:3 | [ForOfStmt] for (co ... OK } | arrays.js:70:8:70:14 | [DeclStmt] const x = ... | semmle.order | 1 |
| arrays.js:70:3:72:3 | [ForOfStmt] for (co ... OK } | arrays.js:70:19:70:22 | [VarRef] arr7 | semmle.label | 2 |
| arrays.js:70:3:72:3 | [ForOfStmt] for (co ... OK } | arrays.js:70:19:70:22 | [VarRef] arr7 | semmle.order | 2 |
| arrays.js:70:3:72:3 | [ForOfStmt] for (co ... OK } | arrays.js:70:25:72:3 | [BlockStmt] { s ... OK } | semmle.label | 3 |
| arrays.js:70:3:72:3 | [ForOfStmt] for (co ... OK } | arrays.js:70:25:72:3 | [BlockStmt] { s ... OK } | semmle.order | 3 |
| arrays.js:70:8:70:14 | [DeclStmt] const x = ... | arrays.js:70:14:70:14 | [VariableDeclarator] x | semmle.label | 1 |
| arrays.js:70:8:70:14 | [DeclStmt] const x = ... | arrays.js:70:14:70:14 | [VariableDeclarator] x | semmle.order | 1 |
| arrays.js:70:14:70:14 | [VariableDeclarator] x | arrays.js:70:14:70:14 | [VarDecl] x | semmle.label | 1 |
| arrays.js:70:14:70:14 | [VariableDeclarator] x | arrays.js:70:14:70:14 | [VarDecl] x | semmle.order | 1 |
| arrays.js:70:25:72:3 | [BlockStmt] { s ... OK } | arrays.js:71:5:71:12 | [ExprStmt] sink(x); | semmle.label | 1 |
| arrays.js:70:25:72:3 | [BlockStmt] { s ... OK } | arrays.js:71:5:71:12 | [ExprStmt] sink(x); | semmle.order | 1 |
| arrays.js:71:5:71:11 | [CallExpr] sink(x) | arrays.js:71:5:71:8 | [VarRef] sink | semmle.label | 0 |
| arrays.js:71:5:71:11 | [CallExpr] sink(x) | arrays.js:71:5:71:8 | [VarRef] sink | semmle.order | 0 |
| arrays.js:71:5:71:11 | [CallExpr] sink(x) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:71:5:71:11 | [CallExpr] sink(x) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:71:5:71:12 | [ExprStmt] sink(x); | arrays.js:71:5:71:11 | [CallExpr] sink(x) | semmle.label | 1 |
| arrays.js:71:5:71:12 | [ExprStmt] sink(x); | arrays.js:71:5:71:11 | [CallExpr] sink(x) | semmle.order | 1 |
| arrays.js:74:3:74:42 | [DeclStmt] const arrayFrom = ... | arrays.js:74:9:74:41 | [VariableDeclarator] arrayFr ... -from") | semmle.label | 1 |
| arrays.js:74:3:74:42 | [DeclStmt] const arrayFrom = ... | arrays.js:74:9:74:41 | [VariableDeclarator] arrayFr ... -from") | semmle.order | 1 |
| arrays.js:74:9:74:41 | [VariableDeclarator] arrayFr ... -from") | arrays.js:74:9:74:17 | [VarDecl] arrayFrom | semmle.label | 1 |
| arrays.js:74:9:74:41 | [VariableDeclarator] arrayFr ... -from") | arrays.js:74:9:74:17 | [VarDecl] arrayFrom | semmle.order | 1 |
| arrays.js:74:9:74:41 | [VariableDeclarator] arrayFr ... -from") | arrays.js:74:21:74:41 | [CallExpr] require ... -from") | semmle.label | 2 |
| arrays.js:74:9:74:41 | [VariableDeclarator] arrayFr ... -from") | arrays.js:74:21:74:41 | [CallExpr] require ... -from") | semmle.order | 2 |
| arrays.js:74:21:74:41 | [CallExpr] require ... -from") | arrays.js:74:21:74:27 | [VarRef] require | semmle.label | 0 |
| arrays.js:74:21:74:41 | [CallExpr] require ... -from") | arrays.js:74:21:74:27 | [VarRef] require | semmle.order | 0 |
| arrays.js:74:21:74:41 | [CallExpr] require ... -from") | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:74:21:74:41 | [CallExpr] require ... -from") | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:75:3:77:3 | [ForOfStmt] for (co ... OK } | arrays.js:75:8:75:14 | [DeclStmt] const x = ... | semmle.label | 1 |
| arrays.js:75:3:77:3 | [ForOfStmt] for (co ... OK } | arrays.js:75:8:75:14 | [DeclStmt] const x = ... | semmle.order | 1 |
| arrays.js:75:3:77:3 | [ForOfStmt] for (co ... OK } | arrays.js:75:19:75:32 | [CallExpr] arrayFrom(arr) | semmle.label | 2 |
| arrays.js:75:3:77:3 | [ForOfStmt] for (co ... OK } | arrays.js:75:19:75:32 | [CallExpr] arrayFrom(arr) | semmle.order | 2 |
| arrays.js:75:3:77:3 | [ForOfStmt] for (co ... OK } | arrays.js:75:35:77:3 | [BlockStmt] { s ... OK } | semmle.label | 3 |
| arrays.js:75:3:77:3 | [ForOfStmt] for (co ... OK } | arrays.js:75:35:77:3 | [BlockStmt] { s ... OK } | semmle.order | 3 |
| arrays.js:75:8:75:14 | [DeclStmt] const x = ... | arrays.js:75:14:75:14 | [VariableDeclarator] x | semmle.label | 1 |
| arrays.js:75:8:75:14 | [DeclStmt] const x = ... | arrays.js:75:14:75:14 | [VariableDeclarator] x | semmle.order | 1 |
| arrays.js:75:14:75:14 | [VariableDeclarator] x | arrays.js:75:14:75:14 | [VarDecl] x | semmle.label | 1 |
| arrays.js:75:14:75:14 | [VariableDeclarator] x | arrays.js:75:14:75:14 | [VarDecl] x | semmle.order | 1 |
| arrays.js:75:19:75:32 | [CallExpr] arrayFrom(arr) | arrays.js:75:19:75:27 | [VarRef] arrayFrom | semmle.label | 0 |
| arrays.js:75:19:75:32 | [CallExpr] arrayFrom(arr) | arrays.js:75:19:75:27 | [VarRef] arrayFrom | semmle.order | 0 |
| arrays.js:75:19:75:32 | [CallExpr] arrayFrom(arr) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:75:19:75:32 | [CallExpr] arrayFrom(arr) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:75:35:77:3 | [BlockStmt] { s ... OK } | arrays.js:76:5:76:12 | [ExprStmt] sink(x); | semmle.label | 1 |
| arrays.js:75:35:77:3 | [BlockStmt] { s ... OK } | arrays.js:76:5:76:12 | [ExprStmt] sink(x); | semmle.order | 1 |
| arrays.js:76:5:76:11 | [CallExpr] sink(x) | arrays.js:76:5:76:8 | [VarRef] sink | semmle.label | 0 |
| arrays.js:76:5:76:11 | [CallExpr] sink(x) | arrays.js:76:5:76:8 | [VarRef] sink | semmle.order | 0 |
| arrays.js:76:5:76:11 | [CallExpr] sink(x) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:76:5:76:11 | [CallExpr] sink(x) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:76:5:76:12 | [ExprStmt] sink(x); | arrays.js:76:5:76:11 | [CallExpr] sink(x) | semmle.label | 1 |
| arrays.js:76:5:76:12 | [ExprStmt] sink(x); | arrays.js:76:5:76:11 | [CallExpr] sink(x) | semmle.order | 1 |
| arrays.js:79:3:79:30 | [CallExpr] sink(ar ... lback)) | arrays.js:79:3:79:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:79:3:79:30 | [CallExpr] sink(ar ... lback)) | arrays.js:79:3:79:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:79:3:79:30 | [CallExpr] sink(ar ... lback)) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:79:3:79:30 | [CallExpr] sink(ar ... lback)) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:79:3:79:31 | [ExprStmt] sink(ar ... back)); | arrays.js:79:3:79:30 | [CallExpr] sink(ar ... lback)) | semmle.label | 1 |
| arrays.js:79:3:79:31 | [ExprStmt] sink(ar ... back)); | arrays.js:79:3:79:30 | [CallExpr] sink(ar ... lback)) | semmle.order | 1 |
| arrays.js:79:8:79:15 | [DotExpr] arr.find | arrays.js:79:8:79:10 | [VarRef] arr | semmle.label | 1 |
| arrays.js:79:8:79:15 | [DotExpr] arr.find | arrays.js:79:8:79:10 | [VarRef] arr | semmle.order | 1 |
| arrays.js:79:8:79:15 | [DotExpr] arr.find | arrays.js:79:12:79:15 | [Label] find | semmle.label | 2 |
| arrays.js:79:8:79:15 | [DotExpr] arr.find | arrays.js:79:12:79:15 | [Label] find | semmle.order | 2 |
| arrays.js:79:8:79:29 | [MethodCallExpr] arr.fin ... llback) | arrays.js:79:8:79:15 | [DotExpr] arr.find | semmle.label | 0 |
| arrays.js:79:8:79:29 | [MethodCallExpr] arr.fin ... llback) | arrays.js:79:8:79:15 | [DotExpr] arr.find | semmle.order | 0 |
| arrays.js:79:8:79:29 | [MethodCallExpr] arr.fin ... llback) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:79:8:79:29 | [MethodCallExpr] arr.fin ... llback) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:81:3:81:42 | [DeclStmt] const arrayFind = ... | arrays.js:81:9:81:41 | [VariableDeclarator] arrayFi ... -find") | semmle.label | 1 |
| arrays.js:81:3:81:42 | [DeclStmt] const arrayFind = ... | arrays.js:81:9:81:41 | [VariableDeclarator] arrayFi ... -find") | semmle.order | 1 |
| arrays.js:81:9:81:41 | [VariableDeclarator] arrayFi ... -find") | arrays.js:81:9:81:17 | [VarDecl] arrayFind | semmle.label | 1 |
| arrays.js:81:9:81:41 | [VariableDeclarator] arrayFi ... -find") | arrays.js:81:9:81:17 | [VarDecl] arrayFind | semmle.order | 1 |
| arrays.js:81:9:81:41 | [VariableDeclarator] arrayFi ... -find") | arrays.js:81:21:81:41 | [CallExpr] require ... -find") | semmle.label | 2 |
| arrays.js:81:9:81:41 | [VariableDeclarator] arrayFi ... -find") | arrays.js:81:21:81:41 | [CallExpr] require ... -find") | semmle.order | 2 |
| arrays.js:81:21:81:41 | [CallExpr] require ... -find") | arrays.js:81:21:81:27 | [VarRef] require | semmle.label | 0 |
| arrays.js:81:21:81:41 | [CallExpr] require ... -find") | arrays.js:81:21:81:27 | [VarRef] require | semmle.order | 0 |
| arrays.js:81:21:81:41 | [CallExpr] require ... -find") | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:81:21:81:41 | [CallExpr] require ... -find") | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:82:3:82:36 | [CallExpr] sink(ar ... lback)) | arrays.js:82:3:82:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:82:3:82:36 | [CallExpr] sink(ar ... lback)) | arrays.js:82:3:82:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:82:3:82:36 | [CallExpr] sink(ar ... lback)) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:82:3:82:36 | [CallExpr] sink(ar ... lback)) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:82:3:82:37 | [ExprStmt] sink(ar ... back)); | arrays.js:82:3:82:36 | [CallExpr] sink(ar ... lback)) | semmle.label | 1 |
| arrays.js:82:3:82:37 | [ExprStmt] sink(ar ... back)); | arrays.js:82:3:82:36 | [CallExpr] sink(ar ... lback)) | semmle.order | 1 |
| arrays.js:82:8:82:35 | [CallExpr] arrayFi ... llback) | arrays.js:82:8:82:16 | [VarRef] arrayFind | semmle.label | 0 |
| arrays.js:82:8:82:35 | [CallExpr] arrayFi ... llback) | arrays.js:82:8:82:16 | [VarRef] arrayFind | semmle.order | 0 |
| arrays.js:82:8:82:35 | [CallExpr] arrayFi ... llback) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:82:8:82:35 | [CallExpr] arrayFi ... llback) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:84:3:84:31 | [DeclStmt] const uniq = ... | arrays.js:84:9:84:30 | [VariableDeclarator] uniq = ... "uniq") | semmle.label | 1 |
| arrays.js:84:3:84:31 | [DeclStmt] const uniq = ... | arrays.js:84:9:84:30 | [VariableDeclarator] uniq = ... "uniq") | semmle.order | 1 |
| arrays.js:84:9:84:30 | [VariableDeclarator] uniq = ... "uniq") | arrays.js:84:9:84:12 | [VarDecl] uniq | semmle.label | 1 |
| arrays.js:84:9:84:30 | [VariableDeclarator] uniq = ... "uniq") | arrays.js:84:9:84:12 | [VarDecl] uniq | semmle.order | 1 |
| arrays.js:84:9:84:30 | [VariableDeclarator] uniq = ... "uniq") | arrays.js:84:16:84:30 | [CallExpr] require("uniq") | semmle.label | 2 |
| arrays.js:84:9:84:30 | [VariableDeclarator] uniq = ... "uniq") | arrays.js:84:16:84:30 | [CallExpr] require("uniq") | semmle.order | 2 |
| arrays.js:84:16:84:30 | [CallExpr] require("uniq") | arrays.js:84:16:84:22 | [VarRef] require | semmle.label | 0 |
| arrays.js:84:16:84:30 | [CallExpr] require("uniq") | arrays.js:84:16:84:22 | [VarRef] require | semmle.order | 0 |
| arrays.js:84:16:84:30 | [CallExpr] require("uniq") | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:84:16:84:30 | [CallExpr] require("uniq") | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:85:3:87:3 | [ForOfStmt] for (co ... OK } | arrays.js:85:8:85:14 | [DeclStmt] const x = ... | semmle.label | 1 |
| arrays.js:85:3:87:3 | [ForOfStmt] for (co ... OK } | arrays.js:85:8:85:14 | [DeclStmt] const x = ... | semmle.order | 1 |
| arrays.js:85:3:87:3 | [ForOfStmt] for (co ... OK } | arrays.js:85:19:85:27 | [CallExpr] uniq(arr) | semmle.label | 2 |
| arrays.js:85:3:87:3 | [ForOfStmt] for (co ... OK } | arrays.js:85:19:85:27 | [CallExpr] uniq(arr) | semmle.order | 2 |
| arrays.js:85:3:87:3 | [ForOfStmt] for (co ... OK } | arrays.js:85:30:87:3 | [BlockStmt] { s ... OK } | semmle.label | 3 |
| arrays.js:85:3:87:3 | [ForOfStmt] for (co ... OK } | arrays.js:85:30:87:3 | [BlockStmt] { s ... OK } | semmle.order | 3 |
| arrays.js:85:8:85:14 | [DeclStmt] const x = ... | arrays.js:85:14:85:14 | [VariableDeclarator] x | semmle.label | 1 |
| arrays.js:85:8:85:14 | [DeclStmt] const x = ... | arrays.js:85:14:85:14 | [VariableDeclarator] x | semmle.order | 1 |
| arrays.js:85:14:85:14 | [VariableDeclarator] x | arrays.js:85:14:85:14 | [VarDecl] x | semmle.label | 1 |
| arrays.js:85:14:85:14 | [VariableDeclarator] x | arrays.js:85:14:85:14 | [VarDecl] x | semmle.order | 1 |
| arrays.js:85:19:85:27 | [CallExpr] uniq(arr) | arrays.js:85:19:85:22 | [VarRef] uniq | semmle.label | 0 |
| arrays.js:85:19:85:27 | [CallExpr] uniq(arr) | arrays.js:85:19:85:22 | [VarRef] uniq | semmle.order | 0 |
| arrays.js:85:19:85:27 | [CallExpr] uniq(arr) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:85:19:85:27 | [CallExpr] uniq(arr) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:85:30:87:3 | [BlockStmt] { s ... OK } | arrays.js:86:5:86:12 | [ExprStmt] sink(x); | semmle.label | 1 |
| arrays.js:85:30:87:3 | [BlockStmt] { s ... OK } | arrays.js:86:5:86:12 | [ExprStmt] sink(x); | semmle.order | 1 |
| arrays.js:86:5:86:11 | [CallExpr] sink(x) | arrays.js:86:5:86:8 | [VarRef] sink | semmle.label | 0 |
| arrays.js:86:5:86:11 | [CallExpr] sink(x) | arrays.js:86:5:86:8 | [VarRef] sink | semmle.order | 0 |
| arrays.js:86:5:86:11 | [CallExpr] sink(x) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:86:5:86:11 | [CallExpr] sink(x) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:86:5:86:12 | [ExprStmt] sink(x); | arrays.js:86:5:86:11 | [CallExpr] sink(x) | semmle.label | 1 |
| arrays.js:86:5:86:12 | [ExprStmt] sink(x); | arrays.js:86:5:86:11 | [CallExpr] sink(x) | semmle.order | 1 |
| arrays.js:89:3:89:18 | [CallExpr] sink(arr.at(-1)) | arrays.js:89:3:89:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:89:3:89:18 | [CallExpr] sink(arr.at(-1)) | arrays.js:89:3:89:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:89:3:89:18 | [CallExpr] sink(arr.at(-1)) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:89:3:89:18 | [CallExpr] sink(arr.at(-1)) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:89:3:89:19 | [ExprStmt] sink(arr.at(-1)); | arrays.js:89:3:89:18 | [CallExpr] sink(arr.at(-1)) | semmle.label | 1 |
| arrays.js:89:3:89:19 | [ExprStmt] sink(arr.at(-1)); | arrays.js:89:3:89:18 | [CallExpr] sink(arr.at(-1)) | semmle.order | 1 |
| arrays.js:89:8:89:13 | [DotExpr] arr.at | arrays.js:89:8:89:10 | [VarRef] arr | semmle.label | 1 |
| arrays.js:89:8:89:13 | [DotExpr] arr.at | arrays.js:89:8:89:10 | [VarRef] arr | semmle.order | 1 |
| arrays.js:89:8:89:13 | [DotExpr] arr.at | arrays.js:89:12:89:13 | [Label] at | semmle.label | 2 |
| arrays.js:89:8:89:13 | [DotExpr] arr.at | arrays.js:89:12:89:13 | [Label] at | semmle.order | 2 |
| arrays.js:89:8:89:17 | [MethodCallExpr] arr.at(-1) | arrays.js:89:8:89:13 | [DotExpr] arr.at | semmle.label | 0 |
| arrays.js:89:8:89:17 | [MethodCallExpr] arr.at(-1) | arrays.js:89:8:89:13 | [DotExpr] arr.at | semmle.order | 0 |
| arrays.js:89:8:89:17 | [MethodCallExpr] arr.at(-1) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:89:8:89:17 | [MethodCallExpr] arr.at(-1) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:89:15:89:16 | [UnaryExpr] -1 | arrays.js:89:16:89:16 | [Literal] 1 | semmle.label | 1 |
| arrays.js:89:15:89:16 | [UnaryExpr] -1 | arrays.js:89:16:89:16 | [Literal] 1 | semmle.order | 1 |
| arrays.js:91:3:91:35 | [CallExpr] sink([" ... => x)) | arrays.js:91:3:91:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:91:3:91:35 | [CallExpr] sink([" ... => x)) | arrays.js:91:3:91:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:91:3:91:35 | [CallExpr] sink([" ... => x)) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:91:3:91:35 | [CallExpr] sink([" ... => x)) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:91:3:91:36 | [ExprStmt] sink([" ... => x)); | arrays.js:91:3:91:35 | [CallExpr] sink([" ... => x)) | semmle.label | 1 |
| arrays.js:91:3:91:36 | [ExprStmt] sink([" ... => x)); | arrays.js:91:3:91:35 | [CallExpr] sink([" ... => x)) | semmle.order | 1 |
| arrays.js:91:8:91:17 | [ArrayExpr] ["source"] | arrays.js:91:9:91:16 | [Literal] "source" | semmle.label | 1 |
| arrays.js:91:8:91:17 | [ArrayExpr] ["source"] | arrays.js:91:9:91:16 | [Literal] "source" | semmle.order | 1 |
| arrays.js:91:8:91:24 | [DotExpr] ["source"].filter | arrays.js:91:8:91:17 | [ArrayExpr] ["source"] | semmle.label | 1 |
| arrays.js:91:8:91:24 | [DotExpr] ["source"].filter | arrays.js:91:8:91:17 | [ArrayExpr] ["source"] | semmle.order | 1 |
| arrays.js:91:8:91:24 | [DotExpr] ["source"].filter | arrays.js:91:19:91:24 | [Label] filter | semmle.label | 2 |
| arrays.js:91:8:91:24 | [DotExpr] ["source"].filter | arrays.js:91:19:91:24 | [Label] filter | semmle.order | 2 |
| arrays.js:91:8:91:34 | [MethodCallExpr] ["sourc ... ) => x) | arrays.js:91:8:91:24 | [DotExpr] ["source"].filter | semmle.label | 0 |
| arrays.js:91:8:91:34 | [MethodCallExpr] ["sourc ... ) => x) | arrays.js:91:8:91:24 | [DotExpr] ["source"].filter | semmle.order | 0 |
| arrays.js:91:8:91:34 | [MethodCallExpr] ["sourc ... ) => x) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:91:8:91:34 | [MethodCallExpr] ["sourc ... ) => x) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:91:26:91:33 | [ArrowFunctionExpr] (x) => x | arrays.js:91:33:91:33 | [VarRef] x | semmle.label | 5 |
| arrays.js:91:26:91:33 | [ArrowFunctionExpr] (x) => x | arrays.js:91:33:91:33 | [VarRef] x | semmle.order | 5 |
| arrays.js:91:26:91:33 | [ArrowFunctionExpr] (x) => x | file://:0:0:0:0 | (Parameters) | semmle.label | 1 |
| arrays.js:91:26:91:33 | [ArrowFunctionExpr] (x) => x | file://:0:0:0:0 | (Parameters) | semmle.order | 1 |
| arrays.js:92:3:92:37 | [CallExpr] sink([" ... > !!x)) | arrays.js:92:3:92:6 | [VarRef] sink | semmle.label | 0 |
| arrays.js:92:3:92:37 | [CallExpr] sink([" ... > !!x)) | arrays.js:92:3:92:6 | [VarRef] sink | semmle.order | 0 |
| arrays.js:92:3:92:37 | [CallExpr] sink([" ... > !!x)) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:92:3:92:37 | [CallExpr] sink([" ... > !!x)) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:92:3:92:38 | [ExprStmt] sink([" ... !!x)); | arrays.js:92:3:92:37 | [CallExpr] sink([" ... > !!x)) | semmle.label | 1 |
| arrays.js:92:3:92:38 | [ExprStmt] sink([" ... !!x)); | arrays.js:92:3:92:37 | [CallExpr] sink([" ... > !!x)) | semmle.order | 1 |
| arrays.js:92:8:92:17 | [ArrayExpr] ["source"] | arrays.js:92:9:92:16 | [Literal] "source" | semmle.label | 1 |
| arrays.js:92:8:92:17 | [ArrayExpr] ["source"] | arrays.js:92:9:92:16 | [Literal] "source" | semmle.order | 1 |
| arrays.js:92:8:92:24 | [DotExpr] ["source"].filter | arrays.js:92:8:92:17 | [ArrayExpr] ["source"] | semmle.label | 1 |
| arrays.js:92:8:92:24 | [DotExpr] ["source"].filter | arrays.js:92:8:92:17 | [ArrayExpr] ["source"] | semmle.order | 1 |
| arrays.js:92:8:92:24 | [DotExpr] ["source"].filter | arrays.js:92:19:92:24 | [Label] filter | semmle.label | 2 |
| arrays.js:92:8:92:24 | [DotExpr] ["source"].filter | arrays.js:92:19:92:24 | [Label] filter | semmle.order | 2 |
| arrays.js:92:8:92:36 | [MethodCallExpr] ["sourc ... => !!x) | arrays.js:92:8:92:24 | [DotExpr] ["source"].filter | semmle.label | 0 |
| arrays.js:92:8:92:36 | [MethodCallExpr] ["sourc ... => !!x) | arrays.js:92:8:92:24 | [DotExpr] ["source"].filter | semmle.order | 0 |
| arrays.js:92:8:92:36 | [MethodCallExpr] ["sourc ... => !!x) | file://:0:0:0:0 | (Arguments) | semmle.label | 1 |
| arrays.js:92:8:92:36 | [MethodCallExpr] ["sourc ... => !!x) | file://:0:0:0:0 | (Arguments) | semmle.order | 1 |
| arrays.js:92:26:92:35 | [ArrowFunctionExpr] (x) => !!x | arrays.js:92:33:92:35 | [UnaryExpr] !!x | semmle.label | 5 |
| arrays.js:92:26:92:35 | [ArrowFunctionExpr] (x) => !!x | arrays.js:92:33:92:35 | [UnaryExpr] !!x | semmle.order | 5 |
| arrays.js:92:26:92:35 | [ArrowFunctionExpr] (x) => !!x | file://:0:0:0:0 | (Parameters) | semmle.label | 1 |
| arrays.js:92:26:92:35 | [ArrowFunctionExpr] (x) => !!x | file://:0:0:0:0 | (Parameters) | semmle.order | 1 |
| arrays.js:92:33:92:35 | [UnaryExpr] !!x | arrays.js:92:34:92:35 | [UnaryExpr] !x | semmle.label | 1 |
| arrays.js:92:33:92:35 | [UnaryExpr] !!x | arrays.js:92:34:92:35 | [UnaryExpr] !x | semmle.order | 1 |
| arrays.js:92:34:92:35 | [UnaryExpr] !x | arrays.js:92:35:92:35 | [VarRef] x | semmle.label | 1 |
| arrays.js:92:34:92:35 | [UnaryExpr] !x | arrays.js:92:35:92:35 | [VarRef] x | semmle.order | 1 |
| file://:0:0:0:0 | (Arguments) | arrays.js:5:8:5:14 | [DotExpr] obj.foo | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:5:8:5:14 | [DotExpr] obj.foo | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:8:12:8:17 | [VarRef] source | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:8:12:8:17 | [VarRef] source | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:11:10:11:15 | [IndexExpr] arr[i] | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:11:10:11:15 | [IndexExpr] arr[i] | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:15:15:15:28 | [ArrowFunctionExpr] (e) => sink(e) | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:15:15:15:28 | [ArrowFunctionExpr] (e) => sink(e) | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:15:27:15:27 | [VarRef] e | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:15:27:15:27 | [VarRef] e | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:16:11:16:24 | [ArrowFunctionExpr] (e) => sink(e) | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:16:11:16:24 | [ArrowFunctionExpr] (e) => sink(e) | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:16:23:16:23 | [VarRef] e | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:16:23:16:23 | [VarRef] e | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:18:17:18:29 | [ArrowFunctionExpr] i => "source" | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:18:17:18:29 | [ArrowFunctionExpr] i => "source" | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:18:40:18:51 | [ArrowFunctionExpr] e => sink(e) | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:18:40:18:51 | [ArrowFunctionExpr] e => sink(e) | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:18:50:18:50 | [VarRef] e | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:18:50:18:50 | [VarRef] e | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:20:8:20:16 | [MethodCallExpr] arr.pop() | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:20:8:20:16 | [MethodCallExpr] arr.pop() | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:23:8:23:17 | [MethodCallExpr] arr2.pop() | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:23:8:23:17 | [MethodCallExpr] arr2.pop() | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:26:8:26:17 | [MethodCallExpr] arr3.pop() | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:26:8:26:17 | [MethodCallExpr] arr3.pop() | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:29:15:29:15 | [Literal] 0 | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:29:15:29:15 | [Literal] 0 | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:29:18:29:18 | [Literal] 0 | semmle.label | 1 |
| file://:0:0:0:0 | (Arguments) | arrays.js:29:18:29:18 | [Literal] 0 | semmle.order | 1 |
| file://:0:0:0:0 | (Arguments) | arrays.js:29:21:29:28 | [Literal] "source" | semmle.label | 2 |
| file://:0:0:0:0 | (Arguments) | arrays.js:29:21:29:28 | [Literal] "source" | semmle.order | 2 |
| file://:0:0:0:0 | (Arguments) | arrays.js:30:8:30:17 | [MethodCallExpr] arr4.pop() | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:30:8:30:17 | [MethodCallExpr] arr4.pop() | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:37:24:37:27 | [VarRef] arr4 | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:37:24:37:27 | [VarRef] arr4 | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:38:8:38:17 | [MethodCallExpr] arr5.pop() | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:38:8:38:17 | [MethodCallExpr] arr5.pop() | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:40:8:40:26 | [MethodCallExpr] arr5.slice(2).pop() | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:40:8:40:26 | [MethodCallExpr] arr5.slice(2).pop() | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:40:19:40:19 | [Literal] 2 | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:40:19:40:19 | [Literal] 2 | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:46:8:46:17 | [MethodCallExpr] arr6.pop() | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:46:8:46:17 | [MethodCallExpr] arr6.pop() | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:49:22:52:3 | [ArrowFunctionExpr] (e, i, ... nt. } | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:49:22:52:3 | [ArrowFunctionExpr] (e, i, ... nt. } | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:50:10:50:18 | [MethodCallExpr] ary.pop() | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:50:10:50:18 | [MethodCallExpr] ary.pop() | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:51:10:51:12 | [VarRef] ary | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:51:10:51:12 | [VarRef] ary | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:54:8:54:13 | [IndexExpr] arr[0] | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:54:8:54:13 | [IndexExpr] arr[0] | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:57:10:57:10 | [VarRef] x | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:57:10:57:10 | [VarRef] x | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:60:30:60:32 | [VarRef] arr | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:60:30:60:32 | [VarRef] arr | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:61:10:61:10 | [VarRef] x | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:61:10:61:10 | [VarRef] x | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:65:10:65:10 | [VarRef] x | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:65:10:65:10 | [VarRef] x | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:69:13:69:18 | [SpreadElement] ...arr | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:69:13:69:18 | [SpreadElement] ...arr | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:71:10:71:10 | [VarRef] x | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:71:10:71:10 | [VarRef] x | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:74:29:74:40 | [Literal] "array-from" | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:74:29:74:40 | [Literal] "array-from" | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:75:29:75:31 | [VarRef] arr | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:75:29:75:31 | [VarRef] arr | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:76:10:76:10 | [VarRef] x | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:76:10:76:10 | [VarRef] x | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:79:8:79:29 | [MethodCallExpr] arr.fin ... llback) | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:79:8:79:29 | [MethodCallExpr] arr.fin ... llback) | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:79:17:79:28 | [VarRef] someCallback | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:79:17:79:28 | [VarRef] someCallback | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:81:29:81:40 | [Literal] "array-find" | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:81:29:81:40 | [Literal] "array-find" | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:82:8:82:35 | [CallExpr] arrayFi ... llback) | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:82:8:82:35 | [CallExpr] arrayFi ... llback) | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:82:18:82:20 | [VarRef] arr | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:82:18:82:20 | [VarRef] arr | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:82:23:82:34 | [VarRef] someCallback | semmle.label | 1 |
| file://:0:0:0:0 | (Arguments) | arrays.js:82:23:82:34 | [VarRef] someCallback | semmle.order | 1 |
| file://:0:0:0:0 | (Arguments) | arrays.js:84:24:84:29 | [Literal] "uniq" | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:84:24:84:29 | [Literal] "uniq" | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:85:24:85:26 | [VarRef] arr | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:85:24:85:26 | [VarRef] arr | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:86:10:86:10 | [VarRef] x | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:86:10:86:10 | [VarRef] x | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:89:8:89:17 | [MethodCallExpr] arr.at(-1) | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:89:8:89:17 | [MethodCallExpr] arr.at(-1) | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:89:15:89:16 | [UnaryExpr] -1 | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:89:15:89:16 | [UnaryExpr] -1 | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:91:8:91:34 | [MethodCallExpr] ["sourc ... ) => x) | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:91:8:91:34 | [MethodCallExpr] ["sourc ... ) => x) | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:91:26:91:33 | [ArrowFunctionExpr] (x) => x | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:91:26:91:33 | [ArrowFunctionExpr] (x) => x | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:92:8:92:36 | [MethodCallExpr] ["sourc ... => !!x) | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:92:8:92:36 | [MethodCallExpr] ["sourc ... => !!x) | semmle.order | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:92:26:92:35 | [ArrowFunctionExpr] (x) => !!x | semmle.label | 0 |
| file://:0:0:0:0 | (Arguments) | arrays.js:92:26:92:35 | [ArrowFunctionExpr] (x) => !!x | semmle.order | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:15:16:15:16 | [SimpleParameter] e | semmle.label | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:15:16:15:16 | [SimpleParameter] e | semmle.order | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:16:12:16:12 | [SimpleParameter] e | semmle.label | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:16:12:16:12 | [SimpleParameter] e | semmle.order | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:18:17:18:17 | [SimpleParameter] i | semmle.label | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:18:17:18:17 | [SimpleParameter] i | semmle.order | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:18:40:18:40 | [SimpleParameter] e | semmle.label | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:18:40:18:40 | [SimpleParameter] e | semmle.order | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:49:23:49:23 | [SimpleParameter] e | semmle.label | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:49:23:49:23 | [SimpleParameter] e | semmle.order | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:49:26:49:26 | [SimpleParameter] i | semmle.label | 1 |
| file://:0:0:0:0 | (Parameters) | arrays.js:49:26:49:26 | [SimpleParameter] i | semmle.order | 1 |
| file://:0:0:0:0 | (Parameters) | arrays.js:49:29:49:31 | [SimpleParameter] ary | semmle.label | 2 |
| file://:0:0:0:0 | (Parameters) | arrays.js:49:29:49:31 | [SimpleParameter] ary | semmle.order | 2 |
| file://:0:0:0:0 | (Parameters) | arrays.js:91:27:91:27 | [SimpleParameter] x | semmle.label | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:91:27:91:27 | [SimpleParameter] x | semmle.order | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:92:27:92:27 | [SimpleParameter] x | semmle.label | 0 |
| file://:0:0:0:0 | (Parameters) | arrays.js:92:27:92:27 | [SimpleParameter] x | semmle.order | 0 |
graphProperties
| semmle.graphKind | tree |
