#-----| [CopyAssignmentOperator] __va_list_tag& __va_list_tag::operator=(__va_list_tag const&)
#-----|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const __va_list_tag &
#-----| [MoveAssignmentOperator] __va_list_tag& __va_list_tag::operator=(__va_list_tag&&)
#-----|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] __va_list_tag &&
#-----| [Operator,TopLevelFunction] void operator delete(void*)
#-----|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [VoidPointerType] void *
#-----| [Operator,TopLevelFunction] void operator delete(void*, unsigned long)
#-----|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [VoidPointerType] void *
#-----|     getParameter(1): [Parameter] (unnamed parameter 1)
#-----|         Type = [LongType] unsigned long
#-----| [Operator,TopLevelFunction] void operator delete(void*, unsigned long, std::align_val_t)
#-----|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [VoidPointerType] void *
#-----|     getParameter(1): [Parameter] (unnamed parameter 1)
#-----|         Type = [LongType] unsigned long
#-----|     getParameter(2): [Parameter] (unnamed parameter 2)
#-----|         Type = [ScopedEnum] align_val_t
#-----| [Operator,TopLevelFunction] void operator delete[](void*, unsigned long)
#-----|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [VoidPointerType] void *
#-----|     getParameter(1): [Parameter] (unnamed parameter 1)
#-----|         Type = [LongType] unsigned long
#-----| [Operator,TopLevelFunction] void operator delete[](void*, unsigned long, std::align_val_t)
#-----|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [VoidPointerType] void *
#-----|     getParameter(1): [Parameter] (unnamed parameter 1)
#-----|         Type = [LongType] unsigned long
#-----|     getParameter(2): [Parameter] (unnamed parameter 2)
#-----|         Type = [ScopedEnum] align_val_t
#-----| [Operator,TopLevelFunction] void* operator new(unsigned long)
#-----|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LongType] unsigned long
#-----| [Operator,TopLevelFunction] void* operator new(unsigned long, std::align_val_t)
#-----|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LongType] unsigned long
#-----|     getParameter(1): [Parameter] (unnamed parameter 1)
#-----|         Type = [ScopedEnum] align_val_t
#-----| [Operator,TopLevelFunction] void* operator new[](unsigned long)
#-----|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LongType] unsigned long
#-----| [Operator,TopLevelFunction] void* operator new[](unsigned long, std::align_val_t)
#-----|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LongType] unsigned long
#-----|     getParameter(1): [Parameter] (unnamed parameter 1)
#-----|         Type = [ScopedEnum] align_val_t
bad_asts.cpp:
#    5| [CopyAssignmentOperator] Bad::S& Bad::S::operator=(Bad::S const&)
#    5|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const S &
#    5| [MoveAssignmentOperator] Bad::S& Bad::S::operator=(Bad::S&&)
#    5|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] S &&
#    9| [FunctionTemplateInstantiation,MemberFunction] int Bad::S::MemberFunction<int 6>(int)
#    9|   <params>: 
#    9|     getParameter(0): [Parameter] y
#    9|         Type = [IntType] int
#    9|   getEntryPoint(): [BlockStmt] { ... }
#   10|     getStmt(0): [ReturnStmt] return ...
#   10|       getExpr(): [AddExpr] ... + ...
#   10|           Type = [IntType] int
#   10|           ValueCategory = prvalue
#   10|         getLeftOperand(): [AddExpr] ... + ...
#   10|             Type = [IntType] int
#   10|             ValueCategory = prvalue
#   10|           getLeftOperand(): [Literal] 6
#   10|               Type = [IntType] int
#   10|               Value = [Literal] 6
#   10|               ValueCategory = prvalue
#   10|           getRightOperand(): [ImplicitThisFieldAccess,PointerFieldAccess] x
#   10|               Type = [IntType] int
#   10|               ValueCategory = prvalue(load)
#   10|             getQualifier(): [ThisExpr] this
#   10|                 Type = [PointerType] S *
#   10|                 ValueCategory = prvalue(load)
#   10|         getRightOperand(): [VariableAccess] y
#   10|             Type = [IntType] int
#   10|             ValueCategory = prvalue(load)
#    9| [MemberFunction,TemplateFunction] int Bad::S::MemberFunction<int t>(int)
#    9|   <params>: 
#    9|     getParameter(0): [Parameter] y
#    9|         Type = [IntType] int
#    9|   getEntryPoint(): [BlockStmt] { ... }
#   10|     getStmt(0): [ReturnStmt] return ...
#   10|       getExpr(): [AddExpr] ... + ...
#   10|           Type = [IntType] int
#   10|           ValueCategory = prvalue
#   10|         getLeftOperand(): [AddExpr] ... + ...
#   10|             Type = [IntType] int
#   10|             ValueCategory = prvalue
#   10|           getLeftOperand(): [Literal] t
#   10|               Type = [IntType] int
#   10|               Value = [Literal] t
#   10|               ValueCategory = prvalue
#   10|           getRightOperand(): [ImplicitThisFieldAccess,PointerFieldAccess] x
#   10|               Type = [IntType] int
#   10|               ValueCategory = prvalue(load)
#   10|             getQualifier(): [ThisExpr] this
#   10|                 Type = [PointerType] S *
#   10|                 ValueCategory = prvalue(load)
#   10|         getRightOperand(): [VariableAccess] y
#   10|             Type = [IntType] int
#   10|             ValueCategory = prvalue(load)
#   14| [TopLevelFunction] void Bad::CallBadMemberFunction()
#   14|   <params>: 
#   14|   getEntryPoint(): [BlockStmt] { ... }
#   15|     getStmt(0): [DeclStmt] declaration
#   15|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
#   15|           Type = [Struct] S
#   15|         getVariable().getInitializer(): [Initializer] initializer for s
#   15|           getExpr(): [ClassAggregateLiteral] {...}
#   15|               Type = [Struct] S
#   15|               ValueCategory = prvalue
#   16|     getStmt(1): [ExprStmt] ExprStmt
#   16|       getExpr(): [FunctionCall] call to MemberFunction
#   16|           Type = [IntType] int
#   16|           ValueCategory = prvalue
#   16|         getQualifier(): [VariableAccess] s
#   16|             Type = [Struct] S
#   16|             ValueCategory = lvalue
#   16|         getArgument(0): [Literal] 1
#   16|             Type = [IntType] int
#   16|             Value = [Literal] 1
#   16|             ValueCategory = prvalue
#   17|     getStmt(2): [ReturnStmt] return ...
#   19| [CopyAssignmentOperator] Bad::Point& Bad::Point::operator=(Bad::Point const&)
#   19|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Point &
#   19| [MoveAssignmentOperator] Bad::Point& Bad::Point::operator=(Bad::Point&&)
#   19|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] Point &&
#   19| [CopyConstructor] void Bad::Point::Point(Bad::Point const&)
#   19|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Point &
#   19|   <initializations>: 
#   19|     getInitializer(0): [ConstructorFieldInit] constructor init of field x
#   19|         Type = [IntType] int
#   19|         ValueCategory = prvalue
#   19|       getExpr(): [ReferenceFieldAccess] x
#   19|           Type = [IntType] int
#   19|           ValueCategory = prvalue(load)
#   19|         getQualifier(): [VariableAccess] (unnamed parameter 0)
#   19|             Type = [LValueReferenceType] const Point &
#   19|             ValueCategory = prvalue(load)
#   19|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#   19|             Type = [SpecifiedType] const Point
#   19|             ValueCategory = lvalue
#   19|     getInitializer(1): [ConstructorFieldInit] constructor init of field y
#   19|         Type = [IntType] int
#   19|         ValueCategory = prvalue
#   19|       getExpr(): [ReferenceFieldAccess] y
#   19|           Type = [IntType] int
#   19|           ValueCategory = prvalue(load)
#   19|         getQualifier(): [VariableAccess] (unnamed parameter 0)
#   19|             Type = [LValueReferenceType] const Point &
#   19|             ValueCategory = prvalue(load)
#   19|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#   19|             Type = [SpecifiedType] const Point
#   19|             ValueCategory = lvalue
#   19|   getEntryPoint(): [BlockStmt] { ... }
#   19|     getStmt(0): [ReturnStmt] return ...
#   19| [MoveConstructor] void Bad::Point::Point(Bad::Point&&)
#   19|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] Point &&
#   22| [Constructor] void Bad::Point::Point()
#   22|   <params>: 
#   22|   <initializations>: 
#   22|   getEntryPoint(): [BlockStmt] { ... }
#   23|     getStmt(0): [ReturnStmt] return ...
#   26| [TopLevelFunction] void Bad::CallCopyConstructor(Bad::Point const&)
#   26|   <params>: 
#   26|     getParameter(0): [Parameter] a
#   26|         Type = [LValueReferenceType] const Point &
#   26|   getEntryPoint(): [BlockStmt] { ... }
#   27|     getStmt(0): [DeclStmt] declaration
#   27|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
#   27|           Type = [Struct] Point
#   27|         getVariable().getInitializer(): [Initializer] initializer for b
#   27|           getExpr(): [VariableAccess] a
#   27|               Type = [LValueReferenceType] const Point &
#   27|               ValueCategory = prvalue(load)
#   27|           getExpr().getFullyConverted(): [CStyleCast] (Point)...
#   27|               Conversion = [GlvalueConversion] glvalue conversion
#   27|               Type = [Struct] Point
#   27|               ValueCategory = prvalue(load)
#   27|             getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#   27|                 Type = [SpecifiedType] const Point
#   27|                 ValueCategory = lvalue
#   28|     getStmt(1): [ReturnStmt] return ...
bad_stmts.cpp:
#    5| [TopLevelFunction] void Bad::errorExpr()
#    5|   <params>: 
#    5|   getEntryPoint(): [BlockStmt] { ... }
#    6|     getStmt(0): [DeclStmt] declaration
#    6|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of intref
#    6|           Type = [LValueReferenceType] int &
#    6|         getVariable().getInitializer(): [Initializer] initializer for intref
#    6|           getExpr(): [ErrorExpr] <error expr>
#    6|               Type = [ErroneousType] error
#    6|               ValueCategory = prvalue
#    7|     getStmt(1): [DeclStmt] declaration
#    7|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#    7|           Type = [IntType] int
#    7|         getVariable().getInitializer(): [Initializer] initializer for x
#    7|           getExpr(): [ErrorExpr] <error expr>
#    7|               Type = [ErroneousType] error
#    7|               ValueCategory = prvalue
#    8|     getStmt(2): [ExprStmt] ExprStmt
#    8|       getExpr(): [AssignExpr] ... = ...
#    8|           Type = [IntType] int
#    8|           ValueCategory = lvalue
#    8|         getLValue(): [VariableAccess] x
#    8|             Type = [IntType] int
#    8|             ValueCategory = lvalue
#    8|         getRValue(): [ErrorExpr] <error expr>
#    8|             Type = [ErroneousType] error
#    8|             ValueCategory = prvalue(load)
#    9|     getStmt(3): [ReturnStmt] return ...
clang.cpp:
#    5| [TopLevelFunction] int* globalIntAddress()
#    5|   <params>: 
#    5|   getEntryPoint(): [BlockStmt] { ... }
#    6|     getStmt(0): [ReturnStmt] return ...
#    6|       getExpr(): [BuiltInOperationBuiltInAddressOf] __builtin_addressof ...
#    6|           Type = [IntPointerType] int *
#    6|           ValueCategory = prvalue
#    6|         getOperand(): [VariableAccess] globalInt
#    6|             Type = [IntType] int
#    6|             ValueCategory = lvalue
complex.c:
#    1| [TopLevelFunction] void complex_literals()
#    1|   <params>: 
#    1|   getEntryPoint(): [BlockStmt] { ... }
#    2|     getStmt(0): [DeclStmt] declaration
#    2|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of cf
#    2|           Type = [ArithmeticType] _Complex float
#    2|         getVariable().getInitializer(): [Initializer] initializer for cf
#    2|           getExpr(): [Literal] 2.0
#    2|               Type = [DoubleType] double
#    2|               Value = [Literal] 2.0
#    2|               ValueCategory = prvalue
#    2|           getExpr().getFullyConverted(): [CStyleCast] (_Complex float)...
#    2|               Conversion = [FloatingPointConversion] floating point conversion
#    2|               Type = [ArithmeticType] _Complex float
#    2|               ValueCategory = prvalue
#    3|     getStmt(1): [ExprStmt] ExprStmt
#    3|       getExpr(): [AssignExpr] ... = ...
#    3|           Type = [ArithmeticType] _Complex float
#    3|           ValueCategory = prvalue
#    3|         getLValue(): [VariableAccess] cf
#    3|             Type = [ArithmeticType] _Complex float
#    3|             ValueCategory = lvalue
#    3|         getRValue(): [Literal] 1.0i
#    3|             Type = [ArithmeticType] _Imaginary float
#    3|             Value = [Literal] 1.0i
#    3|             ValueCategory = prvalue
#    3|         getRValue().getFullyConverted(): [CStyleCast] (_Complex float)...
#    3|             Conversion = [FloatingPointConversion] floating point conversion
#    3|             Type = [ArithmeticType] _Complex float
#    3|             ValueCategory = prvalue
#    4|     getStmt(2): [DeclStmt] declaration
#    4|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of cd
#    4|           Type = [ArithmeticType] _Complex double
#    4|         getVariable().getInitializer(): [Initializer] initializer for cd
#    4|           getExpr(): [Literal] 3.0
#    4|               Type = [DoubleType] double
#    4|               Value = [Literal] 3.0
#    4|               ValueCategory = prvalue
#    4|           getExpr().getFullyConverted(): [CStyleCast] (_Complex double)...
#    4|               Conversion = [FloatingPointConversion] floating point conversion
#    4|               Type = [ArithmeticType] _Complex double
#    4|               ValueCategory = prvalue
#    5|     getStmt(3): [ExprStmt] ExprStmt
#    5|       getExpr(): [AssignExpr] ... = ...
#    5|           Type = [ArithmeticType] _Complex double
#    5|           ValueCategory = prvalue
#    5|         getLValue(): [VariableAccess] cd
#    5|             Type = [ArithmeticType] _Complex double
#    5|             ValueCategory = lvalue
#    5|         getRValue(): [Literal] 1.0i
#    5|             Type = [ArithmeticType] _Imaginary float
#    5|             Value = [Literal] 1.0i
#    5|             ValueCategory = prvalue
#    5|         getRValue().getFullyConverted(): [CStyleCast] (_Complex double)...
#    5|             Conversion = [FloatingPointConversion] floating point conversion
#    5|             Type = [ArithmeticType] _Complex double
#    5|             ValueCategory = prvalue
#    6|     getStmt(4): [DeclStmt] declaration
#    6|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of cld
#    6|           Type = [ArithmeticType] _Complex long double
#    6|         getVariable().getInitializer(): [Initializer] initializer for cld
#    6|           getExpr(): [Literal] 5.0
#    6|               Type = [DoubleType] double
#    6|               Value = [Literal] 5.0
#    6|               ValueCategory = prvalue
#    6|           getExpr().getFullyConverted(): [CStyleCast] (_Complex long double)...
#    6|               Conversion = [FloatingPointConversion] floating point conversion
#    6|               Type = [ArithmeticType] _Complex long double
#    6|               ValueCategory = prvalue
#    7|     getStmt(5): [ExprStmt] ExprStmt
#    7|       getExpr(): [AssignExpr] ... = ...
#    7|           Type = [ArithmeticType] _Complex long double
#    7|           ValueCategory = prvalue
#    7|         getLValue(): [VariableAccess] cld
#    7|             Type = [ArithmeticType] _Complex long double
#    7|             ValueCategory = lvalue
#    7|         getRValue(): [Literal] 1.0i
#    7|             Type = [ArithmeticType] _Imaginary float
#    7|             Value = [Literal] 1.0i
#    7|             ValueCategory = prvalue
#    7|         getRValue().getFullyConverted(): [CStyleCast] (_Complex long double)...
#    7|             Conversion = [FloatingPointConversion] floating point conversion
#    7|             Type = [ArithmeticType] _Complex long double
#    7|             ValueCategory = prvalue
#    9|     getStmt(6): [DeclStmt] declaration
#    9|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of jf
#    9|           Type = [ArithmeticType] _Imaginary float
#    9|         getVariable().getInitializer(): [Initializer] initializer for jf
#    9|           getExpr(): [Literal] 1.0i
#    9|               Type = [ArithmeticType] _Imaginary float
#    9|               Value = [Literal] 1.0i
#    9|               ValueCategory = prvalue
#   10|     getStmt(7): [DeclStmt] declaration
#   10|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of jd
#   10|           Type = [ArithmeticType] _Imaginary double
#   10|         getVariable().getInitializer(): [Initializer] initializer for jd
#   10|           getExpr(): [Literal] 1.0i
#   10|               Type = [ArithmeticType] _Imaginary float
#   10|               Value = [Literal] 1.0i
#   10|               ValueCategory = prvalue
#   10|           getExpr().getFullyConverted(): [CStyleCast] (_Imaginary double)...
#   10|               Conversion = [FloatingPointConversion] floating point conversion
#   10|               Type = [ArithmeticType] _Imaginary double
#   10|               ValueCategory = prvalue
#   11|     getStmt(8): [DeclStmt] declaration
#   11|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of jld
#   11|           Type = [ArithmeticType] _Imaginary long double
#   11|         getVariable().getInitializer(): [Initializer] initializer for jld
#   11|           getExpr(): [Literal] 1.0i
#   11|               Type = [ArithmeticType] _Imaginary float
#   11|               Value = [Literal] 1.0i
#   11|               ValueCategory = prvalue
#   11|           getExpr().getFullyConverted(): [CStyleCast] (_Imaginary long double)...
#   11|               Conversion = [FloatingPointConversion] floating point conversion
#   11|               Type = [ArithmeticType] _Imaginary long double
#   11|               ValueCategory = prvalue
#   12|     getStmt(9): [ReturnStmt] return ...
#   14| [TopLevelFunction] void complex_arithmetic()
#   14|   <params>: 
#   14|   getEntryPoint(): [BlockStmt] { ... }
#   15|     getStmt(0): [DeclStmt] declaration
#   15|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of f1
#   15|           Type = [FloatType] float
#   15|         getVariable().getInitializer(): [Initializer] initializer for f1
#   15|           getExpr(): [Literal] 5.0
#   15|               Type = [DoubleType] double
#   15|               Value = [Literal] 5.0
#   15|               ValueCategory = prvalue
#   15|           getExpr().getFullyConverted(): [CStyleCast] (float)...
#   15|               Conversion = [FloatingPointConversion] floating point conversion
#   15|               Type = [FloatType] float
#   15|               Value = [CStyleCast] 5.0
#   15|               ValueCategory = prvalue
#   16|     getStmt(1): [DeclStmt] declaration
#   16|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of f2
#   16|           Type = [FloatType] float
#   16|         getVariable().getInitializer(): [Initializer] initializer for f2
#   16|           getExpr(): [Literal] 7.0
#   16|               Type = [DoubleType] double
#   16|               Value = [Literal] 7.0
#   16|               ValueCategory = prvalue
#   16|           getExpr().getFullyConverted(): [CStyleCast] (float)...
#   16|               Conversion = [FloatingPointConversion] floating point conversion
#   16|               Type = [FloatType] float
#   16|               Value = [CStyleCast] 7.0
#   16|               ValueCategory = prvalue
#   17|     getStmt(2): [DeclStmt] declaration
#   17|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of f3
#   17|           Type = [FloatType] float
#   18|     getStmt(3): [DeclStmt] declaration
#   18|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of cf1
#   18|           Type = [ArithmeticType] _Complex float
#   18|         getVariable().getInitializer(): [Initializer] initializer for cf1
#   18|           getExpr(): [Literal] 2.0
#   18|               Type = [DoubleType] double
#   18|               Value = [Literal] 2.0
#   18|               ValueCategory = prvalue
#   18|           getExpr().getFullyConverted(): [CStyleCast] (_Complex float)...
#   18|               Conversion = [FloatingPointConversion] floating point conversion
#   18|               Type = [ArithmeticType] _Complex float
#   18|               ValueCategory = prvalue
#   19|     getStmt(4): [DeclStmt] declaration
#   19|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of cf2
#   19|           Type = [ArithmeticType] _Complex float
#   19|         getVariable().getInitializer(): [Initializer] initializer for cf2
#   19|           getExpr(): [Literal] 1.0i
#   19|               Type = [ArithmeticType] _Imaginary float
#   19|               Value = [Literal] 1.0i
#   19|               ValueCategory = prvalue
#   19|           getExpr().getFullyConverted(): [CStyleCast] (_Complex float)...
#   19|               Conversion = [FloatingPointConversion] floating point conversion
#   19|               Type = [ArithmeticType] _Complex float
#   19|               ValueCategory = prvalue
#   20|     getStmt(5): [DeclStmt] declaration
#   20|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of cf3
#   20|           Type = [ArithmeticType] _Complex float
#   21|     getStmt(6): [DeclStmt] declaration
#   21|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of jf1
#   21|           Type = [ArithmeticType] _Imaginary float
#   21|         getVariable().getInitializer(): [Initializer] initializer for jf1
#   21|           getExpr(): [Literal] 1.0i
#   21|               Type = [ArithmeticType] _Imaginary float
#   21|               Value = [Literal] 1.0i
#   21|               ValueCategory = prvalue
#   22|     getStmt(7): [DeclStmt] declaration
#   22|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of jf2
#   22|           Type = [ArithmeticType] _Imaginary float
#   22|         getVariable().getInitializer(): [Initializer] initializer for jf2
#   22|           getExpr(): [Literal] 1.0i
#   22|               Type = [ArithmeticType] _Imaginary float
#   22|               Value = [Literal] 1.0i
#   22|               ValueCategory = prvalue
#   23|     getStmt(8): [DeclStmt] declaration
#   23|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of jf3
#   23|           Type = [ArithmeticType] _Imaginary float
#   26|     getStmt(9): [ExprStmt] ExprStmt
#   26|       getExpr(): [AssignExpr] ... = ...
#   26|           Type = [ArithmeticType] _Complex float
#   26|           ValueCategory = prvalue
#   26|         getLValue(): [VariableAccess] cf3
#   26|             Type = [ArithmeticType] _Complex float
#   26|             ValueCategory = lvalue
#   26|         getRValue(): [UnaryPlusExpr] + ...
#   26|             Type = [ArithmeticType] _Complex float
#   26|             ValueCategory = prvalue
#   26|           getOperand(): [VariableAccess] cf1
#   26|               Type = [ArithmeticType] _Complex float
#   26|               ValueCategory = prvalue(load)
#   27|     getStmt(10): [ExprStmt] ExprStmt
#   27|       getExpr(): [AssignExpr] ... = ...
#   27|           Type = [ArithmeticType] _Complex float
#   27|           ValueCategory = prvalue
#   27|         getLValue(): [VariableAccess] cf3
#   27|             Type = [ArithmeticType] _Complex float
#   27|             ValueCategory = lvalue
#   27|         getRValue(): [UnaryMinusExpr] - ...
#   27|             Type = [ArithmeticType] _Complex float
#   27|             ValueCategory = prvalue
#   27|           getOperand(): [VariableAccess] cf1
#   27|               Type = [ArithmeticType] _Complex float
#   27|               ValueCategory = prvalue(load)
#   30|     getStmt(11): [ExprStmt] ExprStmt
#   30|       getExpr(): [AssignExpr] ... = ...
#   30|           Type = [ArithmeticType] _Complex float
#   30|           ValueCategory = prvalue
#   30|         getLValue(): [VariableAccess] cf3
#   30|             Type = [ArithmeticType] _Complex float
#   30|             ValueCategory = lvalue
#   30|         getRValue(): [AddExpr] ... + ...
#   30|             Type = [ArithmeticType] _Complex float
#   30|             ValueCategory = prvalue
#   30|           getLeftOperand(): [VariableAccess] cf1
#   30|               Type = [ArithmeticType] _Complex float
#   30|               ValueCategory = prvalue(load)
#   30|           getRightOperand(): [VariableAccess] cf2
#   30|               Type = [ArithmeticType] _Complex float
#   30|               ValueCategory = prvalue(load)
#   31|     getStmt(12): [ExprStmt] ExprStmt
#   31|       getExpr(): [AssignExpr] ... = ...
#   31|           Type = [ArithmeticType] _Complex float
#   31|           ValueCategory = prvalue
#   31|         getLValue(): [VariableAccess] cf3
#   31|             Type = [ArithmeticType] _Complex float
#   31|             ValueCategory = lvalue
#   31|         getRValue(): [SubExpr] ... - ...
#   31|             Type = [ArithmeticType] _Complex float
#   31|             ValueCategory = prvalue
#   31|           getLeftOperand(): [VariableAccess] cf1
#   31|               Type = [ArithmeticType] _Complex float
#   31|               ValueCategory = prvalue(load)
#   31|           getRightOperand(): [VariableAccess] cf2
#   31|               Type = [ArithmeticType] _Complex float
#   31|               ValueCategory = prvalue(load)
#   32|     getStmt(13): [ExprStmt] ExprStmt
#   32|       getExpr(): [AssignExpr] ... = ...
#   32|           Type = [ArithmeticType] _Complex float
#   32|           ValueCategory = prvalue
#   32|         getLValue(): [VariableAccess] cf3
#   32|             Type = [ArithmeticType] _Complex float
#   32|             ValueCategory = lvalue
#   32|         getRValue(): [MulExpr] ... * ...
#   32|             Type = [ArithmeticType] _Complex float
#   32|             ValueCategory = prvalue
#   32|           getLeftOperand(): [VariableAccess] cf1
#   32|               Type = [ArithmeticType] _Complex float
#   32|               ValueCategory = prvalue(load)
#   32|           getRightOperand(): [VariableAccess] cf2
#   32|               Type = [ArithmeticType] _Complex float
#   32|               ValueCategory = prvalue(load)
#   33|     getStmt(14): [ExprStmt] ExprStmt
#   33|       getExpr(): [AssignExpr] ... = ...
#   33|           Type = [ArithmeticType] _Complex float
#   33|           ValueCategory = prvalue
#   33|         getLValue(): [VariableAccess] cf3
#   33|             Type = [ArithmeticType] _Complex float
#   33|             ValueCategory = lvalue
#   33|         getRValue(): [DivExpr] ... / ...
#   33|             Type = [ArithmeticType] _Complex float
#   33|             ValueCategory = prvalue
#   33|           getLeftOperand(): [VariableAccess] cf1
#   33|               Type = [ArithmeticType] _Complex float
#   33|               ValueCategory = prvalue(load)
#   33|           getRightOperand(): [VariableAccess] cf2
#   33|               Type = [ArithmeticType] _Complex float
#   33|               ValueCategory = prvalue(load)
#   36|     getStmt(15): [ExprStmt] ExprStmt
#   36|       getExpr(): [AssignExpr] ... = ...
#   36|           Type = [ArithmeticType] _Imaginary float
#   36|           ValueCategory = prvalue
#   36|         getLValue(): [VariableAccess] jf3
#   36|             Type = [ArithmeticType] _Imaginary float
#   36|             ValueCategory = lvalue
#   36|         getRValue(): [UnaryPlusExpr] + ...
#   36|             Type = [ArithmeticType] _Imaginary float
#   36|             ValueCategory = prvalue
#   36|           getOperand(): [VariableAccess] jf1
#   36|               Type = [ArithmeticType] _Imaginary float
#   36|               ValueCategory = prvalue(load)
#   37|     getStmt(16): [ExprStmt] ExprStmt
#   37|       getExpr(): [AssignExpr] ... = ...
#   37|           Type = [ArithmeticType] _Imaginary float
#   37|           ValueCategory = prvalue
#   37|         getLValue(): [VariableAccess] jf3
#   37|             Type = [ArithmeticType] _Imaginary float
#   37|             ValueCategory = lvalue
#   37|         getRValue(): [UnaryMinusExpr] - ...
#   37|             Type = [ArithmeticType] _Imaginary float
#   37|             ValueCategory = prvalue
#   37|           getOperand(): [VariableAccess] jf1
#   37|               Type = [ArithmeticType] _Imaginary float
#   37|               ValueCategory = prvalue(load)
#   40|     getStmt(17): [ExprStmt] ExprStmt
#   40|       getExpr(): [AssignExpr] ... = ...
#   40|           Type = [ArithmeticType] _Imaginary float
#   40|           ValueCategory = prvalue
#   40|         getLValue(): [VariableAccess] jf3
#   40|             Type = [ArithmeticType] _Imaginary float
#   40|             ValueCategory = lvalue
#   40|         getRValue(): [AddExpr] ... + ...
#   40|             Type = [ArithmeticType] _Imaginary float
#   40|             ValueCategory = prvalue
#   40|           getLeftOperand(): [VariableAccess] jf1
#   40|               Type = [ArithmeticType] _Imaginary float
#   40|               ValueCategory = prvalue(load)
#   40|           getRightOperand(): [VariableAccess] jf2
#   40|               Type = [ArithmeticType] _Imaginary float
#   40|               ValueCategory = prvalue(load)
#   41|     getStmt(18): [ExprStmt] ExprStmt
#   41|       getExpr(): [AssignExpr] ... = ...
#   41|           Type = [ArithmeticType] _Imaginary float
#   41|           ValueCategory = prvalue
#   41|         getLValue(): [VariableAccess] jf3
#   41|             Type = [ArithmeticType] _Imaginary float
#   41|             ValueCategory = lvalue
#   41|         getRValue(): [SubExpr] ... - ...
#   41|             Type = [ArithmeticType] _Imaginary float
#   41|             ValueCategory = prvalue
#   41|           getLeftOperand(): [VariableAccess] jf1
#   41|               Type = [ArithmeticType] _Imaginary float
#   41|               ValueCategory = prvalue(load)
#   41|           getRightOperand(): [VariableAccess] jf2
#   41|               Type = [ArithmeticType] _Imaginary float
#   41|               ValueCategory = prvalue(load)
#   42|     getStmt(19): [ExprStmt] ExprStmt
#   42|       getExpr(): [AssignExpr] ... = ...
#   42|           Type = [FloatType] float
#   42|           ValueCategory = prvalue
#   42|         getLValue(): [VariableAccess] f3
#   42|             Type = [FloatType] float
#   42|             ValueCategory = lvalue
#   42|         getRValue(): [ImaginaryMulExpr] ... * ...
#   42|             Type = [FloatType] float
#   42|             ValueCategory = prvalue
#   42|           getLeftOperand(): [VariableAccess] jf1
#   42|               Type = [ArithmeticType] _Imaginary float
#   42|               ValueCategory = prvalue(load)
#   42|           getRightOperand(): [VariableAccess] jf2
#   42|               Type = [ArithmeticType] _Imaginary float
#   42|               ValueCategory = prvalue(load)
#   43|     getStmt(20): [ExprStmt] ExprStmt
#   43|       getExpr(): [AssignExpr] ... = ...
#   43|           Type = [FloatType] float
#   43|           ValueCategory = prvalue
#   43|         getLValue(): [VariableAccess] f3
#   43|             Type = [FloatType] float
#   43|             ValueCategory = lvalue
#   43|         getRValue(): [DivExpr] ... / ...
#   43|             Type = [FloatType] float
#   43|             ValueCategory = prvalue
#   43|           getLeftOperand(): [VariableAccess] jf1
#   43|               Type = [ArithmeticType] _Imaginary float
#   43|               ValueCategory = prvalue(load)
#   43|           getRightOperand(): [VariableAccess] jf2
#   43|               Type = [ArithmeticType] _Imaginary float
#   43|               ValueCategory = prvalue(load)
#   46|     getStmt(21): [ExprStmt] ExprStmt
#   46|       getExpr(): [AssignExpr] ... = ...
#   46|           Type = [ArithmeticType] _Complex float
#   46|           ValueCategory = prvalue
#   46|         getLValue(): [VariableAccess] cf3
#   46|             Type = [ArithmeticType] _Complex float
#   46|             ValueCategory = lvalue
#   46|         getRValue(): [ImaginaryRealAddExpr] ... + ...
#   46|             Type = [ArithmeticType] _Complex float
#   46|             ValueCategory = prvalue
#   46|           getLeftOperand(): [VariableAccess] jf1
#   46|               Type = [ArithmeticType] _Imaginary float
#   46|               ValueCategory = prvalue(load)
#   46|           getRightOperand(): [VariableAccess] f2
#   46|               Type = [FloatType] float
#   46|               ValueCategory = prvalue(load)
#   47|     getStmt(22): [ExprStmt] ExprStmt
#   47|       getExpr(): [AssignExpr] ... = ...
#   47|           Type = [ArithmeticType] _Complex float
#   47|           ValueCategory = prvalue
#   47|         getLValue(): [VariableAccess] cf3
#   47|             Type = [ArithmeticType] _Complex float
#   47|             ValueCategory = lvalue
#   47|         getRValue(): [ImaginaryRealSubExpr] ... - ...
#   47|             Type = [ArithmeticType] _Complex float
#   47|             ValueCategory = prvalue
#   47|           getLeftOperand(): [VariableAccess] jf1
#   47|               Type = [ArithmeticType] _Imaginary float
#   47|               ValueCategory = prvalue(load)
#   47|           getRightOperand(): [VariableAccess] f2
#   47|               Type = [FloatType] float
#   47|               ValueCategory = prvalue(load)
#   48|     getStmt(23): [ExprStmt] ExprStmt
#   48|       getExpr(): [AssignExpr] ... = ...
#   48|           Type = [ArithmeticType] _Imaginary float
#   48|           ValueCategory = prvalue
#   48|         getLValue(): [VariableAccess] jf3
#   48|             Type = [ArithmeticType] _Imaginary float
#   48|             ValueCategory = lvalue
#   48|         getRValue(): [MulExpr] ... * ...
#   48|             Type = [ArithmeticType] _Imaginary float
#   48|             ValueCategory = prvalue
#   48|           getLeftOperand(): [VariableAccess] jf1
#   48|               Type = [ArithmeticType] _Imaginary float
#   48|               ValueCategory = prvalue(load)
#   48|           getRightOperand(): [VariableAccess] f2
#   48|               Type = [FloatType] float
#   48|               ValueCategory = prvalue(load)
#   49|     getStmt(24): [ExprStmt] ExprStmt
#   49|       getExpr(): [AssignExpr] ... = ...
#   49|           Type = [ArithmeticType] _Imaginary float
#   49|           ValueCategory = prvalue
#   49|         getLValue(): [VariableAccess] jf3
#   49|             Type = [ArithmeticType] _Imaginary float
#   49|             ValueCategory = lvalue
#   49|         getRValue(): [DivExpr] ... / ...
#   49|             Type = [ArithmeticType] _Imaginary float
#   49|             ValueCategory = prvalue
#   49|           getLeftOperand(): [VariableAccess] jf1
#   49|               Type = [ArithmeticType] _Imaginary float
#   49|               ValueCategory = prvalue(load)
#   49|           getRightOperand(): [VariableAccess] f2
#   49|               Type = [FloatType] float
#   49|               ValueCategory = prvalue(load)
#   52|     getStmt(25): [ExprStmt] ExprStmt
#   52|       getExpr(): [AssignExpr] ... = ...
#   52|           Type = [ArithmeticType] _Complex float
#   52|           ValueCategory = prvalue
#   52|         getLValue(): [VariableAccess] cf3
#   52|             Type = [ArithmeticType] _Complex float
#   52|             ValueCategory = lvalue
#   52|         getRValue(): [RealImaginaryAddExpr] ... + ...
#   52|             Type = [ArithmeticType] _Complex float
#   52|             ValueCategory = prvalue
#   52|           getLeftOperand(): [VariableAccess] f1
#   52|               Type = [FloatType] float
#   52|               ValueCategory = prvalue(load)
#   52|           getRightOperand(): [VariableAccess] jf2
#   52|               Type = [ArithmeticType] _Imaginary float
#   52|               ValueCategory = prvalue(load)
#   53|     getStmt(26): [ExprStmt] ExprStmt
#   53|       getExpr(): [AssignExpr] ... = ...
#   53|           Type = [ArithmeticType] _Complex float
#   53|           ValueCategory = prvalue
#   53|         getLValue(): [VariableAccess] cf3
#   53|             Type = [ArithmeticType] _Complex float
#   53|             ValueCategory = lvalue
#   53|         getRValue(): [RealImaginarySubExpr] ... - ...
#   53|             Type = [ArithmeticType] _Complex float
#   53|             ValueCategory = prvalue
#   53|           getLeftOperand(): [VariableAccess] f1
#   53|               Type = [FloatType] float
#   53|               ValueCategory = prvalue(load)
#   53|           getRightOperand(): [VariableAccess] jf2
#   53|               Type = [ArithmeticType] _Imaginary float
#   53|               ValueCategory = prvalue(load)
#   54|     getStmt(27): [ExprStmt] ExprStmt
#   54|       getExpr(): [AssignExpr] ... = ...
#   54|           Type = [ArithmeticType] _Imaginary float
#   54|           ValueCategory = prvalue
#   54|         getLValue(): [VariableAccess] jf3
#   54|             Type = [ArithmeticType] _Imaginary float
#   54|             ValueCategory = lvalue
#   54|         getRValue(): [MulExpr] ... * ...
#   54|             Type = [ArithmeticType] _Imaginary float
#   54|             ValueCategory = prvalue
#   54|           getLeftOperand(): [VariableAccess] f1
#   54|               Type = [FloatType] float
#   54|               ValueCategory = prvalue(load)
#   54|           getRightOperand(): [VariableAccess] jf2
#   54|               Type = [ArithmeticType] _Imaginary float
#   54|               ValueCategory = prvalue(load)
#   55|     getStmt(28): [ExprStmt] ExprStmt
#   55|       getExpr(): [AssignExpr] ... = ...
#   55|           Type = [ArithmeticType] _Imaginary float
#   55|           ValueCategory = prvalue
#   55|         getLValue(): [VariableAccess] jf3
#   55|             Type = [ArithmeticType] _Imaginary float
#   55|             ValueCategory = lvalue
#   55|         getRValue(): [ImaginaryDivExpr] ... / ...
#   55|             Type = [ArithmeticType] _Imaginary float
#   55|             ValueCategory = prvalue
#   55|           getLeftOperand(): [VariableAccess] f1
#   55|               Type = [FloatType] float
#   55|               ValueCategory = prvalue(load)
#   55|           getRightOperand(): [VariableAccess] jf2
#   55|               Type = [ArithmeticType] _Imaginary float
#   55|               ValueCategory = prvalue(load)
#   56|     getStmt(29): [ReturnStmt] return ...
#   58| [TopLevelFunction] void complex_conversions()
#   58|   <params>: 
#   58|   getEntryPoint(): [BlockStmt] { ... }
#   59|     getStmt(0): [DeclStmt] declaration
#   59|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of f
#   59|           Type = [FloatType] float
#   59|         getVariable().getInitializer(): [Initializer] initializer for f
#   59|           getExpr(): [Literal] 2.0
#   59|               Type = [DoubleType] double
#   59|               Value = [Literal] 2.0
#   59|               ValueCategory = prvalue
#   59|           getExpr().getFullyConverted(): [CStyleCast] (float)...
#   59|               Conversion = [FloatingPointConversion] floating point conversion
#   59|               Type = [FloatType] float
#   59|               Value = [CStyleCast] 2.0
#   59|               ValueCategory = prvalue
#   60|     getStmt(1): [DeclStmt] declaration
#   60|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
#   60|           Type = [DoubleType] double
#   60|         getVariable().getInitializer(): [Initializer] initializer for d
#   60|           getExpr(): [Literal] 3.0
#   60|               Type = [DoubleType] double
#   60|               Value = [Literal] 3.0
#   60|               ValueCategory = prvalue
#   61|     getStmt(2): [DeclStmt] declaration
#   61|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of ld
#   61|           Type = [LongDoubleType] long double
#   61|         getVariable().getInitializer(): [Initializer] initializer for ld
#   61|           getExpr(): [Literal] 5.0
#   61|               Type = [DoubleType] double
#   61|               Value = [Literal] 5.0
#   61|               ValueCategory = prvalue
#   61|           getExpr().getFullyConverted(): [CStyleCast] (long double)...
#   61|               Conversion = [FloatingPointConversion] floating point conversion
#   61|               Type = [LongDoubleType] long double
#   61|               Value = [CStyleCast] 5.0
#   61|               ValueCategory = prvalue
#   62|     getStmt(3): [DeclStmt] declaration
#   62|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of cf
#   62|           Type = [ArithmeticType] _Complex float
#   62|         getVariable().getInitializer(): [Initializer] initializer for cf
#   62|           getExpr(): [Literal] 7.0
#   62|               Type = [DoubleType] double
#   62|               Value = [Literal] 7.0
#   62|               ValueCategory = prvalue
#   62|           getExpr().getFullyConverted(): [CStyleCast] (_Complex float)...
#   62|               Conversion = [FloatingPointConversion] floating point conversion
#   62|               Type = [ArithmeticType] _Complex float
#   62|               ValueCategory = prvalue
#   63|     getStmt(4): [DeclStmt] declaration
#   63|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of cd
#   63|           Type = [ArithmeticType] _Complex double
#   63|         getVariable().getInitializer(): [Initializer] initializer for cd
#   63|           getExpr(): [Literal] 11.0
#   63|               Type = [DoubleType] double
#   63|               Value = [Literal] 11.0
#   63|               ValueCategory = prvalue
#   63|           getExpr().getFullyConverted(): [CStyleCast] (_Complex double)...
#   63|               Conversion = [FloatingPointConversion] floating point conversion
#   63|               Type = [ArithmeticType] _Complex double
#   63|               ValueCategory = prvalue
#   64|     getStmt(5): [DeclStmt] declaration
#   64|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of cld
#   64|           Type = [ArithmeticType] _Complex long double
#   64|         getVariable().getInitializer(): [Initializer] initializer for cld
#   64|           getExpr(): [Literal] 13.0
#   64|               Type = [DoubleType] double
#   64|               Value = [Literal] 13.0
#   64|               ValueCategory = prvalue
#   64|           getExpr().getFullyConverted(): [CStyleCast] (_Complex long double)...
#   64|               Conversion = [FloatingPointConversion] floating point conversion
#   64|               Type = [ArithmeticType] _Complex long double
#   64|               ValueCategory = prvalue
#   65|     getStmt(6): [DeclStmt] declaration
#   65|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of jf
#   65|           Type = [ArithmeticType] _Imaginary float
#   65|         getVariable().getInitializer(): [Initializer] initializer for jf
#   65|           getExpr(): [Literal] 1.0i
#   65|               Type = [ArithmeticType] _Imaginary float
#   65|               Value = [Literal] 1.0i
#   65|               ValueCategory = prvalue
#   66|     getStmt(7): [DeclStmt] declaration
#   66|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of jd
#   66|           Type = [ArithmeticType] _Imaginary double
#   66|         getVariable().getInitializer(): [Initializer] initializer for jd
#   66|           getExpr(): [Literal] 1.0i
#   66|               Type = [ArithmeticType] _Imaginary float
#   66|               Value = [Literal] 1.0i
#   66|               ValueCategory = prvalue
#   66|           getExpr().getFullyConverted(): [CStyleCast] (_Imaginary double)...
#   66|               Conversion = [FloatingPointConversion] floating point conversion
#   66|               Type = [ArithmeticType] _Imaginary double
#   66|               ValueCategory = prvalue
#   67|     getStmt(8): [DeclStmt] declaration
#   67|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of jld
#   67|           Type = [ArithmeticType] _Imaginary long double
#   67|         getVariable().getInitializer(): [Initializer] initializer for jld
#   67|           getExpr(): [Literal] 1.0i
#   67|               Type = [ArithmeticType] _Imaginary float
#   67|               Value = [Literal] 1.0i
#   67|               ValueCategory = prvalue
#   67|           getExpr().getFullyConverted(): [CStyleCast] (_Imaginary long double)...
#   67|               Conversion = [FloatingPointConversion] floating point conversion
#   67|               Type = [ArithmeticType] _Imaginary long double
#   67|               ValueCategory = prvalue
#   70|     getStmt(9): [ExprStmt] ExprStmt
#   70|       getExpr(): [AssignExpr] ... = ...
#   70|           Type = [ArithmeticType] _Complex float
#   70|           ValueCategory = prvalue
#   70|         getLValue(): [VariableAccess] cf
#   70|             Type = [ArithmeticType] _Complex float
#   70|             ValueCategory = lvalue
#   70|         getRValue(): [VariableAccess] cf
#   70|             Type = [ArithmeticType] _Complex float
#   70|             ValueCategory = prvalue(load)
#   71|     getStmt(10): [ExprStmt] ExprStmt
#   71|       getExpr(): [AssignExpr] ... = ...
#   71|           Type = [ArithmeticType] _Complex float
#   71|           ValueCategory = prvalue
#   71|         getLValue(): [VariableAccess] cf
#   71|             Type = [ArithmeticType] _Complex float
#   71|             ValueCategory = lvalue
#   71|         getRValue(): [VariableAccess] cd
#   71|             Type = [ArithmeticType] _Complex double
#   71|             ValueCategory = prvalue(load)
#   71|         getRValue().getFullyConverted(): [CStyleCast] (_Complex float)...
#   71|             Conversion = [FloatingPointConversion] floating point conversion
#   71|             Type = [ArithmeticType] _Complex float
#   71|             ValueCategory = prvalue
#   72|     getStmt(11): [ExprStmt] ExprStmt
#   72|       getExpr(): [AssignExpr] ... = ...
#   72|           Type = [ArithmeticType] _Complex float
#   72|           ValueCategory = prvalue
#   72|         getLValue(): [VariableAccess] cf
#   72|             Type = [ArithmeticType] _Complex float
#   72|             ValueCategory = lvalue
#   72|         getRValue(): [VariableAccess] cld
#   72|             Type = [ArithmeticType] _Complex long double
#   72|             ValueCategory = prvalue(load)
#   72|         getRValue().getFullyConverted(): [CStyleCast] (_Complex float)...
#   72|             Conversion = [FloatingPointConversion] floating point conversion
#   72|             Type = [ArithmeticType] _Complex float
#   72|             ValueCategory = prvalue
#   73|     getStmt(12): [ExprStmt] ExprStmt
#   73|       getExpr(): [AssignExpr] ... = ...
#   73|           Type = [ArithmeticType] _Complex double
#   73|           ValueCategory = prvalue
#   73|         getLValue(): [VariableAccess] cd
#   73|             Type = [ArithmeticType] _Complex double
#   73|             ValueCategory = lvalue
#   73|         getRValue(): [VariableAccess] cf
#   73|             Type = [ArithmeticType] _Complex float
#   73|             ValueCategory = prvalue(load)
#   73|         getRValue().getFullyConverted(): [CStyleCast] (_Complex double)...
#   73|             Conversion = [FloatingPointConversion] floating point conversion
#   73|             Type = [ArithmeticType] _Complex double
#   73|             ValueCategory = prvalue
#   74|     getStmt(13): [ExprStmt] ExprStmt
#   74|       getExpr(): [AssignExpr] ... = ...
#   74|           Type = [ArithmeticType] _Complex double
#   74|           ValueCategory = prvalue
#   74|         getLValue(): [VariableAccess] cd
#   74|             Type = [ArithmeticType] _Complex double
#   74|             ValueCategory = lvalue
#   74|         getRValue(): [VariableAccess] cd
#   74|             Type = [ArithmeticType] _Complex double
#   74|             ValueCategory = prvalue(load)
#   75|     getStmt(14): [ExprStmt] ExprStmt
#   75|       getExpr(): [AssignExpr] ... = ...
#   75|           Type = [ArithmeticType] _Complex double
#   75|           ValueCategory = prvalue
#   75|         getLValue(): [VariableAccess] cd
#   75|             Type = [ArithmeticType] _Complex double
#   75|             ValueCategory = lvalue
#   75|         getRValue(): [VariableAccess] cld
#   75|             Type = [ArithmeticType] _Complex long double
#   75|             ValueCategory = prvalue(load)
#   75|         getRValue().getFullyConverted(): [CStyleCast] (_Complex double)...
#   75|             Conversion = [FloatingPointConversion] floating point conversion
#   75|             Type = [ArithmeticType] _Complex double
#   75|             ValueCategory = prvalue
#   76|     getStmt(15): [ExprStmt] ExprStmt
#   76|       getExpr(): [AssignExpr] ... = ...
#   76|           Type = [ArithmeticType] _Complex long double
#   76|           ValueCategory = prvalue
#   76|         getLValue(): [VariableAccess] cld
#   76|             Type = [ArithmeticType] _Complex long double
#   76|             ValueCategory = lvalue
#   76|         getRValue(): [VariableAccess] cf
#   76|             Type = [ArithmeticType] _Complex float
#   76|             ValueCategory = prvalue(load)
#   76|         getRValue().getFullyConverted(): [CStyleCast] (_Complex long double)...
#   76|             Conversion = [FloatingPointConversion] floating point conversion
#   76|             Type = [ArithmeticType] _Complex long double
#   76|             ValueCategory = prvalue
#   77|     getStmt(16): [ExprStmt] ExprStmt
#   77|       getExpr(): [AssignExpr] ... = ...
#   77|           Type = [ArithmeticType] _Complex long double
#   77|           ValueCategory = prvalue
#   77|         getLValue(): [VariableAccess] cld
#   77|             Type = [ArithmeticType] _Complex long double
#   77|             ValueCategory = lvalue
#   77|         getRValue(): [VariableAccess] cd
#   77|             Type = [ArithmeticType] _Complex double
#   77|             ValueCategory = prvalue(load)
#   77|         getRValue().getFullyConverted(): [CStyleCast] (_Complex long double)...
#   77|             Conversion = [FloatingPointConversion] floating point conversion
#   77|             Type = [ArithmeticType] _Complex long double
#   77|             ValueCategory = prvalue
#   78|     getStmt(17): [ExprStmt] ExprStmt
#   78|       getExpr(): [AssignExpr] ... = ...
#   78|           Type = [ArithmeticType] _Complex long double
#   78|           ValueCategory = prvalue
#   78|         getLValue(): [VariableAccess] cld
#   78|             Type = [ArithmeticType] _Complex long double
#   78|             ValueCategory = lvalue
#   78|         getRValue(): [VariableAccess] cld
#   78|             Type = [ArithmeticType] _Complex long double
#   78|             ValueCategory = prvalue(load)
#   81|     getStmt(18): [ExprStmt] ExprStmt
#   81|       getExpr(): [AssignExpr] ... = ...
#   81|           Type = [ArithmeticType] _Complex float
#   81|           ValueCategory = prvalue
#   81|         getLValue(): [VariableAccess] cf
#   81|             Type = [ArithmeticType] _Complex float
#   81|             ValueCategory = lvalue
#   81|         getRValue(): [VariableAccess] f
#   81|             Type = [FloatType] float
#   81|             ValueCategory = prvalue(load)
#   81|         getRValue().getFullyConverted(): [CStyleCast] (_Complex float)...
#   81|             Conversion = [FloatingPointConversion] floating point conversion
#   81|             Type = [ArithmeticType] _Complex float
#   81|             ValueCategory = prvalue
#   82|     getStmt(19): [ExprStmt] ExprStmt
#   82|       getExpr(): [AssignExpr] ... = ...
#   82|           Type = [ArithmeticType] _Complex float
#   82|           ValueCategory = prvalue
#   82|         getLValue(): [VariableAccess] cf
#   82|             Type = [ArithmeticType] _Complex float
#   82|             ValueCategory = lvalue
#   82|         getRValue(): [VariableAccess] d
#   82|             Type = [DoubleType] double
#   82|             ValueCategory = prvalue(load)
#   82|         getRValue().getFullyConverted(): [CStyleCast] (_Complex float)...
#   82|             Conversion = [FloatingPointConversion] floating point conversion
#   82|             Type = [ArithmeticType] _Complex float
#   82|             ValueCategory = prvalue
#   83|     getStmt(20): [ExprStmt] ExprStmt
#   83|       getExpr(): [AssignExpr] ... = ...
#   83|           Type = [ArithmeticType] _Complex float
#   83|           ValueCategory = prvalue
#   83|         getLValue(): [VariableAccess] cf
#   83|             Type = [ArithmeticType] _Complex float
#   83|             ValueCategory = lvalue
#   83|         getRValue(): [VariableAccess] ld
#   83|             Type = [LongDoubleType] long double
#   83|             ValueCategory = prvalue(load)
#   83|         getRValue().getFullyConverted(): [CStyleCast] (_Complex float)...
#   83|             Conversion = [FloatingPointConversion] floating point conversion
#   83|             Type = [ArithmeticType] _Complex float
#   83|             ValueCategory = prvalue
#   84|     getStmt(21): [ExprStmt] ExprStmt
#   84|       getExpr(): [AssignExpr] ... = ...
#   84|           Type = [ArithmeticType] _Complex double
#   84|           ValueCategory = prvalue
#   84|         getLValue(): [VariableAccess] cd
#   84|             Type = [ArithmeticType] _Complex double
#   84|             ValueCategory = lvalue
#   84|         getRValue(): [VariableAccess] f
#   84|             Type = [FloatType] float
#   84|             ValueCategory = prvalue(load)
#   84|         getRValue().getFullyConverted(): [CStyleCast] (_Complex double)...
#   84|             Conversion = [FloatingPointConversion] floating point conversion
#   84|             Type = [ArithmeticType] _Complex double
#   84|             ValueCategory = prvalue
#   85|     getStmt(22): [ExprStmt] ExprStmt
#   85|       getExpr(): [AssignExpr] ... = ...
#   85|           Type = [ArithmeticType] _Complex double
#   85|           ValueCategory = prvalue
#   85|         getLValue(): [VariableAccess] cd
#   85|             Type = [ArithmeticType] _Complex double
#   85|             ValueCategory = lvalue
#   85|         getRValue(): [VariableAccess] d
#   85|             Type = [DoubleType] double
#   85|             ValueCategory = prvalue(load)
#   85|         getRValue().getFullyConverted(): [CStyleCast] (_Complex double)...
#   85|             Conversion = [FloatingPointConversion] floating point conversion
#   85|             Type = [ArithmeticType] _Complex double
#   85|             ValueCategory = prvalue
#   86|     getStmt(23): [ExprStmt] ExprStmt
#   86|       getExpr(): [AssignExpr] ... = ...
#   86|           Type = [ArithmeticType] _Complex double
#   86|           ValueCategory = prvalue
#   86|         getLValue(): [VariableAccess] cd
#   86|             Type = [ArithmeticType] _Complex double
#   86|             ValueCategory = lvalue
#   86|         getRValue(): [VariableAccess] ld
#   86|             Type = [LongDoubleType] long double
#   86|             ValueCategory = prvalue(load)
#   86|         getRValue().getFullyConverted(): [CStyleCast] (_Complex double)...
#   86|             Conversion = [FloatingPointConversion] floating point conversion
#   86|             Type = [ArithmeticType] _Complex double
#   86|             ValueCategory = prvalue
#   87|     getStmt(24): [ExprStmt] ExprStmt
#   87|       getExpr(): [AssignExpr] ... = ...
#   87|           Type = [ArithmeticType] _Complex long double
#   87|           ValueCategory = prvalue
#   87|         getLValue(): [VariableAccess] cld
#   87|             Type = [ArithmeticType] _Complex long double
#   87|             ValueCategory = lvalue
#   87|         getRValue(): [VariableAccess] f
#   87|             Type = [FloatType] float
#   87|             ValueCategory = prvalue(load)
#   87|         getRValue().getFullyConverted(): [CStyleCast] (_Complex long double)...
#   87|             Conversion = [FloatingPointConversion] floating point conversion
#   87|             Type = [ArithmeticType] _Complex long double
#   87|             ValueCategory = prvalue
#   88|     getStmt(25): [ExprStmt] ExprStmt
#   88|       getExpr(): [AssignExpr] ... = ...
#   88|           Type = [ArithmeticType] _Complex long double
#   88|           ValueCategory = prvalue
#   88|         getLValue(): [VariableAccess] cld
#   88|             Type = [ArithmeticType] _Complex long double
#   88|             ValueCategory = lvalue
#   88|         getRValue(): [VariableAccess] d
#   88|             Type = [DoubleType] double
#   88|             ValueCategory = prvalue(load)
#   88|         getRValue().getFullyConverted(): [CStyleCast] (_Complex long double)...
#   88|             Conversion = [FloatingPointConversion] floating point conversion
#   88|             Type = [ArithmeticType] _Complex long double
#   88|             ValueCategory = prvalue
#   89|     getStmt(26): [ExprStmt] ExprStmt
#   89|       getExpr(): [AssignExpr] ... = ...
#   89|           Type = [ArithmeticType] _Complex long double
#   89|           ValueCategory = prvalue
#   89|         getLValue(): [VariableAccess] cld
#   89|             Type = [ArithmeticType] _Complex long double
#   89|             ValueCategory = lvalue
#   89|         getRValue(): [VariableAccess] ld
#   89|             Type = [LongDoubleType] long double
#   89|             ValueCategory = prvalue(load)
#   89|         getRValue().getFullyConverted(): [CStyleCast] (_Complex long double)...
#   89|             Conversion = [FloatingPointConversion] floating point conversion
#   89|             Type = [ArithmeticType] _Complex long double
#   89|             ValueCategory = prvalue
#   92|     getStmt(27): [ExprStmt] ExprStmt
#   92|       getExpr(): [AssignExpr] ... = ...
#   92|           Type = [FloatType] float
#   92|           ValueCategory = prvalue
#   92|         getLValue(): [VariableAccess] f
#   92|             Type = [FloatType] float
#   92|             ValueCategory = lvalue
#   92|         getRValue(): [VariableAccess] cf
#   92|             Type = [ArithmeticType] _Complex float
#   92|             ValueCategory = prvalue(load)
#   92|         getRValue().getFullyConverted(): [CStyleCast] (float)...
#   92|             Conversion = [FloatingPointConversion] floating point conversion
#   92|             Type = [FloatType] float
#   92|             ValueCategory = prvalue
#   93|     getStmt(28): [ExprStmt] ExprStmt
#   93|       getExpr(): [AssignExpr] ... = ...
#   93|           Type = [FloatType] float
#   93|           ValueCategory = prvalue
#   93|         getLValue(): [VariableAccess] f
#   93|             Type = [FloatType] float
#   93|             ValueCategory = lvalue
#   93|         getRValue(): [VariableAccess] cd
#   93|             Type = [ArithmeticType] _Complex double
#   93|             ValueCategory = prvalue(load)
#   93|         getRValue().getFullyConverted(): [CStyleCast] (float)...
#   93|             Conversion = [FloatingPointConversion] floating point conversion
#   93|             Type = [FloatType] float
#   93|             ValueCategory = prvalue
#   94|     getStmt(29): [ExprStmt] ExprStmt
#   94|       getExpr(): [AssignExpr] ... = ...
#   94|           Type = [FloatType] float
#   94|           ValueCategory = prvalue
#   94|         getLValue(): [VariableAccess] f
#   94|             Type = [FloatType] float
#   94|             ValueCategory = lvalue
#   94|         getRValue(): [VariableAccess] cld
#   94|             Type = [ArithmeticType] _Complex long double
#   94|             ValueCategory = prvalue(load)
#   94|         getRValue().getFullyConverted(): [CStyleCast] (float)...
#   94|             Conversion = [FloatingPointConversion] floating point conversion
#   94|             Type = [FloatType] float
#   94|             ValueCategory = prvalue
#   95|     getStmt(30): [ExprStmt] ExprStmt
#   95|       getExpr(): [AssignExpr] ... = ...
#   95|           Type = [DoubleType] double
#   95|           ValueCategory = prvalue
#   95|         getLValue(): [VariableAccess] d
#   95|             Type = [DoubleType] double
#   95|             ValueCategory = lvalue
#   95|         getRValue(): [VariableAccess] cf
#   95|             Type = [ArithmeticType] _Complex float
#   95|             ValueCategory = prvalue(load)
#   95|         getRValue().getFullyConverted(): [CStyleCast] (double)...
#   95|             Conversion = [FloatingPointConversion] floating point conversion
#   95|             Type = [DoubleType] double
#   95|             ValueCategory = prvalue
#   96|     getStmt(31): [ExprStmt] ExprStmt
#   96|       getExpr(): [AssignExpr] ... = ...
#   96|           Type = [DoubleType] double
#   96|           ValueCategory = prvalue
#   96|         getLValue(): [VariableAccess] d
#   96|             Type = [DoubleType] double
#   96|             ValueCategory = lvalue
#   96|         getRValue(): [VariableAccess] cd
#   96|             Type = [ArithmeticType] _Complex double
#   96|             ValueCategory = prvalue(load)
#   96|         getRValue().getFullyConverted(): [CStyleCast] (double)...
#   96|             Conversion = [FloatingPointConversion] floating point conversion
#   96|             Type = [DoubleType] double
#   96|             ValueCategory = prvalue
#   97|     getStmt(32): [ExprStmt] ExprStmt
#   97|       getExpr(): [AssignExpr] ... = ...
#   97|           Type = [DoubleType] double
#   97|           ValueCategory = prvalue
#   97|         getLValue(): [VariableAccess] d
#   97|             Type = [DoubleType] double
#   97|             ValueCategory = lvalue
#   97|         getRValue(): [VariableAccess] cld
#   97|             Type = [ArithmeticType] _Complex long double
#   97|             ValueCategory = prvalue(load)
#   97|         getRValue().getFullyConverted(): [CStyleCast] (double)...
#   97|             Conversion = [FloatingPointConversion] floating point conversion
#   97|             Type = [DoubleType] double
#   97|             ValueCategory = prvalue
#   98|     getStmt(33): [ExprStmt] ExprStmt
#   98|       getExpr(): [AssignExpr] ... = ...
#   98|           Type = [LongDoubleType] long double
#   98|           ValueCategory = prvalue
#   98|         getLValue(): [VariableAccess] ld
#   98|             Type = [LongDoubleType] long double
#   98|             ValueCategory = lvalue
#   98|         getRValue(): [VariableAccess] cf
#   98|             Type = [ArithmeticType] _Complex float
#   98|             ValueCategory = prvalue(load)
#   98|         getRValue().getFullyConverted(): [CStyleCast] (long double)...
#   98|             Conversion = [FloatingPointConversion] floating point conversion
#   98|             Type = [LongDoubleType] long double
#   98|             ValueCategory = prvalue
#   99|     getStmt(34): [ExprStmt] ExprStmt
#   99|       getExpr(): [AssignExpr] ... = ...
#   99|           Type = [LongDoubleType] long double
#   99|           ValueCategory = prvalue
#   99|         getLValue(): [VariableAccess] ld
#   99|             Type = [LongDoubleType] long double
#   99|             ValueCategory = lvalue
#   99|         getRValue(): [VariableAccess] cd
#   99|             Type = [ArithmeticType] _Complex double
#   99|             ValueCategory = prvalue(load)
#   99|         getRValue().getFullyConverted(): [CStyleCast] (long double)...
#   99|             Conversion = [FloatingPointConversion] floating point conversion
#   99|             Type = [LongDoubleType] long double
#   99|             ValueCategory = prvalue
#  100|     getStmt(35): [ExprStmt] ExprStmt
#  100|       getExpr(): [AssignExpr] ... = ...
#  100|           Type = [LongDoubleType] long double
#  100|           ValueCategory = prvalue
#  100|         getLValue(): [VariableAccess] ld
#  100|             Type = [LongDoubleType] long double
#  100|             ValueCategory = lvalue
#  100|         getRValue(): [VariableAccess] cld
#  100|             Type = [ArithmeticType] _Complex long double
#  100|             ValueCategory = prvalue(load)
#  100|         getRValue().getFullyConverted(): [CStyleCast] (long double)...
#  100|             Conversion = [FloatingPointConversion] floating point conversion
#  100|             Type = [LongDoubleType] long double
#  100|             ValueCategory = prvalue
#  103|     getStmt(36): [ExprStmt] ExprStmt
#  103|       getExpr(): [AssignExpr] ... = ...
#  103|           Type = [ArithmeticType] _Complex float
#  103|           ValueCategory = prvalue
#  103|         getLValue(): [VariableAccess] cf
#  103|             Type = [ArithmeticType] _Complex float
#  103|             ValueCategory = lvalue
#  103|         getRValue(): [VariableAccess] jf
#  103|             Type = [ArithmeticType] _Imaginary float
#  103|             ValueCategory = prvalue(load)
#  103|         getRValue().getFullyConverted(): [CStyleCast] (_Complex float)...
#  103|             Conversion = [FloatingPointConversion] floating point conversion
#  103|             Type = [ArithmeticType] _Complex float
#  103|             ValueCategory = prvalue
#  104|     getStmt(37): [ExprStmt] ExprStmt
#  104|       getExpr(): [AssignExpr] ... = ...
#  104|           Type = [ArithmeticType] _Complex float
#  104|           ValueCategory = prvalue
#  104|         getLValue(): [VariableAccess] cf
#  104|             Type = [ArithmeticType] _Complex float
#  104|             ValueCategory = lvalue
#  104|         getRValue(): [VariableAccess] jd
#  104|             Type = [ArithmeticType] _Imaginary double
#  104|             ValueCategory = prvalue(load)
#  104|         getRValue().getFullyConverted(): [CStyleCast] (_Complex float)...
#  104|             Conversion = [FloatingPointConversion] floating point conversion
#  104|             Type = [ArithmeticType] _Complex float
#  104|             ValueCategory = prvalue
#  105|     getStmt(38): [ExprStmt] ExprStmt
#  105|       getExpr(): [AssignExpr] ... = ...
#  105|           Type = [ArithmeticType] _Complex float
#  105|           ValueCategory = prvalue
#  105|         getLValue(): [VariableAccess] cf
#  105|             Type = [ArithmeticType] _Complex float
#  105|             ValueCategory = lvalue
#  105|         getRValue(): [VariableAccess] jld
#  105|             Type = [ArithmeticType] _Imaginary long double
#  105|             ValueCategory = prvalue(load)
#  105|         getRValue().getFullyConverted(): [CStyleCast] (_Complex float)...
#  105|             Conversion = [FloatingPointConversion] floating point conversion
#  105|             Type = [ArithmeticType] _Complex float
#  105|             ValueCategory = prvalue
#  106|     getStmt(39): [ExprStmt] ExprStmt
#  106|       getExpr(): [AssignExpr] ... = ...
#  106|           Type = [ArithmeticType] _Complex double
#  106|           ValueCategory = prvalue
#  106|         getLValue(): [VariableAccess] cd
#  106|             Type = [ArithmeticType] _Complex double
#  106|             ValueCategory = lvalue
#  106|         getRValue(): [VariableAccess] jf
#  106|             Type = [ArithmeticType] _Imaginary float
#  106|             ValueCategory = prvalue(load)
#  106|         getRValue().getFullyConverted(): [CStyleCast] (_Complex double)...
#  106|             Conversion = [FloatingPointConversion] floating point conversion
#  106|             Type = [ArithmeticType] _Complex double
#  106|             ValueCategory = prvalue
#  107|     getStmt(40): [ExprStmt] ExprStmt
#  107|       getExpr(): [AssignExpr] ... = ...
#  107|           Type = [ArithmeticType] _Complex double
#  107|           ValueCategory = prvalue
#  107|         getLValue(): [VariableAccess] cd
#  107|             Type = [ArithmeticType] _Complex double
#  107|             ValueCategory = lvalue
#  107|         getRValue(): [VariableAccess] jd
#  107|             Type = [ArithmeticType] _Imaginary double
#  107|             ValueCategory = prvalue(load)
#  107|         getRValue().getFullyConverted(): [CStyleCast] (_Complex double)...
#  107|             Conversion = [FloatingPointConversion] floating point conversion
#  107|             Type = [ArithmeticType] _Complex double
#  107|             ValueCategory = prvalue
#  108|     getStmt(41): [ExprStmt] ExprStmt
#  108|       getExpr(): [AssignExpr] ... = ...
#  108|           Type = [ArithmeticType] _Complex double
#  108|           ValueCategory = prvalue
#  108|         getLValue(): [VariableAccess] cd
#  108|             Type = [ArithmeticType] _Complex double
#  108|             ValueCategory = lvalue
#  108|         getRValue(): [VariableAccess] jld
#  108|             Type = [ArithmeticType] _Imaginary long double
#  108|             ValueCategory = prvalue(load)
#  108|         getRValue().getFullyConverted(): [CStyleCast] (_Complex double)...
#  108|             Conversion = [FloatingPointConversion] floating point conversion
#  108|             Type = [ArithmeticType] _Complex double
#  108|             ValueCategory = prvalue
#  109|     getStmt(42): [ExprStmt] ExprStmt
#  109|       getExpr(): [AssignExpr] ... = ...
#  109|           Type = [ArithmeticType] _Complex long double
#  109|           ValueCategory = prvalue
#  109|         getLValue(): [VariableAccess] cld
#  109|             Type = [ArithmeticType] _Complex long double
#  109|             ValueCategory = lvalue
#  109|         getRValue(): [VariableAccess] jf
#  109|             Type = [ArithmeticType] _Imaginary float
#  109|             ValueCategory = prvalue(load)
#  109|         getRValue().getFullyConverted(): [CStyleCast] (_Complex long double)...
#  109|             Conversion = [FloatingPointConversion] floating point conversion
#  109|             Type = [ArithmeticType] _Complex long double
#  109|             ValueCategory = prvalue
#  110|     getStmt(43): [ExprStmt] ExprStmt
#  110|       getExpr(): [AssignExpr] ... = ...
#  110|           Type = [ArithmeticType] _Complex long double
#  110|           ValueCategory = prvalue
#  110|         getLValue(): [VariableAccess] cld
#  110|             Type = [ArithmeticType] _Complex long double
#  110|             ValueCategory = lvalue
#  110|         getRValue(): [VariableAccess] jd
#  110|             Type = [ArithmeticType] _Imaginary double
#  110|             ValueCategory = prvalue(load)
#  110|         getRValue().getFullyConverted(): [CStyleCast] (_Complex long double)...
#  110|             Conversion = [FloatingPointConversion] floating point conversion
#  110|             Type = [ArithmeticType] _Complex long double
#  110|             ValueCategory = prvalue
#  111|     getStmt(44): [ExprStmt] ExprStmt
#  111|       getExpr(): [AssignExpr] ... = ...
#  111|           Type = [ArithmeticType] _Complex long double
#  111|           ValueCategory = prvalue
#  111|         getLValue(): [VariableAccess] cld
#  111|             Type = [ArithmeticType] _Complex long double
#  111|             ValueCategory = lvalue
#  111|         getRValue(): [VariableAccess] jld
#  111|             Type = [ArithmeticType] _Imaginary long double
#  111|             ValueCategory = prvalue(load)
#  111|         getRValue().getFullyConverted(): [CStyleCast] (_Complex long double)...
#  111|             Conversion = [FloatingPointConversion] floating point conversion
#  111|             Type = [ArithmeticType] _Complex long double
#  111|             ValueCategory = prvalue
#  114|     getStmt(45): [ExprStmt] ExprStmt
#  114|       getExpr(): [AssignExpr] ... = ...
#  114|           Type = [ArithmeticType] _Imaginary float
#  114|           ValueCategory = prvalue
#  114|         getLValue(): [VariableAccess] jf
#  114|             Type = [ArithmeticType] _Imaginary float
#  114|             ValueCategory = lvalue
#  114|         getRValue(): [VariableAccess] cf
#  114|             Type = [ArithmeticType] _Complex float
#  114|             ValueCategory = prvalue(load)
#  114|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary float)...
#  114|             Conversion = [FloatingPointConversion] floating point conversion
#  114|             Type = [ArithmeticType] _Imaginary float
#  114|             ValueCategory = prvalue
#  115|     getStmt(46): [ExprStmt] ExprStmt
#  115|       getExpr(): [AssignExpr] ... = ...
#  115|           Type = [ArithmeticType] _Imaginary float
#  115|           ValueCategory = prvalue
#  115|         getLValue(): [VariableAccess] jf
#  115|             Type = [ArithmeticType] _Imaginary float
#  115|             ValueCategory = lvalue
#  115|         getRValue(): [VariableAccess] cd
#  115|             Type = [ArithmeticType] _Complex double
#  115|             ValueCategory = prvalue(load)
#  115|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary float)...
#  115|             Conversion = [FloatingPointConversion] floating point conversion
#  115|             Type = [ArithmeticType] _Imaginary float
#  115|             ValueCategory = prvalue
#  116|     getStmt(47): [ExprStmt] ExprStmt
#  116|       getExpr(): [AssignExpr] ... = ...
#  116|           Type = [ArithmeticType] _Imaginary float
#  116|           ValueCategory = prvalue
#  116|         getLValue(): [VariableAccess] jf
#  116|             Type = [ArithmeticType] _Imaginary float
#  116|             ValueCategory = lvalue
#  116|         getRValue(): [VariableAccess] cld
#  116|             Type = [ArithmeticType] _Complex long double
#  116|             ValueCategory = prvalue(load)
#  116|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary float)...
#  116|             Conversion = [FloatingPointConversion] floating point conversion
#  116|             Type = [ArithmeticType] _Imaginary float
#  116|             ValueCategory = prvalue
#  117|     getStmt(48): [ExprStmt] ExprStmt
#  117|       getExpr(): [AssignExpr] ... = ...
#  117|           Type = [ArithmeticType] _Imaginary double
#  117|           ValueCategory = prvalue
#  117|         getLValue(): [VariableAccess] jd
#  117|             Type = [ArithmeticType] _Imaginary double
#  117|             ValueCategory = lvalue
#  117|         getRValue(): [VariableAccess] cf
#  117|             Type = [ArithmeticType] _Complex float
#  117|             ValueCategory = prvalue(load)
#  117|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary double)...
#  117|             Conversion = [FloatingPointConversion] floating point conversion
#  117|             Type = [ArithmeticType] _Imaginary double
#  117|             ValueCategory = prvalue
#  118|     getStmt(49): [ExprStmt] ExprStmt
#  118|       getExpr(): [AssignExpr] ... = ...
#  118|           Type = [ArithmeticType] _Imaginary double
#  118|           ValueCategory = prvalue
#  118|         getLValue(): [VariableAccess] jd
#  118|             Type = [ArithmeticType] _Imaginary double
#  118|             ValueCategory = lvalue
#  118|         getRValue(): [VariableAccess] cd
#  118|             Type = [ArithmeticType] _Complex double
#  118|             ValueCategory = prvalue(load)
#  118|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary double)...
#  118|             Conversion = [FloatingPointConversion] floating point conversion
#  118|             Type = [ArithmeticType] _Imaginary double
#  118|             ValueCategory = prvalue
#  119|     getStmt(50): [ExprStmt] ExprStmt
#  119|       getExpr(): [AssignExpr] ... = ...
#  119|           Type = [ArithmeticType] _Imaginary double
#  119|           ValueCategory = prvalue
#  119|         getLValue(): [VariableAccess] jd
#  119|             Type = [ArithmeticType] _Imaginary double
#  119|             ValueCategory = lvalue
#  119|         getRValue(): [VariableAccess] cld
#  119|             Type = [ArithmeticType] _Complex long double
#  119|             ValueCategory = prvalue(load)
#  119|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary double)...
#  119|             Conversion = [FloatingPointConversion] floating point conversion
#  119|             Type = [ArithmeticType] _Imaginary double
#  119|             ValueCategory = prvalue
#  120|     getStmt(51): [ExprStmt] ExprStmt
#  120|       getExpr(): [AssignExpr] ... = ...
#  120|           Type = [ArithmeticType] _Imaginary long double
#  120|           ValueCategory = prvalue
#  120|         getLValue(): [VariableAccess] jld
#  120|             Type = [ArithmeticType] _Imaginary long double
#  120|             ValueCategory = lvalue
#  120|         getRValue(): [VariableAccess] cf
#  120|             Type = [ArithmeticType] _Complex float
#  120|             ValueCategory = prvalue(load)
#  120|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary long double)...
#  120|             Conversion = [FloatingPointConversion] floating point conversion
#  120|             Type = [ArithmeticType] _Imaginary long double
#  120|             ValueCategory = prvalue
#  121|     getStmt(52): [ExprStmt] ExprStmt
#  121|       getExpr(): [AssignExpr] ... = ...
#  121|           Type = [ArithmeticType] _Imaginary long double
#  121|           ValueCategory = prvalue
#  121|         getLValue(): [VariableAccess] jld
#  121|             Type = [ArithmeticType] _Imaginary long double
#  121|             ValueCategory = lvalue
#  121|         getRValue(): [VariableAccess] cd
#  121|             Type = [ArithmeticType] _Complex double
#  121|             ValueCategory = prvalue(load)
#  121|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary long double)...
#  121|             Conversion = [FloatingPointConversion] floating point conversion
#  121|             Type = [ArithmeticType] _Imaginary long double
#  121|             ValueCategory = prvalue
#  122|     getStmt(53): [ExprStmt] ExprStmt
#  122|       getExpr(): [AssignExpr] ... = ...
#  122|           Type = [ArithmeticType] _Imaginary long double
#  122|           ValueCategory = prvalue
#  122|         getLValue(): [VariableAccess] jld
#  122|             Type = [ArithmeticType] _Imaginary long double
#  122|             ValueCategory = lvalue
#  122|         getRValue(): [VariableAccess] cld
#  122|             Type = [ArithmeticType] _Complex long double
#  122|             ValueCategory = prvalue(load)
#  122|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary long double)...
#  122|             Conversion = [FloatingPointConversion] floating point conversion
#  122|             Type = [ArithmeticType] _Imaginary long double
#  122|             ValueCategory = prvalue
#  125|     getStmt(54): [ExprStmt] ExprStmt
#  125|       getExpr(): [AssignExpr] ... = ...
#  125|           Type = [ArithmeticType] _Imaginary float
#  125|           ValueCategory = prvalue
#  125|         getLValue(): [VariableAccess] jf
#  125|             Type = [ArithmeticType] _Imaginary float
#  125|             ValueCategory = lvalue
#  125|         getRValue(): [VariableAccess] f
#  125|             Type = [FloatType] float
#  125|             ValueCategory = prvalue(load)
#  125|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary float)...
#  125|             Conversion = [FloatingPointConversion] floating point conversion
#  125|             Type = [ArithmeticType] _Imaginary float
#  125|             ValueCategory = prvalue
#  126|     getStmt(55): [ExprStmt] ExprStmt
#  126|       getExpr(): [AssignExpr] ... = ...
#  126|           Type = [ArithmeticType] _Imaginary float
#  126|           ValueCategory = prvalue
#  126|         getLValue(): [VariableAccess] jf
#  126|             Type = [ArithmeticType] _Imaginary float
#  126|             ValueCategory = lvalue
#  126|         getRValue(): [VariableAccess] d
#  126|             Type = [DoubleType] double
#  126|             ValueCategory = prvalue(load)
#  126|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary float)...
#  126|             Conversion = [FloatingPointConversion] floating point conversion
#  126|             Type = [ArithmeticType] _Imaginary float
#  126|             ValueCategory = prvalue
#  127|     getStmt(56): [ExprStmt] ExprStmt
#  127|       getExpr(): [AssignExpr] ... = ...
#  127|           Type = [ArithmeticType] _Imaginary float
#  127|           ValueCategory = prvalue
#  127|         getLValue(): [VariableAccess] jf
#  127|             Type = [ArithmeticType] _Imaginary float
#  127|             ValueCategory = lvalue
#  127|         getRValue(): [VariableAccess] ld
#  127|             Type = [LongDoubleType] long double
#  127|             ValueCategory = prvalue(load)
#  127|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary float)...
#  127|             Conversion = [FloatingPointConversion] floating point conversion
#  127|             Type = [ArithmeticType] _Imaginary float
#  127|             ValueCategory = prvalue
#  128|     getStmt(57): [ExprStmt] ExprStmt
#  128|       getExpr(): [AssignExpr] ... = ...
#  128|           Type = [ArithmeticType] _Imaginary double
#  128|           ValueCategory = prvalue
#  128|         getLValue(): [VariableAccess] jd
#  128|             Type = [ArithmeticType] _Imaginary double
#  128|             ValueCategory = lvalue
#  128|         getRValue(): [VariableAccess] f
#  128|             Type = [FloatType] float
#  128|             ValueCategory = prvalue(load)
#  128|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary double)...
#  128|             Conversion = [FloatingPointConversion] floating point conversion
#  128|             Type = [ArithmeticType] _Imaginary double
#  128|             ValueCategory = prvalue
#  129|     getStmt(58): [ExprStmt] ExprStmt
#  129|       getExpr(): [AssignExpr] ... = ...
#  129|           Type = [ArithmeticType] _Imaginary double
#  129|           ValueCategory = prvalue
#  129|         getLValue(): [VariableAccess] jd
#  129|             Type = [ArithmeticType] _Imaginary double
#  129|             ValueCategory = lvalue
#  129|         getRValue(): [VariableAccess] d
#  129|             Type = [DoubleType] double
#  129|             ValueCategory = prvalue(load)
#  129|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary double)...
#  129|             Conversion = [FloatingPointConversion] floating point conversion
#  129|             Type = [ArithmeticType] _Imaginary double
#  129|             ValueCategory = prvalue
#  130|     getStmt(59): [ExprStmt] ExprStmt
#  130|       getExpr(): [AssignExpr] ... = ...
#  130|           Type = [ArithmeticType] _Imaginary double
#  130|           ValueCategory = prvalue
#  130|         getLValue(): [VariableAccess] jd
#  130|             Type = [ArithmeticType] _Imaginary double
#  130|             ValueCategory = lvalue
#  130|         getRValue(): [VariableAccess] ld
#  130|             Type = [LongDoubleType] long double
#  130|             ValueCategory = prvalue(load)
#  130|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary double)...
#  130|             Conversion = [FloatingPointConversion] floating point conversion
#  130|             Type = [ArithmeticType] _Imaginary double
#  130|             ValueCategory = prvalue
#  131|     getStmt(60): [ExprStmt] ExprStmt
#  131|       getExpr(): [AssignExpr] ... = ...
#  131|           Type = [ArithmeticType] _Imaginary long double
#  131|           ValueCategory = prvalue
#  131|         getLValue(): [VariableAccess] jld
#  131|             Type = [ArithmeticType] _Imaginary long double
#  131|             ValueCategory = lvalue
#  131|         getRValue(): [VariableAccess] f
#  131|             Type = [FloatType] float
#  131|             ValueCategory = prvalue(load)
#  131|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary long double)...
#  131|             Conversion = [FloatingPointConversion] floating point conversion
#  131|             Type = [ArithmeticType] _Imaginary long double
#  131|             ValueCategory = prvalue
#  132|     getStmt(61): [ExprStmt] ExprStmt
#  132|       getExpr(): [AssignExpr] ... = ...
#  132|           Type = [ArithmeticType] _Imaginary long double
#  132|           ValueCategory = prvalue
#  132|         getLValue(): [VariableAccess] jld
#  132|             Type = [ArithmeticType] _Imaginary long double
#  132|             ValueCategory = lvalue
#  132|         getRValue(): [VariableAccess] d
#  132|             Type = [DoubleType] double
#  132|             ValueCategory = prvalue(load)
#  132|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary long double)...
#  132|             Conversion = [FloatingPointConversion] floating point conversion
#  132|             Type = [ArithmeticType] _Imaginary long double
#  132|             ValueCategory = prvalue
#  133|     getStmt(62): [ExprStmt] ExprStmt
#  133|       getExpr(): [AssignExpr] ... = ...
#  133|           Type = [ArithmeticType] _Imaginary long double
#  133|           ValueCategory = prvalue
#  133|         getLValue(): [VariableAccess] jld
#  133|             Type = [ArithmeticType] _Imaginary long double
#  133|             ValueCategory = lvalue
#  133|         getRValue(): [VariableAccess] ld
#  133|             Type = [LongDoubleType] long double
#  133|             ValueCategory = prvalue(load)
#  133|         getRValue().getFullyConverted(): [CStyleCast] (_Imaginary long double)...
#  133|             Conversion = [FloatingPointConversion] floating point conversion
#  133|             Type = [ArithmeticType] _Imaginary long double
#  133|             ValueCategory = prvalue
#  136|     getStmt(63): [ExprStmt] ExprStmt
#  136|       getExpr(): [AssignExpr] ... = ...
#  136|           Type = [FloatType] float
#  136|           ValueCategory = prvalue
#  136|         getLValue(): [VariableAccess] f
#  136|             Type = [FloatType] float
#  136|             ValueCategory = lvalue
#  136|         getRValue(): [VariableAccess] jf
#  136|             Type = [ArithmeticType] _Imaginary float
#  136|             ValueCategory = prvalue(load)
#  136|         getRValue().getFullyConverted(): [CStyleCast] (float)...
#  136|             Conversion = [FloatingPointConversion] floating point conversion
#  136|             Type = [FloatType] float
#  136|             ValueCategory = prvalue
#  137|     getStmt(64): [ExprStmt] ExprStmt
#  137|       getExpr(): [AssignExpr] ... = ...
#  137|           Type = [FloatType] float
#  137|           ValueCategory = prvalue
#  137|         getLValue(): [VariableAccess] f
#  137|             Type = [FloatType] float
#  137|             ValueCategory = lvalue
#  137|         getRValue(): [VariableAccess] jd
#  137|             Type = [ArithmeticType] _Imaginary double
#  137|             ValueCategory = prvalue(load)
#  137|         getRValue().getFullyConverted(): [CStyleCast] (float)...
#  137|             Conversion = [FloatingPointConversion] floating point conversion
#  137|             Type = [FloatType] float
#  137|             ValueCategory = prvalue
#  138|     getStmt(65): [ExprStmt] ExprStmt
#  138|       getExpr(): [AssignExpr] ... = ...
#  138|           Type = [FloatType] float
#  138|           ValueCategory = prvalue
#  138|         getLValue(): [VariableAccess] f
#  138|             Type = [FloatType] float
#  138|             ValueCategory = lvalue
#  138|         getRValue(): [VariableAccess] jld
#  138|             Type = [ArithmeticType] _Imaginary long double
#  138|             ValueCategory = prvalue(load)
#  138|         getRValue().getFullyConverted(): [CStyleCast] (float)...
#  138|             Conversion = [FloatingPointConversion] floating point conversion
#  138|             Type = [FloatType] float
#  138|             ValueCategory = prvalue
#  139|     getStmt(66): [ExprStmt] ExprStmt
#  139|       getExpr(): [AssignExpr] ... = ...
#  139|           Type = [DoubleType] double
#  139|           ValueCategory = prvalue
#  139|         getLValue(): [VariableAccess] d
#  139|             Type = [DoubleType] double
#  139|             ValueCategory = lvalue
#  139|         getRValue(): [VariableAccess] jf
#  139|             Type = [ArithmeticType] _Imaginary float
#  139|             ValueCategory = prvalue(load)
#  139|         getRValue().getFullyConverted(): [CStyleCast] (double)...
#  139|             Conversion = [FloatingPointConversion] floating point conversion
#  139|             Type = [DoubleType] double
#  139|             ValueCategory = prvalue
#  140|     getStmt(67): [ExprStmt] ExprStmt
#  140|       getExpr(): [AssignExpr] ... = ...
#  140|           Type = [DoubleType] double
#  140|           ValueCategory = prvalue
#  140|         getLValue(): [VariableAccess] d
#  140|             Type = [DoubleType] double
#  140|             ValueCategory = lvalue
#  140|         getRValue(): [VariableAccess] jd
#  140|             Type = [ArithmeticType] _Imaginary double
#  140|             ValueCategory = prvalue(load)
#  140|         getRValue().getFullyConverted(): [CStyleCast] (double)...
#  140|             Conversion = [FloatingPointConversion] floating point conversion
#  140|             Type = [DoubleType] double
#  140|             ValueCategory = prvalue
#  141|     getStmt(68): [ExprStmt] ExprStmt
#  141|       getExpr(): [AssignExpr] ... = ...
#  141|           Type = [DoubleType] double
#  141|           ValueCategory = prvalue
#  141|         getLValue(): [VariableAccess] d
#  141|             Type = [DoubleType] double
#  141|             ValueCategory = lvalue
#  141|         getRValue(): [VariableAccess] jld
#  141|             Type = [ArithmeticType] _Imaginary long double
#  141|             ValueCategory = prvalue(load)
#  141|         getRValue().getFullyConverted(): [CStyleCast] (double)...
#  141|             Conversion = [FloatingPointConversion] floating point conversion
#  141|             Type = [DoubleType] double
#  141|             ValueCategory = prvalue
#  142|     getStmt(69): [ExprStmt] ExprStmt
#  142|       getExpr(): [AssignExpr] ... = ...
#  142|           Type = [LongDoubleType] long double
#  142|           ValueCategory = prvalue
#  142|         getLValue(): [VariableAccess] ld
#  142|             Type = [LongDoubleType] long double
#  142|             ValueCategory = lvalue
#  142|         getRValue(): [VariableAccess] jf
#  142|             Type = [ArithmeticType] _Imaginary float
#  142|             ValueCategory = prvalue(load)
#  142|         getRValue().getFullyConverted(): [CStyleCast] (long double)...
#  142|             Conversion = [FloatingPointConversion] floating point conversion
#  142|             Type = [LongDoubleType] long double
#  142|             ValueCategory = prvalue
#  143|     getStmt(70): [ExprStmt] ExprStmt
#  143|       getExpr(): [AssignExpr] ... = ...
#  143|           Type = [LongDoubleType] long double
#  143|           ValueCategory = prvalue
#  143|         getLValue(): [VariableAccess] ld
#  143|             Type = [LongDoubleType] long double
#  143|             ValueCategory = lvalue
#  143|         getRValue(): [VariableAccess] jd
#  143|             Type = [ArithmeticType] _Imaginary double
#  143|             ValueCategory = prvalue(load)
#  143|         getRValue().getFullyConverted(): [CStyleCast] (long double)...
#  143|             Conversion = [FloatingPointConversion] floating point conversion
#  143|             Type = [LongDoubleType] long double
#  143|             ValueCategory = prvalue
#  144|     getStmt(71): [ExprStmt] ExprStmt
#  144|       getExpr(): [AssignExpr] ... = ...
#  144|           Type = [LongDoubleType] long double
#  144|           ValueCategory = prvalue
#  144|         getLValue(): [VariableAccess] ld
#  144|             Type = [LongDoubleType] long double
#  144|             ValueCategory = lvalue
#  144|         getRValue(): [VariableAccess] jld
#  144|             Type = [ArithmeticType] _Imaginary long double
#  144|             ValueCategory = prvalue(load)
#  144|         getRValue().getFullyConverted(): [CStyleCast] (long double)...
#  144|             Conversion = [FloatingPointConversion] floating point conversion
#  144|             Type = [LongDoubleType] long double
#  144|             ValueCategory = prvalue
#  145|     getStmt(72): [ReturnStmt] return ...
coroutines.cpp:
#   12| [Constructor] void std::coroutine_handle<Promise>::coroutine_handle()
#   12|   <params>: 
#   13| [Constructor] void std::coroutine_handle<Promise>::coroutine_handle(std::nullptr_t)
#   13|   <params>: 
#   13|     getParameter(0): [Parameter] (unnamed parameter 0)
#   13|         Type = [UsingAliasTypedefType] nullptr_t
#   14| [CopyConstructor] void std::coroutine_handle<Promise>::coroutine_handle(std::coroutine_handle<Promise> const&)
#   14|   <params>: 
#   14|     getParameter(0): [Parameter] (unnamed parameter 0)
#   14|         Type = [LValueReferenceType] const coroutine_handle<Promise> &
#   14| [CopyConstructor] void std::coroutine_handle<co_returnable_value::promise_type>::coroutine_handle(std::coroutine_handle<co_returnable_value::promise_type> const&)
#   14|   <params>: 
#   14|     getParameter(0): [Parameter] (unnamed parameter 0)
#   14|         Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#   14| [CopyConstructor] void std::coroutine_handle<co_returnable_void::promise_type>::coroutine_handle(std::coroutine_handle<co_returnable_void::promise_type> const&)
#   14|   <params>: 
#   14|     getParameter(0): [Parameter] (unnamed parameter 0)
#   14|         Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#   15| [MoveConstructor] void std::coroutine_handle<Promise>::coroutine_handle(std::coroutine_handle<Promise>&&)
#   15|   <params>: 
#   15|     getParameter(0): [Parameter] (unnamed parameter 0)
#   15|         Type = [RValueReferenceType] coroutine_handle<Promise> &&
#   17| [MemberFunction] std::coroutine_handle<Promise> std::coroutine_handle<Promise>::from_promise(Promise&)
#   17|   <params>: 
#   17|     getParameter(0): [Parameter] (unnamed parameter 0)
#   17|         Type = [LValueReferenceType] Promise &
#   18| [MemberFunction] std::coroutine_handle<Promise>& std::coroutine_handle<Promise>::operator=(std::nullptr_t)
#   18|   <params>: 
#   18|     getParameter(0): [Parameter] (unnamed parameter 0)
#   18|         Type = [UsingAliasTypedefType] nullptr_t
#   19| [CopyAssignmentOperator] std::coroutine_handle<Promise>& std::coroutine_handle<Promise>::operator=(std::coroutine_handle<Promise> const&)
#   19|   <params>: 
#   19|     getParameter(0): [Parameter] (unnamed parameter 0)
#   19|         Type = [LValueReferenceType] const coroutine_handle<Promise> &
#   20| [MoveAssignmentOperator] std::coroutine_handle<Promise>& std::coroutine_handle<Promise>::operator=(std::coroutine_handle<Promise>&&)
#   20|   <params>: 
#   20|     getParameter(0): [Parameter] (unnamed parameter 0)
#   20|         Type = [RValueReferenceType] coroutine_handle<Promise> &&
#   21| [ConstMemberFunction,ConversionOperator] std::coroutine_handle<Promise> std::coroutine_handle<Promise>::operator std::coroutine_handle<Promise>() const
#   21|   <params>: 
#   23| [ConstMemberFunction] bool std::coroutine_handle<Promise>::done() const
#   23|   <params>: 
#   24| [ConstMemberFunction,ConversionOperator] bool std::coroutine_handle<Promise>::operator bool() const
#   24|   <params>: 
#   26| [ConstMemberFunction] void std::coroutine_handle<Promise>::operator()() const
#   26|   <params>: 
#   27| [ConstMemberFunction] void std::coroutine_handle<Promise>::resume() const
#   27|   <params>: 
#   29| [ConstMemberFunction] void std::coroutine_handle<Promise>::destroy() const
#   29|   <params>: 
#   31| [ConstMemberFunction] Promise& std::coroutine_handle<Promise>::promise() const
#   31|   <params>: 
#   33| [ConstMemberFunction] void* std::coroutine_handle<Promise>::address() const
#   33|   <params>: 
#   34| [MemberFunction] std::coroutine_handle<Promise> std::coroutine_handle<Promise>::from_address(void*)
#   34|   <params>: 
#   34|     getParameter(0): [Parameter] (unnamed parameter 0)
#   34|         Type = [VoidPointerType] void *
#   38| [Operator,TemplateFunction,TopLevelFunction] bool std::operator==<Promise>(std::coroutine_handle<Promise>, std::coroutine_handle<Promise>)
#   38|   <params>: 
#   38|     getParameter(0): [Parameter] (unnamed parameter 0)
#   38|         Type = [ClassTemplateInstantiation,Struct] coroutine_handle<Promise>
#   38|     getParameter(1): [Parameter] (unnamed parameter 1)
#   38|         Type = [ClassTemplateInstantiation,Struct] coroutine_handle<Promise>
#   40| [CopyAssignmentOperator] std::suspend_always& std::suspend_always::operator=(std::suspend_always const&)
#   40|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const suspend_always &
#   40| [MoveAssignmentOperator] std::suspend_always& std::suspend_always::operator=(std::suspend_always&&)
#   40|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] suspend_always &&
#   41| [ConstMemberFunction] bool std::suspend_always::await_ready() const
#   41|   <params>: 
#   42| [ConstMemberFunction,TemplateFunction] void std::suspend_always::await_suspend<Promise>(std::coroutine_handle<Promise>) const
#   42|   <params>: 
#   42|     getParameter(0): [Parameter] (unnamed parameter 0)
#   42|         Type = [ClassTemplateInstantiation,Struct] coroutine_handle<Promise>
#   42| [ConstMemberFunction,FunctionTemplateInstantiation] void std::suspend_always::await_suspend<co_returnable_value::promise_type>(std::coroutine_handle<co_returnable_value::promise_type>) const
#   42|   <params>: 
#   42|     getParameter(0): [Parameter] (unnamed parameter 0)
#   42|         Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   42| [ConstMemberFunction,FunctionTemplateInstantiation] void std::suspend_always::await_suspend<co_returnable_void::promise_type>(std::coroutine_handle<co_returnable_void::promise_type>) const
#   42|   <params>: 
#   42|     getParameter(0): [Parameter] (unnamed parameter 0)
#   42|         Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   43| [ConstMemberFunction] void std::suspend_always::await_resume() const
#   43|   <params>: 
#   47| [CopyAssignmentOperator] co_returnable_void& co_returnable_void::operator=(co_returnable_void const&)
#   47|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const co_returnable_void &
#   50| [Constructor] void co_returnable_void::co_returnable_void(std::coroutine_handle<co_returnable_void::promise_type>)
#   50|   <params>: 
#   50|     getParameter(0): [Parameter] (unnamed parameter 0)
#   50|         Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   52| [CopyConstructor] void co_returnable_void::co_returnable_void(co_returnable_void&)
#   52|   <params>: 
#   52|     getParameter(0): [Parameter] (unnamed parameter 0)
#   52|         Type = [LValueReferenceType] co_returnable_void &
#   53| [MoveConstructor] void co_returnable_void::co_returnable_void(co_returnable_void&&)
#   53|   <params>: 
#   53|     getParameter(0): [Parameter] (unnamed parameter 0)
#   53|         Type = [RValueReferenceType] co_returnable_void &&
#   56| [CopyAssignmentOperator] co_returnable_void::promise_type& co_returnable_void::promise_type::operator=(co_returnable_void::promise_type const public&)
#   56|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const promise_type &
#   56| [MoveAssignmentOperator] co_returnable_void::promise_type& co_returnable_void::promise_type::operator=(co_returnable_void::promise_type&&)
#   56|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] promise_type &&
#   57| [MemberFunction] std::coroutine_handle<co_returnable_void::promise_type> co_returnable_void::promise_type::get_return_object()
#   57|   <params>: 
#   58| [MemberFunction] std::suspend_always co_returnable_void::promise_type::initial_suspend()
#   58|   <params>: 
#   59| [MemberFunction] std::suspend_always co_returnable_void::promise_type::final_suspend()
#   59|   <params>: 
#   61| [MemberFunction] void co_returnable_void::promise_type::return_void()
#   61|   <params>: 
#   62| [MemberFunction] void co_returnable_void::promise_type::unhandled_exception()
#   62|   <params>: 
#   64| [MemberFunction] std::suspend_always co_returnable_void::promise_type::yield_value(int)
#   64|   <params>: 
#   64|     getParameter(0): [Parameter] (unnamed parameter 0)
#   64|         Type = [IntType] int
#   67| [CopyAssignmentOperator] co_returnable_value& co_returnable_value::operator=(co_returnable_value const&)
#   67|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const co_returnable_value &
#   70| [Constructor] void co_returnable_value::co_returnable_value(std::coroutine_handle<co_returnable_value::promise_type>)
#   70|   <params>: 
#   70|     getParameter(0): [Parameter] (unnamed parameter 0)
#   70|         Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   72| [CopyConstructor] void co_returnable_value::co_returnable_value(co_returnable_value&)
#   72|   <params>: 
#   72|     getParameter(0): [Parameter] (unnamed parameter 0)
#   72|         Type = [LValueReferenceType] co_returnable_value &
#   73| [MoveConstructor] void co_returnable_value::co_returnable_value(co_returnable_value&&)
#   73|   <params>: 
#   73|     getParameter(0): [Parameter] (unnamed parameter 0)
#   73|         Type = [RValueReferenceType] co_returnable_value &&
#   76| [CopyAssignmentOperator] co_returnable_value::promise_type& co_returnable_value::promise_type::operator=(co_returnable_value::promise_type const public&)
#   76|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const promise_type &
#   76| [MoveAssignmentOperator] co_returnable_value::promise_type& co_returnable_value::promise_type::operator=(co_returnable_value::promise_type&&)
#   76|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] promise_type &&
#   77| [MemberFunction] std::coroutine_handle<co_returnable_value::promise_type> co_returnable_value::promise_type::get_return_object()
#   77|   <params>: 
#   78| [MemberFunction] std::suspend_always co_returnable_value::promise_type::initial_suspend()
#   78|   <params>: 
#   79| [MemberFunction] std::suspend_always co_returnable_value::promise_type::final_suspend()
#   79|   <params>: 
#   81| [MemberFunction] void co_returnable_value::promise_type::return_value(int)
#   81|   <params>: 
#   81|     getParameter(0): [Parameter] (unnamed parameter 0)
#   81|         Type = [IntType] int
#   82| [MemberFunction] void co_returnable_value::promise_type::unhandled_exception()
#   82|   <params>: 
#   84| [MemberFunction] std::suspend_always co_returnable_value::promise_type::yield_value(int)
#   84|   <params>: 
#   84|     getParameter(0): [Parameter] (unnamed parameter 0)
#   84|         Type = [IntType] int
#   87| [TopLevelFunction] co_returnable_void co_return_void()
#   87|   <params>: 
#   87|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [DeclStmt] declaration
#   87|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (unnamed local variable)
#   87|           Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#-----|     getStmt(1): [TryStmt] try { ... }
#-----|       getStmt(): [BlockStmt] { ... }
#-----|         getStmt(0): [ExprStmt] ExprStmt
#-----|           getExpr(): [CoAwaitExpr] co_await ...
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
#   87|             getOperand(): [FunctionCall] call to initial_suspend
#   87|                 Type = [Struct] suspend_always
#   87|                 ValueCategory = prvalue
#   87|               getQualifier(): [VariableAccess] (unnamed local variable)
#   87|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   87|                   ValueCategory = lvalue
#   87|             getChild(1): [FunctionCall] call to await_ready
#   87|                 Type = [BoolType] bool
#   87|                 ValueCategory = prvalue
#   87|               getQualifier(): [PointerDereferenceExpr] * ...
#   87|                   Type = [Struct] suspend_always
#   87|                   ValueCategory = lvalue
#   87|                 getOperand(): [AddressOfExpr] & ...
#   87|                     Type = [PointerType] suspend_always *
#   87|                     ValueCategory = prvalue
#   87|                   getOperand(): [FunctionCall] call to initial_suspend
#   87|                       Type = [Struct] suspend_always
#   87|                       ValueCategory = prvalue
#   87|                     getQualifier(): [VariableAccess] (unnamed local variable)
#   87|                         Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   87|                         ValueCategory = lvalue
#   87|                   getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   87|                       Type = [Struct] suspend_always
#   87|                       ValueCategory = lvalue
#-----|                 getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                     Type = [PointerType] suspend_always *
#-----|                     ValueCategory = prvalue(load)
#   87|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#   87|                   Conversion = [GlvalueConversion] glvalue conversion
#   87|                   Type = [SpecifiedType] const suspend_always
#   87|                   ValueCategory = lvalue
#-----|             getChild(2): [CommaExpr] ... , ...
#-----|                 Type = [VoidType] void
#-----|                 ValueCategory = prvalue
#-----|               getLeftOperand(): [AssignExpr] ... = ...
#-----|                   Type = [BoolType] bool
#-----|                   ValueCategory = prvalue
#-----|                 getLValue(): [VariableAccess] (unnamed local variable)
#-----|                     Type = [BoolType] bool
#-----|                     ValueCategory = lvalue
#-----|                 getRValue(): [Literal] 1
#-----|                     Type = [BoolType] bool
#-----|                     Value = [Literal] 1
#-----|                     ValueCategory = prvalue
#   87|               getRightOperand(): [FunctionCall] call to await_resume
#   87|                   Type = [VoidType] void
#   87|                   ValueCategory = prvalue
#   87|                 getQualifier(): [PointerDereferenceExpr] * ...
#   87|                     Type = [Struct] suspend_always
#   87|                     ValueCategory = lvalue
#   87|                   getOperand(): [ReuseExpr] reuse of & ...
#   87|                       Type = [PointerType] suspend_always *
#   87|                       ValueCategory = prvalue
#-----|                 getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                     Conversion = [GlvalueConversion] glvalue conversion
#-----|                     Type = [SpecifiedType] const suspend_always
#-----|                     ValueCategory = lvalue
#   87|             getChild(3): [FunctionCall] call to await_suspend
#   87|                 Type = [VoidType] void
#   87|                 ValueCategory = prvalue
#   87|               getQualifier(): [PointerDereferenceExpr] * ...
#   87|                   Type = [Struct] suspend_always
#   87|                   ValueCategory = lvalue
#   87|                 getOperand(): [ReuseExpr] reuse of & ...
#   87|                     Type = [PointerType] suspend_always *
#   87|                     ValueCategory = prvalue
#   87|               getArgument(0): [ConstructorCall] call to coroutine_handle
#   87|                   Type = [VoidType] void
#   87|                   ValueCategory = prvalue
#   87|                 getArgument(0): [VariableAccess] (unnamed local variable)
#   87|                     Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   87|                     ValueCategory = lvalue
#   87|                 getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   87|                     Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#   87|                     ValueCategory = prvalue
#   87|                   getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#   87|                       Conversion = [GlvalueConversion] glvalue conversion
#   87|                       Type = [SpecifiedType] const coroutine_handle<promise_type>
#   87|                       ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#   87|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   87|                   Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   87|                   ValueCategory = lvalue
#   88|         getStmt(1): [CoReturnStmt] co_return ...
#-----|           getChild(0): [FunctionCall] call to return_void
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
#-----|             getQualifier(): [VariableAccess] (unnamed local variable)
#-----|                 Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#-----|                 ValueCategory = lvalue
#-----|         getStmt(2): [GotoStmt] goto ...
#-----|       getChild(1): [Handler] <handler>
#-----|         getBlock(): [CatchAnyBlock] { ... }
#-----|           getStmt(0): [IfStmt] if (...) ... 
#-----|             getCondition(): [NotExpr] ! ...
#-----|                 Type = [BoolType] bool
#-----|                 ValueCategory = prvalue
#-----|               getOperand(): [VariableAccess] (unnamed local variable)
#-----|                   Type = [BoolType] bool
#-----|                   ValueCategory = prvalue(load)
#-----|             getThen(): [ExprStmt] ExprStmt
#-----|               getExpr(): [ReThrowExpr] re-throw exception 
#-----|                   Type = [VoidType] void
#-----|                   ValueCategory = prvalue
#-----|           getStmt(1): [ExprStmt] ExprStmt
#   87|             getExpr(): [FunctionCall] call to unhandled_exception
#   87|                 Type = [VoidType] void
#   87|                 ValueCategory = prvalue
#   87|               getQualifier(): [VariableAccess] (unnamed local variable)
#   87|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   87|                   ValueCategory = lvalue
#-----|     getStmt(2): [LabelStmt] label ...:
#-----|     getStmt(3): [ExprStmt] ExprStmt
#-----|       getExpr(): [CoAwaitExpr] co_await ...
#-----|           Type = [VoidType] void
#-----|           ValueCategory = prvalue
#   87|         getOperand(): [FunctionCall] call to final_suspend
#   87|             Type = [Struct] suspend_always
#   87|             ValueCategory = prvalue
#   87|           getQualifier(): [VariableAccess] (unnamed local variable)
#   87|               Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   87|               ValueCategory = lvalue
#   87|         getChild(1): [FunctionCall] call to await_ready
#   87|             Type = [BoolType] bool
#   87|             ValueCategory = prvalue
#   87|           getQualifier(): [PointerDereferenceExpr] * ...
#   87|               Type = [Struct] suspend_always
#   87|               ValueCategory = lvalue
#   87|             getOperand(): [AddressOfExpr] & ...
#   87|                 Type = [PointerType] suspend_always *
#   87|                 ValueCategory = prvalue
#   87|               getOperand(): [FunctionCall] call to final_suspend
#   87|                   Type = [Struct] suspend_always
#   87|                   ValueCategory = prvalue
#   87|                 getQualifier(): [VariableAccess] (unnamed local variable)
#   87|                     Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   87|                     ValueCategory = lvalue
#   87|               getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   87|                   Type = [Struct] suspend_always
#   87|                   ValueCategory = lvalue
#-----|             getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                 Type = [PointerType] suspend_always *
#-----|                 ValueCategory = prvalue(load)
#   87|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#   87|               Conversion = [GlvalueConversion] glvalue conversion
#   87|               Type = [SpecifiedType] const suspend_always
#   87|               ValueCategory = lvalue
#   87|         getChild(2): [FunctionCall] call to await_resume
#   87|             Type = [VoidType] void
#   87|             ValueCategory = prvalue
#   87|           getQualifier(): [PointerDereferenceExpr] * ...
#   87|               Type = [Struct] suspend_always
#   87|               ValueCategory = lvalue
#   87|             getOperand(): [ReuseExpr] reuse of & ...
#   87|                 Type = [PointerType] suspend_always *
#   87|                 ValueCategory = prvalue
#-----|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|               Conversion = [GlvalueConversion] glvalue conversion
#-----|               Type = [SpecifiedType] const suspend_always
#-----|               ValueCategory = lvalue
#   87|         getChild(3): [FunctionCall] call to await_suspend
#   87|             Type = [VoidType] void
#   87|             ValueCategory = prvalue
#   87|           getQualifier(): [PointerDereferenceExpr] * ...
#   87|               Type = [Struct] suspend_always
#   87|               ValueCategory = lvalue
#   87|             getOperand(): [ReuseExpr] reuse of & ...
#   87|                 Type = [PointerType] suspend_always *
#   87|                 ValueCategory = prvalue
#   87|           getArgument(0): [ConstructorCall] call to coroutine_handle
#   87|               Type = [VoidType] void
#   87|               ValueCategory = prvalue
#   87|             getArgument(0): [VariableAccess] (unnamed local variable)
#   87|                 Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   87|                 ValueCategory = lvalue
#   87|             getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   87|                 Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#   87|                 ValueCategory = prvalue
#   87|               getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#   87|                   Conversion = [GlvalueConversion] glvalue conversion
#   87|                   Type = [SpecifiedType] const coroutine_handle<promise_type>
#   87|                   ValueCategory = lvalue
#-----|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|               Conversion = [GlvalueConversion] glvalue conversion
#-----|               Type = [SpecifiedType] const suspend_always
#-----|               ValueCategory = lvalue
#   87|           getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   87|               Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   87|               ValueCategory = lvalue
#   91| [TopLevelFunction] co_returnable_value co_return_int(int)
#   91|   <params>: 
#   91|     getParameter(0): [Parameter] i
#   91|         Type = [IntType] int
#   91|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [DeclStmt] declaration
#-----|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of i
#-----|           Type = [IntType] int
#-----|         getVariable().getInitializer(): [Initializer] initializer for i
#-----|           getExpr(): [VariableAccess] i
#-----|               Type = [IntType] int
#-----|               ValueCategory = prvalue(load)
#-----|     getStmt(1): [DeclStmt] declaration
#   91|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (unnamed local variable)
#   91|           Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#-----|     getStmt(2): [TryStmt] try { ... }
#-----|       getStmt(): [BlockStmt] { ... }
#-----|         getStmt(0): [ExprStmt] ExprStmt
#-----|           getExpr(): [CoAwaitExpr] co_await ...
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
#   91|             getOperand(): [FunctionCall] call to initial_suspend
#   91|                 Type = [Struct] suspend_always
#   91|                 ValueCategory = prvalue
#   91|               getQualifier(): [VariableAccess] (unnamed local variable)
#   91|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   91|                   ValueCategory = lvalue
#   91|             getChild(1): [FunctionCall] call to await_ready
#   91|                 Type = [BoolType] bool
#   91|                 ValueCategory = prvalue
#   91|               getQualifier(): [PointerDereferenceExpr] * ...
#   91|                   Type = [Struct] suspend_always
#   91|                   ValueCategory = lvalue
#   91|                 getOperand(): [AddressOfExpr] & ...
#   91|                     Type = [PointerType] suspend_always *
#   91|                     ValueCategory = prvalue
#   91|                   getOperand(): [FunctionCall] call to initial_suspend
#   91|                       Type = [Struct] suspend_always
#   91|                       ValueCategory = prvalue
#   91|                     getQualifier(): [VariableAccess] (unnamed local variable)
#   91|                         Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   91|                         ValueCategory = lvalue
#   91|                   getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   91|                       Type = [Struct] suspend_always
#   91|                       ValueCategory = lvalue
#-----|                 getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                     Type = [PointerType] suspend_always *
#-----|                     ValueCategory = prvalue(load)
#   91|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#   91|                   Conversion = [GlvalueConversion] glvalue conversion
#   91|                   Type = [SpecifiedType] const suspend_always
#   91|                   ValueCategory = lvalue
#-----|             getChild(2): [CommaExpr] ... , ...
#-----|                 Type = [VoidType] void
#-----|                 ValueCategory = prvalue
#-----|               getLeftOperand(): [AssignExpr] ... = ...
#-----|                   Type = [BoolType] bool
#-----|                   ValueCategory = prvalue
#-----|                 getLValue(): [VariableAccess] (unnamed local variable)
#-----|                     Type = [BoolType] bool
#-----|                     ValueCategory = lvalue
#-----|                 getRValue(): [Literal] 1
#-----|                     Type = [BoolType] bool
#-----|                     Value = [Literal] 1
#-----|                     ValueCategory = prvalue
#   91|               getRightOperand(): [FunctionCall] call to await_resume
#   91|                   Type = [VoidType] void
#   91|                   ValueCategory = prvalue
#   91|                 getQualifier(): [PointerDereferenceExpr] * ...
#   91|                     Type = [Struct] suspend_always
#   91|                     ValueCategory = lvalue
#   91|                   getOperand(): [ReuseExpr] reuse of & ...
#   91|                       Type = [PointerType] suspend_always *
#   91|                       ValueCategory = prvalue
#-----|                 getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                     Conversion = [GlvalueConversion] glvalue conversion
#-----|                     Type = [SpecifiedType] const suspend_always
#-----|                     ValueCategory = lvalue
#   91|             getChild(3): [FunctionCall] call to await_suspend
#   91|                 Type = [VoidType] void
#   91|                 ValueCategory = prvalue
#   91|               getQualifier(): [PointerDereferenceExpr] * ...
#   91|                   Type = [Struct] suspend_always
#   91|                   ValueCategory = lvalue
#   91|                 getOperand(): [ReuseExpr] reuse of & ...
#   91|                     Type = [PointerType] suspend_always *
#   91|                     ValueCategory = prvalue
#   91|               getArgument(0): [ConstructorCall] call to coroutine_handle
#   91|                   Type = [VoidType] void
#   91|                   ValueCategory = prvalue
#   91|                 getArgument(0): [VariableAccess] (unnamed local variable)
#   91|                     Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   91|                     ValueCategory = lvalue
#   91|                 getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   91|                     Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#   91|                     ValueCategory = prvalue
#   91|                   getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#   91|                       Conversion = [GlvalueConversion] glvalue conversion
#   91|                       Type = [SpecifiedType] const coroutine_handle<promise_type>
#   91|                       ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#   91|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   91|                   Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   91|                   ValueCategory = lvalue
#   92|         getStmt(1): [CoReturnStmt] co_return ...
#-----|           getChild(0): [FunctionCall] call to return_value
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
#-----|             getQualifier(): [VariableAccess] (unnamed local variable)
#-----|                 Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#-----|                 ValueCategory = lvalue
#   92|             getArgument(0): [VariableAccess] i
#   92|                 Type = [IntType] int
#   92|                 ValueCategory = prvalue(load)
#-----|         getStmt(2): [GotoStmt] goto ...
#-----|       getChild(1): [Handler] <handler>
#-----|         getBlock(): [CatchAnyBlock] { ... }
#-----|           getStmt(0): [IfStmt] if (...) ... 
#-----|             getCondition(): [NotExpr] ! ...
#-----|                 Type = [BoolType] bool
#-----|                 ValueCategory = prvalue
#-----|               getOperand(): [VariableAccess] (unnamed local variable)
#-----|                   Type = [BoolType] bool
#-----|                   ValueCategory = prvalue(load)
#-----|             getThen(): [ExprStmt] ExprStmt
#-----|               getExpr(): [ReThrowExpr] re-throw exception 
#-----|                   Type = [VoidType] void
#-----|                   ValueCategory = prvalue
#-----|           getStmt(1): [ExprStmt] ExprStmt
#   91|             getExpr(): [FunctionCall] call to unhandled_exception
#   91|                 Type = [VoidType] void
#   91|                 ValueCategory = prvalue
#   91|               getQualifier(): [VariableAccess] (unnamed local variable)
#   91|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   91|                   ValueCategory = lvalue
#-----|     getStmt(3): [LabelStmt] label ...:
#-----|     getStmt(4): [ExprStmt] ExprStmt
#-----|       getExpr(): [CoAwaitExpr] co_await ...
#-----|           Type = [VoidType] void
#-----|           ValueCategory = prvalue
#   91|         getOperand(): [FunctionCall] call to final_suspend
#   91|             Type = [Struct] suspend_always
#   91|             ValueCategory = prvalue
#   91|           getQualifier(): [VariableAccess] (unnamed local variable)
#   91|               Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   91|               ValueCategory = lvalue
#   91|         getChild(1): [FunctionCall] call to await_ready
#   91|             Type = [BoolType] bool
#   91|             ValueCategory = prvalue
#   91|           getQualifier(): [PointerDereferenceExpr] * ...
#   91|               Type = [Struct] suspend_always
#   91|               ValueCategory = lvalue
#   91|             getOperand(): [AddressOfExpr] & ...
#   91|                 Type = [PointerType] suspend_always *
#   91|                 ValueCategory = prvalue
#   91|               getOperand(): [FunctionCall] call to final_suspend
#   91|                   Type = [Struct] suspend_always
#   91|                   ValueCategory = prvalue
#   91|                 getQualifier(): [VariableAccess] (unnamed local variable)
#   91|                     Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   91|                     ValueCategory = lvalue
#   91|               getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   91|                   Type = [Struct] suspend_always
#   91|                   ValueCategory = lvalue
#-----|             getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                 Type = [PointerType] suspend_always *
#-----|                 ValueCategory = prvalue(load)
#   91|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#   91|               Conversion = [GlvalueConversion] glvalue conversion
#   91|               Type = [SpecifiedType] const suspend_always
#   91|               ValueCategory = lvalue
#   91|         getChild(2): [FunctionCall] call to await_resume
#   91|             Type = [VoidType] void
#   91|             ValueCategory = prvalue
#   91|           getQualifier(): [PointerDereferenceExpr] * ...
#   91|               Type = [Struct] suspend_always
#   91|               ValueCategory = lvalue
#   91|             getOperand(): [ReuseExpr] reuse of & ...
#   91|                 Type = [PointerType] suspend_always *
#   91|                 ValueCategory = prvalue
#-----|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|               Conversion = [GlvalueConversion] glvalue conversion
#-----|               Type = [SpecifiedType] const suspend_always
#-----|               ValueCategory = lvalue
#   91|         getChild(3): [FunctionCall] call to await_suspend
#   91|             Type = [VoidType] void
#   91|             ValueCategory = prvalue
#   91|           getQualifier(): [PointerDereferenceExpr] * ...
#   91|               Type = [Struct] suspend_always
#   91|               ValueCategory = lvalue
#   91|             getOperand(): [ReuseExpr] reuse of & ...
#   91|                 Type = [PointerType] suspend_always *
#   91|                 ValueCategory = prvalue
#   91|           getArgument(0): [ConstructorCall] call to coroutine_handle
#   91|               Type = [VoidType] void
#   91|               ValueCategory = prvalue
#   91|             getArgument(0): [VariableAccess] (unnamed local variable)
#   91|                 Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   91|                 ValueCategory = lvalue
#   91|             getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   91|                 Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#   91|                 ValueCategory = prvalue
#   91|               getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#   91|                   Conversion = [GlvalueConversion] glvalue conversion
#   91|                   Type = [SpecifiedType] const coroutine_handle<promise_type>
#   91|                   ValueCategory = lvalue
#-----|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|               Conversion = [GlvalueConversion] glvalue conversion
#-----|               Type = [SpecifiedType] const suspend_always
#-----|               ValueCategory = lvalue
#   91|           getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   91|               Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   91|               ValueCategory = lvalue
#   95| [TopLevelFunction] co_returnable_void co_yield_value_void(int)
#   95|   <params>: 
#   95|     getParameter(0): [Parameter] i
#   95|         Type = [IntType] int
#   95|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [DeclStmt] declaration
#-----|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of i
#-----|           Type = [IntType] int
#-----|         getVariable().getInitializer(): [Initializer] initializer for i
#-----|           getExpr(): [VariableAccess] i
#-----|               Type = [IntType] int
#-----|               ValueCategory = prvalue(load)
#-----|     getStmt(1): [DeclStmt] declaration
#   95|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (unnamed local variable)
#   95|           Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#-----|     getStmt(2): [TryStmt] try { ... }
#-----|       getStmt(): [BlockStmt] { ... }
#-----|         getStmt(0): [ExprStmt] ExprStmt
#-----|           getExpr(): [CoAwaitExpr] co_await ...
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
#   95|             getOperand(): [FunctionCall] call to initial_suspend
#   95|                 Type = [Struct] suspend_always
#   95|                 ValueCategory = prvalue
#   95|               getQualifier(): [VariableAccess] (unnamed local variable)
#   95|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   95|                   ValueCategory = lvalue
#   95|             getChild(1): [FunctionCall] call to await_ready
#   95|                 Type = [BoolType] bool
#   95|                 ValueCategory = prvalue
#   95|               getQualifier(): [PointerDereferenceExpr] * ...
#   95|                   Type = [Struct] suspend_always
#   95|                   ValueCategory = lvalue
#   95|                 getOperand(): [AddressOfExpr] & ...
#   95|                     Type = [PointerType] suspend_always *
#   95|                     ValueCategory = prvalue
#   95|                   getOperand(): [FunctionCall] call to initial_suspend
#   95|                       Type = [Struct] suspend_always
#   95|                       ValueCategory = prvalue
#   95|                     getQualifier(): [VariableAccess] (unnamed local variable)
#   95|                         Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   95|                         ValueCategory = lvalue
#   95|                   getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   95|                       Type = [Struct] suspend_always
#   95|                       ValueCategory = lvalue
#-----|                 getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                     Type = [PointerType] suspend_always *
#-----|                     ValueCategory = prvalue(load)
#   95|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#   95|                   Conversion = [GlvalueConversion] glvalue conversion
#   95|                   Type = [SpecifiedType] const suspend_always
#   95|                   ValueCategory = lvalue
#-----|             getChild(2): [CommaExpr] ... , ...
#-----|                 Type = [VoidType] void
#-----|                 ValueCategory = prvalue
#-----|               getLeftOperand(): [AssignExpr] ... = ...
#-----|                   Type = [BoolType] bool
#-----|                   ValueCategory = prvalue
#-----|                 getLValue(): [VariableAccess] (unnamed local variable)
#-----|                     Type = [BoolType] bool
#-----|                     ValueCategory = lvalue
#-----|                 getRValue(): [Literal] 1
#-----|                     Type = [BoolType] bool
#-----|                     Value = [Literal] 1
#-----|                     ValueCategory = prvalue
#   95|               getRightOperand(): [FunctionCall] call to await_resume
#   95|                   Type = [VoidType] void
#   95|                   ValueCategory = prvalue
#   95|                 getQualifier(): [PointerDereferenceExpr] * ...
#   95|                     Type = [Struct] suspend_always
#   95|                     ValueCategory = lvalue
#   95|                   getOperand(): [ReuseExpr] reuse of & ...
#   95|                       Type = [PointerType] suspend_always *
#   95|                       ValueCategory = prvalue
#-----|                 getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                     Conversion = [GlvalueConversion] glvalue conversion
#-----|                     Type = [SpecifiedType] const suspend_always
#-----|                     ValueCategory = lvalue
#   95|             getChild(3): [FunctionCall] call to await_suspend
#   95|                 Type = [VoidType] void
#   95|                 ValueCategory = prvalue
#   95|               getQualifier(): [PointerDereferenceExpr] * ...
#   95|                   Type = [Struct] suspend_always
#   95|                   ValueCategory = lvalue
#   95|                 getOperand(): [ReuseExpr] reuse of & ...
#   95|                     Type = [PointerType] suspend_always *
#   95|                     ValueCategory = prvalue
#   95|               getArgument(0): [ConstructorCall] call to coroutine_handle
#   95|                   Type = [VoidType] void
#   95|                   ValueCategory = prvalue
#   95|                 getArgument(0): [VariableAccess] (unnamed local variable)
#   95|                     Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   95|                     ValueCategory = lvalue
#   95|                 getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   95|                     Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#   95|                     ValueCategory = prvalue
#   95|                   getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#   95|                       Conversion = [GlvalueConversion] glvalue conversion
#   95|                       Type = [SpecifiedType] const coroutine_handle<promise_type>
#   95|                       ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#   95|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   95|                   Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   95|                   ValueCategory = lvalue
#   96|         getStmt(1): [ExprStmt] ExprStmt
#   96|           getExpr(): [CoYieldExpr] co_yield ...
#   96|               Type = [VoidType] void
#   96|               ValueCategory = prvalue
#   96|             getOperand(): [FunctionCall] call to yield_value
#   96|                 Type = [Struct] suspend_always
#   96|                 ValueCategory = prvalue
#   96|               getQualifier(): [VariableAccess] (unnamed local variable)
#   96|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   96|                   ValueCategory = lvalue
#   96|               getArgument(0): [VariableAccess] i
#   96|                   Type = [IntType] int
#   96|                   ValueCategory = prvalue(load)
#   96|             getChild(1): [FunctionCall] call to await_ready
#   96|                 Type = [BoolType] bool
#   96|                 ValueCategory = prvalue
#   96|               getQualifier(): [PointerDereferenceExpr] * ...
#   96|                   Type = [Struct] suspend_always
#   96|                   ValueCategory = lvalue
#   96|                 getOperand(): [AddressOfExpr] & ...
#   96|                     Type = [PointerType] suspend_always *
#   96|                     ValueCategory = prvalue
#   96|                   getOperand(): [FunctionCall] call to yield_value
#   96|                       Type = [Struct] suspend_always
#   96|                       ValueCategory = prvalue
#   96|                     getQualifier(): [VariableAccess] (unnamed local variable)
#   96|                         Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   96|                         ValueCategory = lvalue
#   96|                     getArgument(0): [VariableAccess] i
#   96|                         Type = [IntType] int
#   96|                         ValueCategory = prvalue(load)
#   96|                   getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   96|                       Type = [Struct] suspend_always
#   96|                       ValueCategory = lvalue
#-----|                 getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                     Type = [PointerType] suspend_always *
#-----|                     ValueCategory = prvalue(load)
#   96|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#   96|                   Conversion = [GlvalueConversion] glvalue conversion
#   96|                   Type = [SpecifiedType] const suspend_always
#   96|                   ValueCategory = lvalue
#   96|             getChild(2): [FunctionCall] call to await_resume
#   96|                 Type = [VoidType] void
#   96|                 ValueCategory = prvalue
#   96|               getQualifier(): [PointerDereferenceExpr] * ...
#   96|                   Type = [Struct] suspend_always
#   96|                   ValueCategory = lvalue
#   96|                 getOperand(): [ReuseExpr] reuse of & ...
#   96|                     Type = [PointerType] suspend_always *
#   96|                     ValueCategory = prvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#   96|             getChild(3): [FunctionCall] call to await_suspend
#   96|                 Type = [VoidType] void
#   96|                 ValueCategory = prvalue
#   96|               getQualifier(): [PointerDereferenceExpr] * ...
#   96|                   Type = [Struct] suspend_always
#   96|                   ValueCategory = lvalue
#   96|                 getOperand(): [ReuseExpr] reuse of & ...
#   96|                     Type = [PointerType] suspend_always *
#   96|                     ValueCategory = prvalue
#   96|               getArgument(0): [ConstructorCall] call to coroutine_handle
#   96|                   Type = [VoidType] void
#   96|                   ValueCategory = prvalue
#   96|                 getArgument(0): [VariableAccess] (unnamed local variable)
#   96|                     Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   96|                     ValueCategory = lvalue
#   96|                 getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   96|                     Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#   96|                     ValueCategory = prvalue
#   96|                   getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#   96|                       Conversion = [GlvalueConversion] glvalue conversion
#   96|                       Type = [SpecifiedType] const coroutine_handle<promise_type>
#   96|                       ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#   96|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   96|                   Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   96|                   ValueCategory = lvalue
#   97|         getStmt(2): [CoReturnStmt] co_return ...
#-----|           getChild(0): [FunctionCall] call to return_void
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
#-----|             getQualifier(): [VariableAccess] (unnamed local variable)
#-----|                 Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#-----|                 ValueCategory = lvalue
#-----|         getStmt(3): [GotoStmt] goto ...
#-----|       getChild(1): [Handler] <handler>
#-----|         getBlock(): [CatchAnyBlock] { ... }
#-----|           getStmt(0): [IfStmt] if (...) ... 
#-----|             getCondition(): [NotExpr] ! ...
#-----|                 Type = [BoolType] bool
#-----|                 ValueCategory = prvalue
#-----|               getOperand(): [VariableAccess] (unnamed local variable)
#-----|                   Type = [BoolType] bool
#-----|                   ValueCategory = prvalue(load)
#-----|             getThen(): [ExprStmt] ExprStmt
#-----|               getExpr(): [ReThrowExpr] re-throw exception 
#-----|                   Type = [VoidType] void
#-----|                   ValueCategory = prvalue
#-----|           getStmt(1): [ExprStmt] ExprStmt
#   95|             getExpr(): [FunctionCall] call to unhandled_exception
#   95|                 Type = [VoidType] void
#   95|                 ValueCategory = prvalue
#   95|               getQualifier(): [VariableAccess] (unnamed local variable)
#   95|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   95|                   ValueCategory = lvalue
#-----|     getStmt(3): [LabelStmt] label ...:
#-----|     getStmt(4): [ExprStmt] ExprStmt
#-----|       getExpr(): [CoAwaitExpr] co_await ...
#-----|           Type = [VoidType] void
#-----|           ValueCategory = prvalue
#   95|         getOperand(): [FunctionCall] call to final_suspend
#   95|             Type = [Struct] suspend_always
#   95|             ValueCategory = prvalue
#   95|           getQualifier(): [VariableAccess] (unnamed local variable)
#   95|               Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   95|               ValueCategory = lvalue
#   95|         getChild(1): [FunctionCall] call to await_ready
#   95|             Type = [BoolType] bool
#   95|             ValueCategory = prvalue
#   95|           getQualifier(): [PointerDereferenceExpr] * ...
#   95|               Type = [Struct] suspend_always
#   95|               ValueCategory = lvalue
#   95|             getOperand(): [AddressOfExpr] & ...
#   95|                 Type = [PointerType] suspend_always *
#   95|                 ValueCategory = prvalue
#   95|               getOperand(): [FunctionCall] call to final_suspend
#   95|                   Type = [Struct] suspend_always
#   95|                   ValueCategory = prvalue
#   95|                 getQualifier(): [VariableAccess] (unnamed local variable)
#   95|                     Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   95|                     ValueCategory = lvalue
#   95|               getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   95|                   Type = [Struct] suspend_always
#   95|                   ValueCategory = lvalue
#-----|             getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                 Type = [PointerType] suspend_always *
#-----|                 ValueCategory = prvalue(load)
#   95|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#   95|               Conversion = [GlvalueConversion] glvalue conversion
#   95|               Type = [SpecifiedType] const suspend_always
#   95|               ValueCategory = lvalue
#   95|         getChild(2): [FunctionCall] call to await_resume
#   95|             Type = [VoidType] void
#   95|             ValueCategory = prvalue
#   95|           getQualifier(): [PointerDereferenceExpr] * ...
#   95|               Type = [Struct] suspend_always
#   95|               ValueCategory = lvalue
#   95|             getOperand(): [ReuseExpr] reuse of & ...
#   95|                 Type = [PointerType] suspend_always *
#   95|                 ValueCategory = prvalue
#-----|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|               Conversion = [GlvalueConversion] glvalue conversion
#-----|               Type = [SpecifiedType] const suspend_always
#-----|               ValueCategory = lvalue
#   95|         getChild(3): [FunctionCall] call to await_suspend
#   95|             Type = [VoidType] void
#   95|             ValueCategory = prvalue
#   95|           getQualifier(): [PointerDereferenceExpr] * ...
#   95|               Type = [Struct] suspend_always
#   95|               ValueCategory = lvalue
#   95|             getOperand(): [ReuseExpr] reuse of & ...
#   95|                 Type = [PointerType] suspend_always *
#   95|                 ValueCategory = prvalue
#   95|           getArgument(0): [ConstructorCall] call to coroutine_handle
#   95|               Type = [VoidType] void
#   95|               ValueCategory = prvalue
#   95|             getArgument(0): [VariableAccess] (unnamed local variable)
#   95|                 Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   95|                 ValueCategory = lvalue
#   95|             getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   95|                 Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#   95|                 ValueCategory = prvalue
#   95|               getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#   95|                   Conversion = [GlvalueConversion] glvalue conversion
#   95|                   Type = [SpecifiedType] const coroutine_handle<promise_type>
#   95|                   ValueCategory = lvalue
#-----|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|               Conversion = [GlvalueConversion] glvalue conversion
#-----|               Type = [SpecifiedType] const suspend_always
#-----|               ValueCategory = lvalue
#   95|           getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   95|               Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   95|               ValueCategory = lvalue
#   99| [TopLevelFunction] co_returnable_value co_yield_value_value(int)
#   99|   <params>: 
#   99|     getParameter(0): [Parameter] i
#   99|         Type = [IntType] int
#   99|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [DeclStmt] declaration
#-----|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of i
#-----|           Type = [IntType] int
#-----|         getVariable().getInitializer(): [Initializer] initializer for i
#-----|           getExpr(): [VariableAccess] i
#-----|               Type = [IntType] int
#-----|               ValueCategory = prvalue(load)
#-----|     getStmt(1): [DeclStmt] declaration
#   99|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (unnamed local variable)
#   99|           Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#-----|     getStmt(2): [TryStmt] try { ... }
#-----|       getStmt(): [BlockStmt] { ... }
#-----|         getStmt(0): [ExprStmt] ExprStmt
#-----|           getExpr(): [CoAwaitExpr] co_await ...
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
#   99|             getOperand(): [FunctionCall] call to initial_suspend
#   99|                 Type = [Struct] suspend_always
#   99|                 ValueCategory = prvalue
#   99|               getQualifier(): [VariableAccess] (unnamed local variable)
#   99|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   99|                   ValueCategory = lvalue
#   99|             getChild(1): [FunctionCall] call to await_ready
#   99|                 Type = [BoolType] bool
#   99|                 ValueCategory = prvalue
#   99|               getQualifier(): [PointerDereferenceExpr] * ...
#   99|                   Type = [Struct] suspend_always
#   99|                   ValueCategory = lvalue
#   99|                 getOperand(): [AddressOfExpr] & ...
#   99|                     Type = [PointerType] suspend_always *
#   99|                     ValueCategory = prvalue
#   99|                   getOperand(): [FunctionCall] call to initial_suspend
#   99|                       Type = [Struct] suspend_always
#   99|                       ValueCategory = prvalue
#   99|                     getQualifier(): [VariableAccess] (unnamed local variable)
#   99|                         Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   99|                         ValueCategory = lvalue
#   99|                   getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   99|                       Type = [Struct] suspend_always
#   99|                       ValueCategory = lvalue
#-----|                 getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                     Type = [PointerType] suspend_always *
#-----|                     ValueCategory = prvalue(load)
#   99|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#   99|                   Conversion = [GlvalueConversion] glvalue conversion
#   99|                   Type = [SpecifiedType] const suspend_always
#   99|                   ValueCategory = lvalue
#-----|             getChild(2): [CommaExpr] ... , ...
#-----|                 Type = [VoidType] void
#-----|                 ValueCategory = prvalue
#-----|               getLeftOperand(): [AssignExpr] ... = ...
#-----|                   Type = [BoolType] bool
#-----|                   ValueCategory = prvalue
#-----|                 getLValue(): [VariableAccess] (unnamed local variable)
#-----|                     Type = [BoolType] bool
#-----|                     ValueCategory = lvalue
#-----|                 getRValue(): [Literal] 1
#-----|                     Type = [BoolType] bool
#-----|                     Value = [Literal] 1
#-----|                     ValueCategory = prvalue
#   99|               getRightOperand(): [FunctionCall] call to await_resume
#   99|                   Type = [VoidType] void
#   99|                   ValueCategory = prvalue
#   99|                 getQualifier(): [PointerDereferenceExpr] * ...
#   99|                     Type = [Struct] suspend_always
#   99|                     ValueCategory = lvalue
#   99|                   getOperand(): [ReuseExpr] reuse of & ...
#   99|                       Type = [PointerType] suspend_always *
#   99|                       ValueCategory = prvalue
#-----|                 getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                     Conversion = [GlvalueConversion] glvalue conversion
#-----|                     Type = [SpecifiedType] const suspend_always
#-----|                     ValueCategory = lvalue
#   99|             getChild(3): [FunctionCall] call to await_suspend
#   99|                 Type = [VoidType] void
#   99|                 ValueCategory = prvalue
#   99|               getQualifier(): [PointerDereferenceExpr] * ...
#   99|                   Type = [Struct] suspend_always
#   99|                   ValueCategory = lvalue
#   99|                 getOperand(): [ReuseExpr] reuse of & ...
#   99|                     Type = [PointerType] suspend_always *
#   99|                     ValueCategory = prvalue
#   99|               getArgument(0): [ConstructorCall] call to coroutine_handle
#   99|                   Type = [VoidType] void
#   99|                   ValueCategory = prvalue
#   99|                 getArgument(0): [VariableAccess] (unnamed local variable)
#   99|                     Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   99|                     ValueCategory = lvalue
#   99|                 getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   99|                     Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#   99|                     ValueCategory = prvalue
#   99|                   getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#   99|                       Conversion = [GlvalueConversion] glvalue conversion
#   99|                       Type = [SpecifiedType] const coroutine_handle<promise_type>
#   99|                       ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#   99|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   99|                   Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   99|                   ValueCategory = lvalue
#  100|         getStmt(1): [ExprStmt] ExprStmt
#  100|           getExpr(): [CoYieldExpr] co_yield ...
#  100|               Type = [VoidType] void
#  100|               ValueCategory = prvalue
#  100|             getOperand(): [FunctionCall] call to yield_value
#  100|                 Type = [Struct] suspend_always
#  100|                 ValueCategory = prvalue
#  100|               getQualifier(): [VariableAccess] (unnamed local variable)
#  100|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  100|                   ValueCategory = lvalue
#  100|               getArgument(0): [VariableAccess] i
#  100|                   Type = [IntType] int
#  100|                   ValueCategory = prvalue(load)
#  100|             getChild(1): [FunctionCall] call to await_ready
#  100|                 Type = [BoolType] bool
#  100|                 ValueCategory = prvalue
#  100|               getQualifier(): [PointerDereferenceExpr] * ...
#  100|                   Type = [Struct] suspend_always
#  100|                   ValueCategory = lvalue
#  100|                 getOperand(): [AddressOfExpr] & ...
#  100|                     Type = [PointerType] suspend_always *
#  100|                     ValueCategory = prvalue
#  100|                   getOperand(): [FunctionCall] call to yield_value
#  100|                       Type = [Struct] suspend_always
#  100|                       ValueCategory = prvalue
#  100|                     getQualifier(): [VariableAccess] (unnamed local variable)
#  100|                         Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  100|                         ValueCategory = lvalue
#  100|                     getArgument(0): [VariableAccess] i
#  100|                         Type = [IntType] int
#  100|                         ValueCategory = prvalue(load)
#  100|                   getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#  100|                       Type = [Struct] suspend_always
#  100|                       ValueCategory = lvalue
#-----|                 getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                     Type = [PointerType] suspend_always *
#-----|                     ValueCategory = prvalue(load)
#  100|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#  100|                   Conversion = [GlvalueConversion] glvalue conversion
#  100|                   Type = [SpecifiedType] const suspend_always
#  100|                   ValueCategory = lvalue
#  100|             getChild(2): [FunctionCall] call to await_resume
#  100|                 Type = [VoidType] void
#  100|                 ValueCategory = prvalue
#  100|               getQualifier(): [PointerDereferenceExpr] * ...
#  100|                   Type = [Struct] suspend_always
#  100|                   ValueCategory = lvalue
#  100|                 getOperand(): [ReuseExpr] reuse of & ...
#  100|                     Type = [PointerType] suspend_always *
#  100|                     ValueCategory = prvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#  100|             getChild(3): [FunctionCall] call to await_suspend
#  100|                 Type = [VoidType] void
#  100|                 ValueCategory = prvalue
#  100|               getQualifier(): [PointerDereferenceExpr] * ...
#  100|                   Type = [Struct] suspend_always
#  100|                   ValueCategory = lvalue
#  100|                 getOperand(): [ReuseExpr] reuse of & ...
#  100|                     Type = [PointerType] suspend_always *
#  100|                     ValueCategory = prvalue
#  100|               getArgument(0): [ConstructorCall] call to coroutine_handle
#  100|                   Type = [VoidType] void
#  100|                   ValueCategory = prvalue
#  100|                 getArgument(0): [VariableAccess] (unnamed local variable)
#  100|                     Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  100|                     ValueCategory = lvalue
#  100|                 getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  100|                     Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#  100|                     ValueCategory = prvalue
#  100|                   getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#  100|                       Conversion = [GlvalueConversion] glvalue conversion
#  100|                       Type = [SpecifiedType] const coroutine_handle<promise_type>
#  100|                       ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#  100|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#  100|                   Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  100|                   ValueCategory = lvalue
#-----|       getChild(1): [Handler] <handler>
#-----|         getBlock(): [CatchAnyBlock] { ... }
#-----|           getStmt(0): [IfStmt] if (...) ... 
#-----|             getCondition(): [NotExpr] ! ...
#-----|                 Type = [BoolType] bool
#-----|                 ValueCategory = prvalue
#-----|               getOperand(): [VariableAccess] (unnamed local variable)
#-----|                   Type = [BoolType] bool
#-----|                   ValueCategory = prvalue(load)
#-----|             getThen(): [ExprStmt] ExprStmt
#-----|               getExpr(): [ReThrowExpr] re-throw exception 
#-----|                   Type = [VoidType] void
#-----|                   ValueCategory = prvalue
#-----|           getStmt(1): [ExprStmt] ExprStmt
#   99|             getExpr(): [FunctionCall] call to unhandled_exception
#   99|                 Type = [VoidType] void
#   99|                 ValueCategory = prvalue
#   99|               getQualifier(): [VariableAccess] (unnamed local variable)
#   99|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   99|                   ValueCategory = lvalue
#-----|     getStmt(3): [LabelStmt] label ...:
#-----|     getStmt(4): [ExprStmt] ExprStmt
#-----|       getExpr(): [CoAwaitExpr] co_await ...
#-----|           Type = [VoidType] void
#-----|           ValueCategory = prvalue
#   99|         getOperand(): [FunctionCall] call to final_suspend
#   99|             Type = [Struct] suspend_always
#   99|             ValueCategory = prvalue
#   99|           getQualifier(): [VariableAccess] (unnamed local variable)
#   99|               Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   99|               ValueCategory = lvalue
#   99|         getChild(1): [FunctionCall] call to await_ready
#   99|             Type = [BoolType] bool
#   99|             ValueCategory = prvalue
#   99|           getQualifier(): [PointerDereferenceExpr] * ...
#   99|               Type = [Struct] suspend_always
#   99|               ValueCategory = lvalue
#   99|             getOperand(): [AddressOfExpr] & ...
#   99|                 Type = [PointerType] suspend_always *
#   99|                 ValueCategory = prvalue
#   99|               getOperand(): [FunctionCall] call to final_suspend
#   99|                   Type = [Struct] suspend_always
#   99|                   ValueCategory = prvalue
#   99|                 getQualifier(): [VariableAccess] (unnamed local variable)
#   99|                     Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#   99|                     ValueCategory = lvalue
#   99|               getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   99|                   Type = [Struct] suspend_always
#   99|                   ValueCategory = lvalue
#-----|             getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                 Type = [PointerType] suspend_always *
#-----|                 ValueCategory = prvalue(load)
#   99|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#   99|               Conversion = [GlvalueConversion] glvalue conversion
#   99|               Type = [SpecifiedType] const suspend_always
#   99|               ValueCategory = lvalue
#   99|         getChild(2): [FunctionCall] call to await_resume
#   99|             Type = [VoidType] void
#   99|             ValueCategory = prvalue
#   99|           getQualifier(): [PointerDereferenceExpr] * ...
#   99|               Type = [Struct] suspend_always
#   99|               ValueCategory = lvalue
#   99|             getOperand(): [ReuseExpr] reuse of & ...
#   99|                 Type = [PointerType] suspend_always *
#   99|                 ValueCategory = prvalue
#-----|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|               Conversion = [GlvalueConversion] glvalue conversion
#-----|               Type = [SpecifiedType] const suspend_always
#-----|               ValueCategory = lvalue
#   99|         getChild(3): [FunctionCall] call to await_suspend
#   99|             Type = [VoidType] void
#   99|             ValueCategory = prvalue
#   99|           getQualifier(): [PointerDereferenceExpr] * ...
#   99|               Type = [Struct] suspend_always
#   99|               ValueCategory = lvalue
#   99|             getOperand(): [ReuseExpr] reuse of & ...
#   99|                 Type = [PointerType] suspend_always *
#   99|                 ValueCategory = prvalue
#   99|           getArgument(0): [ConstructorCall] call to coroutine_handle
#   99|               Type = [VoidType] void
#   99|               ValueCategory = prvalue
#   99|             getArgument(0): [VariableAccess] (unnamed local variable)
#   99|                 Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   99|                 ValueCategory = lvalue
#   99|             getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   99|                 Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#   99|                 ValueCategory = prvalue
#   99|               getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#   99|                   Conversion = [GlvalueConversion] glvalue conversion
#   99|                   Type = [SpecifiedType] const coroutine_handle<promise_type>
#   99|                   ValueCategory = lvalue
#-----|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|               Conversion = [GlvalueConversion] glvalue conversion
#-----|               Type = [SpecifiedType] const suspend_always
#-----|               ValueCategory = lvalue
#   99|           getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   99|               Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#   99|               ValueCategory = lvalue
#  103| [TopLevelFunction] co_returnable_void co_yield_and_return_void(int)
#  103|   <params>: 
#  103|     getParameter(0): [Parameter] i
#  103|         Type = [IntType] int
#  103|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [DeclStmt] declaration
#-----|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of i
#-----|           Type = [IntType] int
#-----|         getVariable().getInitializer(): [Initializer] initializer for i
#-----|           getExpr(): [VariableAccess] i
#-----|               Type = [IntType] int
#-----|               ValueCategory = prvalue(load)
#-----|     getStmt(1): [DeclStmt] declaration
#  103|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (unnamed local variable)
#  103|           Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#-----|     getStmt(2): [TryStmt] try { ... }
#-----|       getStmt(): [BlockStmt] { ... }
#-----|         getStmt(0): [ExprStmt] ExprStmt
#-----|           getExpr(): [CoAwaitExpr] co_await ...
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
#  103|             getOperand(): [FunctionCall] call to initial_suspend
#  103|                 Type = [Struct] suspend_always
#  103|                 ValueCategory = prvalue
#  103|               getQualifier(): [VariableAccess] (unnamed local variable)
#  103|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  103|                   ValueCategory = lvalue
#  103|             getChild(1): [FunctionCall] call to await_ready
#  103|                 Type = [BoolType] bool
#  103|                 ValueCategory = prvalue
#  103|               getQualifier(): [PointerDereferenceExpr] * ...
#  103|                   Type = [Struct] suspend_always
#  103|                   ValueCategory = lvalue
#  103|                 getOperand(): [AddressOfExpr] & ...
#  103|                     Type = [PointerType] suspend_always *
#  103|                     ValueCategory = prvalue
#  103|                   getOperand(): [FunctionCall] call to initial_suspend
#  103|                       Type = [Struct] suspend_always
#  103|                       ValueCategory = prvalue
#  103|                     getQualifier(): [VariableAccess] (unnamed local variable)
#  103|                         Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  103|                         ValueCategory = lvalue
#  103|                   getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#  103|                       Type = [Struct] suspend_always
#  103|                       ValueCategory = lvalue
#-----|                 getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                     Type = [PointerType] suspend_always *
#-----|                     ValueCategory = prvalue(load)
#  103|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#  103|                   Conversion = [GlvalueConversion] glvalue conversion
#  103|                   Type = [SpecifiedType] const suspend_always
#  103|                   ValueCategory = lvalue
#-----|             getChild(2): [CommaExpr] ... , ...
#-----|                 Type = [VoidType] void
#-----|                 ValueCategory = prvalue
#-----|               getLeftOperand(): [AssignExpr] ... = ...
#-----|                   Type = [BoolType] bool
#-----|                   ValueCategory = prvalue
#-----|                 getLValue(): [VariableAccess] (unnamed local variable)
#-----|                     Type = [BoolType] bool
#-----|                     ValueCategory = lvalue
#-----|                 getRValue(): [Literal] 1
#-----|                     Type = [BoolType] bool
#-----|                     Value = [Literal] 1
#-----|                     ValueCategory = prvalue
#  103|               getRightOperand(): [FunctionCall] call to await_resume
#  103|                   Type = [VoidType] void
#  103|                   ValueCategory = prvalue
#  103|                 getQualifier(): [PointerDereferenceExpr] * ...
#  103|                     Type = [Struct] suspend_always
#  103|                     ValueCategory = lvalue
#  103|                   getOperand(): [ReuseExpr] reuse of & ...
#  103|                       Type = [PointerType] suspend_always *
#  103|                       ValueCategory = prvalue
#-----|                 getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                     Conversion = [GlvalueConversion] glvalue conversion
#-----|                     Type = [SpecifiedType] const suspend_always
#-----|                     ValueCategory = lvalue
#  103|             getChild(3): [FunctionCall] call to await_suspend
#  103|                 Type = [VoidType] void
#  103|                 ValueCategory = prvalue
#  103|               getQualifier(): [PointerDereferenceExpr] * ...
#  103|                   Type = [Struct] suspend_always
#  103|                   ValueCategory = lvalue
#  103|                 getOperand(): [ReuseExpr] reuse of & ...
#  103|                     Type = [PointerType] suspend_always *
#  103|                     ValueCategory = prvalue
#  103|               getArgument(0): [ConstructorCall] call to coroutine_handle
#  103|                   Type = [VoidType] void
#  103|                   ValueCategory = prvalue
#  103|                 getArgument(0): [VariableAccess] (unnamed local variable)
#  103|                     Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  103|                     ValueCategory = lvalue
#  103|                 getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  103|                     Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#  103|                     ValueCategory = prvalue
#  103|                   getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#  103|                       Conversion = [GlvalueConversion] glvalue conversion
#  103|                       Type = [SpecifiedType] const coroutine_handle<promise_type>
#  103|                       ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#  103|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#  103|                   Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  103|                   ValueCategory = lvalue
#  104|         getStmt(1): [ExprStmt] ExprStmt
#  104|           getExpr(): [CoYieldExpr] co_yield ...
#  104|               Type = [VoidType] void
#  104|               ValueCategory = prvalue
#  104|             getOperand(): [FunctionCall] call to yield_value
#  104|                 Type = [Struct] suspend_always
#  104|                 ValueCategory = prvalue
#  104|               getQualifier(): [VariableAccess] (unnamed local variable)
#  104|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  104|                   ValueCategory = lvalue
#  104|               getArgument(0): [VariableAccess] i
#  104|                   Type = [IntType] int
#  104|                   ValueCategory = prvalue(load)
#  104|             getChild(1): [FunctionCall] call to await_ready
#  104|                 Type = [BoolType] bool
#  104|                 ValueCategory = prvalue
#  104|               getQualifier(): [PointerDereferenceExpr] * ...
#  104|                   Type = [Struct] suspend_always
#  104|                   ValueCategory = lvalue
#  104|                 getOperand(): [AddressOfExpr] & ...
#  104|                     Type = [PointerType] suspend_always *
#  104|                     ValueCategory = prvalue
#  104|                   getOperand(): [FunctionCall] call to yield_value
#  104|                       Type = [Struct] suspend_always
#  104|                       ValueCategory = prvalue
#  104|                     getQualifier(): [VariableAccess] (unnamed local variable)
#  104|                         Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  104|                         ValueCategory = lvalue
#  104|                     getArgument(0): [VariableAccess] i
#  104|                         Type = [IntType] int
#  104|                         ValueCategory = prvalue(load)
#  104|                   getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#  104|                       Type = [Struct] suspend_always
#  104|                       ValueCategory = lvalue
#-----|                 getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                     Type = [PointerType] suspend_always *
#-----|                     ValueCategory = prvalue(load)
#  104|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#  104|                   Conversion = [GlvalueConversion] glvalue conversion
#  104|                   Type = [SpecifiedType] const suspend_always
#  104|                   ValueCategory = lvalue
#  104|             getChild(2): [FunctionCall] call to await_resume
#  104|                 Type = [VoidType] void
#  104|                 ValueCategory = prvalue
#  104|               getQualifier(): [PointerDereferenceExpr] * ...
#  104|                   Type = [Struct] suspend_always
#  104|                   ValueCategory = lvalue
#  104|                 getOperand(): [ReuseExpr] reuse of & ...
#  104|                     Type = [PointerType] suspend_always *
#  104|                     ValueCategory = prvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#  104|             getChild(3): [FunctionCall] call to await_suspend
#  104|                 Type = [VoidType] void
#  104|                 ValueCategory = prvalue
#  104|               getQualifier(): [PointerDereferenceExpr] * ...
#  104|                   Type = [Struct] suspend_always
#  104|                   ValueCategory = lvalue
#  104|                 getOperand(): [ReuseExpr] reuse of & ...
#  104|                     Type = [PointerType] suspend_always *
#  104|                     ValueCategory = prvalue
#  104|               getArgument(0): [ConstructorCall] call to coroutine_handle
#  104|                   Type = [VoidType] void
#  104|                   ValueCategory = prvalue
#  104|                 getArgument(0): [VariableAccess] (unnamed local variable)
#  104|                     Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  104|                     ValueCategory = lvalue
#  104|                 getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  104|                     Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#  104|                     ValueCategory = prvalue
#  104|                   getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#  104|                       Conversion = [GlvalueConversion] glvalue conversion
#  104|                       Type = [SpecifiedType] const coroutine_handle<promise_type>
#  104|                       ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#  104|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#  104|                   Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  104|                   ValueCategory = lvalue
#  105|         getStmt(2): [CoReturnStmt] co_return ...
#-----|           getChild(0): [FunctionCall] call to return_void
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
#-----|             getQualifier(): [VariableAccess] (unnamed local variable)
#-----|                 Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#-----|                 ValueCategory = lvalue
#-----|         getStmt(3): [GotoStmt] goto ...
#-----|       getChild(1): [Handler] <handler>
#-----|         getBlock(): [CatchAnyBlock] { ... }
#-----|           getStmt(0): [IfStmt] if (...) ... 
#-----|             getCondition(): [NotExpr] ! ...
#-----|                 Type = [BoolType] bool
#-----|                 ValueCategory = prvalue
#-----|               getOperand(): [VariableAccess] (unnamed local variable)
#-----|                   Type = [BoolType] bool
#-----|                   ValueCategory = prvalue(load)
#-----|             getThen(): [ExprStmt] ExprStmt
#-----|               getExpr(): [ReThrowExpr] re-throw exception 
#-----|                   Type = [VoidType] void
#-----|                   ValueCategory = prvalue
#-----|           getStmt(1): [ExprStmt] ExprStmt
#  103|             getExpr(): [FunctionCall] call to unhandled_exception
#  103|                 Type = [VoidType] void
#  103|                 ValueCategory = prvalue
#  103|               getQualifier(): [VariableAccess] (unnamed local variable)
#  103|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  103|                   ValueCategory = lvalue
#-----|     getStmt(3): [LabelStmt] label ...:
#-----|     getStmt(4): [ExprStmt] ExprStmt
#-----|       getExpr(): [CoAwaitExpr] co_await ...
#-----|           Type = [VoidType] void
#-----|           ValueCategory = prvalue
#  103|         getOperand(): [FunctionCall] call to final_suspend
#  103|             Type = [Struct] suspend_always
#  103|             ValueCategory = prvalue
#  103|           getQualifier(): [VariableAccess] (unnamed local variable)
#  103|               Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  103|               ValueCategory = lvalue
#  103|         getChild(1): [FunctionCall] call to await_ready
#  103|             Type = [BoolType] bool
#  103|             ValueCategory = prvalue
#  103|           getQualifier(): [PointerDereferenceExpr] * ...
#  103|               Type = [Struct] suspend_always
#  103|               ValueCategory = lvalue
#  103|             getOperand(): [AddressOfExpr] & ...
#  103|                 Type = [PointerType] suspend_always *
#  103|                 ValueCategory = prvalue
#  103|               getOperand(): [FunctionCall] call to final_suspend
#  103|                   Type = [Struct] suspend_always
#  103|                   ValueCategory = prvalue
#  103|                 getQualifier(): [VariableAccess] (unnamed local variable)
#  103|                     Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  103|                     ValueCategory = lvalue
#  103|               getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#  103|                   Type = [Struct] suspend_always
#  103|                   ValueCategory = lvalue
#-----|             getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                 Type = [PointerType] suspend_always *
#-----|                 ValueCategory = prvalue(load)
#  103|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#  103|               Conversion = [GlvalueConversion] glvalue conversion
#  103|               Type = [SpecifiedType] const suspend_always
#  103|               ValueCategory = lvalue
#  103|         getChild(2): [FunctionCall] call to await_resume
#  103|             Type = [VoidType] void
#  103|             ValueCategory = prvalue
#  103|           getQualifier(): [PointerDereferenceExpr] * ...
#  103|               Type = [Struct] suspend_always
#  103|               ValueCategory = lvalue
#  103|             getOperand(): [ReuseExpr] reuse of & ...
#  103|                 Type = [PointerType] suspend_always *
#  103|                 ValueCategory = prvalue
#-----|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|               Conversion = [GlvalueConversion] glvalue conversion
#-----|               Type = [SpecifiedType] const suspend_always
#-----|               ValueCategory = lvalue
#  103|         getChild(3): [FunctionCall] call to await_suspend
#  103|             Type = [VoidType] void
#  103|             ValueCategory = prvalue
#  103|           getQualifier(): [PointerDereferenceExpr] * ...
#  103|               Type = [Struct] suspend_always
#  103|               ValueCategory = lvalue
#  103|             getOperand(): [ReuseExpr] reuse of & ...
#  103|                 Type = [PointerType] suspend_always *
#  103|                 ValueCategory = prvalue
#  103|           getArgument(0): [ConstructorCall] call to coroutine_handle
#  103|               Type = [VoidType] void
#  103|               ValueCategory = prvalue
#  103|             getArgument(0): [VariableAccess] (unnamed local variable)
#  103|                 Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  103|                 ValueCategory = lvalue
#  103|             getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  103|                 Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#  103|                 ValueCategory = prvalue
#  103|               getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#  103|                   Conversion = [GlvalueConversion] glvalue conversion
#  103|                   Type = [SpecifiedType] const coroutine_handle<promise_type>
#  103|                   ValueCategory = lvalue
#-----|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|               Conversion = [GlvalueConversion] glvalue conversion
#-----|               Type = [SpecifiedType] const suspend_always
#-----|               ValueCategory = lvalue
#  103|           getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#  103|               Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  103|               ValueCategory = lvalue
#  108| [TopLevelFunction] co_returnable_value co_yield_and_return_value(int)
#  108|   <params>: 
#  108|     getParameter(0): [Parameter] i
#  108|         Type = [IntType] int
#  108|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [DeclStmt] declaration
#-----|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of i
#-----|           Type = [IntType] int
#-----|         getVariable().getInitializer(): [Initializer] initializer for i
#-----|           getExpr(): [VariableAccess] i
#-----|               Type = [IntType] int
#-----|               ValueCategory = prvalue(load)
#-----|     getStmt(1): [DeclStmt] declaration
#  108|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (unnamed local variable)
#  108|           Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#-----|     getStmt(2): [TryStmt] try { ... }
#-----|       getStmt(): [BlockStmt] { ... }
#-----|         getStmt(0): [ExprStmt] ExprStmt
#-----|           getExpr(): [CoAwaitExpr] co_await ...
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
#  108|             getOperand(): [FunctionCall] call to initial_suspend
#  108|                 Type = [Struct] suspend_always
#  108|                 ValueCategory = prvalue
#  108|               getQualifier(): [VariableAccess] (unnamed local variable)
#  108|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  108|                   ValueCategory = lvalue
#  108|             getChild(1): [FunctionCall] call to await_ready
#  108|                 Type = [BoolType] bool
#  108|                 ValueCategory = prvalue
#  108|               getQualifier(): [PointerDereferenceExpr] * ...
#  108|                   Type = [Struct] suspend_always
#  108|                   ValueCategory = lvalue
#  108|                 getOperand(): [AddressOfExpr] & ...
#  108|                     Type = [PointerType] suspend_always *
#  108|                     ValueCategory = prvalue
#  108|                   getOperand(): [FunctionCall] call to initial_suspend
#  108|                       Type = [Struct] suspend_always
#  108|                       ValueCategory = prvalue
#  108|                     getQualifier(): [VariableAccess] (unnamed local variable)
#  108|                         Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  108|                         ValueCategory = lvalue
#  108|                   getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#  108|                       Type = [Struct] suspend_always
#  108|                       ValueCategory = lvalue
#-----|                 getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                     Type = [PointerType] suspend_always *
#-----|                     ValueCategory = prvalue(load)
#  108|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#  108|                   Conversion = [GlvalueConversion] glvalue conversion
#  108|                   Type = [SpecifiedType] const suspend_always
#  108|                   ValueCategory = lvalue
#-----|             getChild(2): [CommaExpr] ... , ...
#-----|                 Type = [VoidType] void
#-----|                 ValueCategory = prvalue
#-----|               getLeftOperand(): [AssignExpr] ... = ...
#-----|                   Type = [BoolType] bool
#-----|                   ValueCategory = prvalue
#-----|                 getLValue(): [VariableAccess] (unnamed local variable)
#-----|                     Type = [BoolType] bool
#-----|                     ValueCategory = lvalue
#-----|                 getRValue(): [Literal] 1
#-----|                     Type = [BoolType] bool
#-----|                     Value = [Literal] 1
#-----|                     ValueCategory = prvalue
#  108|               getRightOperand(): [FunctionCall] call to await_resume
#  108|                   Type = [VoidType] void
#  108|                   ValueCategory = prvalue
#  108|                 getQualifier(): [PointerDereferenceExpr] * ...
#  108|                     Type = [Struct] suspend_always
#  108|                     ValueCategory = lvalue
#  108|                   getOperand(): [ReuseExpr] reuse of & ...
#  108|                       Type = [PointerType] suspend_always *
#  108|                       ValueCategory = prvalue
#-----|                 getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                     Conversion = [GlvalueConversion] glvalue conversion
#-----|                     Type = [SpecifiedType] const suspend_always
#-----|                     ValueCategory = lvalue
#  108|             getChild(3): [FunctionCall] call to await_suspend
#  108|                 Type = [VoidType] void
#  108|                 ValueCategory = prvalue
#  108|               getQualifier(): [PointerDereferenceExpr] * ...
#  108|                   Type = [Struct] suspend_always
#  108|                   ValueCategory = lvalue
#  108|                 getOperand(): [ReuseExpr] reuse of & ...
#  108|                     Type = [PointerType] suspend_always *
#  108|                     ValueCategory = prvalue
#  108|               getArgument(0): [ConstructorCall] call to coroutine_handle
#  108|                   Type = [VoidType] void
#  108|                   ValueCategory = prvalue
#  108|                 getArgument(0): [VariableAccess] (unnamed local variable)
#  108|                     Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  108|                     ValueCategory = lvalue
#  108|                 getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  108|                     Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#  108|                     ValueCategory = prvalue
#  108|                   getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#  108|                       Conversion = [GlvalueConversion] glvalue conversion
#  108|                       Type = [SpecifiedType] const coroutine_handle<promise_type>
#  108|                       ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#  108|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#  108|                   Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  108|                   ValueCategory = lvalue
#  109|         getStmt(1): [ExprStmt] ExprStmt
#  109|           getExpr(): [CoYieldExpr] co_yield ...
#  109|               Type = [VoidType] void
#  109|               ValueCategory = prvalue
#  109|             getOperand(): [FunctionCall] call to yield_value
#  109|                 Type = [Struct] suspend_always
#  109|                 ValueCategory = prvalue
#  109|               getQualifier(): [VariableAccess] (unnamed local variable)
#  109|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  109|                   ValueCategory = lvalue
#  109|               getArgument(0): [VariableAccess] i
#  109|                   Type = [IntType] int
#  109|                   ValueCategory = prvalue(load)
#  109|             getChild(1): [FunctionCall] call to await_ready
#  109|                 Type = [BoolType] bool
#  109|                 ValueCategory = prvalue
#  109|               getQualifier(): [PointerDereferenceExpr] * ...
#  109|                   Type = [Struct] suspend_always
#  109|                   ValueCategory = lvalue
#  109|                 getOperand(): [AddressOfExpr] & ...
#  109|                     Type = [PointerType] suspend_always *
#  109|                     ValueCategory = prvalue
#  109|                   getOperand(): [FunctionCall] call to yield_value
#  109|                       Type = [Struct] suspend_always
#  109|                       ValueCategory = prvalue
#  109|                     getQualifier(): [VariableAccess] (unnamed local variable)
#  109|                         Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  109|                         ValueCategory = lvalue
#  109|                     getArgument(0): [VariableAccess] i
#  109|                         Type = [IntType] int
#  109|                         ValueCategory = prvalue(load)
#  109|                   getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#  109|                       Type = [Struct] suspend_always
#  109|                       ValueCategory = lvalue
#-----|                 getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                     Type = [PointerType] suspend_always *
#-----|                     ValueCategory = prvalue(load)
#  109|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#  109|                   Conversion = [GlvalueConversion] glvalue conversion
#  109|                   Type = [SpecifiedType] const suspend_always
#  109|                   ValueCategory = lvalue
#  109|             getChild(2): [FunctionCall] call to await_resume
#  109|                 Type = [VoidType] void
#  109|                 ValueCategory = prvalue
#  109|               getQualifier(): [PointerDereferenceExpr] * ...
#  109|                   Type = [Struct] suspend_always
#  109|                   ValueCategory = lvalue
#  109|                 getOperand(): [ReuseExpr] reuse of & ...
#  109|                     Type = [PointerType] suspend_always *
#  109|                     ValueCategory = prvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#  109|             getChild(3): [FunctionCall] call to await_suspend
#  109|                 Type = [VoidType] void
#  109|                 ValueCategory = prvalue
#  109|               getQualifier(): [PointerDereferenceExpr] * ...
#  109|                   Type = [Struct] suspend_always
#  109|                   ValueCategory = lvalue
#  109|                 getOperand(): [ReuseExpr] reuse of & ...
#  109|                     Type = [PointerType] suspend_always *
#  109|                     ValueCategory = prvalue
#  109|               getArgument(0): [ConstructorCall] call to coroutine_handle
#  109|                   Type = [VoidType] void
#  109|                   ValueCategory = prvalue
#  109|                 getArgument(0): [VariableAccess] (unnamed local variable)
#  109|                     Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  109|                     ValueCategory = lvalue
#  109|                 getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  109|                     Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#  109|                     ValueCategory = prvalue
#  109|                   getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#  109|                       Conversion = [GlvalueConversion] glvalue conversion
#  109|                       Type = [SpecifiedType] const coroutine_handle<promise_type>
#  109|                       ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const suspend_always
#-----|                   ValueCategory = lvalue
#  109|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#  109|                   Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  109|                   ValueCategory = lvalue
#  110|         getStmt(2): [CoReturnStmt] co_return ...
#-----|           getChild(0): [FunctionCall] call to return_value
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
#-----|             getQualifier(): [VariableAccess] (unnamed local variable)
#-----|                 Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#-----|                 ValueCategory = lvalue
#  110|             getArgument(0): [AddExpr] ... + ...
#  110|                 Type = [IntType] int
#  110|                 ValueCategory = prvalue
#  110|               getLeftOperand(): [VariableAccess] i
#  110|                   Type = [IntType] int
#  110|                   ValueCategory = prvalue(load)
#  110|               getRightOperand(): [Literal] 1
#  110|                   Type = [IntType] int
#  110|                   Value = [Literal] 1
#  110|                   ValueCategory = prvalue
#  110|             getArgument(0).getFullyConverted(): [ParenthesisExpr] (...)
#  110|                 Type = [IntType] int
#  110|                 ValueCategory = prvalue
#-----|         getStmt(3): [GotoStmt] goto ...
#-----|       getChild(1): [Handler] <handler>
#-----|         getBlock(): [CatchAnyBlock] { ... }
#-----|           getStmt(0): [IfStmt] if (...) ... 
#-----|             getCondition(): [NotExpr] ! ...
#-----|                 Type = [BoolType] bool
#-----|                 ValueCategory = prvalue
#-----|               getOperand(): [VariableAccess] (unnamed local variable)
#-----|                   Type = [BoolType] bool
#-----|                   ValueCategory = prvalue(load)
#-----|             getThen(): [ExprStmt] ExprStmt
#-----|               getExpr(): [ReThrowExpr] re-throw exception 
#-----|                   Type = [VoidType] void
#-----|                   ValueCategory = prvalue
#-----|           getStmt(1): [ExprStmt] ExprStmt
#  108|             getExpr(): [FunctionCall] call to unhandled_exception
#  108|                 Type = [VoidType] void
#  108|                 ValueCategory = prvalue
#  108|               getQualifier(): [VariableAccess] (unnamed local variable)
#  108|                   Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  108|                   ValueCategory = lvalue
#-----|     getStmt(3): [LabelStmt] label ...:
#-----|     getStmt(4): [ExprStmt] ExprStmt
#-----|       getExpr(): [CoAwaitExpr] co_await ...
#-----|           Type = [VoidType] void
#-----|           ValueCategory = prvalue
#  108|         getOperand(): [FunctionCall] call to final_suspend
#  108|             Type = [Struct] suspend_always
#  108|             ValueCategory = prvalue
#  108|           getQualifier(): [VariableAccess] (unnamed local variable)
#  108|               Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  108|               ValueCategory = lvalue
#  108|         getChild(1): [FunctionCall] call to await_ready
#  108|             Type = [BoolType] bool
#  108|             ValueCategory = prvalue
#  108|           getQualifier(): [PointerDereferenceExpr] * ...
#  108|               Type = [Struct] suspend_always
#  108|               ValueCategory = lvalue
#  108|             getOperand(): [AddressOfExpr] & ...
#  108|                 Type = [PointerType] suspend_always *
#  108|                 ValueCategory = prvalue
#  108|               getOperand(): [FunctionCall] call to final_suspend
#  108|                   Type = [Struct] suspend_always
#  108|                   ValueCategory = prvalue
#  108|                 getQualifier(): [VariableAccess] (unnamed local variable)
#  108|                     Type = [NestedTypedefType,UsingAliasTypedefType] promise_type
#  108|                     ValueCategory = lvalue
#  108|               getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#  108|                   Type = [Struct] suspend_always
#  108|                   ValueCategory = lvalue
#-----|             getOperand().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|                 Type = [PointerType] suspend_always *
#-----|                 ValueCategory = prvalue(load)
#  108|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#  108|               Conversion = [GlvalueConversion] glvalue conversion
#  108|               Type = [SpecifiedType] const suspend_always
#  108|               ValueCategory = lvalue
#  108|         getChild(2): [FunctionCall] call to await_resume
#  108|             Type = [VoidType] void
#  108|             ValueCategory = prvalue
#  108|           getQualifier(): [PointerDereferenceExpr] * ...
#  108|               Type = [Struct] suspend_always
#  108|               ValueCategory = lvalue
#  108|             getOperand(): [ReuseExpr] reuse of & ...
#  108|                 Type = [PointerType] suspend_always *
#  108|                 ValueCategory = prvalue
#-----|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|               Conversion = [GlvalueConversion] glvalue conversion
#-----|               Type = [SpecifiedType] const suspend_always
#-----|               ValueCategory = lvalue
#  108|         getChild(3): [FunctionCall] call to await_suspend
#  108|             Type = [VoidType] void
#  108|             ValueCategory = prvalue
#  108|           getQualifier(): [PointerDereferenceExpr] * ...
#  108|               Type = [Struct] suspend_always
#  108|               ValueCategory = lvalue
#  108|             getOperand(): [ReuseExpr] reuse of & ...
#  108|                 Type = [PointerType] suspend_always *
#  108|                 ValueCategory = prvalue
#  108|           getArgument(0): [ConstructorCall] call to coroutine_handle
#  108|               Type = [VoidType] void
#  108|               ValueCategory = prvalue
#  108|             getArgument(0): [VariableAccess] (unnamed local variable)
#  108|                 Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  108|                 ValueCategory = lvalue
#  108|             getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  108|                 Type = [LValueReferenceType] const coroutine_handle<promise_type> &
#  108|                 ValueCategory = prvalue
#  108|               getExpr(): [CStyleCast] (const coroutine_handle<promise_type>)...
#  108|                   Conversion = [GlvalueConversion] glvalue conversion
#  108|                   Type = [SpecifiedType] const coroutine_handle<promise_type>
#  108|                   ValueCategory = lvalue
#-----|           getQualifier().getFullyConverted(): [CStyleCast] (const suspend_always)...
#-----|               Conversion = [GlvalueConversion] glvalue conversion
#-----|               Type = [SpecifiedType] const suspend_always
#-----|               ValueCategory = lvalue
#  108|           getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#  108|               Type = [ClassTemplateInstantiation,Struct] coroutine_handle<promise_type>
#  108|               ValueCategory = lvalue
destructors_for_temps.cpp:
#    1| [CopyAssignmentOperator] ClassWithDestructor2& ClassWithDestructor2::operator=(ClassWithDestructor2 const&)
#    1|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const ClassWithDestructor2 &
#    1| [CopyConstructor] void ClassWithDestructor2::ClassWithDestructor2(ClassWithDestructor2 const&)
#    1|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const ClassWithDestructor2 &
#    3| [Constructor] void ClassWithDestructor2::ClassWithDestructor2()
#    3|   <params>: 
#    4| [Destructor] void ClassWithDestructor2::~ClassWithDestructor2()
#    4|   <params>: 
#    6| [MemberFunction] char ClassWithDestructor2::get_x()
#    6|   <params>: 
#    9| [CopyAssignmentOperator] ClassWithConstructor& ClassWithConstructor::operator=(ClassWithConstructor const&)
#    9|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const ClassWithConstructor &
#    9| [MoveAssignmentOperator] ClassWithConstructor& ClassWithConstructor::operator=(ClassWithConstructor&&)
#    9|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] ClassWithConstructor &&
#    9| [CopyConstructor] void ClassWithConstructor::ClassWithConstructor(ClassWithConstructor const&)
#    9|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const ClassWithConstructor &
#    9| [MoveConstructor] void ClassWithConstructor::ClassWithConstructor(ClassWithConstructor&&)
#    9|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] ClassWithConstructor &&
#    9|   <initializations>: 
#    9|   getEntryPoint(): [BlockStmt] { ... }
#    9|     getStmt(0): [ReturnStmt] return ...
#   11| [Constructor] void ClassWithConstructor::ClassWithConstructor(char, char)
#   11|   <params>: 
#   11|     getParameter(0): [Parameter] x
#   11|         Type = [PlainCharType] char
#   11|     getParameter(1): [Parameter] y
#   11|         Type = [PlainCharType] char
#   14| [TopLevelFunction] char temp_test()
#   14|   <params>: 
#   14|   getEntryPoint(): [BlockStmt] { ... }
#   15|     getStmt(0): [DeclStmt] declaration
#   15|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#   15|           Type = [PlainCharType] char
#   15|         getVariable().getInitializer(): [Initializer] initializer for x
#   15|           getExpr(): [FunctionCall] call to get_x
#   15|               Type = [PlainCharType] char
#   15|               ValueCategory = prvalue
#   15|             getQualifier(): [ConstructorCall] call to ClassWithDestructor2
#   15|                 Type = [VoidType] void
#   15|                 ValueCategory = prvalue
#   15|             getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   15|                 Type = [VoidType] void
#   15|                 ValueCategory = prvalue
#   15|               getQualifier(): [ReuseExpr] reuse of temporary object
#   15|                   Type = [Class] ClassWithDestructor2
#   15|                   ValueCategory = xvalue
#   15|             getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   15|                 Type = [Class] ClassWithDestructor2
#   15|                 ValueCategory = prvalue(load)
#   16|     getStmt(1): [DeclStmt] declaration
#   16|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
#   16|           Type = [Class] ClassWithConstructor
#   16|         getVariable().getInitializer(): [Initializer] initializer for y
#   16|           getExpr(): [ConstructorCall] call to ClassWithConstructor
#   16|               Type = [VoidType] void
#   16|               ValueCategory = prvalue
#   16|             getArgument(0): [CharLiteral] 97
#   16|                 Type = [PlainCharType] char
#   16|                 Value = [CharLiteral] 97
#   16|                 ValueCategory = prvalue
#   16|             getArgument(1): [FunctionCall] call to get_x
#   16|                 Type = [PlainCharType] char
#   16|                 ValueCategory = prvalue
#   16|               getQualifier(): [ConstructorCall] call to ClassWithDestructor2
#   16|                   Type = [VoidType] void
#   16|                   ValueCategory = prvalue
#   16|               getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   16|                   Type = [Class] ClassWithDestructor2
#   16|                   ValueCategory = prvalue(load)
#   16|             getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   16|                 Type = [VoidType] void
#   16|                 ValueCategory = prvalue
#   16|               getQualifier(): [ReuseExpr] reuse of temporary object
#   16|                   Type = [Class] ClassWithDestructor2
#   16|                   ValueCategory = xvalue
#   17|     getStmt(2): [ReturnStmt] return ...
#   17|       getExpr(): [FunctionCall] call to get_x
#   17|           Type = [PlainCharType] char
#   17|           ValueCategory = prvalue
#   17|         getQualifier(): [ConstructorCall] call to ClassWithDestructor2
#   17|             Type = [VoidType] void
#   17|             ValueCategory = prvalue
#   17|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   17|             Type = [VoidType] void
#   17|             ValueCategory = prvalue
#   17|           getQualifier(): [ReuseExpr] reuse of temporary object
#   17|               Type = [Class] ClassWithDestructor2
#   17|               ValueCategory = xvalue
#   17|         getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   17|             Type = [Class] ClassWithDestructor2
#   17|             ValueCategory = prvalue(load)
#   21| [TopLevelFunction] char temp_test2()
#   21|   <params>: 
#   21|   getEntryPoint(): [BlockStmt] { ... }
#   22|     getStmt(0): [ExprStmt] ExprStmt
#   22|       getExpr(): [NewExpr] new
#   22|           Type = [PointerType] ClassWithDestructor2 *
#   22|           ValueCategory = prvalue
#   22|         getInitializer(): [ConstructorCall] call to ClassWithDestructor2
#   22|             Type = [VoidType] void
#   22|             ValueCategory = prvalue
#   23|     getStmt(1): [ReturnStmt] return ...
#   23|       getExpr(): [AddExpr] ... + ...
#   23|           Type = [IntType] int
#   23|           ValueCategory = prvalue
#   23|         getLeftOperand(): [FunctionCall] call to get_x
#   23|             Type = [PlainCharType] char
#   23|             ValueCategory = prvalue
#   23|           getQualifier(): [ConstructorCall] call to ClassWithDestructor2
#   23|               Type = [VoidType] void
#   23|               ValueCategory = prvalue
#   23|           getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   23|               Type = [Class] ClassWithDestructor2
#   23|               ValueCategory = prvalue(load)
#   23|         getRightOperand(): [FunctionCall] call to get_x
#   23|             Type = [PlainCharType] char
#   23|             ValueCategory = prvalue
#   23|           getQualifier(): [ConstructorCall] call to ClassWithDestructor2
#   23|               Type = [VoidType] void
#   23|               ValueCategory = prvalue
#   23|           getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   23|               Type = [Class] ClassWithDestructor2
#   23|               ValueCategory = prvalue(load)
#   23|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   23|             Type = [VoidType] void
#   23|             ValueCategory = prvalue
#   23|           getQualifier(): [ReuseExpr] reuse of temporary object
#   23|               Type = [Class] ClassWithDestructor2
#   23|               ValueCategory = xvalue
#   23|         getImplicitDestructorCall(1): [DestructorCall] call to ~ClassWithDestructor2
#   23|             Type = [VoidType] void
#   23|             ValueCategory = prvalue
#   23|           getQualifier(): [ReuseExpr] reuse of temporary object
#   23|               Type = [Class] ClassWithDestructor2
#   23|               ValueCategory = xvalue
#   23|         getLeftOperand().getFullyConverted(): [CStyleCast] (int)...
#   23|             Conversion = [IntegralConversion] integral conversion
#   23|             Type = [IntType] int
#   23|             ValueCategory = prvalue
#   23|         getRightOperand().getFullyConverted(): [CStyleCast] (int)...
#   23|             Conversion = [IntegralConversion] integral conversion
#   23|             Type = [IntType] int
#   23|             ValueCategory = prvalue
#   23|       getExpr().getFullyConverted(): [CStyleCast] (char)...
#   23|           Conversion = [IntegralConversion] integral conversion
#   23|           Type = [PlainCharType] char
#   23|           ValueCategory = prvalue
#   27| [FunctionTemplateInstantiation,TopLevelFunction] ClassWithDestructor2 returnValue<ClassWithDestructor2>()
#   27|   <params>: 
#   27| [TemplateFunction,TopLevelFunction] T returnValue<T>()
#   27|   <params>: 
#   29| [TopLevelFunction] void temp_test3()
#   29|   <params>: 
#   29|   getEntryPoint(): [BlockStmt] { ... }
#   30|     getStmt(0): [DeclStmt] declaration
#   30|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rs
#   30|           Type = [LValueReferenceType] const ClassWithDestructor2 &
#   30|         getVariable().getInitializer(): [Initializer] initializer for rs
#   30|           getExpr(): [FunctionCall] call to returnValue
#   30|               Type = [Class] ClassWithDestructor2
#   30|               ValueCategory = prvalue
#   30|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#   30|               Type = [LValueReferenceType] const ClassWithDestructor2 &
#   30|               ValueCategory = prvalue
#   30|             getExpr(): [CStyleCast] (const ClassWithDestructor2)...
#   30|                 Conversion = [GlvalueConversion] glvalue conversion
#   30|                 Type = [SpecifiedType] const ClassWithDestructor2
#   30|                 ValueCategory = lvalue
#   30|               getExpr(): [TemporaryObjectExpr] temporary object
#   30|                   Type = [Class] ClassWithDestructor2
#   30|                   ValueCategory = lvalue
#   31|     getStmt(1): [ReturnStmt] return ...
#   31|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   31|           Type = [VoidType] void
#   31|           ValueCategory = prvalue
#   31|         getQualifier(): [ReuseExpr] reuse of temporary object
#   31|             Type = [Class] ClassWithDestructor2
#   31|             ValueCategory = xvalue
#   33| [TopLevelFunction] void temp_test4()
#   33|   <params>: 
#   33|   getEntryPoint(): [BlockStmt] { ... }
#   34|     getStmt(0): [DeclStmt] declaration
#   34|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
#   34|           Type = [Class] ClassWithDestructor2
#   34|         getVariable().getInitializer(): [Initializer] initializer for c
#   34|           getExpr(): [ConstructorCall] call to ClassWithDestructor2
#   34|               Type = [VoidType] void
#   34|               ValueCategory = prvalue
#   35|     getStmt(1): [DeclStmt] declaration
#   35|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rs2
#   35|           Type = [LValueReferenceType] const ClassWithDestructor2 &
#   35|         getVariable().getInitializer(): [Initializer] initializer for rs2
#   35|           getExpr(): [FunctionCall] call to returnValue
#   35|               Type = [Class] ClassWithDestructor2
#   35|               ValueCategory = prvalue
#   35|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#   35|               Type = [LValueReferenceType] const ClassWithDestructor2 &
#   35|               ValueCategory = prvalue
#   35|             getExpr(): [CStyleCast] (const ClassWithDestructor2)...
#   35|                 Conversion = [GlvalueConversion] glvalue conversion
#   35|                 Type = [SpecifiedType] const ClassWithDestructor2
#   35|                 ValueCategory = lvalue
#   35|               getExpr(): [TemporaryObjectExpr] temporary object
#   35|                   Type = [Class] ClassWithDestructor2
#   35|                   ValueCategory = lvalue
#   36|     getStmt(2): [ReturnStmt] return ...
#   36|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   36|           Type = [VoidType] void
#   36|           ValueCategory = prvalue
#   36|         getQualifier(): [ReuseExpr] reuse of temporary object
#   36|             Type = [Class] ClassWithDestructor2
#   36|             ValueCategory = xvalue
#   36|       getImplicitDestructorCall(1): [DestructorCall] call to ~ClassWithDestructor2
#   36|           Type = [VoidType] void
#   36|           ValueCategory = prvalue
#   36|         getQualifier(): [VariableAccess] c
#   36|             Type = [Class] ClassWithDestructor2
#   36|             ValueCategory = lvalue
#   38| [TopLevelFunction] void temp_test5(bool)
#   38|   <params>: 
#   38|     getParameter(0): [Parameter] b
#   38|         Type = [BoolType] bool
#   38|   getEntryPoint(): [BlockStmt] { ... }
#   39|     getStmt(0): [ExprStmt] ExprStmt
#   39|       getExpr(): [ConditionalExpr] ... ? ... : ...
#   39|           Type = [Class] ClassWithDestructor2
#   39|           ValueCategory = prvalue
#   39|         getCondition(): [VariableAccess] b
#   39|             Type = [BoolType] bool
#   39|             ValueCategory = prvalue(load)
#   39|         getThen(): [ConstructorCall] call to ClassWithDestructor2
#   39|             Type = [VoidType] void
#   39|             ValueCategory = prvalue
#   39|         getElse(): [ConstructorCall] call to ClassWithDestructor2
#   39|             Type = [VoidType] void
#   39|             ValueCategory = prvalue
#   39|         getThen().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   39|             Type = [Class] ClassWithDestructor2
#   39|             ValueCategory = prvalue(load)
#   39|         getElse().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   39|             Type = [Class] ClassWithDestructor2
#   39|             ValueCategory = prvalue(load)
#   39|       getExpr().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   39|           Type = [Class] ClassWithDestructor2
#   39|           ValueCategory = prvalue
#   39|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   39|             Type = [VoidType] void
#   39|             ValueCategory = prvalue
#   39|           getQualifier(): [ReuseExpr] reuse of temporary object
#   39|               Type = [Class] ClassWithDestructor2
#   39|               ValueCategory = xvalue
#   40|     getStmt(1): [ReturnStmt] return ...
#   42| [TopLevelFunction] void temp_test6(bool)
#   42|   <params>: 
#   42|     getParameter(0): [Parameter] b
#   42|         Type = [BoolType] bool
#   42|   getEntryPoint(): [BlockStmt] { ... }
#   43|     getStmt(0): [DeclStmt] declaration
#   43|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
#   43|           Type = [Class] ClassWithDestructor2
#   43|         getVariable().getInitializer(): [Initializer] initializer for c
#   43|           getExpr(): [ConstructorCall] call to ClassWithDestructor2
#   43|               Type = [VoidType] void
#   43|               ValueCategory = prvalue
#   44|     getStmt(1): [IfStmt] if (...) ... 
#   44|       getCondition(): [VariableAccess] b
#   44|           Type = [BoolType] bool
#   44|           ValueCategory = prvalue(load)
#   44|       getThen(): [BlockStmt] { ... }
#   45|         getStmt(0): [ExprStmt] ExprStmt
#   45|           getExpr(): [ThrowExpr] throw ...
#   45|               Type = [Class] ClassWithConstructor
#   45|               ValueCategory = prvalue
#   45|             getExpr(): [ConstructorCall] call to ClassWithConstructor
#   45|                 Type = [VoidType] void
#   45|                 ValueCategory = prvalue
#   45|               getArgument(0): [CharLiteral] 120
#   45|                   Type = [PlainCharType] char
#   45|                   Value = [CharLiteral] 120
#   45|                   ValueCategory = prvalue
#   45|               getArgument(1): [FunctionCall] call to get_x
#   45|                   Type = [PlainCharType] char
#   45|                   ValueCategory = prvalue
#   45|                 getQualifier(): [ConstructorCall] call to ClassWithDestructor2
#   45|                     Type = [VoidType] void
#   45|                     ValueCategory = prvalue
#   45|                 getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   45|                     Type = [Class] ClassWithDestructor2
#   45|                     ValueCategory = prvalue(load)
#   45|             getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   45|                 Type = [VoidType] void
#   45|                 ValueCategory = prvalue
#   45|               getQualifier(): [ReuseExpr] reuse of temporary object
#   45|                   Type = [Class] ClassWithDestructor2
#   45|                   ValueCategory = xvalue
#   47|             getImplicitDestructorCall(1): [DestructorCall] call to ~ClassWithDestructor2
#   47|                 Type = [VoidType] void
#   47|                 ValueCategory = prvalue
#   47|               getQualifier(): [VariableAccess] c
#   47|                   Type = [Class] ClassWithDestructor2
#   47|                   ValueCategory = lvalue
#   47|     getStmt(2): [ReturnStmt] return ...
#   47|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   47|           Type = [VoidType] void
#   47|           ValueCategory = prvalue
#   47|         getQualifier(): [VariableAccess] c
#   47|             Type = [Class] ClassWithDestructor2
#   47|             ValueCategory = lvalue
#   49| [TopLevelFunction] void temp_test7(bool)
#   49|   <params>: 
#   49|     getParameter(0): [Parameter] b
#   49|         Type = [BoolType] bool
#   49|   getEntryPoint(): [BlockStmt] { ... }
#   50|     getStmt(0): [DeclStmt] declaration
#   50|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
#   50|           Type = [Class] ClassWithDestructor2
#   50|         getVariable().getInitializer(): [Initializer] initializer for c
#   50|           getExpr(): [ConstructorCall] call to ClassWithDestructor2
#   50|               Type = [VoidType] void
#   50|               ValueCategory = prvalue
#   51|     getStmt(1): [ExprStmt] ExprStmt
#   51|       getExpr(): [ConditionalExpr] ... ? ... : ...
#   51|           Type = [Class] ClassWithDestructor2
#   51|           ValueCategory = prvalue(load)
#   51|         getCondition(): [VariableAccess] b
#   51|             Type = [BoolType] bool
#   51|             ValueCategory = prvalue(load)
#   51|         getThen(): [ThrowExpr] throw ...
#   51|             Type = [Class] ClassWithConstructor
#   51|             ValueCategory = prvalue
#   51|           getExpr(): [ConstructorCall] call to ClassWithConstructor
#   51|               Type = [VoidType] void
#   51|               ValueCategory = prvalue
#   51|             getArgument(0): [CharLiteral] 120
#   51|                 Type = [PlainCharType] char
#   51|                 Value = [CharLiteral] 120
#   51|                 ValueCategory = prvalue
#   51|             getArgument(1): [FunctionCall] call to get_x
#   51|                 Type = [PlainCharType] char
#   51|                 ValueCategory = prvalue
#   51|               getQualifier(): [ConstructorCall] call to ClassWithDestructor2
#   51|                   Type = [VoidType] void
#   51|                   ValueCategory = prvalue
#   51|               getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   51|                   Type = [Class] ClassWithDestructor2
#   51|                   ValueCategory = prvalue(load)
#   52|           getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   52|               Type = [VoidType] void
#   52|               ValueCategory = prvalue
#   52|             getQualifier(): [VariableAccess] c
#   52|                 Type = [Class] ClassWithDestructor2
#   52|                 ValueCategory = lvalue
#   51|         getElse(): [ConstructorCall] call to ClassWithDestructor2
#   51|             Type = [VoidType] void
#   51|             ValueCategory = prvalue
#   51|         getElse().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   51|             Type = [Class] ClassWithDestructor2
#   51|             ValueCategory = prvalue(load)
#   51|       getExpr().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   51|           Type = [Class] ClassWithDestructor2
#   51|           ValueCategory = prvalue
#   51|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   51|             Type = [VoidType] void
#   51|             ValueCategory = prvalue
#   51|           getQualifier(): [ReuseExpr] reuse of temporary object
#   51|               Type = [Class] ClassWithDestructor2
#   51|               ValueCategory = xvalue
#   51|         getImplicitDestructorCall(1): [DestructorCall] call to ~ClassWithDestructor2
#   51|             Type = [VoidType] void
#   51|             ValueCategory = prvalue
#   51|           getQualifier(): [ReuseExpr] reuse of temporary object
#   51|               Type = [Class] ClassWithDestructor2
#   51|               ValueCategory = xvalue
#   51|         getImplicitDestructorCall(2): [DestructorCall] call to ~ClassWithDestructor2
#   51|             Type = [VoidType] void
#   51|             ValueCategory = prvalue
#   51|           getQualifier(): [ReuseExpr] reuse of temporary object
#   51|               Type = [Class] ClassWithDestructor2
#   51|               ValueCategory = xvalue
#   52|     getStmt(2): [ReturnStmt] return ...
#   52|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   52|           Type = [VoidType] void
#   52|           ValueCategory = prvalue
#   52|         getQualifier(): [VariableAccess] c
#   52|             Type = [Class] ClassWithDestructor2
#   52|             ValueCategory = lvalue
#   54| [TopLevelFunction] void temp_test8(bool)
#   54|   <params>: 
#   54|     getParameter(0): [Parameter] b
#   54|         Type = [BoolType] bool
#   54|   getEntryPoint(): [BlockStmt] { ... }
#   55|     getStmt(0): [ExprStmt] ExprStmt
#   55|       getExpr(): [ConditionalExpr] ... ? ... : ...
#   55|           Type = [Class] ClassWithDestructor2
#   55|           ValueCategory = prvalue(load)
#   55|         getCondition(): [VariableAccess] b
#   55|             Type = [BoolType] bool
#   55|             ValueCategory = prvalue(load)
#   55|         getThen(): [ThrowExpr] throw ...
#   55|             Type = [Class] ClassWithConstructor
#   55|             ValueCategory = prvalue
#   55|           getExpr(): [ConstructorCall] call to ClassWithConstructor
#   55|               Type = [VoidType] void
#   55|               ValueCategory = prvalue
#   55|             getArgument(0): [CharLiteral] 120
#   55|                 Type = [PlainCharType] char
#   55|                 Value = [CharLiteral] 120
#   55|                 ValueCategory = prvalue
#   55|             getArgument(1): [FunctionCall] call to get_x
#   55|                 Type = [PlainCharType] char
#   55|                 ValueCategory = prvalue
#   55|               getQualifier(): [ConstructorCall] call to ClassWithDestructor2
#   55|                   Type = [VoidType] void
#   55|                   ValueCategory = prvalue
#   55|               getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   55|                   Type = [Class] ClassWithDestructor2
#   55|                   ValueCategory = prvalue(load)
#   55|         getElse(): [ConstructorCall] call to ClassWithDestructor2
#   55|             Type = [VoidType] void
#   55|             ValueCategory = prvalue
#   55|         getElse().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   55|             Type = [Class] ClassWithDestructor2
#   55|             ValueCategory = prvalue(load)
#   55|       getExpr().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   55|           Type = [Class] ClassWithDestructor2
#   55|           ValueCategory = prvalue
#   55|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   55|             Type = [VoidType] void
#   55|             ValueCategory = prvalue
#   55|           getQualifier(): [ReuseExpr] reuse of temporary object
#   55|               Type = [Class] ClassWithDestructor2
#   55|               ValueCategory = xvalue
#   55|         getImplicitDestructorCall(1): [DestructorCall] call to ~ClassWithDestructor2
#   55|             Type = [VoidType] void
#   55|             ValueCategory = prvalue
#   55|           getQualifier(): [ReuseExpr] reuse of temporary object
#   55|               Type = [Class] ClassWithDestructor2
#   55|               ValueCategory = xvalue
#   55|         getImplicitDestructorCall(2): [DestructorCall] call to ~ClassWithDestructor2
#   55|             Type = [VoidType] void
#   55|             ValueCategory = prvalue
#   55|           getQualifier(): [ReuseExpr] reuse of temporary object
#   55|               Type = [Class] ClassWithDestructor2
#   55|               ValueCategory = xvalue
#   56|     getStmt(1): [ReturnStmt] return ...
#   58| [TopLevelFunction] void temp_test8_simple(bool)
#   58|   <params>: 
#   58|     getParameter(0): [Parameter] b
#   58|         Type = [BoolType] bool
#   58|   getEntryPoint(): [BlockStmt] { ... }
#   59|     getStmt(0): [ExprStmt] ExprStmt
#   59|       getExpr(): [ConditionalExpr] ... ? ... : ...
#   59|           Type = [PlainCharType] char
#   59|           ValueCategory = prvalue
#   59|         getCondition(): [VariableAccess] b
#   59|             Type = [BoolType] bool
#   59|             ValueCategory = prvalue(load)
#   59|         getThen(): [ThrowExpr] throw ...
#   59|             Type = [PlainCharType] char
#   59|             ValueCategory = prvalue
#   59|           getExpr(): [FunctionCall] call to get_x
#   59|               Type = [PlainCharType] char
#   59|               ValueCategory = prvalue
#   59|             getQualifier(): [ConstructorCall] call to ClassWithDestructor2
#   59|                 Type = [VoidType] void
#   59|                 ValueCategory = prvalue
#   59|             getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   59|                 Type = [Class] ClassWithDestructor2
#   59|                 ValueCategory = prvalue(load)
#   59|         getElse(): [CharLiteral] 97
#   59|             Type = [PlainCharType] char
#   59|             Value = [CharLiteral] 97
#   59|             ValueCategory = prvalue
#   59|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   59|             Type = [VoidType] void
#   59|             ValueCategory = prvalue
#   59|           getQualifier(): [ReuseExpr] reuse of temporary object
#   59|               Type = [Class] ClassWithDestructor2
#   59|               ValueCategory = xvalue
#   60|     getStmt(1): [ReturnStmt] return ...
#   62| [CopyAssignmentOperator] string& string::operator=(string const&)
#   62|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const string &
#   62| [CopyConstructor] void string::string(string const&)
#   62|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const string &
#   64| [Constructor] void string::string(char const*)
#   64|   <params>: 
#   64|     getParameter(0): [Parameter] (unnamed parameter 0)
#   64|         Type = [PointerType] const char *
#   65| [Destructor] void string::~string()
#   65|   <params>: 
#   68| [TopLevelFunction] bool const_ref_string(string const&)
#   68|   <params>: 
#   68|     getParameter(0): [Parameter] (unnamed parameter 0)
#   68|         Type = [LValueReferenceType] const string &
#   70| [TopLevelFunction] bool conditional_temp_via_conjunction(bool)
#   70|   <params>: 
#   70|     getParameter(0): [Parameter] b
#   70|         Type = [BoolType] bool
#   71|   getEntryPoint(): [BlockStmt] { ... }
#   72|     getStmt(0): [ReturnStmt] return ...
#   72|       getExpr(): [LogicalAndExpr] ... && ...
#   72|           Type = [BoolType] bool
#   72|           ValueCategory = prvalue
#   72|         getLeftOperand(): [VariableAccess] b
#   72|             Type = [BoolType] bool
#   72|             ValueCategory = prvalue(load)
#   72|         getRightOperand(): [FunctionCall] call to const_ref_string
#   72|             Type = [BoolType] bool
#   72|             ValueCategory = prvalue
#   72|           getArgument(0): [ConstructorCall] call to string
#   72|               Type = [VoidType] void
#   72|               ValueCategory = prvalue
#   72|             getArgument(0): 
#   72|                 Type = [ArrayType] const char[1]
#   72|                 Value = [StringLiteral] ""
#   72|                 ValueCategory = lvalue
#   72|             getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#   72|                 Type = [PointerType] const char *
#   72|                 ValueCategory = prvalue
#   72|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   72|               Type = [LValueReferenceType] const string &
#   72|               ValueCategory = prvalue
#   72|             getExpr(): [TemporaryObjectExpr] temporary object
#   72|                 Type = [SpecifiedType] const string
#   72|                 ValueCategory = lvalue
#   72|         getImplicitDestructorCall(0): [DestructorCall] call to ~string
#   72|             Type = [VoidType] void
#   72|             ValueCategory = prvalue
#   72|           getQualifier(): [ReuseExpr] reuse of temporary object
#   72|               Type = [SpecifiedType] const string
#   72|               ValueCategory = xvalue
#   75| [TopLevelFunction] ClassWithDestructor2 make()
#   75|   <params>: 
#   77| [TopLevelFunction] void temp_test9()
#   77|   <params>: 
#   77|   getEntryPoint(): [BlockStmt] { ... }
#   78|     getStmt(0): [ExprStmt] ExprStmt
#   78|       getExpr(): [FunctionCall] call to make
#   78|           Type = [Class] ClassWithDestructor2
#   78|           ValueCategory = prvalue
#   78|       getExpr().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   78|           Type = [Class] ClassWithDestructor2
#   78|           ValueCategory = prvalue
#   78|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   78|             Type = [VoidType] void
#   78|             ValueCategory = prvalue
#   78|           getQualifier(): [ReuseExpr] reuse of temporary object
#   78|               Type = [Class] ClassWithDestructor2
#   78|               ValueCategory = xvalue
#   79|     getStmt(1): [ReturnStmt] return ...
#   81| [TopLevelFunction] void temp_test10(int)
#   81|   <params>: 
#   81|     getParameter(0): [Parameter] i
#   81|         Type = [IntType] int
#   81|   getEntryPoint(): [BlockStmt] { ... }
#   82|     getStmt(0): [WhileStmt] while (...) ...
#   82|       getCondition(): [LTExpr] ... < ...
#   82|           Type = [BoolType] bool
#   82|           ValueCategory = prvalue
#   82|         getLesserOperand(): [VariableAccess] i
#   82|             Type = [IntType] int
#   82|             ValueCategory = prvalue(load)
#   82|         getGreaterOperand(): [Literal] 10
#   82|             Type = [IntType] int
#   82|             Value = [Literal] 10
#   82|             ValueCategory = prvalue
#   82|       getStmt(): [BlockStmt] { ... }
#   83|         getStmt(0): [ExprStmt] ExprStmt
#   83|           getExpr(): [FunctionCall] call to make
#   83|               Type = [Class] ClassWithDestructor2
#   83|               ValueCategory = prvalue
#   83|           getExpr().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   83|               Type = [Class] ClassWithDestructor2
#   83|               ValueCategory = prvalue
#   83|             getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   83|                 Type = [VoidType] void
#   83|                 ValueCategory = prvalue
#   83|               getQualifier(): [ReuseExpr] reuse of temporary object
#   83|                   Type = [Class] ClassWithDestructor2
#   83|                   ValueCategory = xvalue
#   85|     getStmt(1): [ReturnStmt] return ...
#   87| [CopyAssignmentOperator] ClassWithDestructor3& ClassWithDestructor3::operator=(ClassWithDestructor3 const&)
#   87|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const ClassWithDestructor3 &
#   87| [Constructor] void ClassWithDestructor3::ClassWithDestructor3()
#   87|   <params>: 
#   88| [Destructor] void ClassWithDestructor3::~ClassWithDestructor3()
#   88|   <params>: 
#   89| [MemberFunction] ClassWithDestructor2 ClassWithDestructor3::getClassWithDestructor2()
#   89|   <params>: 
#   92| [TopLevelFunction] ClassWithDestructor3 makeClassWithDestructor3()
#   92|   <params>: 
#   94| [TopLevelFunction] void temp_test11()
#   94|   <params>: 
#   94|   getEntryPoint(): [BlockStmt] { ... }
#   99|     getStmt(0): [ExprStmt] ExprStmt
#   99|       getExpr(): [FunctionCall] call to getClassWithDestructor2
#   99|           Type = [Class] ClassWithDestructor2
#   99|           ValueCategory = prvalue
#   99|         getQualifier(): [FunctionCall] call to makeClassWithDestructor3
#   99|             Type = [Struct] ClassWithDestructor3
#   99|             ValueCategory = prvalue
#   99|         getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   99|             Type = [Struct] ClassWithDestructor3
#   99|             ValueCategory = prvalue(load)
#   99|       getExpr().getFullyConverted(): [TemporaryObjectExpr] temporary object
#   99|           Type = [Class] ClassWithDestructor2
#   99|           ValueCategory = prvalue
#   99|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#   99|             Type = [VoidType] void
#   99|             ValueCategory = prvalue
#   99|           getQualifier(): [ReuseExpr] reuse of temporary object
#   99|               Type = [Class] ClassWithDestructor2
#   99|               ValueCategory = xvalue
#   99|         getImplicitDestructorCall(1): [DestructorCall] call to ~ClassWithDestructor3
#   99|             Type = [VoidType] void
#   99|             ValueCategory = prvalue
#   99|           getQualifier(): [ReuseExpr] reuse of temporary object
#   99|               Type = [Struct] ClassWithDestructor3
#   99|               ValueCategory = xvalue
#  100|     getStmt(1): [ReturnStmt] return ...
#  102| [TopLevelFunction] void temp_test12(ClassWithDestructor3)
#  102|   <params>: 
#  102|     getParameter(0): [Parameter] x
#  102|         Type = [Struct] ClassWithDestructor3
#  102|   getEntryPoint(): [BlockStmt] { ... }
#  103|     getStmt(0): [ExprStmt] ExprStmt
#  103|       getExpr(): [AddExpr] ... + ...
#  103|           Type = [IntType] int
#  103|           ValueCategory = prvalue
#  103|         getLeftOperand(): [FunctionCall] call to get_x
#  103|             Type = [PlainCharType] char
#  103|             ValueCategory = prvalue
#  103|           getQualifier(): [FunctionCall] call to getClassWithDestructor2
#  103|               Type = [Class] ClassWithDestructor2
#  103|               ValueCategory = prvalue
#  103|             getQualifier(): [VariableAccess] x
#  103|                 Type = [Struct] ClassWithDestructor3
#  103|                 ValueCategory = lvalue
#  103|           getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
#  103|               Type = [Class] ClassWithDestructor2
#  103|               ValueCategory = prvalue(load)
#  103|         getRightOperand(): [Literal] 5
#  103|             Type = [IntType] int
#  103|             Value = [Literal] 5
#  103|             ValueCategory = prvalue
#  103|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor2
#  103|             Type = [VoidType] void
#  103|             ValueCategory = prvalue
#  103|           getQualifier(): [ReuseExpr] reuse of temporary object
#  103|               Type = [Class] ClassWithDestructor2
#  103|               ValueCategory = xvalue
#  103|         getLeftOperand().getFullyConverted(): [CStyleCast] (int)...
#  103|             Conversion = [IntegralConversion] integral conversion
#  103|             Type = [IntType] int
#  103|             ValueCategory = prvalue
#  104|     getStmt(1): [ReturnStmt] return ...
ir.c:
#    5| [TopLevelFunction] int getX(MyCoords*)
#    5|   <params>: 
#    5|     getParameter(0): [Parameter] coords
#    5|         Type = [PointerType] MyCoords *
#    7| [TopLevelFunction] void MyCoordsTest(int)
#    7|   <params>: 
#    7|     getParameter(0): [Parameter] pos
#    7|         Type = [IntType] int
#    7|   getEntryPoint(): [BlockStmt] { ... }
#    8|     getStmt(0): [DeclStmt] declaration
#    8|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of coords
#    8|           Type = [CTypedefType] MyCoords
#    8|         getVariable().getInitializer(): [Initializer] initializer for coords
#    8|           getExpr(): [ClassAggregateLiteral] {...}
#    8|               Type = [Struct] (unnamed class/struct/union)
#    8|               ValueCategory = prvalue
#    8|             getAFieldExpr(x): [Literal] 0
#    8|                 Type = [IntType] int
#    8|                 Value = [Literal] 0
#    8|                 ValueCategory = prvalue
#    9|     getStmt(1): [ExprStmt] ExprStmt
#    9|       getExpr(): [AssignExpr] ... = ...
#    9|           Type = [IntType] int
#    9|           ValueCategory = prvalue
#    9|         getLValue(): [ValueFieldAccess] x
#    9|             Type = [IntType] int
#    9|             ValueCategory = lvalue
#    9|           getQualifier(): [VariableAccess] coords
#    9|               Type = [CTypedefType] MyCoords
#    9|               ValueCategory = lvalue
#    9|         getRValue(): [AssignExpr] ... = ...
#    9|             Type = [IntType] int
#    9|             ValueCategory = prvalue(load)
#    9|           getLValue(): [ValueFieldAccess] y
#    9|               Type = [IntType] int
#    9|               ValueCategory = lvalue
#    9|             getQualifier(): [VariableAccess] coords
#    9|                 Type = [CTypedefType] MyCoords
#    9|                 ValueCategory = lvalue
#    9|           getRValue(): [AddExpr] ... + ...
#    9|               Type = [IntType] int
#    9|               ValueCategory = prvalue
#    9|             getLeftOperand(): [VariableAccess] pos
#    9|                 Type = [IntType] int
#    9|                 ValueCategory = prvalue(load)
#    9|             getRightOperand(): [Literal] 1
#    9|                 Type = [IntType] int
#    9|                 Value = [Literal] 1
#    9|                 ValueCategory = prvalue
#   10|     getStmt(2): [ExprStmt] ExprStmt
#   10|       getExpr(): [AssignExpr] ... = ...
#   10|           Type = [IntType] int
#   10|           ValueCategory = prvalue
#   10|         getLValue(): [ValueFieldAccess] x
#   10|             Type = [IntType] int
#   10|             ValueCategory = lvalue
#   10|           getQualifier(): [VariableAccess] coords
#   10|               Type = [CTypedefType] MyCoords
#   10|               ValueCategory = lvalue
#   10|         getRValue(): [FunctionCall] call to getX
#   10|             Type = [IntType] int
#   10|             ValueCategory = prvalue
#   10|           getArgument(0): [AddressOfExpr] & ...
#   10|               Type = [PointerType] MyCoords *
#   10|               ValueCategory = prvalue
#   10|             getOperand(): [VariableAccess] coords
#   10|                 Type = [CTypedefType] MyCoords
#   10|                 ValueCategory = lvalue
#   11|     getStmt(3): [ReturnStmt] return ...
#   13| [TopLevelFunction] void CStyleCast(void*)
#   13|   <params>: 
#   13|     getParameter(0): [Parameter] src
#   13|         Type = [VoidPointerType] void *
#   14|   getEntryPoint(): [BlockStmt] { ... }
#   15|     getStmt(0): [DeclStmt] declaration
#   15|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of dst
#   15|           Type = [CharPointerType] char *
#   15|         getVariable().getInitializer(): [Initializer] initializer for dst
#   15|           getExpr(): [VariableAccess] src
#   15|               Type = [VoidPointerType] void *
#   15|               ValueCategory = prvalue(load)
#   15|           getExpr().getFullyConverted(): [CStyleCast] (char *)...
#   15|               Conversion = [PointerConversion] pointer conversion
#   15|               Type = [CharPointerType] char *
#   15|               ValueCategory = prvalue
#   16|     getStmt(1): [ReturnStmt] return ...
#   18| [TopLevelFunction] void ExRaiseAccessViolation(int)
#   18|   <params>: 
#   18|     getParameter(0): [Parameter] (unnamed parameter 0)
#   18|         Type = [IntType] int
#   21| [TopLevelFunction] int TryExceptTest(int)
#   21|   <params>: 
#   21|     getParameter(0): [Parameter] x
#   21|         Type = [IntType] int
#   21|   getEntryPoint(): [BlockStmt] { ... }
#   22|     getStmt(0): [DeclStmt] declaration
#   22|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of localPtr
#   22|           Type = [IntPointerType] int *
#   24|     getStmt(1): [MicrosoftTryExceptStmt] __try { ... } __except( ... ) { ... }
#   24|       getStmt(): [BlockStmt] { ... }
#   25|         getStmt(0): [ExprStmt] ExprStmt
#   25|           getExpr(): [FunctionCall] call to ExRaiseAccessViolation
#   25|               Type = [VoidType] void
#   25|               ValueCategory = prvalue
#   25|             getArgument(0): [VariableAccess] x
#   25|                 Type = [IntType] int
#   25|                 ValueCategory = prvalue(load)
#   26|       getCondition(): [Literal] 1
#   26|           Type = [IntType] int
#   26|           Value = [Literal] 1
#   26|           ValueCategory = prvalue
#   26|       getExcept(): [BlockStmt] { ... }
#   27|         getStmt(0): [ReturnStmt] return ...
#   27|           getExpr(): [Literal] 1
#   27|               Type = [IntType] int
#   27|               Value = [Literal] 1
#   27|               ValueCategory = prvalue
#   29|     getStmt(2): [ReturnStmt] return ...
#   29|       getExpr(): [Literal] 0
#   29|           Type = [IntType] int
#   29|           Value = [Literal] 0
#   29|           ValueCategory = prvalue
ir.cpp:
#    1| [TopLevelFunction] void Constants()
#    1|   <params>: 
#    1|   getEntryPoint(): [BlockStmt] { ... }
#    2|     getStmt(0): [DeclStmt] declaration
#    2|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c_i
#    2|           Type = [PlainCharType] char
#    2|         getVariable().getInitializer(): [Initializer] initializer for c_i
#    2|           getExpr(): [Literal] 1
#    2|               Type = [IntType] int
#    2|               Value = [Literal] 1
#    2|               ValueCategory = prvalue
#    2|           getExpr().getFullyConverted(): [CStyleCast] (char)...
#    2|               Conversion = [IntegralConversion] integral conversion
#    2|               Type = [PlainCharType] char
#    2|               Value = [CStyleCast] 1
#    2|               ValueCategory = prvalue
#    3|     getStmt(1): [DeclStmt] declaration
#    3|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c_c
#    3|           Type = [PlainCharType] char
#    3|         getVariable().getInitializer(): [Initializer] initializer for c_c
#    3|           getExpr(): [CharLiteral] 65
#    3|               Type = [PlainCharType] char
#    3|               Value = [CharLiteral] 65
#    3|               ValueCategory = prvalue
#    5|     getStmt(2): [DeclStmt] declaration
#    5|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of sc_i
#    5|           Type = [SignedCharType] signed char
#    5|         getVariable().getInitializer(): [Initializer] initializer for sc_i
#    5|           getExpr(): [UnaryMinusExpr] - ...
#    5|               Type = [IntType] int
#    5|               Value = [UnaryMinusExpr] -1
#    5|               ValueCategory = prvalue
#    5|             getOperand(): [Literal] 1
#    5|                 Type = [IntType] int
#    5|                 Value = [Literal] 1
#    5|                 ValueCategory = prvalue
#    5|           getExpr().getFullyConverted(): [CStyleCast] (signed char)...
#    5|               Conversion = [IntegralConversion] integral conversion
#    5|               Type = [SignedCharType] signed char
#    5|               Value = [CStyleCast] -1
#    5|               ValueCategory = prvalue
#    6|     getStmt(3): [DeclStmt] declaration
#    6|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of sc_c
#    6|           Type = [SignedCharType] signed char
#    6|         getVariable().getInitializer(): [Initializer] initializer for sc_c
#    6|           getExpr(): [CharLiteral] 65
#    6|               Type = [PlainCharType] char
#    6|               Value = [CharLiteral] 65
#    6|               ValueCategory = prvalue
#    6|           getExpr().getFullyConverted(): [CStyleCast] (signed char)...
#    6|               Conversion = [IntegralConversion] integral conversion
#    6|               Type = [SignedCharType] signed char
#    6|               Value = [CStyleCast] 65
#    6|               ValueCategory = prvalue
#    8|     getStmt(4): [DeclStmt] declaration
#    8|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of uc_i
#    8|           Type = [UnsignedCharType] unsigned char
#    8|         getVariable().getInitializer(): [Initializer] initializer for uc_i
#    8|           getExpr(): [Literal] 5
#    8|               Type = [IntType] int
#    8|               Value = [Literal] 5
#    8|               ValueCategory = prvalue
#    8|           getExpr().getFullyConverted(): [CStyleCast] (unsigned char)...
#    8|               Conversion = [IntegralConversion] integral conversion
#    8|               Type = [UnsignedCharType] unsigned char
#    8|               Value = [CStyleCast] 5
#    8|               ValueCategory = prvalue
#    9|     getStmt(5): [DeclStmt] declaration
#    9|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of uc_c
#    9|           Type = [UnsignedCharType] unsigned char
#    9|         getVariable().getInitializer(): [Initializer] initializer for uc_c
#    9|           getExpr(): [CharLiteral] 65
#    9|               Type = [PlainCharType] char
#    9|               Value = [CharLiteral] 65
#    9|               ValueCategory = prvalue
#    9|           getExpr().getFullyConverted(): [CStyleCast] (unsigned char)...
#    9|               Conversion = [IntegralConversion] integral conversion
#    9|               Type = [UnsignedCharType] unsigned char
#    9|               Value = [CStyleCast] 65
#    9|               ValueCategory = prvalue
#   11|     getStmt(6): [DeclStmt] declaration
#   11|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
#   11|           Type = [ShortType] short
#   11|         getVariable().getInitializer(): [Initializer] initializer for s
#   11|           getExpr(): [Literal] 5
#   11|               Type = [IntType] int
#   11|               Value = [Literal] 5
#   11|               ValueCategory = prvalue
#   11|           getExpr().getFullyConverted(): [CStyleCast] (short)...
#   11|               Conversion = [IntegralConversion] integral conversion
#   11|               Type = [ShortType] short
#   11|               Value = [CStyleCast] 5
#   11|               ValueCategory = prvalue
#   12|     getStmt(7): [DeclStmt] declaration
#   12|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of us
#   12|           Type = [ShortType] unsigned short
#   12|         getVariable().getInitializer(): [Initializer] initializer for us
#   12|           getExpr(): [Literal] 5
#   12|               Type = [IntType] int
#   12|               Value = [Literal] 5
#   12|               ValueCategory = prvalue
#   12|           getExpr().getFullyConverted(): [CStyleCast] (unsigned short)...
#   12|               Conversion = [IntegralConversion] integral conversion
#   12|               Type = [ShortType] unsigned short
#   12|               Value = [CStyleCast] 5
#   12|               ValueCategory = prvalue
#   14|     getStmt(8): [DeclStmt] declaration
#   14|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
#   14|           Type = [IntType] int
#   14|         getVariable().getInitializer(): [Initializer] initializer for i
#   14|           getExpr(): [Literal] 5
#   14|               Type = [IntType] int
#   14|               Value = [Literal] 5
#   14|               ValueCategory = prvalue
#   15|     getStmt(9): [DeclStmt] declaration
#   15|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of ui
#   15|           Type = [IntType] unsigned int
#   15|         getVariable().getInitializer(): [Initializer] initializer for ui
#   15|           getExpr(): [Literal] 5
#   15|               Type = [IntType] int
#   15|               Value = [Literal] 5
#   15|               ValueCategory = prvalue
#   15|           getExpr().getFullyConverted(): [CStyleCast] (unsigned int)...
#   15|               Conversion = [IntegralConversion] integral conversion
#   15|               Type = [IntType] unsigned int
#   15|               Value = [CStyleCast] 5
#   15|               ValueCategory = prvalue
#   17|     getStmt(10): [DeclStmt] declaration
#   17|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of l
#   17|           Type = [LongType] long
#   17|         getVariable().getInitializer(): [Initializer] initializer for l
#   17|           getExpr(): [Literal] 5
#   17|               Type = [IntType] int
#   17|               Value = [Literal] 5
#   17|               ValueCategory = prvalue
#   17|           getExpr().getFullyConverted(): [CStyleCast] (long)...
#   17|               Conversion = [IntegralConversion] integral conversion
#   17|               Type = [LongType] long
#   17|               Value = [CStyleCast] 5
#   17|               ValueCategory = prvalue
#   18|     getStmt(11): [DeclStmt] declaration
#   18|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of ul
#   18|           Type = [LongType] unsigned long
#   18|         getVariable().getInitializer(): [Initializer] initializer for ul
#   18|           getExpr(): [Literal] 5
#   18|               Type = [IntType] int
#   18|               Value = [Literal] 5
#   18|               ValueCategory = prvalue
#   18|           getExpr().getFullyConverted(): [CStyleCast] (unsigned long)...
#   18|               Conversion = [IntegralConversion] integral conversion
#   18|               Type = [LongType] unsigned long
#   18|               Value = [CStyleCast] 5
#   18|               ValueCategory = prvalue
#   20|     getStmt(12): [DeclStmt] declaration
#   20|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of ll_i
#   20|           Type = [LongLongType] long long
#   20|         getVariable().getInitializer(): [Initializer] initializer for ll_i
#   20|           getExpr(): [Literal] 5
#   20|               Type = [IntType] int
#   20|               Value = [Literal] 5
#   20|               ValueCategory = prvalue
#   20|           getExpr().getFullyConverted(): [CStyleCast] (long long)...
#   20|               Conversion = [IntegralConversion] integral conversion
#   20|               Type = [LongLongType] long long
#   20|               Value = [CStyleCast] 5
#   20|               ValueCategory = prvalue
#   21|     getStmt(13): [DeclStmt] declaration
#   21|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of ll_ll
#   21|           Type = [LongLongType] long long
#   21|         getVariable().getInitializer(): [Initializer] initializer for ll_ll
#   21|           getExpr(): [Literal] 5
#   21|               Type = [LongLongType] long long
#   21|               Value = [Literal] 5
#   21|               ValueCategory = prvalue
#   22|     getStmt(14): [DeclStmt] declaration
#   22|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of ull_i
#   22|           Type = [LongLongType] unsigned long long
#   22|         getVariable().getInitializer(): [Initializer] initializer for ull_i
#   22|           getExpr(): [Literal] 5
#   22|               Type = [IntType] int
#   22|               Value = [Literal] 5
#   22|               ValueCategory = prvalue
#   22|           getExpr().getFullyConverted(): [CStyleCast] (unsigned long long)...
#   22|               Conversion = [IntegralConversion] integral conversion
#   22|               Type = [LongLongType] unsigned long long
#   22|               Value = [CStyleCast] 5
#   22|               ValueCategory = prvalue
#   23|     getStmt(15): [DeclStmt] declaration
#   23|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of ull_ull
#   23|           Type = [LongLongType] unsigned long long
#   23|         getVariable().getInitializer(): [Initializer] initializer for ull_ull
#   23|           getExpr(): [Literal] 5
#   23|               Type = [LongLongType] unsigned long long
#   23|               Value = [Literal] 5
#   23|               ValueCategory = prvalue
#   25|     getStmt(16): [DeclStmt] declaration
#   25|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b_t
#   25|           Type = [BoolType] bool
#   25|         getVariable().getInitializer(): [Initializer] initializer for b_t
#   25|           getExpr(): [Literal] 1
#   25|               Type = [BoolType] bool
#   25|               Value = [Literal] 1
#   25|               ValueCategory = prvalue
#   26|     getStmt(17): [DeclStmt] declaration
#   26|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b_f
#   26|           Type = [BoolType] bool
#   26|         getVariable().getInitializer(): [Initializer] initializer for b_f
#   26|           getExpr(): [Literal] 0
#   26|               Type = [BoolType] bool
#   26|               Value = [Literal] 0
#   26|               ValueCategory = prvalue
#   28|     getStmt(18): [DeclStmt] declaration
#   28|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of wc_i
#   28|           Type = [Wchar_t,WideCharType] wchar_t
#   28|         getVariable().getInitializer(): [Initializer] initializer for wc_i
#   28|           getExpr(): [Literal] 5
#   28|               Type = [IntType] int
#   28|               Value = [Literal] 5
#   28|               ValueCategory = prvalue
#   28|           getExpr().getFullyConverted(): [CStyleCast] (wchar_t)...
#   28|               Conversion = [IntegralConversion] integral conversion
#   28|               Type = [Wchar_t,WideCharType] wchar_t
#   28|               Value = [CStyleCast] 5
#   28|               ValueCategory = prvalue
#   29|     getStmt(19): [DeclStmt] declaration
#   29|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of wc_c
#   29|           Type = [Wchar_t,WideCharType] wchar_t
#   29|         getVariable().getInitializer(): [Initializer] initializer for wc_c
#   29|           getExpr(): [CharLiteral] 65
#   29|               Type = [Wchar_t,WideCharType] wchar_t
#   29|               Value = [CharLiteral] 65
#   29|               ValueCategory = prvalue
#   31|     getStmt(20): [DeclStmt] declaration
#   31|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c16
#   31|           Type = [Char16Type] char16_t
#   31|         getVariable().getInitializer(): [Initializer] initializer for c16
#   31|           getExpr(): [Literal] 65
#   31|               Type = [Char16Type] char16_t
#   31|               Value = [Literal] 65
#   31|               ValueCategory = prvalue
#   32|     getStmt(21): [DeclStmt] declaration
#   32|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c32
#   32|           Type = [Char32Type] char32_t
#   32|         getVariable().getInitializer(): [Initializer] initializer for c32
#   32|           getExpr(): [Literal] 65
#   32|               Type = [Char32Type] char32_t
#   32|               Value = [Literal] 65
#   32|               ValueCategory = prvalue
#   34|     getStmt(22): [DeclStmt] declaration
#   34|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of f_i
#   34|           Type = [FloatType] float
#   34|         getVariable().getInitializer(): [Initializer] initializer for f_i
#   34|           getExpr(): [Literal] 1
#   34|               Type = [IntType] int
#   34|               Value = [Literal] 1
#   34|               ValueCategory = prvalue
#   34|           getExpr().getFullyConverted(): [CStyleCast] (float)...
#   34|               Conversion = [IntegralToFloatingPointConversion] integral to floating point conversion
#   34|               Type = [FloatType] float
#   34|               Value = [CStyleCast] 1.0
#   34|               ValueCategory = prvalue
#   35|     getStmt(23): [DeclStmt] declaration
#   35|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of f_f
#   35|           Type = [FloatType] float
#   35|         getVariable().getInitializer(): [Initializer] initializer for f_f
#   35|           getExpr(): [Literal] 1.0
#   35|               Type = [FloatType] float
#   35|               Value = [Literal] 1.0
#   35|               ValueCategory = prvalue
#   36|     getStmt(24): [DeclStmt] declaration
#   36|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of f_d
#   36|           Type = [FloatType] float
#   36|         getVariable().getInitializer(): [Initializer] initializer for f_d
#   36|           getExpr(): [Literal] 1.0
#   36|               Type = [DoubleType] double
#   36|               Value = [Literal] 1.0
#   36|               ValueCategory = prvalue
#   36|           getExpr().getFullyConverted(): [CStyleCast] (float)...
#   36|               Conversion = [FloatingPointConversion] floating point conversion
#   36|               Type = [FloatType] float
#   36|               Value = [CStyleCast] 1.0
#   36|               ValueCategory = prvalue
#   38|     getStmt(25): [DeclStmt] declaration
#   38|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d_i
#   38|           Type = [DoubleType] double
#   38|         getVariable().getInitializer(): [Initializer] initializer for d_i
#   38|           getExpr(): [Literal] 1
#   38|               Type = [IntType] int
#   38|               Value = [Literal] 1
#   38|               ValueCategory = prvalue
#   38|           getExpr().getFullyConverted(): [CStyleCast] (double)...
#   38|               Conversion = [IntegralToFloatingPointConversion] integral to floating point conversion
#   38|               Type = [DoubleType] double
#   38|               Value = [CStyleCast] 1.0
#   38|               ValueCategory = prvalue
#   39|     getStmt(26): [DeclStmt] declaration
#   39|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d_f
#   39|           Type = [DoubleType] double
#   39|         getVariable().getInitializer(): [Initializer] initializer for d_f
#   39|           getExpr(): [Literal] 1.0
#   39|               Type = [FloatType] float
#   39|               Value = [Literal] 1.0
#   39|               ValueCategory = prvalue
#   39|           getExpr().getFullyConverted(): [CStyleCast] (double)...
#   39|               Conversion = [FloatingPointConversion] floating point conversion
#   39|               Type = [DoubleType] double
#   39|               Value = [CStyleCast] 1.0
#   39|               ValueCategory = prvalue
#   40|     getStmt(27): [DeclStmt] declaration
#   40|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d_d
#   40|           Type = [DoubleType] double
#   40|         getVariable().getInitializer(): [Initializer] initializer for d_d
#   40|           getExpr(): [Literal] 1.0
#   40|               Type = [DoubleType] double
#   40|               Value = [Literal] 1.0
#   40|               ValueCategory = prvalue
#   41|     getStmt(28): [ReturnStmt] return ...
#   43| [TopLevelFunction] void Foo()
#   43|   <params>: 
#   43|   getEntryPoint(): [BlockStmt] { ... }
#   44|     getStmt(0): [DeclStmt] declaration
#   44|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#   44|           Type = [IntType] int
#   44|         getVariable().getInitializer(): [Initializer] initializer for x
#   44|           getExpr(): [AddExpr] ... + ...
#   44|               Type = [IntType] int
#   44|               Value = [AddExpr] 17
#   44|               ValueCategory = prvalue
#   44|             getLeftOperand(): [Literal] 5
#   44|                 Type = [IntType] int
#   44|                 Value = [Literal] 5
#   44|                 ValueCategory = prvalue
#   44|             getRightOperand(): [Literal] 12
#   44|                 Type = [IntType] int
#   44|                 Value = [Literal] 12
#   44|                 ValueCategory = prvalue
#   45|     getStmt(1): [DeclStmt] declaration
#   45|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
#   45|           Type = [ShortType] short
#   45|         getVariable().getInitializer(): [Initializer] initializer for y
#   45|           getExpr(): [Literal] 7
#   45|               Type = [IntType] int
#   45|               Value = [Literal] 7
#   45|               ValueCategory = prvalue
#   45|           getExpr().getFullyConverted(): [CStyleCast] (short)...
#   45|               Conversion = [IntegralConversion] integral conversion
#   45|               Type = [ShortType] short
#   45|               Value = [CStyleCast] 7
#   45|               ValueCategory = prvalue
#   46|     getStmt(2): [ExprStmt] ExprStmt
#   46|       getExpr(): [AssignExpr] ... = ...
#   46|           Type = [ShortType] short
#   46|           ValueCategory = lvalue
#   46|         getLValue(): [VariableAccess] y
#   46|             Type = [ShortType] short
#   46|             ValueCategory = lvalue
#   46|         getRValue(): [AddExpr] ... + ...
#   46|             Type = [IntType] int
#   46|             ValueCategory = prvalue
#   46|           getLeftOperand(): [VariableAccess] x
#   46|               Type = [IntType] int
#   46|               ValueCategory = prvalue(load)
#   46|           getRightOperand(): [VariableAccess] y
#   46|               Type = [ShortType] short
#   46|               ValueCategory = prvalue(load)
#   46|           getRightOperand().getFullyConverted(): [CStyleCast] (int)...
#   46|               Conversion = [IntegralConversion] integral conversion
#   46|               Type = [IntType] int
#   46|               ValueCategory = prvalue
#   46|         getRValue().getFullyConverted(): [CStyleCast] (short)...
#   46|             Conversion = [IntegralConversion] integral conversion
#   46|             Type = [ShortType] short
#   46|             ValueCategory = prvalue
#   47|     getStmt(3): [ExprStmt] ExprStmt
#   47|       getExpr(): [AssignExpr] ... = ...
#   47|           Type = [IntType] int
#   47|           ValueCategory = lvalue
#   47|         getLValue(): [VariableAccess] x
#   47|             Type = [IntType] int
#   47|             ValueCategory = lvalue
#   47|         getRValue(): [MulExpr] ... * ...
#   47|             Type = [IntType] int
#   47|             ValueCategory = prvalue
#   47|           getLeftOperand(): [VariableAccess] x
#   47|               Type = [IntType] int
#   47|               ValueCategory = prvalue(load)
#   47|           getRightOperand(): [VariableAccess] y
#   47|               Type = [ShortType] short
#   47|               ValueCategory = prvalue(load)
#   47|           getRightOperand().getFullyConverted(): [CStyleCast] (int)...
#   47|               Conversion = [IntegralConversion] integral conversion
#   47|               Type = [IntType] int
#   47|               ValueCategory = prvalue
#   48|     getStmt(4): [ReturnStmt] return ...
#   50| [TopLevelFunction] void IntegerOps(int, int)
#   50|   <params>: 
#   50|     getParameter(0): [Parameter] x
#   50|         Type = [IntType] int
#   50|     getParameter(1): [Parameter] y
#   50|         Type = [IntType] int
#   50|   getEntryPoint(): [BlockStmt] { ... }
#   51|     getStmt(0): [DeclStmt] declaration
#   51|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
#   51|           Type = [IntType] int
#   53|     getStmt(1): [ExprStmt] ExprStmt
#   53|       getExpr(): [AssignExpr] ... = ...
#   53|           Type = [IntType] int
#   53|           ValueCategory = lvalue
#   53|         getLValue(): [VariableAccess] z
#   53|             Type = [IntType] int
#   53|             ValueCategory = lvalue
#   53|         getRValue(): [AddExpr] ... + ...
#   53|             Type = [IntType] int
#   53|             ValueCategory = prvalue
#   53|           getLeftOperand(): [VariableAccess] x
#   53|               Type = [IntType] int
#   53|               ValueCategory = prvalue(load)
#   53|           getRightOperand(): [VariableAccess] y
#   53|               Type = [IntType] int
#   53|               ValueCategory = prvalue(load)
#   54|     getStmt(2): [ExprStmt] ExprStmt
#   54|       getExpr(): [AssignExpr] ... = ...
#   54|           Type = [IntType] int
#   54|           ValueCategory = lvalue
#   54|         getLValue(): [VariableAccess] z
#   54|             Type = [IntType] int
#   54|             ValueCategory = lvalue
#   54|         getRValue(): [SubExpr] ... - ...
#   54|             Type = [IntType] int
#   54|             ValueCategory = prvalue
#   54|           getLeftOperand(): [VariableAccess] x
#   54|               Type = [IntType] int
#   54|               ValueCategory = prvalue(load)
#   54|           getRightOperand(): [VariableAccess] y
#   54|               Type = [IntType] int
#   54|               ValueCategory = prvalue(load)
#   55|     getStmt(3): [ExprStmt] ExprStmt
#   55|       getExpr(): [AssignExpr] ... = ...
#   55|           Type = [IntType] int
#   55|           ValueCategory = lvalue
#   55|         getLValue(): [VariableAccess] z
#   55|             Type = [IntType] int
#   55|             ValueCategory = lvalue
#   55|         getRValue(): [MulExpr] ... * ...
#   55|             Type = [IntType] int
#   55|             ValueCategory = prvalue
#   55|           getLeftOperand(): [VariableAccess] x
#   55|               Type = [IntType] int
#   55|               ValueCategory = prvalue(load)
#   55|           getRightOperand(): [VariableAccess] y
#   55|               Type = [IntType] int
#   55|               ValueCategory = prvalue(load)
#   56|     getStmt(4): [ExprStmt] ExprStmt
#   56|       getExpr(): [AssignExpr] ... = ...
#   56|           Type = [IntType] int
#   56|           ValueCategory = lvalue
#   56|         getLValue(): [VariableAccess] z
#   56|             Type = [IntType] int
#   56|             ValueCategory = lvalue
#   56|         getRValue(): [DivExpr] ... / ...
#   56|             Type = [IntType] int
#   56|             ValueCategory = prvalue
#   56|           getLeftOperand(): [VariableAccess] x
#   56|               Type = [IntType] int
#   56|               ValueCategory = prvalue(load)
#   56|           getRightOperand(): [VariableAccess] y
#   56|               Type = [IntType] int
#   56|               ValueCategory = prvalue(load)
#   57|     getStmt(5): [ExprStmt] ExprStmt
#   57|       getExpr(): [AssignExpr] ... = ...
#   57|           Type = [IntType] int
#   57|           ValueCategory = lvalue
#   57|         getLValue(): [VariableAccess] z
#   57|             Type = [IntType] int
#   57|             ValueCategory = lvalue
#   57|         getRValue(): [RemExpr] ... % ...
#   57|             Type = [IntType] int
#   57|             ValueCategory = prvalue
#   57|           getLeftOperand(): [VariableAccess] x
#   57|               Type = [IntType] int
#   57|               ValueCategory = prvalue(load)
#   57|           getRightOperand(): [VariableAccess] y
#   57|               Type = [IntType] int
#   57|               ValueCategory = prvalue(load)
#   59|     getStmt(6): [ExprStmt] ExprStmt
#   59|       getExpr(): [AssignExpr] ... = ...
#   59|           Type = [IntType] int
#   59|           ValueCategory = lvalue
#   59|         getLValue(): [VariableAccess] z
#   59|             Type = [IntType] int
#   59|             ValueCategory = lvalue
#   59|         getRValue(): [BitwiseAndExpr] ... & ...
#   59|             Type = [IntType] int
#   59|             ValueCategory = prvalue
#   59|           getLeftOperand(): [VariableAccess] x
#   59|               Type = [IntType] int
#   59|               ValueCategory = prvalue(load)
#   59|           getRightOperand(): [VariableAccess] y
#   59|               Type = [IntType] int
#   59|               ValueCategory = prvalue(load)
#   60|     getStmt(7): [ExprStmt] ExprStmt
#   60|       getExpr(): [AssignExpr] ... = ...
#   60|           Type = [IntType] int
#   60|           ValueCategory = lvalue
#   60|         getLValue(): [VariableAccess] z
#   60|             Type = [IntType] int
#   60|             ValueCategory = lvalue
#   60|         getRValue(): [BitwiseOrExpr] ... | ...
#   60|             Type = [IntType] int
#   60|             ValueCategory = prvalue
#   60|           getLeftOperand(): [VariableAccess] x
#   60|               Type = [IntType] int
#   60|               ValueCategory = prvalue(load)
#   60|           getRightOperand(): [VariableAccess] y
#   60|               Type = [IntType] int
#   60|               ValueCategory = prvalue(load)
#   61|     getStmt(8): [ExprStmt] ExprStmt
#   61|       getExpr(): [AssignExpr] ... = ...
#   61|           Type = [IntType] int
#   61|           ValueCategory = lvalue
#   61|         getLValue(): [VariableAccess] z
#   61|             Type = [IntType] int
#   61|             ValueCategory = lvalue
#   61|         getRValue(): [BitwiseXorExpr] ... ^ ...
#   61|             Type = [IntType] int
#   61|             ValueCategory = prvalue
#   61|           getLeftOperand(): [VariableAccess] x
#   61|               Type = [IntType] int
#   61|               ValueCategory = prvalue(load)
#   61|           getRightOperand(): [VariableAccess] y
#   61|               Type = [IntType] int
#   61|               ValueCategory = prvalue(load)
#   63|     getStmt(9): [ExprStmt] ExprStmt
#   63|       getExpr(): [AssignExpr] ... = ...
#   63|           Type = [IntType] int
#   63|           ValueCategory = lvalue
#   63|         getLValue(): [VariableAccess] z
#   63|             Type = [IntType] int
#   63|             ValueCategory = lvalue
#   63|         getRValue(): [LShiftExpr] ... << ...
#   63|             Type = [IntType] int
#   63|             ValueCategory = prvalue
#   63|           getLeftOperand(): [VariableAccess] x
#   63|               Type = [IntType] int
#   63|               ValueCategory = prvalue(load)
#   63|           getRightOperand(): [VariableAccess] y
#   63|               Type = [IntType] int
#   63|               ValueCategory = prvalue(load)
#   64|     getStmt(10): [ExprStmt] ExprStmt
#   64|       getExpr(): [AssignExpr] ... = ...
#   64|           Type = [IntType] int
#   64|           ValueCategory = lvalue
#   64|         getLValue(): [VariableAccess] z
#   64|             Type = [IntType] int
#   64|             ValueCategory = lvalue
#   64|         getRValue(): [RShiftExpr] ... >> ...
#   64|             Type = [IntType] int
#   64|             ValueCategory = prvalue
#   64|           getLeftOperand(): [VariableAccess] x
#   64|               Type = [IntType] int
#   64|               ValueCategory = prvalue(load)
#   64|           getRightOperand(): [VariableAccess] y
#   64|               Type = [IntType] int
#   64|               ValueCategory = prvalue(load)
#   66|     getStmt(11): [ExprStmt] ExprStmt
#   66|       getExpr(): [AssignExpr] ... = ...
#   66|           Type = [IntType] int
#   66|           ValueCategory = lvalue
#   66|         getLValue(): [VariableAccess] z
#   66|             Type = [IntType] int
#   66|             ValueCategory = lvalue
#   66|         getRValue(): [VariableAccess] x
#   66|             Type = [IntType] int
#   66|             ValueCategory = prvalue(load)
#   68|     getStmt(12): [ExprStmt] ExprStmt
#   68|       getExpr(): [AssignAddExpr] ... += ...
#   68|           Type = [IntType] int
#   68|           ValueCategory = lvalue
#   68|         getLValue(): [VariableAccess] z
#   68|             Type = [IntType] int
#   68|             ValueCategory = lvalue
#   68|         getRValue(): [VariableAccess] x
#   68|             Type = [IntType] int
#   68|             ValueCategory = prvalue(load)
#   69|     getStmt(13): [ExprStmt] ExprStmt
#   69|       getExpr(): [AssignSubExpr] ... -= ...
#   69|           Type = [IntType] int
#   69|           ValueCategory = lvalue
#   69|         getLValue(): [VariableAccess] z
#   69|             Type = [IntType] int
#   69|             ValueCategory = lvalue
#   69|         getRValue(): [VariableAccess] x
#   69|             Type = [IntType] int
#   69|             ValueCategory = prvalue(load)
#   70|     getStmt(14): [ExprStmt] ExprStmt
#   70|       getExpr(): [AssignMulExpr] ... *= ...
#   70|           Type = [IntType] int
#   70|           ValueCategory = lvalue
#   70|         getLValue(): [VariableAccess] z
#   70|             Type = [IntType] int
#   70|             ValueCategory = lvalue
#   70|         getRValue(): [VariableAccess] x
#   70|             Type = [IntType] int
#   70|             ValueCategory = prvalue(load)
#   71|     getStmt(15): [ExprStmt] ExprStmt
#   71|       getExpr(): [AssignDivExpr] ... /= ...
#   71|           Type = [IntType] int
#   71|           ValueCategory = lvalue
#   71|         getLValue(): [VariableAccess] z
#   71|             Type = [IntType] int
#   71|             ValueCategory = lvalue
#   71|         getRValue(): [VariableAccess] x
#   71|             Type = [IntType] int
#   71|             ValueCategory = prvalue(load)
#   72|     getStmt(16): [ExprStmt] ExprStmt
#   72|       getExpr(): [AssignRemExpr] ... %= ...
#   72|           Type = [IntType] int
#   72|           ValueCategory = lvalue
#   72|         getLValue(): [VariableAccess] z
#   72|             Type = [IntType] int
#   72|             ValueCategory = lvalue
#   72|         getRValue(): [VariableAccess] x
#   72|             Type = [IntType] int
#   72|             ValueCategory = prvalue(load)
#   74|     getStmt(17): [ExprStmt] ExprStmt
#   74|       getExpr(): [AssignAndExpr] ... &= ...
#   74|           Type = [IntType] int
#   74|           ValueCategory = lvalue
#   74|         getLValue(): [VariableAccess] z
#   74|             Type = [IntType] int
#   74|             ValueCategory = lvalue
#   74|         getRValue(): [VariableAccess] x
#   74|             Type = [IntType] int
#   74|             ValueCategory = prvalue(load)
#   75|     getStmt(18): [ExprStmt] ExprStmt
#   75|       getExpr(): [AssignOrExpr] ... |= ...
#   75|           Type = [IntType] int
#   75|           ValueCategory = lvalue
#   75|         getLValue(): [VariableAccess] z
#   75|             Type = [IntType] int
#   75|             ValueCategory = lvalue
#   75|         getRValue(): [VariableAccess] x
#   75|             Type = [IntType] int
#   75|             ValueCategory = prvalue(load)
#   76|     getStmt(19): [ExprStmt] ExprStmt
#   76|       getExpr(): [AssignXorExpr] ... ^= ...
#   76|           Type = [IntType] int
#   76|           ValueCategory = lvalue
#   76|         getLValue(): [VariableAccess] z
#   76|             Type = [IntType] int
#   76|             ValueCategory = lvalue
#   76|         getRValue(): [VariableAccess] x
#   76|             Type = [IntType] int
#   76|             ValueCategory = prvalue(load)
#   78|     getStmt(20): [ExprStmt] ExprStmt
#   78|       getExpr(): [AssignLShiftExpr] ... <<= ...
#   78|           Type = [IntType] int
#   78|           ValueCategory = lvalue
#   78|         getLValue(): [VariableAccess] z
#   78|             Type = [IntType] int
#   78|             ValueCategory = lvalue
#   78|         getRValue(): [VariableAccess] x
#   78|             Type = [IntType] int
#   78|             ValueCategory = prvalue(load)
#   79|     getStmt(21): [ExprStmt] ExprStmt
#   79|       getExpr(): [AssignRShiftExpr] ... >>= ...
#   79|           Type = [IntType] int
#   79|           ValueCategory = lvalue
#   79|         getLValue(): [VariableAccess] z
#   79|             Type = [IntType] int
#   79|             ValueCategory = lvalue
#   79|         getRValue(): [VariableAccess] x
#   79|             Type = [IntType] int
#   79|             ValueCategory = prvalue(load)
#   81|     getStmt(22): [ExprStmt] ExprStmt
#   81|       getExpr(): [AssignExpr] ... = ...
#   81|           Type = [IntType] int
#   81|           ValueCategory = lvalue
#   81|         getLValue(): [VariableAccess] z
#   81|             Type = [IntType] int
#   81|             ValueCategory = lvalue
#   81|         getRValue(): [UnaryPlusExpr] + ...
#   81|             Type = [IntType] int
#   81|             ValueCategory = prvalue
#   81|           getOperand(): [VariableAccess] x
#   81|               Type = [IntType] int
#   81|               ValueCategory = prvalue(load)
#   82|     getStmt(23): [ExprStmt] ExprStmt
#   82|       getExpr(): [AssignExpr] ... = ...
#   82|           Type = [IntType] int
#   82|           ValueCategory = lvalue
#   82|         getLValue(): [VariableAccess] z
#   82|             Type = [IntType] int
#   82|             ValueCategory = lvalue
#   82|         getRValue(): [UnaryMinusExpr] - ...
#   82|             Type = [IntType] int
#   82|             ValueCategory = prvalue
#   82|           getOperand(): [VariableAccess] x
#   82|               Type = [IntType] int
#   82|               ValueCategory = prvalue(load)
#   83|     getStmt(24): [ExprStmt] ExprStmt
#   83|       getExpr(): [AssignExpr] ... = ...
#   83|           Type = [IntType] int
#   83|           ValueCategory = lvalue
#   83|         getLValue(): [VariableAccess] z
#   83|             Type = [IntType] int
#   83|             ValueCategory = lvalue
#   83|         getRValue(): [ComplementExpr] ~ ...
#   83|             Type = [IntType] int
#   83|             ValueCategory = prvalue
#   83|           getOperand(): [VariableAccess] x
#   83|               Type = [IntType] int
#   83|               ValueCategory = prvalue(load)
#   84|     getStmt(25): [ExprStmt] ExprStmt
#   84|       getExpr(): [AssignExpr] ... = ...
#   84|           Type = [IntType] int
#   84|           ValueCategory = lvalue
#   84|         getLValue(): [VariableAccess] z
#   84|             Type = [IntType] int
#   84|             ValueCategory = lvalue
#   84|         getRValue(): [NotExpr] ! ...
#   84|             Type = [BoolType] bool
#   84|             ValueCategory = prvalue
#   84|           getOperand(): [VariableAccess] x
#   84|               Type = [IntType] int
#   84|               ValueCategory = prvalue(load)
#   84|           getOperand().getFullyConverted(): [CStyleCast] (bool)...
#   84|               Conversion = [BoolConversion] conversion to bool
#   84|               Type = [BoolType] bool
#   84|               ValueCategory = prvalue
#   84|         getRValue().getFullyConverted(): [CStyleCast] (int)...
#   84|             Conversion = [IntegralConversion] integral conversion
#   84|             Type = [IntType] int
#   84|             ValueCategory = prvalue
#   85|     getStmt(26): [ReturnStmt] return ...
#   87| [TopLevelFunction] void IntegerCompare(int, int)
#   87|   <params>: 
#   87|     getParameter(0): [Parameter] x
#   87|         Type = [IntType] int
#   87|     getParameter(1): [Parameter] y
#   87|         Type = [IntType] int
#   87|   getEntryPoint(): [BlockStmt] { ... }
#   88|     getStmt(0): [DeclStmt] declaration
#   88|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
#   88|           Type = [BoolType] bool
#   90|     getStmt(1): [ExprStmt] ExprStmt
#   90|       getExpr(): [AssignExpr] ... = ...
#   90|           Type = [BoolType] bool
#   90|           ValueCategory = lvalue
#   90|         getLValue(): [VariableAccess] b
#   90|             Type = [BoolType] bool
#   90|             ValueCategory = lvalue
#   90|         getRValue(): [EQExpr] ... == ...
#   90|             Type = [BoolType] bool
#   90|             ValueCategory = prvalue
#   90|           getLeftOperand(): [VariableAccess] x
#   90|               Type = [IntType] int
#   90|               ValueCategory = prvalue(load)
#   90|           getRightOperand(): [VariableAccess] y
#   90|               Type = [IntType] int
#   90|               ValueCategory = prvalue(load)
#   91|     getStmt(2): [ExprStmt] ExprStmt
#   91|       getExpr(): [AssignExpr] ... = ...
#   91|           Type = [BoolType] bool
#   91|           ValueCategory = lvalue
#   91|         getLValue(): [VariableAccess] b
#   91|             Type = [BoolType] bool
#   91|             ValueCategory = lvalue
#   91|         getRValue(): [NEExpr] ... != ...
#   91|             Type = [BoolType] bool
#   91|             ValueCategory = prvalue
#   91|           getLeftOperand(): [VariableAccess] x
#   91|               Type = [IntType] int
#   91|               ValueCategory = prvalue(load)
#   91|           getRightOperand(): [VariableAccess] y
#   91|               Type = [IntType] int
#   91|               ValueCategory = prvalue(load)
#   92|     getStmt(3): [ExprStmt] ExprStmt
#   92|       getExpr(): [AssignExpr] ... = ...
#   92|           Type = [BoolType] bool
#   92|           ValueCategory = lvalue
#   92|         getLValue(): [VariableAccess] b
#   92|             Type = [BoolType] bool
#   92|             ValueCategory = lvalue
#   92|         getRValue(): [LTExpr] ... < ...
#   92|             Type = [BoolType] bool
#   92|             ValueCategory = prvalue
#   92|           getLesserOperand(): [VariableAccess] x
#   92|               Type = [IntType] int
#   92|               ValueCategory = prvalue(load)
#   92|           getGreaterOperand(): [VariableAccess] y
#   92|               Type = [IntType] int
#   92|               ValueCategory = prvalue(load)
#   93|     getStmt(4): [ExprStmt] ExprStmt
#   93|       getExpr(): [AssignExpr] ... = ...
#   93|           Type = [BoolType] bool
#   93|           ValueCategory = lvalue
#   93|         getLValue(): [VariableAccess] b
#   93|             Type = [BoolType] bool
#   93|             ValueCategory = lvalue
#   93|         getRValue(): [GTExpr] ... > ...
#   93|             Type = [BoolType] bool
#   93|             ValueCategory = prvalue
#   93|           getGreaterOperand(): [VariableAccess] x
#   93|               Type = [IntType] int
#   93|               ValueCategory = prvalue(load)
#   93|           getLesserOperand(): [VariableAccess] y
#   93|               Type = [IntType] int
#   93|               ValueCategory = prvalue(load)
#   94|     getStmt(5): [ExprStmt] ExprStmt
#   94|       getExpr(): [AssignExpr] ... = ...
#   94|           Type = [BoolType] bool
#   94|           ValueCategory = lvalue
#   94|         getLValue(): [VariableAccess] b
#   94|             Type = [BoolType] bool
#   94|             ValueCategory = lvalue
#   94|         getRValue(): [LEExpr] ... <= ...
#   94|             Type = [BoolType] bool
#   94|             ValueCategory = prvalue
#   94|           getLesserOperand(): [VariableAccess] x
#   94|               Type = [IntType] int
#   94|               ValueCategory = prvalue(load)
#   94|           getGreaterOperand(): [VariableAccess] y
#   94|               Type = [IntType] int
#   94|               ValueCategory = prvalue(load)
#   95|     getStmt(6): [ExprStmt] ExprStmt
#   95|       getExpr(): [AssignExpr] ... = ...
#   95|           Type = [BoolType] bool
#   95|           ValueCategory = lvalue
#   95|         getLValue(): [VariableAccess] b
#   95|             Type = [BoolType] bool
#   95|             ValueCategory = lvalue
#   95|         getRValue(): [GEExpr] ... >= ...
#   95|             Type = [BoolType] bool
#   95|             ValueCategory = prvalue
#   95|           getGreaterOperand(): [VariableAccess] x
#   95|               Type = [IntType] int
#   95|               ValueCategory = prvalue(load)
#   95|           getLesserOperand(): [VariableAccess] y
#   95|               Type = [IntType] int
#   95|               ValueCategory = prvalue(load)
#   96|     getStmt(7): [ReturnStmt] return ...
#   98| [TopLevelFunction] void IntegerCrement(int)
#   98|   <params>: 
#   98|     getParameter(0): [Parameter] x
#   98|         Type = [IntType] int
#   98|   getEntryPoint(): [BlockStmt] { ... }
#   99|     getStmt(0): [DeclStmt] declaration
#   99|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
#   99|           Type = [IntType] int
#  101|     getStmt(1): [ExprStmt] ExprStmt
#  101|       getExpr(): [AssignExpr] ... = ...
#  101|           Type = [IntType] int
#  101|           ValueCategory = lvalue
#  101|         getLValue(): [VariableAccess] y
#  101|             Type = [IntType] int
#  101|             ValueCategory = lvalue
#  101|         getRValue(): [PrefixIncrExpr] ++ ...
#  101|             Type = [IntType] int
#  101|             ValueCategory = prvalue(load)
#  101|           getOperand(): [VariableAccess] x
#  101|               Type = [IntType] int
#  101|               ValueCategory = lvalue
#  102|     getStmt(2): [ExprStmt] ExprStmt
#  102|       getExpr(): [AssignExpr] ... = ...
#  102|           Type = [IntType] int
#  102|           ValueCategory = lvalue
#  102|         getLValue(): [VariableAccess] y
#  102|             Type = [IntType] int
#  102|             ValueCategory = lvalue
#  102|         getRValue(): [PrefixDecrExpr] -- ...
#  102|             Type = [IntType] int
#  102|             ValueCategory = prvalue(load)
#  102|           getOperand(): [VariableAccess] x
#  102|               Type = [IntType] int
#  102|               ValueCategory = lvalue
#  103|     getStmt(3): [ExprStmt] ExprStmt
#  103|       getExpr(): [AssignExpr] ... = ...
#  103|           Type = [IntType] int
#  103|           ValueCategory = lvalue
#  103|         getLValue(): [VariableAccess] y
#  103|             Type = [IntType] int
#  103|             ValueCategory = lvalue
#  103|         getRValue(): [PostfixIncrExpr] ... ++
#  103|             Type = [IntType] int
#  103|             ValueCategory = prvalue
#  103|           getOperand(): [VariableAccess] x
#  103|               Type = [IntType] int
#  103|               ValueCategory = lvalue
#  104|     getStmt(4): [ExprStmt] ExprStmt
#  104|       getExpr(): [AssignExpr] ... = ...
#  104|           Type = [IntType] int
#  104|           ValueCategory = lvalue
#  104|         getLValue(): [VariableAccess] y
#  104|             Type = [IntType] int
#  104|             ValueCategory = lvalue
#  104|         getRValue(): [PostfixDecrExpr] ... --
#  104|             Type = [IntType] int
#  104|             ValueCategory = prvalue
#  104|           getOperand(): [VariableAccess] x
#  104|               Type = [IntType] int
#  104|               ValueCategory = lvalue
#  105|     getStmt(5): [ReturnStmt] return ...
#  107| [TopLevelFunction] void IntegerCrement_LValue(int)
#  107|   <params>: 
#  107|     getParameter(0): [Parameter] x
#  107|         Type = [IntType] int
#  107|   getEntryPoint(): [BlockStmt] { ... }
#  108|     getStmt(0): [DeclStmt] declaration
#  108|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of p
#  108|           Type = [IntPointerType] int *
#  110|     getStmt(1): [ExprStmt] ExprStmt
#  110|       getExpr(): [AssignExpr] ... = ...
#  110|           Type = [IntPointerType] int *
#  110|           ValueCategory = lvalue
#  110|         getLValue(): [VariableAccess] p
#  110|             Type = [IntPointerType] int *
#  110|             ValueCategory = lvalue
#  110|         getRValue(): [AddressOfExpr] & ...
#  110|             Type = [IntPointerType] int *
#  110|             ValueCategory = prvalue
#  110|           getOperand(): [PrefixIncrExpr] ++ ...
#  110|               Type = [IntType] int
#  110|               ValueCategory = lvalue
#  110|             getOperand(): [VariableAccess] x
#  110|                 Type = [IntType] int
#  110|                 ValueCategory = lvalue
#  110|           getOperand().getFullyConverted(): [ParenthesisExpr] (...)
#  110|               Type = [IntType] int
#  110|               ValueCategory = lvalue
#  111|     getStmt(2): [ExprStmt] ExprStmt
#  111|       getExpr(): [AssignExpr] ... = ...
#  111|           Type = [IntPointerType] int *
#  111|           ValueCategory = lvalue
#  111|         getLValue(): [VariableAccess] p
#  111|             Type = [IntPointerType] int *
#  111|             ValueCategory = lvalue
#  111|         getRValue(): [AddressOfExpr] & ...
#  111|             Type = [IntPointerType] int *
#  111|             ValueCategory = prvalue
#  111|           getOperand(): [PrefixDecrExpr] -- ...
#  111|               Type = [IntType] int
#  111|               ValueCategory = lvalue
#  111|             getOperand(): [VariableAccess] x
#  111|                 Type = [IntType] int
#  111|                 ValueCategory = lvalue
#  111|           getOperand().getFullyConverted(): [ParenthesisExpr] (...)
#  111|               Type = [IntType] int
#  111|               ValueCategory = lvalue
#  112|     getStmt(3): [ReturnStmt] return ...
#  114| [TopLevelFunction] void FloatOps(double, double)
#  114|   <params>: 
#  114|     getParameter(0): [Parameter] x
#  114|         Type = [DoubleType] double
#  114|     getParameter(1): [Parameter] y
#  114|         Type = [DoubleType] double
#  114|   getEntryPoint(): [BlockStmt] { ... }
#  115|     getStmt(0): [DeclStmt] declaration
#  115|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
#  115|           Type = [DoubleType] double
#  117|     getStmt(1): [ExprStmt] ExprStmt
#  117|       getExpr(): [AssignExpr] ... = ...
#  117|           Type = [DoubleType] double
#  117|           ValueCategory = lvalue
#  117|         getLValue(): [VariableAccess] z
#  117|             Type = [DoubleType] double
#  117|             ValueCategory = lvalue
#  117|         getRValue(): [AddExpr] ... + ...
#  117|             Type = [DoubleType] double
#  117|             ValueCategory = prvalue
#  117|           getLeftOperand(): [VariableAccess] x
#  117|               Type = [DoubleType] double
#  117|               ValueCategory = prvalue(load)
#  117|           getRightOperand(): [VariableAccess] y
#  117|               Type = [DoubleType] double
#  117|               ValueCategory = prvalue(load)
#  118|     getStmt(2): [ExprStmt] ExprStmt
#  118|       getExpr(): [AssignExpr] ... = ...
#  118|           Type = [DoubleType] double
#  118|           ValueCategory = lvalue
#  118|         getLValue(): [VariableAccess] z
#  118|             Type = [DoubleType] double
#  118|             ValueCategory = lvalue
#  118|         getRValue(): [SubExpr] ... - ...
#  118|             Type = [DoubleType] double
#  118|             ValueCategory = prvalue
#  118|           getLeftOperand(): [VariableAccess] x
#  118|               Type = [DoubleType] double
#  118|               ValueCategory = prvalue(load)
#  118|           getRightOperand(): [VariableAccess] y
#  118|               Type = [DoubleType] double
#  118|               ValueCategory = prvalue(load)
#  119|     getStmt(3): [ExprStmt] ExprStmt
#  119|       getExpr(): [AssignExpr] ... = ...
#  119|           Type = [DoubleType] double
#  119|           ValueCategory = lvalue
#  119|         getLValue(): [VariableAccess] z
#  119|             Type = [DoubleType] double
#  119|             ValueCategory = lvalue
#  119|         getRValue(): [MulExpr] ... * ...
#  119|             Type = [DoubleType] double
#  119|             ValueCategory = prvalue
#  119|           getLeftOperand(): [VariableAccess] x
#  119|               Type = [DoubleType] double
#  119|               ValueCategory = prvalue(load)
#  119|           getRightOperand(): [VariableAccess] y
#  119|               Type = [DoubleType] double
#  119|               ValueCategory = prvalue(load)
#  120|     getStmt(4): [ExprStmt] ExprStmt
#  120|       getExpr(): [AssignExpr] ... = ...
#  120|           Type = [DoubleType] double
#  120|           ValueCategory = lvalue
#  120|         getLValue(): [VariableAccess] z
#  120|             Type = [DoubleType] double
#  120|             ValueCategory = lvalue
#  120|         getRValue(): [DivExpr] ... / ...
#  120|             Type = [DoubleType] double
#  120|             ValueCategory = prvalue
#  120|           getLeftOperand(): [VariableAccess] x
#  120|               Type = [DoubleType] double
#  120|               ValueCategory = prvalue(load)
#  120|           getRightOperand(): [VariableAccess] y
#  120|               Type = [DoubleType] double
#  120|               ValueCategory = prvalue(load)
#  122|     getStmt(5): [ExprStmt] ExprStmt
#  122|       getExpr(): [AssignExpr] ... = ...
#  122|           Type = [DoubleType] double
#  122|           ValueCategory = lvalue
#  122|         getLValue(): [VariableAccess] z
#  122|             Type = [DoubleType] double
#  122|             ValueCategory = lvalue
#  122|         getRValue(): [VariableAccess] x
#  122|             Type = [DoubleType] double
#  122|             ValueCategory = prvalue(load)
#  124|     getStmt(6): [ExprStmt] ExprStmt
#  124|       getExpr(): [AssignAddExpr] ... += ...
#  124|           Type = [DoubleType] double
#  124|           ValueCategory = lvalue
#  124|         getLValue(): [VariableAccess] z
#  124|             Type = [DoubleType] double
#  124|             ValueCategory = lvalue
#  124|         getRValue(): [VariableAccess] x
#  124|             Type = [DoubleType] double
#  124|             ValueCategory = prvalue(load)
#  125|     getStmt(7): [ExprStmt] ExprStmt
#  125|       getExpr(): [AssignSubExpr] ... -= ...
#  125|           Type = [DoubleType] double
#  125|           ValueCategory = lvalue
#  125|         getLValue(): [VariableAccess] z
#  125|             Type = [DoubleType] double
#  125|             ValueCategory = lvalue
#  125|         getRValue(): [VariableAccess] x
#  125|             Type = [DoubleType] double
#  125|             ValueCategory = prvalue(load)
#  126|     getStmt(8): [ExprStmt] ExprStmt
#  126|       getExpr(): [AssignMulExpr] ... *= ...
#  126|           Type = [DoubleType] double
#  126|           ValueCategory = lvalue
#  126|         getLValue(): [VariableAccess] z
#  126|             Type = [DoubleType] double
#  126|             ValueCategory = lvalue
#  126|         getRValue(): [VariableAccess] x
#  126|             Type = [DoubleType] double
#  126|             ValueCategory = prvalue(load)
#  127|     getStmt(9): [ExprStmt] ExprStmt
#  127|       getExpr(): [AssignDivExpr] ... /= ...
#  127|           Type = [DoubleType] double
#  127|           ValueCategory = lvalue
#  127|         getLValue(): [VariableAccess] z
#  127|             Type = [DoubleType] double
#  127|             ValueCategory = lvalue
#  127|         getRValue(): [VariableAccess] x
#  127|             Type = [DoubleType] double
#  127|             ValueCategory = prvalue(load)
#  129|     getStmt(10): [ExprStmt] ExprStmt
#  129|       getExpr(): [AssignExpr] ... = ...
#  129|           Type = [DoubleType] double
#  129|           ValueCategory = lvalue
#  129|         getLValue(): [VariableAccess] z
#  129|             Type = [DoubleType] double
#  129|             ValueCategory = lvalue
#  129|         getRValue(): [UnaryPlusExpr] + ...
#  129|             Type = [DoubleType] double
#  129|             ValueCategory = prvalue
#  129|           getOperand(): [VariableAccess] x
#  129|               Type = [DoubleType] double
#  129|               ValueCategory = prvalue(load)
#  130|     getStmt(11): [ExprStmt] ExprStmt
#  130|       getExpr(): [AssignExpr] ... = ...
#  130|           Type = [DoubleType] double
#  130|           ValueCategory = lvalue
#  130|         getLValue(): [VariableAccess] z
#  130|             Type = [DoubleType] double
#  130|             ValueCategory = lvalue
#  130|         getRValue(): [UnaryMinusExpr] - ...
#  130|             Type = [DoubleType] double
#  130|             ValueCategory = prvalue
#  130|           getOperand(): [VariableAccess] x
#  130|               Type = [DoubleType] double
#  130|               ValueCategory = prvalue(load)
#  131|     getStmt(12): [ReturnStmt] return ...
#  133| [TopLevelFunction] void FloatCompare(double, double)
#  133|   <params>: 
#  133|     getParameter(0): [Parameter] x
#  133|         Type = [DoubleType] double
#  133|     getParameter(1): [Parameter] y
#  133|         Type = [DoubleType] double
#  133|   getEntryPoint(): [BlockStmt] { ... }
#  134|     getStmt(0): [DeclStmt] declaration
#  134|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
#  134|           Type = [BoolType] bool
#  136|     getStmt(1): [ExprStmt] ExprStmt
#  136|       getExpr(): [AssignExpr] ... = ...
#  136|           Type = [BoolType] bool
#  136|           ValueCategory = lvalue
#  136|         getLValue(): [VariableAccess] b
#  136|             Type = [BoolType] bool
#  136|             ValueCategory = lvalue
#  136|         getRValue(): [EQExpr] ... == ...
#  136|             Type = [BoolType] bool
#  136|             ValueCategory = prvalue
#  136|           getLeftOperand(): [VariableAccess] x
#  136|               Type = [DoubleType] double
#  136|               ValueCategory = prvalue(load)
#  136|           getRightOperand(): [VariableAccess] y
#  136|               Type = [DoubleType] double
#  136|               ValueCategory = prvalue(load)
#  137|     getStmt(2): [ExprStmt] ExprStmt
#  137|       getExpr(): [AssignExpr] ... = ...
#  137|           Type = [BoolType] bool
#  137|           ValueCategory = lvalue
#  137|         getLValue(): [VariableAccess] b
#  137|             Type = [BoolType] bool
#  137|             ValueCategory = lvalue
#  137|         getRValue(): [NEExpr] ... != ...
#  137|             Type = [BoolType] bool
#  137|             ValueCategory = prvalue
#  137|           getLeftOperand(): [VariableAccess] x
#  137|               Type = [DoubleType] double
#  137|               ValueCategory = prvalue(load)
#  137|           getRightOperand(): [VariableAccess] y
#  137|               Type = [DoubleType] double
#  137|               ValueCategory = prvalue(load)
#  138|     getStmt(3): [ExprStmt] ExprStmt
#  138|       getExpr(): [AssignExpr] ... = ...
#  138|           Type = [BoolType] bool
#  138|           ValueCategory = lvalue
#  138|         getLValue(): [VariableAccess] b
#  138|             Type = [BoolType] bool
#  138|             ValueCategory = lvalue
#  138|         getRValue(): [LTExpr] ... < ...
#  138|             Type = [BoolType] bool
#  138|             ValueCategory = prvalue
#  138|           getLesserOperand(): [VariableAccess] x
#  138|               Type = [DoubleType] double
#  138|               ValueCategory = prvalue(load)
#  138|           getGreaterOperand(): [VariableAccess] y
#  138|               Type = [DoubleType] double
#  138|               ValueCategory = prvalue(load)
#  139|     getStmt(4): [ExprStmt] ExprStmt
#  139|       getExpr(): [AssignExpr] ... = ...
#  139|           Type = [BoolType] bool
#  139|           ValueCategory = lvalue
#  139|         getLValue(): [VariableAccess] b
#  139|             Type = [BoolType] bool
#  139|             ValueCategory = lvalue
#  139|         getRValue(): [GTExpr] ... > ...
#  139|             Type = [BoolType] bool
#  139|             ValueCategory = prvalue
#  139|           getGreaterOperand(): [VariableAccess] x
#  139|               Type = [DoubleType] double
#  139|               ValueCategory = prvalue(load)
#  139|           getLesserOperand(): [VariableAccess] y
#  139|               Type = [DoubleType] double
#  139|               ValueCategory = prvalue(load)
#  140|     getStmt(5): [ExprStmt] ExprStmt
#  140|       getExpr(): [AssignExpr] ... = ...
#  140|           Type = [BoolType] bool
#  140|           ValueCategory = lvalue
#  140|         getLValue(): [VariableAccess] b
#  140|             Type = [BoolType] bool
#  140|             ValueCategory = lvalue
#  140|         getRValue(): [LEExpr] ... <= ...
#  140|             Type = [BoolType] bool
#  140|             ValueCategory = prvalue
#  140|           getLesserOperand(): [VariableAccess] x
#  140|               Type = [DoubleType] double
#  140|               ValueCategory = prvalue(load)
#  140|           getGreaterOperand(): [VariableAccess] y
#  140|               Type = [DoubleType] double
#  140|               ValueCategory = prvalue(load)
#  141|     getStmt(6): [ExprStmt] ExprStmt
#  141|       getExpr(): [AssignExpr] ... = ...
#  141|           Type = [BoolType] bool
#  141|           ValueCategory = lvalue
#  141|         getLValue(): [VariableAccess] b
#  141|             Type = [BoolType] bool
#  141|             ValueCategory = lvalue
#  141|         getRValue(): [GEExpr] ... >= ...
#  141|             Type = [BoolType] bool
#  141|             ValueCategory = prvalue
#  141|           getGreaterOperand(): [VariableAccess] x
#  141|               Type = [DoubleType] double
#  141|               ValueCategory = prvalue(load)
#  141|           getLesserOperand(): [VariableAccess] y
#  141|               Type = [DoubleType] double
#  141|               ValueCategory = prvalue(load)
#  142|     getStmt(7): [ReturnStmt] return ...
#  144| [TopLevelFunction] void FloatCrement(float)
#  144|   <params>: 
#  144|     getParameter(0): [Parameter] x
#  144|         Type = [FloatType] float
#  144|   getEntryPoint(): [BlockStmt] { ... }
#  145|     getStmt(0): [DeclStmt] declaration
#  145|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
#  145|           Type = [FloatType] float
#  147|     getStmt(1): [ExprStmt] ExprStmt
#  147|       getExpr(): [AssignExpr] ... = ...
#  147|           Type = [FloatType] float
#  147|           ValueCategory = lvalue
#  147|         getLValue(): [VariableAccess] y
#  147|             Type = [FloatType] float
#  147|             ValueCategory = lvalue
#  147|         getRValue(): [PrefixIncrExpr] ++ ...
#  147|             Type = [FloatType] float
#  147|             ValueCategory = prvalue(load)
#  147|           getOperand(): [VariableAccess] x
#  147|               Type = [FloatType] float
#  147|               ValueCategory = lvalue
#  148|     getStmt(2): [ExprStmt] ExprStmt
#  148|       getExpr(): [AssignExpr] ... = ...
#  148|           Type = [FloatType] float
#  148|           ValueCategory = lvalue
#  148|         getLValue(): [VariableAccess] y
#  148|             Type = [FloatType] float
#  148|             ValueCategory = lvalue
#  148|         getRValue(): [PrefixDecrExpr] -- ...
#  148|             Type = [FloatType] float
#  148|             ValueCategory = prvalue(load)
#  148|           getOperand(): [VariableAccess] x
#  148|               Type = [FloatType] float
#  148|               ValueCategory = lvalue
#  149|     getStmt(3): [ExprStmt] ExprStmt
#  149|       getExpr(): [AssignExpr] ... = ...
#  149|           Type = [FloatType] float
#  149|           ValueCategory = lvalue
#  149|         getLValue(): [VariableAccess] y
#  149|             Type = [FloatType] float
#  149|             ValueCategory = lvalue
#  149|         getRValue(): [PostfixIncrExpr] ... ++
#  149|             Type = [FloatType] float
#  149|             ValueCategory = prvalue
#  149|           getOperand(): [VariableAccess] x
#  149|               Type = [FloatType] float
#  149|               ValueCategory = lvalue
#  150|     getStmt(4): [ExprStmt] ExprStmt
#  150|       getExpr(): [AssignExpr] ... = ...
#  150|           Type = [FloatType] float
#  150|           ValueCategory = lvalue
#  150|         getLValue(): [VariableAccess] y
#  150|             Type = [FloatType] float
#  150|             ValueCategory = lvalue
#  150|         getRValue(): [PostfixDecrExpr] ... --
#  150|             Type = [FloatType] float
#  150|             ValueCategory = prvalue
#  150|           getOperand(): [VariableAccess] x
#  150|               Type = [FloatType] float
#  150|               ValueCategory = lvalue
#  151|     getStmt(5): [ReturnStmt] return ...
#  153| [TopLevelFunction] void PointerOps(int*, int)
#  153|   <params>: 
#  153|     getParameter(0): [Parameter] p
#  153|         Type = [IntPointerType] int *
#  153|     getParameter(1): [Parameter] i
#  153|         Type = [IntType] int
#  153|   getEntryPoint(): [BlockStmt] { ... }
#  154|     getStmt(0): [DeclStmt] declaration
#  154|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of q
#  154|           Type = [IntPointerType] int *
#  155|     getStmt(1): [DeclStmt] declaration
#  155|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
#  155|           Type = [BoolType] bool
#  157|     getStmt(2): [ExprStmt] ExprStmt
#  157|       getExpr(): [AssignExpr] ... = ...
#  157|           Type = [IntPointerType] int *
#  157|           ValueCategory = lvalue
#  157|         getLValue(): [VariableAccess] q
#  157|             Type = [IntPointerType] int *
#  157|             ValueCategory = lvalue
#  157|         getRValue(): [PointerAddExpr] ... + ...
#  157|             Type = [IntPointerType] int *
#  157|             ValueCategory = prvalue
#  157|           getLeftOperand(): [VariableAccess] p
#  157|               Type = [IntPointerType] int *
#  157|               ValueCategory = prvalue(load)
#  157|           getRightOperand(): [VariableAccess] i
#  157|               Type = [IntType] int
#  157|               ValueCategory = prvalue(load)
#  158|     getStmt(3): [ExprStmt] ExprStmt
#  158|       getExpr(): [AssignExpr] ... = ...
#  158|           Type = [IntPointerType] int *
#  158|           ValueCategory = lvalue
#  158|         getLValue(): [VariableAccess] q
#  158|             Type = [IntPointerType] int *
#  158|             ValueCategory = lvalue
#  158|         getRValue(): [PointerAddExpr] ... + ...
#  158|             Type = [IntPointerType] int *
#  158|             ValueCategory = prvalue
#  158|           getLeftOperand(): [VariableAccess] i
#  158|               Type = [IntType] int
#  158|               ValueCategory = prvalue(load)
#  158|           getRightOperand(): [VariableAccess] p
#  158|               Type = [IntPointerType] int *
#  158|               ValueCategory = prvalue(load)
#  159|     getStmt(4): [ExprStmt] ExprStmt
#  159|       getExpr(): [AssignExpr] ... = ...
#  159|           Type = [IntPointerType] int *
#  159|           ValueCategory = lvalue
#  159|         getLValue(): [VariableAccess] q
#  159|             Type = [IntPointerType] int *
#  159|             ValueCategory = lvalue
#  159|         getRValue(): [PointerSubExpr] ... - ...
#  159|             Type = [IntPointerType] int *
#  159|             ValueCategory = prvalue
#  159|           getLeftOperand(): [VariableAccess] p
#  159|               Type = [IntPointerType] int *
#  159|               ValueCategory = prvalue(load)
#  159|           getRightOperand(): [VariableAccess] i
#  159|               Type = [IntType] int
#  159|               ValueCategory = prvalue(load)
#  160|     getStmt(5): [ExprStmt] ExprStmt
#  160|       getExpr(): [AssignExpr] ... = ...
#  160|           Type = [IntType] int
#  160|           ValueCategory = lvalue
#  160|         getLValue(): [VariableAccess] i
#  160|             Type = [IntType] int
#  160|             ValueCategory = lvalue
#  160|         getRValue(): [PointerDiffExpr] ... - ...
#  160|             Type = [LongType] long
#  160|             ValueCategory = prvalue
#  160|           getLeftOperand(): [VariableAccess] p
#  160|               Type = [IntPointerType] int *
#  160|               ValueCategory = prvalue(load)
#  160|           getRightOperand(): [VariableAccess] q
#  160|               Type = [IntPointerType] int *
#  160|               ValueCategory = prvalue(load)
#  160|         getRValue().getFullyConverted(): [CStyleCast] (int)...
#  160|             Conversion = [IntegralConversion] integral conversion
#  160|             Type = [IntType] int
#  160|             ValueCategory = prvalue
#  162|     getStmt(6): [ExprStmt] ExprStmt
#  162|       getExpr(): [AssignExpr] ... = ...
#  162|           Type = [IntPointerType] int *
#  162|           ValueCategory = lvalue
#  162|         getLValue(): [VariableAccess] q
#  162|             Type = [IntPointerType] int *
#  162|             ValueCategory = lvalue
#  162|         getRValue(): [VariableAccess] p
#  162|             Type = [IntPointerType] int *
#  162|             ValueCategory = prvalue(load)
#  164|     getStmt(7): [ExprStmt] ExprStmt
#  164|       getExpr(): [AssignPointerAddExpr] ... += ...
#  164|           Type = [IntPointerType] int *
#  164|           ValueCategory = lvalue
#  164|         getLValue(): [VariableAccess] q
#  164|             Type = [IntPointerType] int *
#  164|             ValueCategory = lvalue
#  164|         getRValue(): [VariableAccess] i
#  164|             Type = [IntType] int
#  164|             ValueCategory = prvalue(load)
#  165|     getStmt(8): [ExprStmt] ExprStmt
#  165|       getExpr(): [AssignPointerSubExpr] ... -= ...
#  165|           Type = [IntPointerType] int *
#  165|           ValueCategory = lvalue
#  165|         getLValue(): [VariableAccess] q
#  165|             Type = [IntPointerType] int *
#  165|             ValueCategory = lvalue
#  165|         getRValue(): [VariableAccess] i
#  165|             Type = [IntType] int
#  165|             ValueCategory = prvalue(load)
#  167|     getStmt(9): [ExprStmt] ExprStmt
#  167|       getExpr(): [AssignExpr] ... = ...
#  167|           Type = [BoolType] bool
#  167|           ValueCategory = lvalue
#  167|         getLValue(): [VariableAccess] b
#  167|             Type = [BoolType] bool
#  167|             ValueCategory = lvalue
#  167|         getRValue(): [VariableAccess] p
#  167|             Type = [IntPointerType] int *
#  167|             ValueCategory = prvalue(load)
#  167|         getRValue().getFullyConverted(): [CStyleCast] (bool)...
#  167|             Conversion = [BoolConversion] conversion to bool
#  167|             Type = [BoolType] bool
#  167|             ValueCategory = prvalue
#  168|     getStmt(10): [ExprStmt] ExprStmt
#  168|       getExpr(): [AssignExpr] ... = ...
#  168|           Type = [BoolType] bool
#  168|           ValueCategory = lvalue
#  168|         getLValue(): [VariableAccess] b
#  168|             Type = [BoolType] bool
#  168|             ValueCategory = lvalue
#  168|         getRValue(): [NotExpr] ! ...
#  168|             Type = [BoolType] bool
#  168|             ValueCategory = prvalue
#  168|           getOperand(): [VariableAccess] p
#  168|               Type = [IntPointerType] int *
#  168|               ValueCategory = prvalue(load)
#  168|           getOperand().getFullyConverted(): [CStyleCast] (bool)...
#  168|               Conversion = [BoolConversion] conversion to bool
#  168|               Type = [BoolType] bool
#  168|               ValueCategory = prvalue
#  169|     getStmt(11): [ReturnStmt] return ...
#  171| [TopLevelFunction] void ArrayAccess(int*, int)
#  171|   <params>: 
#  171|     getParameter(0): [Parameter] p
#  171|         Type = [IntPointerType] int *
#  171|     getParameter(1): [Parameter] i
#  171|         Type = [IntType] int
#  171|   getEntryPoint(): [BlockStmt] { ... }
#  172|     getStmt(0): [DeclStmt] declaration
#  172|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#  172|           Type = [IntType] int
#  174|     getStmt(1): [ExprStmt] ExprStmt
#  174|       getExpr(): [AssignExpr] ... = ...
#  174|           Type = [IntType] int
#  174|           ValueCategory = lvalue
#  174|         getLValue(): [VariableAccess] x
#  174|             Type = [IntType] int
#  174|             ValueCategory = lvalue
#  174|         getRValue(): [ArrayExpr] access to array
#  174|             Type = [IntType] int
#  174|             ValueCategory = prvalue(load)
#  174|           getArrayBase(): [VariableAccess] p
#  174|               Type = [IntPointerType] int *
#  174|               ValueCategory = prvalue(load)
#  174|           getArrayOffset(): [VariableAccess] i
#  174|               Type = [IntType] int
#  174|               ValueCategory = prvalue(load)
#  175|     getStmt(2): [ExprStmt] ExprStmt
#  175|       getExpr(): [AssignExpr] ... = ...
#  175|           Type = [IntType] int
#  175|           ValueCategory = lvalue
#  175|         getLValue(): [VariableAccess] x
#  175|             Type = [IntType] int
#  175|             ValueCategory = lvalue
#  175|         getRValue(): [ArrayExpr] access to array
#  175|             Type = [IntType] int
#  175|             ValueCategory = prvalue(load)
#  175|           getArrayBase(): [VariableAccess] p
#  175|               Type = [IntPointerType] int *
#  175|               ValueCategory = prvalue(load)
#  175|           getArrayOffset(): [VariableAccess] i
#  175|               Type = [IntType] int
#  175|               ValueCategory = prvalue(load)
#  177|     getStmt(3): [ExprStmt] ExprStmt
#  177|       getExpr(): [AssignExpr] ... = ...
#  177|           Type = [IntType] int
#  177|           ValueCategory = lvalue
#  177|         getLValue(): [ArrayExpr] access to array
#  177|             Type = [IntType] int
#  177|             ValueCategory = lvalue
#  177|           getArrayBase(): [VariableAccess] p
#  177|               Type = [IntPointerType] int *
#  177|               ValueCategory = prvalue(load)
#  177|           getArrayOffset(): [VariableAccess] i
#  177|               Type = [IntType] int
#  177|               ValueCategory = prvalue(load)
#  177|         getRValue(): [VariableAccess] x
#  177|             Type = [IntType] int
#  177|             ValueCategory = prvalue(load)
#  178|     getStmt(4): [ExprStmt] ExprStmt
#  178|       getExpr(): [AssignExpr] ... = ...
#  178|           Type = [IntType] int
#  178|           ValueCategory = lvalue
#  178|         getLValue(): [ArrayExpr] access to array
#  178|             Type = [IntType] int
#  178|             ValueCategory = lvalue
#  178|           getArrayBase(): [VariableAccess] p
#  178|               Type = [IntPointerType] int *
#  178|               ValueCategory = prvalue(load)
#  178|           getArrayOffset(): [VariableAccess] i
#  178|               Type = [IntType] int
#  178|               ValueCategory = prvalue(load)
#  178|         getRValue(): [VariableAccess] x
#  178|             Type = [IntType] int
#  178|             ValueCategory = prvalue(load)
#  180|     getStmt(5): [DeclStmt] declaration
#  180|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a
#  180|           Type = [ArrayType] int[10]
#  181|     getStmt(6): [ExprStmt] ExprStmt
#  181|       getExpr(): [AssignExpr] ... = ...
#  181|           Type = [IntType] int
#  181|           ValueCategory = lvalue
#  181|         getLValue(): [VariableAccess] x
#  181|             Type = [IntType] int
#  181|             ValueCategory = lvalue
#  181|         getRValue(): [ArrayExpr] access to array
#  181|             Type = [IntType] int
#  181|             ValueCategory = prvalue(load)
#  181|           getArrayBase(): [VariableAccess] a
#  181|               Type = [ArrayType] int[10]
#  181|               ValueCategory = lvalue
#  181|           getArrayOffset(): [VariableAccess] i
#  181|               Type = [IntType] int
#  181|               ValueCategory = prvalue(load)
#  181|           getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  181|               Type = [IntPointerType] int *
#  181|               ValueCategory = prvalue
#  182|     getStmt(7): [ExprStmt] ExprStmt
#  182|       getExpr(): [AssignExpr] ... = ...
#  182|           Type = [IntType] int
#  182|           ValueCategory = lvalue
#  182|         getLValue(): [VariableAccess] x
#  182|             Type = [IntType] int
#  182|             ValueCategory = lvalue
#  182|         getRValue(): [ArrayExpr] access to array
#  182|             Type = [IntType] int
#  182|             ValueCategory = prvalue(load)
#  182|           getArrayBase(): [VariableAccess] a
#  182|               Type = [ArrayType] int[10]
#  182|               ValueCategory = lvalue
#  182|           getArrayOffset(): [VariableAccess] i
#  182|               Type = [IntType] int
#  182|               ValueCategory = prvalue(load)
#  182|           getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  182|               Type = [IntPointerType] int *
#  182|               ValueCategory = prvalue
#  183|     getStmt(8): [ExprStmt] ExprStmt
#  183|       getExpr(): [AssignExpr] ... = ...
#  183|           Type = [IntType] int
#  183|           ValueCategory = lvalue
#  183|         getLValue(): [ArrayExpr] access to array
#  183|             Type = [IntType] int
#  183|             ValueCategory = lvalue
#  183|           getArrayBase(): [VariableAccess] a
#  183|               Type = [ArrayType] int[10]
#  183|               ValueCategory = lvalue
#  183|           getArrayOffset(): [VariableAccess] i
#  183|               Type = [IntType] int
#  183|               ValueCategory = prvalue(load)
#  183|           getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  183|               Type = [IntPointerType] int *
#  183|               ValueCategory = prvalue
#  183|         getRValue(): [VariableAccess] x
#  183|             Type = [IntType] int
#  183|             ValueCategory = prvalue(load)
#  184|     getStmt(9): [ExprStmt] ExprStmt
#  184|       getExpr(): [AssignExpr] ... = ...
#  184|           Type = [IntType] int
#  184|           ValueCategory = lvalue
#  184|         getLValue(): [ArrayExpr] access to array
#  184|             Type = [IntType] int
#  184|             ValueCategory = lvalue
#  184|           getArrayBase(): [VariableAccess] a
#  184|               Type = [ArrayType] int[10]
#  184|               ValueCategory = lvalue
#  184|           getArrayOffset(): [VariableAccess] i
#  184|               Type = [IntType] int
#  184|               ValueCategory = prvalue(load)
#  184|           getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  184|               Type = [IntPointerType] int *
#  184|               ValueCategory = prvalue
#  184|         getRValue(): [VariableAccess] x
#  184|             Type = [IntType] int
#  184|             ValueCategory = prvalue(load)
#  185|     getStmt(10): [ReturnStmt] return ...
#  187| [TopLevelFunction] void StringLiteral(int)
#  187|   <params>: 
#  187|     getParameter(0): [Parameter] i
#  187|         Type = [IntType] int
#  187|   getEntryPoint(): [BlockStmt] { ... }
#  188|     getStmt(0): [DeclStmt] declaration
#  188|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
#  188|           Type = [PlainCharType] char
#  188|         getVariable().getInitializer(): [Initializer] initializer for c
#  188|           getExpr(): [ArrayExpr] access to array
#  188|               Type = [PlainCharType] char
#  188|               ValueCategory = prvalue(load)
#  188|             getArrayBase(): Foo
#  188|                 Type = [ArrayType] const char[4]
#  188|                 Value = [StringLiteral] "Foo"
#  188|                 ValueCategory = lvalue
#  188|             getArrayOffset(): [VariableAccess] i
#  188|                 Type = [IntType] int
#  188|                 ValueCategory = prvalue(load)
#  188|             getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  188|                 Type = [PointerType] const char *
#  188|                 ValueCategory = prvalue
#  189|     getStmt(1): [DeclStmt] declaration
#  189|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pwc
#  189|           Type = [PointerType] wchar_t *
#  189|         getVariable().getInitializer(): [Initializer] initializer for pwc
#  189|           getExpr(): Bar
#  189|               Type = [ArrayType] const wchar_t[4]
#  189|               Value = [StringLiteral] "Bar"
#  189|               ValueCategory = lvalue
#  189|           getExpr().getFullyConverted(): [CStyleCast] (wchar_t *)...
#  189|               Conversion = [PointerConversion] pointer conversion
#  189|               Type = [PointerType] wchar_t *
#  189|               ValueCategory = prvalue
#  189|             getExpr(): [ArrayToPointerConversion] array to pointer conversion
#  189|                 Type = [PointerType] const wchar_t *
#  189|                 ValueCategory = prvalue
#  190|     getStmt(2): [DeclStmt] declaration
#  190|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of wc
#  190|           Type = [Wchar_t,WideCharType] wchar_t
#  190|         getVariable().getInitializer(): [Initializer] initializer for wc
#  190|           getExpr(): [ArrayExpr] access to array
#  190|               Type = [Wchar_t,WideCharType] wchar_t
#  190|               ValueCategory = prvalue(load)
#  190|             getArrayBase(): [VariableAccess] pwc
#  190|                 Type = [PointerType] wchar_t *
#  190|                 ValueCategory = prvalue(load)
#  190|             getArrayOffset(): [VariableAccess] i
#  190|                 Type = [IntType] int
#  190|                 ValueCategory = prvalue(load)
#  191|     getStmt(3): [ReturnStmt] return ...
#  193| [TopLevelFunction] void PointerCompare(int*, int*)
#  193|   <params>: 
#  193|     getParameter(0): [Parameter] p
#  193|         Type = [IntPointerType] int *
#  193|     getParameter(1): [Parameter] q
#  193|         Type = [IntPointerType] int *
#  193|   getEntryPoint(): [BlockStmt] { ... }
#  194|     getStmt(0): [DeclStmt] declaration
#  194|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
#  194|           Type = [BoolType] bool
#  196|     getStmt(1): [ExprStmt] ExprStmt
#  196|       getExpr(): [AssignExpr] ... = ...
#  196|           Type = [BoolType] bool
#  196|           ValueCategory = lvalue
#  196|         getLValue(): [VariableAccess] b
#  196|             Type = [BoolType] bool
#  196|             ValueCategory = lvalue
#  196|         getRValue(): [EQExpr] ... == ...
#  196|             Type = [BoolType] bool
#  196|             ValueCategory = prvalue
#  196|           getLeftOperand(): [VariableAccess] p
#  196|               Type = [IntPointerType] int *
#  196|               ValueCategory = prvalue(load)
#  196|           getRightOperand(): [VariableAccess] q
#  196|               Type = [IntPointerType] int *
#  196|               ValueCategory = prvalue(load)
#  197|     getStmt(2): [ExprStmt] ExprStmt
#  197|       getExpr(): [AssignExpr] ... = ...
#  197|           Type = [BoolType] bool
#  197|           ValueCategory = lvalue
#  197|         getLValue(): [VariableAccess] b
#  197|             Type = [BoolType] bool
#  197|             ValueCategory = lvalue
#  197|         getRValue(): [NEExpr] ... != ...
#  197|             Type = [BoolType] bool
#  197|             ValueCategory = prvalue
#  197|           getLeftOperand(): [VariableAccess] p
#  197|               Type = [IntPointerType] int *
#  197|               ValueCategory = prvalue(load)
#  197|           getRightOperand(): [VariableAccess] q
#  197|               Type = [IntPointerType] int *
#  197|               ValueCategory = prvalue(load)
#  198|     getStmt(3): [ExprStmt] ExprStmt
#  198|       getExpr(): [AssignExpr] ... = ...
#  198|           Type = [BoolType] bool
#  198|           ValueCategory = lvalue
#  198|         getLValue(): [VariableAccess] b
#  198|             Type = [BoolType] bool
#  198|             ValueCategory = lvalue
#  198|         getRValue(): [LTExpr] ... < ...
#  198|             Type = [BoolType] bool
#  198|             ValueCategory = prvalue
#  198|           getLesserOperand(): [VariableAccess] p
#  198|               Type = [IntPointerType] int *
#  198|               ValueCategory = prvalue(load)
#  198|           getGreaterOperand(): [VariableAccess] q
#  198|               Type = [IntPointerType] int *
#  198|               ValueCategory = prvalue(load)
#  199|     getStmt(4): [ExprStmt] ExprStmt
#  199|       getExpr(): [AssignExpr] ... = ...
#  199|           Type = [BoolType] bool
#  199|           ValueCategory = lvalue
#  199|         getLValue(): [VariableAccess] b
#  199|             Type = [BoolType] bool
#  199|             ValueCategory = lvalue
#  199|         getRValue(): [GTExpr] ... > ...
#  199|             Type = [BoolType] bool
#  199|             ValueCategory = prvalue
#  199|           getGreaterOperand(): [VariableAccess] p
#  199|               Type = [IntPointerType] int *
#  199|               ValueCategory = prvalue(load)
#  199|           getLesserOperand(): [VariableAccess] q
#  199|               Type = [IntPointerType] int *
#  199|               ValueCategory = prvalue(load)
#  200|     getStmt(5): [ExprStmt] ExprStmt
#  200|       getExpr(): [AssignExpr] ... = ...
#  200|           Type = [BoolType] bool
#  200|           ValueCategory = lvalue
#  200|         getLValue(): [VariableAccess] b
#  200|             Type = [BoolType] bool
#  200|             ValueCategory = lvalue
#  200|         getRValue(): [LEExpr] ... <= ...
#  200|             Type = [BoolType] bool
#  200|             ValueCategory = prvalue
#  200|           getLesserOperand(): [VariableAccess] p
#  200|               Type = [IntPointerType] int *
#  200|               ValueCategory = prvalue(load)
#  200|           getGreaterOperand(): [VariableAccess] q
#  200|               Type = [IntPointerType] int *
#  200|               ValueCategory = prvalue(load)
#  201|     getStmt(6): [ExprStmt] ExprStmt
#  201|       getExpr(): [AssignExpr] ... = ...
#  201|           Type = [BoolType] bool
#  201|           ValueCategory = lvalue
#  201|         getLValue(): [VariableAccess] b
#  201|             Type = [BoolType] bool
#  201|             ValueCategory = lvalue
#  201|         getRValue(): [GEExpr] ... >= ...
#  201|             Type = [BoolType] bool
#  201|             ValueCategory = prvalue
#  201|           getGreaterOperand(): [VariableAccess] p
#  201|               Type = [IntPointerType] int *
#  201|               ValueCategory = prvalue(load)
#  201|           getLesserOperand(): [VariableAccess] q
#  201|               Type = [IntPointerType] int *
#  201|               ValueCategory = prvalue(load)
#  202|     getStmt(7): [ReturnStmt] return ...
#  204| [TopLevelFunction] void PointerCrement(int*)
#  204|   <params>: 
#  204|     getParameter(0): [Parameter] p
#  204|         Type = [IntPointerType] int *
#  204|   getEntryPoint(): [BlockStmt] { ... }
#  205|     getStmt(0): [DeclStmt] declaration
#  205|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of q
#  205|           Type = [IntPointerType] int *
#  207|     getStmt(1): [ExprStmt] ExprStmt
#  207|       getExpr(): [AssignExpr] ... = ...
#  207|           Type = [IntPointerType] int *
#  207|           ValueCategory = lvalue
#  207|         getLValue(): [VariableAccess] q
#  207|             Type = [IntPointerType] int *
#  207|             ValueCategory = lvalue
#  207|         getRValue(): [PrefixIncrExpr] ++ ...
#  207|             Type = [IntPointerType] int *
#  207|             ValueCategory = prvalue(load)
#  207|           getOperand(): [VariableAccess] p
#  207|               Type = [IntPointerType] int *
#  207|               ValueCategory = lvalue
#  208|     getStmt(2): [ExprStmt] ExprStmt
#  208|       getExpr(): [AssignExpr] ... = ...
#  208|           Type = [IntPointerType] int *
#  208|           ValueCategory = lvalue
#  208|         getLValue(): [VariableAccess] q
#  208|             Type = [IntPointerType] int *
#  208|             ValueCategory = lvalue
#  208|         getRValue(): [PrefixDecrExpr] -- ...
#  208|             Type = [IntPointerType] int *
#  208|             ValueCategory = prvalue(load)
#  208|           getOperand(): [VariableAccess] p
#  208|               Type = [IntPointerType] int *
#  208|               ValueCategory = lvalue
#  209|     getStmt(3): [ExprStmt] ExprStmt
#  209|       getExpr(): [AssignExpr] ... = ...
#  209|           Type = [IntPointerType] int *
#  209|           ValueCategory = lvalue
#  209|         getLValue(): [VariableAccess] q
#  209|             Type = [IntPointerType] int *
#  209|             ValueCategory = lvalue
#  209|         getRValue(): [PostfixIncrExpr] ... ++
#  209|             Type = [IntPointerType] int *
#  209|             ValueCategory = prvalue
#  209|           getOperand(): [VariableAccess] p
#  209|               Type = [IntPointerType] int *
#  209|               ValueCategory = lvalue
#  210|     getStmt(4): [ExprStmt] ExprStmt
#  210|       getExpr(): [AssignExpr] ... = ...
#  210|           Type = [IntPointerType] int *
#  210|           ValueCategory = lvalue
#  210|         getLValue(): [VariableAccess] q
#  210|             Type = [IntPointerType] int *
#  210|             ValueCategory = lvalue
#  210|         getRValue(): [PostfixDecrExpr] ... --
#  210|             Type = [IntPointerType] int *
#  210|             ValueCategory = prvalue
#  210|           getOperand(): [VariableAccess] p
#  210|               Type = [IntPointerType] int *
#  210|               ValueCategory = lvalue
#  211|     getStmt(5): [ReturnStmt] return ...
#  213| [TopLevelFunction] void CompoundAssignment()
#  213|   <params>: 
#  213|   getEntryPoint(): [BlockStmt] { ... }
#  215|     getStmt(0): [DeclStmt] declaration
#  215|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#  215|           Type = [IntType] int
#  215|         getVariable().getInitializer(): [Initializer] initializer for x
#  215|           getExpr(): [Literal] 5
#  215|               Type = [IntType] int
#  215|               Value = [Literal] 5
#  215|               ValueCategory = prvalue
#  216|     getStmt(1): [ExprStmt] ExprStmt
#  216|       getExpr(): [AssignAddExpr] ... += ...
#  216|           Type = [IntType] int
#  216|           ValueCategory = lvalue
#  216|         getLValue(): [VariableAccess] x
#  216|             Type = [IntType] int
#  216|             ValueCategory = lvalue
#  216|         getRValue(): [Literal] 7
#  216|             Type = [IntType] int
#  216|             Value = [Literal] 7
#  216|             ValueCategory = prvalue
#  219|     getStmt(2): [DeclStmt] declaration
#  219|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
#  219|           Type = [ShortType] short
#  219|         getVariable().getInitializer(): [Initializer] initializer for y
#  219|           getExpr(): [Literal] 5
#  219|               Type = [IntType] int
#  219|               Value = [Literal] 5
#  219|               ValueCategory = prvalue
#  219|           getExpr().getFullyConverted(): [CStyleCast] (short)...
#  219|               Conversion = [IntegralConversion] integral conversion
#  219|               Type = [ShortType] short
#  219|               Value = [CStyleCast] 5
#  219|               ValueCategory = prvalue
#  220|     getStmt(3): [ExprStmt] ExprStmt
#  220|       getExpr(): [AssignAddExpr] ... += ...
#  220|           Type = [ShortType] short
#  220|           ValueCategory = lvalue
#  220|         getLValue(): [VariableAccess] y
#  220|             Type = [ShortType] short
#  220|             ValueCategory = lvalue
#  220|         getRValue(): [VariableAccess] x
#  220|             Type = [IntType] int
#  220|             ValueCategory = prvalue(load)
#  223|     getStmt(4): [ExprStmt] ExprStmt
#  223|       getExpr(): [AssignLShiftExpr] ... <<= ...
#  223|           Type = [ShortType] short
#  223|           ValueCategory = lvalue
#  223|         getLValue(): [VariableAccess] y
#  223|             Type = [ShortType] short
#  223|             ValueCategory = lvalue
#  223|         getRValue(): [Literal] 1
#  223|             Type = [IntType] int
#  223|             Value = [Literal] 1
#  223|             ValueCategory = prvalue
#  226|     getStmt(5): [DeclStmt] declaration
#  226|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
#  226|           Type = [LongType] long
#  226|         getVariable().getInitializer(): [Initializer] initializer for z
#  226|           getExpr(): [Literal] 7
#  226|               Type = [IntType] int
#  226|               Value = [Literal] 7
#  226|               ValueCategory = prvalue
#  226|           getExpr().getFullyConverted(): [CStyleCast] (long)...
#  226|               Conversion = [IntegralConversion] integral conversion
#  226|               Type = [LongType] long
#  226|               Value = [CStyleCast] 7
#  226|               ValueCategory = prvalue
#  227|     getStmt(6): [ExprStmt] ExprStmt
#  227|       getExpr(): [AssignAddExpr] ... += ...
#  227|           Type = [LongType] long
#  227|           ValueCategory = lvalue
#  227|         getLValue(): [VariableAccess] z
#  227|             Type = [LongType] long
#  227|             ValueCategory = lvalue
#  227|         getRValue(): [Literal] 2.0
#  227|             Type = [FloatType] float
#  227|             Value = [Literal] 2.0
#  227|             ValueCategory = prvalue
#  228|     getStmt(7): [ReturnStmt] return ...
#  230| [TopLevelFunction] void UninitializedVariables()
#  230|   <params>: 
#  230|   getEntryPoint(): [BlockStmt] { ... }
#  231|     getStmt(0): [DeclStmt] declaration
#  231|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#  231|           Type = [IntType] int
#  232|     getStmt(1): [DeclStmt] declaration
#  232|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
#  232|           Type = [IntType] int
#  232|         getVariable().getInitializer(): [Initializer] initializer for y
#  232|           getExpr(): [VariableAccess] x
#  232|               Type = [IntType] int
#  232|               ValueCategory = prvalue(load)
#  233|     getStmt(2): [ReturnStmt] return ...
#  235| [TopLevelFunction] int Parameters(int, int)
#  235|   <params>: 
#  235|     getParameter(0): [Parameter] x
#  235|         Type = [IntType] int
#  235|     getParameter(1): [Parameter] y
#  235|         Type = [IntType] int
#  235|   getEntryPoint(): [BlockStmt] { ... }
#  236|     getStmt(0): [ReturnStmt] return ...
#  236|       getExpr(): [RemExpr] ... % ...
#  236|           Type = [IntType] int
#  236|           ValueCategory = prvalue
#  236|         getLeftOperand(): [VariableAccess] x
#  236|             Type = [IntType] int
#  236|             ValueCategory = prvalue(load)
#  236|         getRightOperand(): [VariableAccess] y
#  236|             Type = [IntType] int
#  236|             ValueCategory = prvalue(load)
#  239| [TopLevelFunction] void IfStatements(bool, int, int)
#  239|   <params>: 
#  239|     getParameter(0): [Parameter] b
#  239|         Type = [BoolType] bool
#  239|     getParameter(1): [Parameter] x
#  239|         Type = [IntType] int
#  239|     getParameter(2): [Parameter] y
#  239|         Type = [IntType] int
#  239|   getEntryPoint(): [BlockStmt] { ... }
#  240|     getStmt(0): [IfStmt] if (...) ... 
#  240|       getCondition(): [VariableAccess] b
#  240|           Type = [BoolType] bool
#  240|           ValueCategory = prvalue(load)
#  240|       getThen(): [BlockStmt] { ... }
#  243|     getStmt(1): [IfStmt] if (...) ... 
#  243|       getCondition(): [VariableAccess] b
#  243|           Type = [BoolType] bool
#  243|           ValueCategory = prvalue(load)
#  243|       getThen(): [BlockStmt] { ... }
#  244|         getStmt(0): [ExprStmt] ExprStmt
#  244|           getExpr(): [AssignExpr] ... = ...
#  244|               Type = [IntType] int
#  244|               ValueCategory = lvalue
#  244|             getLValue(): [VariableAccess] x
#  244|                 Type = [IntType] int
#  244|                 ValueCategory = lvalue
#  244|             getRValue(): [VariableAccess] y
#  244|                 Type = [IntType] int
#  244|                 ValueCategory = prvalue(load)
#  247|     getStmt(2): [IfStmt] if (...) ... 
#  247|       getCondition(): [LTExpr] ... < ...
#  247|           Type = [BoolType] bool
#  247|           ValueCategory = prvalue
#  247|         getLesserOperand(): [VariableAccess] x
#  247|             Type = [IntType] int
#  247|             ValueCategory = prvalue(load)
#  247|         getGreaterOperand(): [Literal] 7
#  247|             Type = [IntType] int
#  247|             Value = [Literal] 7
#  247|             ValueCategory = prvalue
#  248|       getThen(): [ExprStmt] ExprStmt
#  248|         getExpr(): [AssignExpr] ... = ...
#  248|             Type = [IntType] int
#  248|             ValueCategory = lvalue
#  248|           getLValue(): [VariableAccess] x
#  248|               Type = [IntType] int
#  248|               ValueCategory = lvalue
#  248|           getRValue(): [Literal] 2
#  248|               Type = [IntType] int
#  248|               Value = [Literal] 2
#  248|               ValueCategory = prvalue
#  250|       getElse(): [ExprStmt] ExprStmt
#  250|         getExpr(): [AssignExpr] ... = ...
#  250|             Type = [IntType] int
#  250|             ValueCategory = lvalue
#  250|           getLValue(): [VariableAccess] x
#  250|               Type = [IntType] int
#  250|               ValueCategory = lvalue
#  250|           getRValue(): [Literal] 7
#  250|               Type = [IntType] int
#  250|               Value = [Literal] 7
#  250|               ValueCategory = prvalue
#  251|     getStmt(3): [ReturnStmt] return ...
#  253| [TopLevelFunction] void WhileStatements(int)
#  253|   <params>: 
#  253|     getParameter(0): [Parameter] n
#  253|         Type = [IntType] int
#  253|   getEntryPoint(): [BlockStmt] { ... }
#  254|     getStmt(0): [WhileStmt] while (...) ...
#  254|       getCondition(): [GTExpr] ... > ...
#  254|           Type = [BoolType] bool
#  254|           ValueCategory = prvalue
#  254|         getGreaterOperand(): [VariableAccess] n
#  254|             Type = [IntType] int
#  254|             ValueCategory = prvalue(load)
#  254|         getLesserOperand(): [Literal] 0
#  254|             Type = [IntType] int
#  254|             Value = [Literal] 0
#  254|             ValueCategory = prvalue
#  254|       getStmt(): [BlockStmt] { ... }
#  255|         getStmt(0): [ExprStmt] ExprStmt
#  255|           getExpr(): [AssignSubExpr] ... -= ...
#  255|               Type = [IntType] int
#  255|               ValueCategory = lvalue
#  255|             getLValue(): [VariableAccess] n
#  255|                 Type = [IntType] int
#  255|                 ValueCategory = lvalue
#  255|             getRValue(): [Literal] 1
#  255|                 Type = [IntType] int
#  255|                 Value = [Literal] 1
#  255|                 ValueCategory = prvalue
#  257|     getStmt(1): [ReturnStmt] return ...
#  259| [TopLevelFunction] void DoStatements(int)
#  259|   <params>: 
#  259|     getParameter(0): [Parameter] n
#  259|         Type = [IntType] int
#  259|   getEntryPoint(): [BlockStmt] { ... }
#  260|     getStmt(0): [DoStmt] do (...) ...
#  262|       getCondition(): [GTExpr] ... > ...
#  262|           Type = [BoolType] bool
#  262|           ValueCategory = prvalue
#  262|         getGreaterOperand(): [VariableAccess] n
#  262|             Type = [IntType] int
#  262|             ValueCategory = prvalue(load)
#  262|         getLesserOperand(): [Literal] 0
#  262|             Type = [IntType] int
#  262|             Value = [Literal] 0
#  262|             ValueCategory = prvalue
#  260|       getStmt(): [BlockStmt] { ... }
#  261|         getStmt(0): [ExprStmt] ExprStmt
#  261|           getExpr(): [AssignSubExpr] ... -= ...
#  261|               Type = [IntType] int
#  261|               ValueCategory = lvalue
#  261|             getLValue(): [VariableAccess] n
#  261|                 Type = [IntType] int
#  261|                 ValueCategory = lvalue
#  261|             getRValue(): [Literal] 1
#  261|                 Type = [IntType] int
#  261|                 Value = [Literal] 1
#  261|                 ValueCategory = prvalue
#  263|     getStmt(1): [ReturnStmt] return ...
#  265| [TopLevelFunction] void For_Empty()
#  265|   <params>: 
#  265|   getEntryPoint(): [BlockStmt] { ... }
#  266|     getStmt(0): [DeclStmt] declaration
#  266|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of j
#  266|           Type = [IntType] int
#  267|     getStmt(1): [ForStmt] for(...;...;...) ...
#  267|       getStmt(): [BlockStmt] { ... }
#  268|         getStmt(0): [EmptyStmt] ;
#  272| [TopLevelFunction] void For_Init()
#  272|   <params>: 
#  272|   getEntryPoint(): [BlockStmt] { ... }
#  273|     getStmt(0): [ForStmt] for(...;...;...) ...
#  273|       getInitialization(): [DeclStmt] declaration
#  273|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
#  273|             Type = [IntType] int
#  273|           getVariable().getInitializer(): [Initializer] initializer for i
#  273|             getExpr(): [Literal] 0
#  273|                 Type = [IntType] int
#  273|                 Value = [Literal] 0
#  273|                 ValueCategory = prvalue
#  273|       getStmt(): [BlockStmt] { ... }
#  274|         getStmt(0): [EmptyStmt] ;
#  278| [TopLevelFunction] void For_Condition()
#  278|   <params>: 
#  278|   getEntryPoint(): [BlockStmt] { ... }
#  279|     getStmt(0): [DeclStmt] declaration
#  279|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
#  279|           Type = [IntType] int
#  279|         getVariable().getInitializer(): [Initializer] initializer for i
#  279|           getExpr(): [Literal] 0
#  279|               Type = [IntType] int
#  279|               Value = [Literal] 0
#  279|               ValueCategory = prvalue
#  280|     getStmt(1): [ForStmt] for(...;...;...) ...
#  280|       getCondition(): [LTExpr] ... < ...
#  280|           Type = [BoolType] bool
#  280|           ValueCategory = prvalue
#  280|         getLesserOperand(): [VariableAccess] i
#  280|             Type = [IntType] int
#  280|             ValueCategory = prvalue(load)
#  280|         getGreaterOperand(): [Literal] 10
#  280|             Type = [IntType] int
#  280|             Value = [Literal] 10
#  280|             ValueCategory = prvalue
#  280|       getStmt(): [BlockStmt] { ... }
#  281|         getStmt(0): [EmptyStmt] ;
#  283|     getStmt(2): [ReturnStmt] return ...
#  285| [TopLevelFunction] void For_Update()
#  285|   <params>: 
#  285|   getEntryPoint(): [BlockStmt] { ... }
#  286|     getStmt(0): [DeclStmt] declaration
#  286|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
#  286|           Type = [IntType] int
#  286|         getVariable().getInitializer(): [Initializer] initializer for i
#  286|           getExpr(): [Literal] 0
#  286|               Type = [IntType] int
#  286|               Value = [Literal] 0
#  286|               ValueCategory = prvalue
#  287|     getStmt(1): [ForStmt] for(...;...;...) ...
#  287|       getUpdate(): [AssignAddExpr] ... += ...
#  287|           Type = [IntType] int
#  287|           ValueCategory = lvalue
#  287|         getLValue(): [VariableAccess] i
#  287|             Type = [IntType] int
#  287|             ValueCategory = lvalue
#  287|         getRValue(): [Literal] 1
#  287|             Type = [IntType] int
#  287|             Value = [Literal] 1
#  287|             ValueCategory = prvalue
#  287|       getStmt(): [BlockStmt] { ... }
#  288|         getStmt(0): [EmptyStmt] ;
#  292| [TopLevelFunction] void For_InitCondition()
#  292|   <params>: 
#  292|   getEntryPoint(): [BlockStmt] { ... }
#  293|     getStmt(0): [ForStmt] for(...;...;...) ...
#  293|       getInitialization(): [DeclStmt] declaration
#  293|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
#  293|             Type = [IntType] int
#  293|           getVariable().getInitializer(): [Initializer] initializer for i
#  293|             getExpr(): [Literal] 0
#  293|                 Type = [IntType] int
#  293|                 Value = [Literal] 0
#  293|                 ValueCategory = prvalue
#  293|       getCondition(): [LTExpr] ... < ...
#  293|           Type = [BoolType] bool
#  293|           ValueCategory = prvalue
#  293|         getLesserOperand(): [VariableAccess] i
#  293|             Type = [IntType] int
#  293|             ValueCategory = prvalue(load)
#  293|         getGreaterOperand(): [Literal] 10
#  293|             Type = [IntType] int
#  293|             Value = [Literal] 10
#  293|             ValueCategory = prvalue
#  293|       getStmt(): [BlockStmt] { ... }
#  294|         getStmt(0): [EmptyStmt] ;
#  296|     getStmt(1): [ReturnStmt] return ...
#  298| [TopLevelFunction] void For_InitUpdate()
#  298|   <params>: 
#  298|   getEntryPoint(): [BlockStmt] { ... }
#  299|     getStmt(0): [ForStmt] for(...;...;...) ...
#  299|       getInitialization(): [DeclStmt] declaration
#  299|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
#  299|             Type = [IntType] int
#  299|           getVariable().getInitializer(): [Initializer] initializer for i
#  299|             getExpr(): [Literal] 0
#  299|                 Type = [IntType] int
#  299|                 Value = [Literal] 0
#  299|                 ValueCategory = prvalue
#  299|       getUpdate(): [AssignAddExpr] ... += ...
#  299|           Type = [IntType] int
#  299|           ValueCategory = lvalue
#  299|         getLValue(): [VariableAccess] i
#  299|             Type = [IntType] int
#  299|             ValueCategory = lvalue
#  299|         getRValue(): [Literal] 1
#  299|             Type = [IntType] int
#  299|             Value = [Literal] 1
#  299|             ValueCategory = prvalue
#  299|       getStmt(): [BlockStmt] { ... }
#  300|         getStmt(0): [EmptyStmt] ;
#  304| [TopLevelFunction] void For_ConditionUpdate()
#  304|   <params>: 
#  304|   getEntryPoint(): [BlockStmt] { ... }
#  305|     getStmt(0): [DeclStmt] declaration
#  305|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
#  305|           Type = [IntType] int
#  305|         getVariable().getInitializer(): [Initializer] initializer for i
#  305|           getExpr(): [Literal] 0
#  305|               Type = [IntType] int
#  305|               Value = [Literal] 0
#  305|               ValueCategory = prvalue
#  306|     getStmt(1): [ForStmt] for(...;...;...) ...
#  306|       getCondition(): [LTExpr] ... < ...
#  306|           Type = [BoolType] bool
#  306|           ValueCategory = prvalue
#  306|         getLesserOperand(): [VariableAccess] i
#  306|             Type = [IntType] int
#  306|             ValueCategory = prvalue(load)
#  306|         getGreaterOperand(): [Literal] 10
#  306|             Type = [IntType] int
#  306|             Value = [Literal] 10
#  306|             ValueCategory = prvalue
#  306|       getUpdate(): [AssignAddExpr] ... += ...
#  306|           Type = [IntType] int
#  306|           ValueCategory = lvalue
#  306|         getLValue(): [VariableAccess] i
#  306|             Type = [IntType] int
#  306|             ValueCategory = lvalue
#  306|         getRValue(): [Literal] 1
#  306|             Type = [IntType] int
#  306|             Value = [Literal] 1
#  306|             ValueCategory = prvalue
#  306|       getStmt(): [BlockStmt] { ... }
#  307|         getStmt(0): [EmptyStmt] ;
#  309|     getStmt(2): [ReturnStmt] return ...
#  311| [TopLevelFunction] void For_InitConditionUpdate()
#  311|   <params>: 
#  311|   getEntryPoint(): [BlockStmt] { ... }
#  312|     getStmt(0): [ForStmt] for(...;...;...) ...
#  312|       getInitialization(): [DeclStmt] declaration
#  312|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
#  312|             Type = [IntType] int
#  312|           getVariable().getInitializer(): [Initializer] initializer for i
#  312|             getExpr(): [Literal] 0
#  312|                 Type = [IntType] int
#  312|                 Value = [Literal] 0
#  312|                 ValueCategory = prvalue
#  312|       getCondition(): [LTExpr] ... < ...
#  312|           Type = [BoolType] bool
#  312|           ValueCategory = prvalue
#  312|         getLesserOperand(): [VariableAccess] i
#  312|             Type = [IntType] int
#  312|             ValueCategory = prvalue(load)
#  312|         getGreaterOperand(): [Literal] 10
#  312|             Type = [IntType] int
#  312|             Value = [Literal] 10
#  312|             ValueCategory = prvalue
#  312|       getUpdate(): [AssignAddExpr] ... += ...
#  312|           Type = [IntType] int
#  312|           ValueCategory = lvalue
#  312|         getLValue(): [VariableAccess] i
#  312|             Type = [IntType] int
#  312|             ValueCategory = lvalue
#  312|         getRValue(): [Literal] 1
#  312|             Type = [IntType] int
#  312|             Value = [Literal] 1
#  312|             ValueCategory = prvalue
#  312|       getStmt(): [BlockStmt] { ... }
#  313|         getStmt(0): [EmptyStmt] ;
#  315|     getStmt(1): [ReturnStmt] return ...
#  317| [TopLevelFunction] void For_Break()
#  317|   <params>: 
#  317|   getEntryPoint(): [BlockStmt] { ... }
#  318|     getStmt(0): [ForStmt] for(...;...;...) ...
#  318|       getInitialization(): [DeclStmt] declaration
#  318|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
#  318|             Type = [IntType] int
#  318|           getVariable().getInitializer(): [Initializer] initializer for i
#  318|             getExpr(): [Literal] 0
#  318|                 Type = [IntType] int
#  318|                 Value = [Literal] 0
#  318|                 ValueCategory = prvalue
#  318|       getCondition(): [LTExpr] ... < ...
#  318|           Type = [BoolType] bool
#  318|           ValueCategory = prvalue
#  318|         getLesserOperand(): [VariableAccess] i
#  318|             Type = [IntType] int
#  318|             ValueCategory = prvalue(load)
#  318|         getGreaterOperand(): [Literal] 10
#  318|             Type = [IntType] int
#  318|             Value = [Literal] 10
#  318|             ValueCategory = prvalue
#  318|       getUpdate(): [AssignAddExpr] ... += ...
#  318|           Type = [IntType] int
#  318|           ValueCategory = lvalue
#  318|         getLValue(): [VariableAccess] i
#  318|             Type = [IntType] int
#  318|             ValueCategory = lvalue
#  318|         getRValue(): [Literal] 1
#  318|             Type = [IntType] int
#  318|             Value = [Literal] 1
#  318|             ValueCategory = prvalue
#  318|       getStmt(): [BlockStmt] { ... }
#  319|         getStmt(0): [IfStmt] if (...) ... 
#  319|           getCondition(): [EQExpr] ... == ...
#  319|               Type = [BoolType] bool
#  319|               ValueCategory = prvalue
#  319|             getLeftOperand(): [VariableAccess] i
#  319|                 Type = [IntType] int
#  319|                 ValueCategory = prvalue(load)
#  319|             getRightOperand(): [Literal] 5
#  319|                 Type = [IntType] int
#  319|                 Value = [Literal] 5
#  319|                 ValueCategory = prvalue
#  319|           getThen(): [BlockStmt] { ... }
#  320|             getStmt(0): [BreakStmt] break;
#  322|     getStmt(1): [LabelStmt] label ...:
#  323|     getStmt(2): [ReturnStmt] return ...
#  325| [TopLevelFunction] void For_Continue_Update()
#  325|   <params>: 
#  325|   getEntryPoint(): [BlockStmt] { ... }
#  326|     getStmt(0): [ForStmt] for(...;...;...) ...
#  326|       getInitialization(): [DeclStmt] declaration
#  326|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
#  326|             Type = [IntType] int
#  326|           getVariable().getInitializer(): [Initializer] initializer for i
#  326|             getExpr(): [Literal] 0
#  326|                 Type = [IntType] int
#  326|                 Value = [Literal] 0
#  326|                 ValueCategory = prvalue
#  326|       getCondition(): [LTExpr] ... < ...
#  326|           Type = [BoolType] bool
#  326|           ValueCategory = prvalue
#  326|         getLesserOperand(): [VariableAccess] i
#  326|             Type = [IntType] int
#  326|             ValueCategory = prvalue(load)
#  326|         getGreaterOperand(): [Literal] 10
#  326|             Type = [IntType] int
#  326|             Value = [Literal] 10
#  326|             ValueCategory = prvalue
#  326|       getUpdate(): [AssignAddExpr] ... += ...
#  326|           Type = [IntType] int
#  326|           ValueCategory = lvalue
#  326|         getLValue(): [VariableAccess] i
#  326|             Type = [IntType] int
#  326|             ValueCategory = lvalue
#  326|         getRValue(): [Literal] 1
#  326|             Type = [IntType] int
#  326|             Value = [Literal] 1
#  326|             ValueCategory = prvalue
#  326|       getStmt(): [BlockStmt] { ... }
#  327|         getStmt(0): [IfStmt] if (...) ... 
#  327|           getCondition(): [EQExpr] ... == ...
#  327|               Type = [BoolType] bool
#  327|               ValueCategory = prvalue
#  327|             getLeftOperand(): [VariableAccess] i
#  327|                 Type = [IntType] int
#  327|                 ValueCategory = prvalue(load)
#  327|             getRightOperand(): [Literal] 5
#  327|                 Type = [IntType] int
#  327|                 Value = [Literal] 5
#  327|                 ValueCategory = prvalue
#  327|           getThen(): [BlockStmt] { ... }
#  328|             getStmt(0): [ContinueStmt] continue;
#  326|         getStmt(1): [LabelStmt] label ...:
#  331|     getStmt(1): [ReturnStmt] return ...
#  333| [TopLevelFunction] void For_Continue_NoUpdate()
#  333|   <params>: 
#  333|   getEntryPoint(): [BlockStmt] { ... }
#  334|     getStmt(0): [ForStmt] for(...;...;...) ...
#  334|       getInitialization(): [DeclStmt] declaration
#  334|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
#  334|             Type = [IntType] int
#  334|           getVariable().getInitializer(): [Initializer] initializer for i
#  334|             getExpr(): [Literal] 0
#  334|                 Type = [IntType] int
#  334|                 Value = [Literal] 0
#  334|                 ValueCategory = prvalue
#  334|       getCondition(): [LTExpr] ... < ...
#  334|           Type = [BoolType] bool
#  334|           ValueCategory = prvalue
#  334|         getLesserOperand(): [VariableAccess] i
#  334|             Type = [IntType] int
#  334|             ValueCategory = prvalue(load)
#  334|         getGreaterOperand(): [Literal] 10
#  334|             Type = [IntType] int
#  334|             Value = [Literal] 10
#  334|             ValueCategory = prvalue
#  334|       getStmt(): [BlockStmt] { ... }
#  335|         getStmt(0): [IfStmt] if (...) ... 
#  335|           getCondition(): [EQExpr] ... == ...
#  335|               Type = [BoolType] bool
#  335|               ValueCategory = prvalue
#  335|             getLeftOperand(): [VariableAccess] i
#  335|                 Type = [IntType] int
#  335|                 ValueCategory = prvalue(load)
#  335|             getRightOperand(): [Literal] 5
#  335|                 Type = [IntType] int
#  335|                 Value = [Literal] 5
#  335|                 ValueCategory = prvalue
#  335|           getThen(): [BlockStmt] { ... }
#  336|             getStmt(0): [ContinueStmt] continue;
#  334|         getStmt(1): [LabelStmt] label ...:
#  339|     getStmt(1): [ReturnStmt] return ...
#  341| [TopLevelFunction] int Dereference(int*)
#  341|   <params>: 
#  341|     getParameter(0): [Parameter] p
#  341|         Type = [IntPointerType] int *
#  341|   getEntryPoint(): [BlockStmt] { ... }
#  342|     getStmt(0): [ExprStmt] ExprStmt
#  342|       getExpr(): [AssignExpr] ... = ...
#  342|           Type = [IntType] int
#  342|           ValueCategory = lvalue
#  342|         getLValue(): [PointerDereferenceExpr] * ...
#  342|             Type = [IntType] int
#  342|             ValueCategory = lvalue
#  342|           getOperand(): [VariableAccess] p
#  342|               Type = [IntPointerType] int *
#  342|               ValueCategory = prvalue(load)
#  342|         getRValue(): [Literal] 1
#  342|             Type = [IntType] int
#  342|             Value = [Literal] 1
#  342|             ValueCategory = prvalue
#  343|     getStmt(1): [ReturnStmt] return ...
#  343|       getExpr(): [PointerDereferenceExpr] * ...
#  343|           Type = [IntType] int
#  343|           ValueCategory = prvalue(load)
#  343|         getOperand(): [VariableAccess] p
#  343|             Type = [IntPointerType] int *
#  343|             ValueCategory = prvalue(load)
#  348| [TopLevelFunction] int* AddressOf()
#  348|   <params>: 
#  348|   getEntryPoint(): [BlockStmt] { ... }
#  349|     getStmt(0): [ReturnStmt] return ...
#  349|       getExpr(): [AddressOfExpr] & ...
#  349|           Type = [IntPointerType] int *
#  349|           ValueCategory = prvalue
#  349|         getOperand(): [VariableAccess] g
#  349|             Type = [IntType] int
#  349|             ValueCategory = lvalue
#  352| [TopLevelFunction] void Break(int)
#  352|   <params>: 
#  352|     getParameter(0): [Parameter] n
#  352|         Type = [IntType] int
#  352|   getEntryPoint(): [BlockStmt] { ... }
#  353|     getStmt(0): [WhileStmt] while (...) ...
#  353|       getCondition(): [GTExpr] ... > ...
#  353|           Type = [BoolType] bool
#  353|           ValueCategory = prvalue
#  353|         getGreaterOperand(): [VariableAccess] n
#  353|             Type = [IntType] int
#  353|             ValueCategory = prvalue(load)
#  353|         getLesserOperand(): [Literal] 0
#  353|             Type = [IntType] int
#  353|             Value = [Literal] 0
#  353|             ValueCategory = prvalue
#  353|       getStmt(): [BlockStmt] { ... }
#  354|         getStmt(0): [IfStmt] if (...) ... 
#  354|           getCondition(): [EQExpr] ... == ...
#  354|               Type = [BoolType] bool
#  354|               ValueCategory = prvalue
#  354|             getLeftOperand(): [VariableAccess] n
#  354|                 Type = [IntType] int
#  354|                 ValueCategory = prvalue(load)
#  354|             getRightOperand(): [Literal] 1
#  354|                 Type = [IntType] int
#  354|                 Value = [Literal] 1
#  354|                 ValueCategory = prvalue
#  355|           getThen(): [BreakStmt] break;
#  356|         getStmt(1): [ExprStmt] ExprStmt
#  356|           getExpr(): [AssignSubExpr] ... -= ...
#  356|               Type = [IntType] int
#  356|               ValueCategory = lvalue
#  356|             getLValue(): [VariableAccess] n
#  356|                 Type = [IntType] int
#  356|                 ValueCategory = lvalue
#  356|             getRValue(): [Literal] 1
#  356|                 Type = [IntType] int
#  356|                 Value = [Literal] 1
#  356|                 ValueCategory = prvalue
#  357|     getStmt(1): [LabelStmt] label ...:
#  358|     getStmt(2): [ReturnStmt] return ...
#  360| [TopLevelFunction] void Continue(int)
#  360|   <params>: 
#  360|     getParameter(0): [Parameter] n
#  360|         Type = [IntType] int
#  360|   getEntryPoint(): [BlockStmt] { ... }
#  361|     getStmt(0): [DoStmt] do (...) ...
#  366|       getCondition(): [GTExpr] ... > ...
#  366|           Type = [BoolType] bool
#  366|           ValueCategory = prvalue
#  366|         getGreaterOperand(): [VariableAccess] n
#  366|             Type = [IntType] int
#  366|             ValueCategory = prvalue(load)
#  366|         getLesserOperand(): [Literal] 0
#  366|             Type = [IntType] int
#  366|             Value = [Literal] 0
#  366|             ValueCategory = prvalue
#  361|       getStmt(): [BlockStmt] { ... }
#  362|         getStmt(0): [IfStmt] if (...) ... 
#  362|           getCondition(): [EQExpr] ... == ...
#  362|               Type = [BoolType] bool
#  362|               ValueCategory = prvalue
#  362|             getLeftOperand(): [VariableAccess] n
#  362|                 Type = [IntType] int
#  362|                 ValueCategory = prvalue(load)
#  362|             getRightOperand(): [Literal] 1
#  362|                 Type = [IntType] int
#  362|                 Value = [Literal] 1
#  362|                 ValueCategory = prvalue
#  362|           getThen(): [BlockStmt] { ... }
#  363|             getStmt(0): [ContinueStmt] continue;
#  365|         getStmt(1): [ExprStmt] ExprStmt
#  365|           getExpr(): [AssignSubExpr] ... -= ...
#  365|               Type = [IntType] int
#  365|               ValueCategory = lvalue
#  365|             getLValue(): [VariableAccess] n
#  365|                 Type = [IntType] int
#  365|                 ValueCategory = lvalue
#  365|             getRValue(): [Literal] 1
#  365|                 Type = [IntType] int
#  365|                 Value = [Literal] 1
#  365|                 ValueCategory = prvalue
#  361|         getStmt(2): [LabelStmt] label ...:
#  367|     getStmt(1): [ReturnStmt] return ...
#  370| [TopLevelFunction] int Add(int, int)
#  370|   <params>: 
#  370|     getParameter(0): [Parameter] x
#  370|         Type = [IntType] int
#  370|     getParameter(1): [Parameter] y
#  370|         Type = [IntType] int
#  372| [TopLevelFunction] void Call()
#  372|   <params>: 
#  372|   getEntryPoint(): [BlockStmt] { ... }
#  373|     getStmt(0): [ExprStmt] ExprStmt
#  373|       getExpr(): [FunctionCall] call to VoidFunc
#  373|           Type = [VoidType] void
#  373|           ValueCategory = prvalue
#  374|     getStmt(1): [ReturnStmt] return ...
#  376| [TopLevelFunction] int CallAdd(int, int)
#  376|   <params>: 
#  376|     getParameter(0): [Parameter] x
#  376|         Type = [IntType] int
#  376|     getParameter(1): [Parameter] y
#  376|         Type = [IntType] int
#  376|   getEntryPoint(): [BlockStmt] { ... }
#  377|     getStmt(0): [ReturnStmt] return ...
#  377|       getExpr(): [FunctionCall] call to Add
#  377|           Type = [IntType] int
#  377|           ValueCategory = prvalue
#  377|         getArgument(0): [VariableAccess] x
#  377|             Type = [IntType] int
#  377|             ValueCategory = prvalue(load)
#  377|         getArgument(1): [VariableAccess] y
#  377|             Type = [IntType] int
#  377|             ValueCategory = prvalue(load)
#  380| [TopLevelFunction] int Comma(int, int)
#  380|   <params>: 
#  380|     getParameter(0): [Parameter] x
#  380|         Type = [IntType] int
#  380|     getParameter(1): [Parameter] y
#  380|         Type = [IntType] int
#  380|   getEntryPoint(): [BlockStmt] { ... }
#  381|     getStmt(0): [ReturnStmt] return ...
#  381|       getExpr(): [CommaExpr] ... , ...
#  381|           Type = [IntType] int
#  381|           ValueCategory = prvalue
#  381|         getLeftOperand(): [FunctionCall] call to VoidFunc
#  381|             Type = [VoidType] void
#  381|             ValueCategory = prvalue
#  381|         getRightOperand(): [FunctionCall] call to CallAdd
#  381|             Type = [IntType] int
#  381|             ValueCategory = prvalue
#  381|           getArgument(0): [VariableAccess] x
#  381|               Type = [IntType] int
#  381|               ValueCategory = prvalue(load)
#  381|           getArgument(1): [VariableAccess] y
#  381|               Type = [IntType] int
#  381|               ValueCategory = prvalue(load)
#  384| [TopLevelFunction] void Switch(int)
#  384|   <params>: 
#  384|     getParameter(0): [Parameter] x
#  384|         Type = [IntType] int
#  384|   getEntryPoint(): [BlockStmt] { ... }
#  385|     getStmt(0): [DeclStmt] declaration
#  385|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
#  385|           Type = [IntType] int
#  386|     getStmt(1): [SwitchStmt] switch (...) ... 
#  386|       getExpr(): [VariableAccess] x
#  386|           Type = [IntType] int
#  386|           ValueCategory = prvalue(load)
#  386|       getStmt(): [BlockStmt] { ... }
#  387|         getStmt(0): [ExprStmt] ExprStmt
#  387|           getExpr(): [AssignExpr] ... = ...
#  387|               Type = [IntType] int
#  387|               ValueCategory = lvalue
#  387|             getLValue(): [VariableAccess] y
#  387|                 Type = [IntType] int
#  387|                 ValueCategory = lvalue
#  387|             getRValue(): [Literal] 1234
#  387|                 Type = [IntType] int
#  387|                 Value = [Literal] 1234
#  387|                 ValueCategory = prvalue
#  389|         getStmt(1): [SwitchCase] case ...:
#  389|           getExpr(): [UnaryMinusExpr] - ...
#  389|               Type = [IntType] int
#  389|               Value = [UnaryMinusExpr] -1
#  389|               ValueCategory = prvalue
#  389|             getOperand(): [Literal] 1
#  389|                 Type = [IntType] int
#  389|                 Value = [Literal] 1
#  389|                 ValueCategory = prvalue
#  390|         getStmt(2): [ExprStmt] ExprStmt
#  390|           getExpr(): [AssignExpr] ... = ...
#  390|               Type = [IntType] int
#  390|               ValueCategory = lvalue
#  390|             getLValue(): [VariableAccess] y
#  390|                 Type = [IntType] int
#  390|                 ValueCategory = lvalue
#  390|             getRValue(): [UnaryMinusExpr] - ...
#  390|                 Type = [IntType] int
#  390|                 Value = [UnaryMinusExpr] -1
#  390|                 ValueCategory = prvalue
#  390|               getOperand(): [Literal] 1
#  390|                   Type = [IntType] int
#  390|                   Value = [Literal] 1
#  390|                   ValueCategory = prvalue
#  391|         getStmt(3): [BreakStmt] break;
#  393|         getStmt(4): [SwitchCase] case ...:
#  393|           getExpr(): [Literal] 1
#  393|               Type = [IntType] int
#  393|               Value = [Literal] 1
#  393|               ValueCategory = prvalue
#  394|         getStmt(5): [SwitchCase] case ...:
#  394|           getExpr(): [Literal] 2
#  394|               Type = [IntType] int
#  394|               Value = [Literal] 2
#  394|               ValueCategory = prvalue
#  395|         getStmt(6): [ExprStmt] ExprStmt
#  395|           getExpr(): [AssignExpr] ... = ...
#  395|               Type = [IntType] int
#  395|               ValueCategory = lvalue
#  395|             getLValue(): [VariableAccess] y
#  395|                 Type = [IntType] int
#  395|                 ValueCategory = lvalue
#  395|             getRValue(): [Literal] 1
#  395|                 Type = [IntType] int
#  395|                 Value = [Literal] 1
#  395|                 ValueCategory = prvalue
#  396|         getStmt(7): [BreakStmt] break;
#  398|         getStmt(8): [SwitchCase] case ...:
#  398|           getExpr(): [Literal] 3
#  398|               Type = [IntType] int
#  398|               Value = [Literal] 3
#  398|               ValueCategory = prvalue
#  399|         getStmt(9): [ExprStmt] ExprStmt
#  399|           getExpr(): [AssignExpr] ... = ...
#  399|               Type = [IntType] int
#  399|               ValueCategory = lvalue
#  399|             getLValue(): [VariableAccess] y
#  399|                 Type = [IntType] int
#  399|                 ValueCategory = lvalue
#  399|             getRValue(): [Literal] 3
#  399|                 Type = [IntType] int
#  399|                 Value = [Literal] 3
#  399|                 ValueCategory = prvalue
#  400|         getStmt(10): [SwitchCase] case ...:
#  400|           getExpr(): [Literal] 4
#  400|               Type = [IntType] int
#  400|               Value = [Literal] 4
#  400|               ValueCategory = prvalue
#  401|         getStmt(11): [ExprStmt] ExprStmt
#  401|           getExpr(): [AssignExpr] ... = ...
#  401|               Type = [IntType] int
#  401|               ValueCategory = lvalue
#  401|             getLValue(): [VariableAccess] y
#  401|                 Type = [IntType] int
#  401|                 ValueCategory = lvalue
#  401|             getRValue(): [Literal] 4
#  401|                 Type = [IntType] int
#  401|                 Value = [Literal] 4
#  401|                 ValueCategory = prvalue
#  402|         getStmt(12): [BreakStmt] break;
#  404|         getStmt(13): [SwitchCase] default: 
#  405|         getStmt(14): [ExprStmt] ExprStmt
#  405|           getExpr(): [AssignExpr] ... = ...
#  405|               Type = [IntType] int
#  405|               ValueCategory = lvalue
#  405|             getLValue(): [VariableAccess] y
#  405|                 Type = [IntType] int
#  405|                 ValueCategory = lvalue
#  405|             getRValue(): [Literal] 0
#  405|                 Type = [IntType] int
#  405|                 Value = [Literal] 0
#  405|                 ValueCategory = prvalue
#  406|         getStmt(15): [BreakStmt] break;
#  408|         getStmt(16): [ExprStmt] ExprStmt
#  408|           getExpr(): [AssignExpr] ... = ...
#  408|               Type = [IntType] int
#  408|               ValueCategory = lvalue
#  408|             getLValue(): [VariableAccess] y
#  408|                 Type = [IntType] int
#  408|                 ValueCategory = lvalue
#  408|             getRValue(): [Literal] 5678
#  408|                 Type = [IntType] int
#  408|                 Value = [Literal] 5678
#  408|                 ValueCategory = prvalue
#  409|     getStmt(2): [LabelStmt] label ...:
#  410|     getStmt(3): [ReturnStmt] return ...
#  412| [CopyAssignmentOperator] Point& Point::operator=(Point const&)
#  412|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Point &
#  412| [MoveAssignmentOperator] Point& Point::operator=(Point&&)
#  412|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] Point &&
#  417| [CopyAssignmentOperator] Rect& Rect::operator=(Rect const&)
#  417|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Rect &
#  417| [MoveAssignmentOperator] Rect& Rect::operator=(Rect&&)
#  417|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] Rect &&
#  422| [TopLevelFunction] Point ReturnStruct(Point)
#  422|   <params>: 
#  422|     getParameter(0): [Parameter] pt
#  422|         Type = [Struct] Point
#  422|   getEntryPoint(): [BlockStmt] { ... }
#  423|     getStmt(0): [ReturnStmt] return ...
#  423|       getExpr(): [VariableAccess] pt
#  423|           Type = [Struct] Point
#  423|           ValueCategory = prvalue(load)
#  426| [TopLevelFunction] void FieldAccess()
#  426|   <params>: 
#  426|   getEntryPoint(): [BlockStmt] { ... }
#  427|     getStmt(0): [DeclStmt] declaration
#  427|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pt
#  427|           Type = [Struct] Point
#  428|     getStmt(1): [ExprStmt] ExprStmt
#  428|       getExpr(): [AssignExpr] ... = ...
#  428|           Type = [IntType] int
#  428|           ValueCategory = lvalue
#  428|         getLValue(): [ValueFieldAccess] x
#  428|             Type = [IntType] int
#  428|             ValueCategory = lvalue
#  428|           getQualifier(): [VariableAccess] pt
#  428|               Type = [Struct] Point
#  428|               ValueCategory = lvalue
#  428|         getRValue(): [Literal] 5
#  428|             Type = [IntType] int
#  428|             Value = [Literal] 5
#  428|             ValueCategory = prvalue
#  429|     getStmt(2): [ExprStmt] ExprStmt
#  429|       getExpr(): [AssignExpr] ... = ...
#  429|           Type = [IntType] int
#  429|           ValueCategory = lvalue
#  429|         getLValue(): [ValueFieldAccess] y
#  429|             Type = [IntType] int
#  429|             ValueCategory = lvalue
#  429|           getQualifier(): [VariableAccess] pt
#  429|               Type = [Struct] Point
#  429|               ValueCategory = lvalue
#  429|         getRValue(): [ValueFieldAccess] x
#  429|             Type = [IntType] int
#  429|             ValueCategory = prvalue(load)
#  429|           getQualifier(): [VariableAccess] pt
#  429|               Type = [Struct] Point
#  429|               ValueCategory = lvalue
#  430|     getStmt(3): [DeclStmt] declaration
#  430|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of p
#  430|           Type = [IntPointerType] int *
#  430|         getVariable().getInitializer(): [Initializer] initializer for p
#  430|           getExpr(): [AddressOfExpr] & ...
#  430|               Type = [IntPointerType] int *
#  430|               ValueCategory = prvalue
#  430|             getOperand(): [ValueFieldAccess] y
#  430|                 Type = [IntType] int
#  430|                 ValueCategory = lvalue
#  430|               getQualifier(): [VariableAccess] pt
#  430|                   Type = [Struct] Point
#  430|                   ValueCategory = lvalue
#  431|     getStmt(4): [ReturnStmt] return ...
#  433| [TopLevelFunction] void LogicalOr(bool, bool)
#  433|   <params>: 
#  433|     getParameter(0): [Parameter] a
#  433|         Type = [BoolType] bool
#  433|     getParameter(1): [Parameter] b
#  433|         Type = [BoolType] bool
#  433|   getEntryPoint(): [BlockStmt] { ... }
#  434|     getStmt(0): [DeclStmt] declaration
#  434|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#  434|           Type = [IntType] int
#  435|     getStmt(1): [IfStmt] if (...) ... 
#  435|       getCondition(): [LogicalOrExpr] ... || ...
#  435|           Type = [BoolType] bool
#  435|           ValueCategory = prvalue
#  435|         getLeftOperand(): [VariableAccess] a
#  435|             Type = [BoolType] bool
#  435|             ValueCategory = prvalue(load)
#  435|         getRightOperand(): [VariableAccess] b
#  435|             Type = [BoolType] bool
#  435|             ValueCategory = prvalue(load)
#  435|       getThen(): [BlockStmt] { ... }
#  436|         getStmt(0): [ExprStmt] ExprStmt
#  436|           getExpr(): [AssignExpr] ... = ...
#  436|               Type = [IntType] int
#  436|               ValueCategory = lvalue
#  436|             getLValue(): [VariableAccess] x
#  436|                 Type = [IntType] int
#  436|                 ValueCategory = lvalue
#  436|             getRValue(): [Literal] 7
#  436|                 Type = [IntType] int
#  436|                 Value = [Literal] 7
#  436|                 ValueCategory = prvalue
#  439|     getStmt(2): [IfStmt] if (...) ... 
#  439|       getCondition(): [LogicalOrExpr] ... || ...
#  439|           Type = [BoolType] bool
#  439|           ValueCategory = prvalue
#  439|         getLeftOperand(): [VariableAccess] a
#  439|             Type = [BoolType] bool
#  439|             ValueCategory = prvalue(load)
#  439|         getRightOperand(): [VariableAccess] b
#  439|             Type = [BoolType] bool
#  439|             ValueCategory = prvalue(load)
#  439|       getThen(): [BlockStmt] { ... }
#  440|         getStmt(0): [ExprStmt] ExprStmt
#  440|           getExpr(): [AssignExpr] ... = ...
#  440|               Type = [IntType] int
#  440|               ValueCategory = lvalue
#  440|             getLValue(): [VariableAccess] x
#  440|                 Type = [IntType] int
#  440|                 ValueCategory = lvalue
#  440|             getRValue(): [Literal] 1
#  440|                 Type = [IntType] int
#  440|                 Value = [Literal] 1
#  440|                 ValueCategory = prvalue
#  442|       getElse(): [BlockStmt] { ... }
#  443|         getStmt(0): [ExprStmt] ExprStmt
#  443|           getExpr(): [AssignExpr] ... = ...
#  443|               Type = [IntType] int
#  443|               ValueCategory = lvalue
#  443|             getLValue(): [VariableAccess] x
#  443|                 Type = [IntType] int
#  443|                 ValueCategory = lvalue
#  443|             getRValue(): [Literal] 5
#  443|                 Type = [IntType] int
#  443|                 Value = [Literal] 5
#  443|                 ValueCategory = prvalue
#  445|     getStmt(3): [ReturnStmt] return ...
#  447| [TopLevelFunction] void LogicalAnd(bool, bool)
#  447|   <params>: 
#  447|     getParameter(0): [Parameter] a
#  447|         Type = [BoolType] bool
#  447|     getParameter(1): [Parameter] b
#  447|         Type = [BoolType] bool
#  447|   getEntryPoint(): [BlockStmt] { ... }
#  448|     getStmt(0): [DeclStmt] declaration
#  448|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#  448|           Type = [IntType] int
#  449|     getStmt(1): [IfStmt] if (...) ... 
#  449|       getCondition(): [LogicalAndExpr] ... && ...
#  449|           Type = [BoolType] bool
#  449|           ValueCategory = prvalue
#  449|         getLeftOperand(): [VariableAccess] a
#  449|             Type = [BoolType] bool
#  449|             ValueCategory = prvalue(load)
#  449|         getRightOperand(): [VariableAccess] b
#  449|             Type = [BoolType] bool
#  449|             ValueCategory = prvalue(load)
#  449|       getThen(): [BlockStmt] { ... }
#  450|         getStmt(0): [ExprStmt] ExprStmt
#  450|           getExpr(): [AssignExpr] ... = ...
#  450|               Type = [IntType] int
#  450|               ValueCategory = lvalue
#  450|             getLValue(): [VariableAccess] x
#  450|                 Type = [IntType] int
#  450|                 ValueCategory = lvalue
#  450|             getRValue(): [Literal] 7
#  450|                 Type = [IntType] int
#  450|                 Value = [Literal] 7
#  450|                 ValueCategory = prvalue
#  453|     getStmt(2): [IfStmt] if (...) ... 
#  453|       getCondition(): [LogicalAndExpr] ... && ...
#  453|           Type = [BoolType] bool
#  453|           ValueCategory = prvalue
#  453|         getLeftOperand(): [VariableAccess] a
#  453|             Type = [BoolType] bool
#  453|             ValueCategory = prvalue(load)
#  453|         getRightOperand(): [VariableAccess] b
#  453|             Type = [BoolType] bool
#  453|             ValueCategory = prvalue(load)
#  453|       getThen(): [BlockStmt] { ... }
#  454|         getStmt(0): [ExprStmt] ExprStmt
#  454|           getExpr(): [AssignExpr] ... = ...
#  454|               Type = [IntType] int
#  454|               ValueCategory = lvalue
#  454|             getLValue(): [VariableAccess] x
#  454|                 Type = [IntType] int
#  454|                 ValueCategory = lvalue
#  454|             getRValue(): [Literal] 1
#  454|                 Type = [IntType] int
#  454|                 Value = [Literal] 1
#  454|                 ValueCategory = prvalue
#  456|       getElse(): [BlockStmt] { ... }
#  457|         getStmt(0): [ExprStmt] ExprStmt
#  457|           getExpr(): [AssignExpr] ... = ...
#  457|               Type = [IntType] int
#  457|               ValueCategory = lvalue
#  457|             getLValue(): [VariableAccess] x
#  457|                 Type = [IntType] int
#  457|                 ValueCategory = lvalue
#  457|             getRValue(): [Literal] 5
#  457|                 Type = [IntType] int
#  457|                 Value = [Literal] 5
#  457|                 ValueCategory = prvalue
#  459|     getStmt(3): [ReturnStmt] return ...
#  461| [TopLevelFunction] void LogicalNot(bool, bool)
#  461|   <params>: 
#  461|     getParameter(0): [Parameter] a
#  461|         Type = [BoolType] bool
#  461|     getParameter(1): [Parameter] b
#  461|         Type = [BoolType] bool
#  461|   getEntryPoint(): [BlockStmt] { ... }
#  462|     getStmt(0): [DeclStmt] declaration
#  462|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#  462|           Type = [IntType] int
#  463|     getStmt(1): [IfStmt] if (...) ... 
#  463|       getCondition(): [NotExpr] ! ...
#  463|           Type = [BoolType] bool
#  463|           ValueCategory = prvalue
#  463|         getOperand(): [VariableAccess] a
#  463|             Type = [BoolType] bool
#  463|             ValueCategory = prvalue(load)
#  463|       getThen(): [BlockStmt] { ... }
#  464|         getStmt(0): [ExprStmt] ExprStmt
#  464|           getExpr(): [AssignExpr] ... = ...
#  464|               Type = [IntType] int
#  464|               ValueCategory = lvalue
#  464|             getLValue(): [VariableAccess] x
#  464|                 Type = [IntType] int
#  464|                 ValueCategory = lvalue
#  464|             getRValue(): [Literal] 1
#  464|                 Type = [IntType] int
#  464|                 Value = [Literal] 1
#  464|                 ValueCategory = prvalue
#  467|     getStmt(2): [IfStmt] if (...) ... 
#  467|       getCondition(): [NotExpr] ! ...
#  467|           Type = [BoolType] bool
#  467|           ValueCategory = prvalue
#  467|         getOperand(): [LogicalAndExpr] ... && ...
#  467|             Type = [BoolType] bool
#  467|             ValueCategory = prvalue
#  467|           getLeftOperand(): [VariableAccess] a
#  467|               Type = [BoolType] bool
#  467|               ValueCategory = prvalue(load)
#  467|           getRightOperand(): [VariableAccess] b
#  467|               Type = [BoolType] bool
#  467|               ValueCategory = prvalue(load)
#  467|         getOperand().getFullyConverted(): [ParenthesisExpr] (...)
#  467|             Type = [BoolType] bool
#  467|             ValueCategory = prvalue
#  467|       getThen(): [BlockStmt] { ... }
#  468|         getStmt(0): [ExprStmt] ExprStmt
#  468|           getExpr(): [AssignExpr] ... = ...
#  468|               Type = [IntType] int
#  468|               ValueCategory = lvalue
#  468|             getLValue(): [VariableAccess] x
#  468|                 Type = [IntType] int
#  468|                 ValueCategory = lvalue
#  468|             getRValue(): [Literal] 2
#  468|                 Type = [IntType] int
#  468|                 Value = [Literal] 2
#  468|                 ValueCategory = prvalue
#  470|       getElse(): [BlockStmt] { ... }
#  471|         getStmt(0): [ExprStmt] ExprStmt
#  471|           getExpr(): [AssignExpr] ... = ...
#  471|               Type = [IntType] int
#  471|               ValueCategory = lvalue
#  471|             getLValue(): [VariableAccess] x
#  471|                 Type = [IntType] int
#  471|                 ValueCategory = lvalue
#  471|             getRValue(): [Literal] 3
#  471|                 Type = [IntType] int
#  471|                 Value = [Literal] 3
#  471|                 ValueCategory = prvalue
#  473|     getStmt(3): [ReturnStmt] return ...
#  475| [TopLevelFunction] void ConditionValues(bool, bool)
#  475|   <params>: 
#  475|     getParameter(0): [Parameter] a
#  475|         Type = [BoolType] bool
#  475|     getParameter(1): [Parameter] b
#  475|         Type = [BoolType] bool
#  475|   getEntryPoint(): [BlockStmt] { ... }
#  476|     getStmt(0): [DeclStmt] declaration
#  476|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#  476|           Type = [BoolType] bool
#  477|     getStmt(1): [ExprStmt] ExprStmt
#  477|       getExpr(): [AssignExpr] ... = ...
#  477|           Type = [BoolType] bool
#  477|           ValueCategory = lvalue
#  477|         getLValue(): [VariableAccess] x
#  477|             Type = [BoolType] bool
#  477|             ValueCategory = lvalue
#  477|         getRValue(): [LogicalAndExpr] ... && ...
#  477|             Type = [BoolType] bool
#  477|             ValueCategory = prvalue
#  477|           getLeftOperand(): [VariableAccess] a
#  477|               Type = [BoolType] bool
#  477|               ValueCategory = prvalue(load)
#  477|           getRightOperand(): [VariableAccess] b
#  477|               Type = [BoolType] bool
#  477|               ValueCategory = prvalue(load)
#  478|     getStmt(2): [ExprStmt] ExprStmt
#  478|       getExpr(): [AssignExpr] ... = ...
#  478|           Type = [BoolType] bool
#  478|           ValueCategory = lvalue
#  478|         getLValue(): [VariableAccess] x
#  478|             Type = [BoolType] bool
#  478|             ValueCategory = lvalue
#  478|         getRValue(): [LogicalOrExpr] ... || ...
#  478|             Type = [BoolType] bool
#  478|             ValueCategory = prvalue
#  478|           getLeftOperand(): [VariableAccess] a
#  478|               Type = [BoolType] bool
#  478|               ValueCategory = prvalue(load)
#  478|           getRightOperand(): [VariableAccess] b
#  478|               Type = [BoolType] bool
#  478|               ValueCategory = prvalue(load)
#  479|     getStmt(3): [ExprStmt] ExprStmt
#  479|       getExpr(): [AssignExpr] ... = ...
#  479|           Type = [BoolType] bool
#  479|           ValueCategory = lvalue
#  479|         getLValue(): [VariableAccess] x
#  479|             Type = [BoolType] bool
#  479|             ValueCategory = lvalue
#  479|         getRValue(): [NotExpr] ! ...
#  479|             Type = [BoolType] bool
#  479|             ValueCategory = prvalue
#  479|           getOperand(): [LogicalOrExpr] ... || ...
#  479|               Type = [BoolType] bool
#  479|               ValueCategory = prvalue
#  479|             getLeftOperand(): [VariableAccess] a
#  479|                 Type = [BoolType] bool
#  479|                 ValueCategory = prvalue(load)
#  479|             getRightOperand(): [VariableAccess] b
#  479|                 Type = [BoolType] bool
#  479|                 ValueCategory = prvalue(load)
#  479|           getOperand().getFullyConverted(): [ParenthesisExpr] (...)
#  479|               Type = [BoolType] bool
#  479|               ValueCategory = prvalue
#  480|     getStmt(4): [ReturnStmt] return ...
#  482| [TopLevelFunction] void Conditional(bool, int, int)
#  482|   <params>: 
#  482|     getParameter(0): [Parameter] a
#  482|         Type = [BoolType] bool
#  482|     getParameter(1): [Parameter] x
#  482|         Type = [IntType] int
#  482|     getParameter(2): [Parameter] y
#  482|         Type = [IntType] int
#  482|   getEntryPoint(): [BlockStmt] { ... }
#  483|     getStmt(0): [DeclStmt] declaration
#  483|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
#  483|           Type = [IntType] int
#  483|         getVariable().getInitializer(): [Initializer] initializer for z
#  483|           getExpr(): [ConditionalExpr] ... ? ... : ...
#  483|               Type = [IntType] int
#  483|               ValueCategory = prvalue(load)
#  483|             getCondition(): [VariableAccess] a
#  483|                 Type = [BoolType] bool
#  483|                 ValueCategory = prvalue(load)
#  483|             getThen(): [VariableAccess] x
#  483|                 Type = [IntType] int
#  483|                 ValueCategory = prvalue(load)
#  483|             getElse(): [VariableAccess] y
#  483|                 Type = [IntType] int
#  483|                 ValueCategory = prvalue(load)
#  484|     getStmt(1): [ReturnStmt] return ...
#  486| [TopLevelFunction] void Conditional_LValue(bool)
#  486|   <params>: 
#  486|     getParameter(0): [Parameter] a
#  486|         Type = [BoolType] bool
#  486|   getEntryPoint(): [BlockStmt] { ... }
#  487|     getStmt(0): [DeclStmt] declaration
#  487|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#  487|           Type = [IntType] int
#  488|     getStmt(1): [DeclStmt] declaration
#  488|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
#  488|           Type = [IntType] int
#  489|     getStmt(2): [ExprStmt] ExprStmt
#  489|       getExpr(): [AssignExpr] ... = ...
#  489|           Type = [IntType] int
#  489|           ValueCategory = lvalue
#  489|         getLValue(): [ConditionalExpr] ... ? ... : ...
#  489|             Type = [IntType] int
#  489|             ValueCategory = lvalue
#  489|           getCondition(): [VariableAccess] a
#  489|               Type = [BoolType] bool
#  489|               ValueCategory = prvalue(load)
#  489|           getThen(): [VariableAccess] x
#  489|               Type = [IntType] int
#  489|               ValueCategory = lvalue
#  489|           getElse(): [VariableAccess] y
#  489|               Type = [IntType] int
#  489|               ValueCategory = lvalue
#  489|         getRValue(): [Literal] 5
#  489|             Type = [IntType] int
#  489|             Value = [Literal] 5
#  489|             ValueCategory = prvalue
#  489|         getLValue().getFullyConverted(): [ParenthesisExpr] (...)
#  489|             Type = [IntType] int
#  489|             ValueCategory = lvalue
#  490|     getStmt(3): [ReturnStmt] return ...
#  492| [TopLevelFunction] void Conditional_Void(bool)
#  492|   <params>: 
#  492|     getParameter(0): [Parameter] a
#  492|         Type = [BoolType] bool
#  492|   getEntryPoint(): [BlockStmt] { ... }
#  493|     getStmt(0): [ExprStmt] ExprStmt
#  493|       getExpr(): [ConditionalExpr] ... ? ... : ...
#  493|           Type = [VoidType] void
#  493|           ValueCategory = prvalue
#  493|         getCondition(): [VariableAccess] a
#  493|             Type = [BoolType] bool
#  493|             ValueCategory = prvalue(load)
#  493|         getThen(): [FunctionCall] call to VoidFunc
#  493|             Type = [VoidType] void
#  493|             ValueCategory = prvalue
#  493|         getElse(): [FunctionCall] call to VoidFunc
#  493|             Type = [VoidType] void
#  493|             ValueCategory = prvalue
#  494|     getStmt(1): [ReturnStmt] return ...
#  496| [TopLevelFunction] void Nullptr()
#  496|   <params>: 
#  496|   getEntryPoint(): [BlockStmt] { ... }
#  497|     getStmt(0): [DeclStmt] declaration
#  497|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of p
#  497|           Type = [IntPointerType] int *
#  497|         getVariable().getInitializer(): [Initializer] initializer for p
#  497|           getExpr(): [Literal] 0
#  497|               Type = [NullPointerType] decltype(nullptr)
#  497|               Value = [Literal] 0
#  497|               ValueCategory = prvalue
#  497|           getExpr().getFullyConverted(): [CStyleCast] (int *)...
#  497|               Conversion = [PointerConversion] pointer conversion
#  497|               Type = [IntPointerType] int *
#  497|               Value = [CStyleCast] 0
#  497|               ValueCategory = prvalue
#  498|     getStmt(1): [DeclStmt] declaration
#  498|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of q
#  498|           Type = [IntPointerType] int *
#  498|         getVariable().getInitializer(): [Initializer] initializer for q
#  498|           getExpr(): [Literal] 0
#  498|               Type = [IntType] int
#  498|               Value = [Literal] 0
#  498|               ValueCategory = prvalue
#  498|           getExpr().getFullyConverted(): [CStyleCast] (int *)...
#  498|               Conversion = [IntegralToPointerConversion] integral to pointer conversion
#  498|               Type = [IntPointerType] int *
#  498|               Value = [CStyleCast] 0
#  498|               ValueCategory = prvalue
#  499|     getStmt(2): [ExprStmt] ExprStmt
#  499|       getExpr(): [AssignExpr] ... = ...
#  499|           Type = [IntPointerType] int *
#  499|           ValueCategory = lvalue
#  499|         getLValue(): [VariableAccess] p
#  499|             Type = [IntPointerType] int *
#  499|             ValueCategory = lvalue
#  499|         getRValue(): [Literal] 0
#  499|             Type = [NullPointerType] decltype(nullptr)
#  499|             Value = [Literal] 0
#  499|             ValueCategory = prvalue
#  499|         getRValue().getFullyConverted(): [CStyleCast] (int *)...
#  499|             Conversion = [PointerConversion] pointer conversion
#  499|             Type = [IntPointerType] int *
#  499|             Value = [CStyleCast] 0
#  499|             ValueCategory = prvalue
#  500|     getStmt(3): [ExprStmt] ExprStmt
#  500|       getExpr(): [AssignExpr] ... = ...
#  500|           Type = [IntPointerType] int *
#  500|           ValueCategory = lvalue
#  500|         getLValue(): [VariableAccess] q
#  500|             Type = [IntPointerType] int *
#  500|             ValueCategory = lvalue
#  500|         getRValue(): [Literal] 0
#  500|             Type = [IntType] int
#  500|             Value = [Literal] 0
#  500|             ValueCategory = prvalue
#  500|         getRValue().getFullyConverted(): [CStyleCast] (int *)...
#  500|             Conversion = [IntegralToPointerConversion] integral to pointer conversion
#  500|             Type = [IntPointerType] int *
#  500|             Value = [CStyleCast] 0
#  500|             ValueCategory = prvalue
#  501|     getStmt(4): [ReturnStmt] return ...
#  503| [TopLevelFunction] void InitList(int, float)
#  503|   <params>: 
#  503|     getParameter(0): [Parameter] x
#  503|         Type = [IntType] int
#  503|     getParameter(1): [Parameter] f
#  503|         Type = [FloatType] float
#  503|   getEntryPoint(): [BlockStmt] { ... }
#  504|     getStmt(0): [DeclStmt] declaration
#  504|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pt1
#  504|           Type = [Struct] Point
#  504|         getVariable().getInitializer(): [Initializer] initializer for pt1
#  504|           getExpr(): [ClassAggregateLiteral] {...}
#  504|               Type = [Struct] Point
#  504|               ValueCategory = prvalue
#  504|             getAFieldExpr(x): [VariableAccess] x
#  504|                 Type = [IntType] int
#  504|                 ValueCategory = prvalue(load)
#  504|             getAFieldExpr(y): [VariableAccess] f
#  504|                 Type = [FloatType] float
#  504|                 ValueCategory = prvalue(load)
#  504|             getAFieldExpr(y).getFullyConverted(): [CStyleCast] (int)...
#  504|                 Conversion = [FloatingPointToIntegralConversion] floating point to integral conversion
#  504|                 Type = [IntType] int
#  504|                 ValueCategory = prvalue
#  505|     getStmt(1): [DeclStmt] declaration
#  505|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pt2
#  505|           Type = [Struct] Point
#  505|         getVariable().getInitializer(): [Initializer] initializer for pt2
#  505|           getExpr(): [ClassAggregateLiteral] {...}
#  505|               Type = [Struct] Point
#  505|               ValueCategory = prvalue
#  505|             getAFieldExpr(x): [VariableAccess] x
#  505|                 Type = [IntType] int
#  505|                 ValueCategory = prvalue(load)
#  506|     getStmt(2): [DeclStmt] declaration
#  506|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pt3
#  506|           Type = [Struct] Point
#  506|         getVariable().getInitializer(): [Initializer] initializer for pt3
#  506|           getExpr(): [ClassAggregateLiteral] {...}
#  506|               Type = [Struct] Point
#  506|               ValueCategory = prvalue
#  508|     getStmt(3): [DeclStmt] declaration
#  508|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1
#  508|           Type = [IntType] int
#  508|         getVariable().getInitializer(): [Initializer] initializer for x1
#  508|           getExpr(): [Literal] 1
#  508|               Type = [IntType] int
#  508|               Value = [Literal] 1
#  508|               ValueCategory = prvalue
#  509|     getStmt(4): [DeclStmt] declaration
#  509|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x2
#  509|           Type = [IntType] int
#  509|         getVariable().getInitializer(): [Initializer] initializer for x2
#  509|           getExpr(): [Literal] 0
#  509|               Type = [IntType] int
#  509|               Value = [Literal] 0
#  509|               ValueCategory = prvalue
#  510|     getStmt(5): [ReturnStmt] return ...
#  512| [TopLevelFunction] void NestedInitList(int, float)
#  512|   <params>: 
#  512|     getParameter(0): [Parameter] x
#  512|         Type = [IntType] int
#  512|     getParameter(1): [Parameter] f
#  512|         Type = [FloatType] float
#  512|   getEntryPoint(): [BlockStmt] { ... }
#  513|     getStmt(0): [DeclStmt] declaration
#  513|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of r1
#  513|           Type = [Struct] Rect
#  513|         getVariable().getInitializer(): [Initializer] initializer for r1
#  513|           getExpr(): [ClassAggregateLiteral] {...}
#  513|               Type = [Struct] Rect
#  513|               ValueCategory = prvalue
#  514|     getStmt(1): [DeclStmt] declaration
#  514|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of r2
#  514|           Type = [Struct] Rect
#  514|         getVariable().getInitializer(): [Initializer] initializer for r2
#  514|           getExpr(): [ClassAggregateLiteral] {...}
#  514|               Type = [Struct] Rect
#  514|               ValueCategory = prvalue
#  514|             getAFieldExpr(topLeft): [ClassAggregateLiteral] {...}
#  514|                 Type = [Struct] Point
#  514|                 ValueCategory = prvalue
#  514|               getAFieldExpr(x): [VariableAccess] x
#  514|                   Type = [IntType] int
#  514|                   ValueCategory = prvalue(load)
#  514|               getAFieldExpr(y): [VariableAccess] f
#  514|                   Type = [FloatType] float
#  514|                   ValueCategory = prvalue(load)
#  514|               getAFieldExpr(y).getFullyConverted(): [CStyleCast] (int)...
#  514|                   Conversion = [FloatingPointToIntegralConversion] floating point to integral conversion
#  514|                   Type = [IntType] int
#  514|                   ValueCategory = prvalue
#  515|     getStmt(2): [DeclStmt] declaration
#  515|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of r3
#  515|           Type = [Struct] Rect
#  515|         getVariable().getInitializer(): [Initializer] initializer for r3
#  515|           getExpr(): [ClassAggregateLiteral] {...}
#  515|               Type = [Struct] Rect
#  515|               ValueCategory = prvalue
#  515|             getAFieldExpr(topLeft): [ClassAggregateLiteral] {...}
#  515|                 Type = [Struct] Point
#  515|                 ValueCategory = prvalue
#  515|               getAFieldExpr(x): [VariableAccess] x
#  515|                   Type = [IntType] int
#  515|                   ValueCategory = prvalue(load)
#  515|               getAFieldExpr(y): [VariableAccess] f
#  515|                   Type = [FloatType] float
#  515|                   ValueCategory = prvalue(load)
#  515|               getAFieldExpr(y).getFullyConverted(): [CStyleCast] (int)...
#  515|                   Conversion = [FloatingPointToIntegralConversion] floating point to integral conversion
#  515|                   Type = [IntType] int
#  515|                   ValueCategory = prvalue
#  515|             getAFieldExpr(bottomRight): [ClassAggregateLiteral] {...}
#  515|                 Type = [Struct] Point
#  515|                 ValueCategory = prvalue
#  515|               getAFieldExpr(x): [VariableAccess] x
#  515|                   Type = [IntType] int
#  515|                   ValueCategory = prvalue(load)
#  515|               getAFieldExpr(y): [VariableAccess] f
#  515|                   Type = [FloatType] float
#  515|                   ValueCategory = prvalue(load)
#  515|               getAFieldExpr(y).getFullyConverted(): [CStyleCast] (int)...
#  515|                   Conversion = [FloatingPointToIntegralConversion] floating point to integral conversion
#  515|                   Type = [IntType] int
#  515|                   ValueCategory = prvalue
#  516|     getStmt(3): [DeclStmt] declaration
#  516|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of r4
#  516|           Type = [Struct] Rect
#  516|         getVariable().getInitializer(): [Initializer] initializer for r4
#  516|           getExpr(): [ClassAggregateLiteral] {...}
#  516|               Type = [Struct] Rect
#  516|               ValueCategory = prvalue
#  516|             getAFieldExpr(topLeft): [ClassAggregateLiteral] {...}
#  516|                 Type = [Struct] Point
#  516|                 ValueCategory = prvalue
#  516|               getAFieldExpr(x): [VariableAccess] x
#  516|                   Type = [IntType] int
#  516|                   ValueCategory = prvalue(load)
#  516|             getAFieldExpr(bottomRight): [ClassAggregateLiteral] {...}
#  516|                 Type = [Struct] Point
#  516|                 ValueCategory = prvalue
#  516|               getAFieldExpr(x): [VariableAccess] x
#  516|                   Type = [IntType] int
#  516|                   ValueCategory = prvalue(load)
#  517|     getStmt(4): [ReturnStmt] return ...
#  519| [TopLevelFunction] void ArrayInit(int, float)
#  519|   <params>: 
#  519|     getParameter(0): [Parameter] x
#  519|         Type = [IntType] int
#  519|     getParameter(1): [Parameter] f
#  519|         Type = [FloatType] float
#  519|   getEntryPoint(): [BlockStmt] { ... }
#  520|     getStmt(0): [DeclStmt] declaration
#  520|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a1
#  520|           Type = [ArrayType] int[3]
#  520|         getVariable().getInitializer(): [Initializer] initializer for a1
#  520|           getExpr(): [ArrayAggregateLiteral] {...}
#  520|               Type = [ArrayType] int[3]
#  520|               ValueCategory = prvalue
#  521|     getStmt(1): [DeclStmt] declaration
#  521|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a2
#  521|           Type = [ArrayType] int[3]
#  521|         getVariable().getInitializer(): [Initializer] initializer for a2
#  521|           getExpr(): [ArrayAggregateLiteral] {...}
#  521|               Type = [ArrayType] int[3]
#  521|               ValueCategory = prvalue
#  521|             getAnElementExpr(0): [VariableAccess] x
#  521|                 Type = [IntType] int
#  521|                 ValueCategory = prvalue(load)
#  521|             getAnElementExpr(1): [VariableAccess] f
#  521|                 Type = [FloatType] float
#  521|                 ValueCategory = prvalue(load)
#  521|             getAnElementExpr(2): [Literal] 0
#  521|                 Type = [IntType] int
#  521|                 Value = [Literal] 0
#  521|                 ValueCategory = prvalue
#  521|             getAnElementExpr(1).getFullyConverted(): [CStyleCast] (int)...
#  521|                 Conversion = [FloatingPointToIntegralConversion] floating point to integral conversion
#  521|                 Type = [IntType] int
#  521|                 ValueCategory = prvalue
#  522|     getStmt(2): [DeclStmt] declaration
#  522|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a3
#  522|           Type = [ArrayType] int[3]
#  522|         getVariable().getInitializer(): [Initializer] initializer for a3
#  522|           getExpr(): [ArrayAggregateLiteral] {...}
#  522|               Type = [ArrayType] int[3]
#  522|               ValueCategory = prvalue
#  522|             getAnElementExpr(0): [VariableAccess] x
#  522|                 Type = [IntType] int
#  522|                 ValueCategory = prvalue(load)
#  523|     getStmt(3): [ReturnStmt] return ...
#  525| [CopyAssignmentOperator] U& U::operator=(U const&)
#  525|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const U &
#  525| [MoveAssignmentOperator] U& U::operator=(U&&)
#  525|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] U &&
#  530| [TopLevelFunction] void UnionInit(int, float)
#  530|   <params>: 
#  530|     getParameter(0): [Parameter] x
#  530|         Type = [IntType] int
#  530|     getParameter(1): [Parameter] f
#  530|         Type = [FloatType] float
#  530|   getEntryPoint(): [BlockStmt] { ... }
#  531|     getStmt(0): [DeclStmt] declaration
#  531|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of u1
#  531|           Type = [Union] U
#  531|         getVariable().getInitializer(): [Initializer] initializer for u1
#  531|           getExpr(): [ClassAggregateLiteral] {...}
#  531|               Type = [Union] U
#  531|               ValueCategory = prvalue
#  531|             getAFieldExpr(d): [VariableAccess] f
#  531|                 Type = [FloatType] float
#  531|                 ValueCategory = prvalue(load)
#  531|             getAFieldExpr(d).getFullyConverted(): [CStyleCast] (double)...
#  531|                 Conversion = [FloatingPointConversion] floating point conversion
#  531|                 Type = [DoubleType] double
#  531|                 ValueCategory = prvalue
#  533|     getStmt(1): [ReturnStmt] return ...
#  535| [TopLevelFunction] void EarlyReturn(int, int)
#  535|   <params>: 
#  535|     getParameter(0): [Parameter] x
#  535|         Type = [IntType] int
#  535|     getParameter(1): [Parameter] y
#  535|         Type = [IntType] int
#  535|   getEntryPoint(): [BlockStmt] { ... }
#  536|     getStmt(0): [IfStmt] if (...) ... 
#  536|       getCondition(): [LTExpr] ... < ...
#  536|           Type = [BoolType] bool
#  536|           ValueCategory = prvalue
#  536|         getLesserOperand(): [VariableAccess] x
#  536|             Type = [IntType] int
#  536|             ValueCategory = prvalue(load)
#  536|         getGreaterOperand(): [VariableAccess] y
#  536|             Type = [IntType] int
#  536|             ValueCategory = prvalue(load)
#  536|       getThen(): [BlockStmt] { ... }
#  537|         getStmt(0): [ReturnStmt] return ...
#  540|     getStmt(1): [ExprStmt] ExprStmt
#  540|       getExpr(): [AssignExpr] ... = ...
#  540|           Type = [IntType] int
#  540|           ValueCategory = lvalue
#  540|         getLValue(): [VariableAccess] y
#  540|             Type = [IntType] int
#  540|             ValueCategory = lvalue
#  540|         getRValue(): [VariableAccess] x
#  540|             Type = [IntType] int
#  540|             ValueCategory = prvalue(load)
#  541|     getStmt(2): [ReturnStmt] return ...
#  543| [TopLevelFunction] int EarlyReturnValue(int, int)
#  543|   <params>: 
#  543|     getParameter(0): [Parameter] x
#  543|         Type = [IntType] int
#  543|     getParameter(1): [Parameter] y
#  543|         Type = [IntType] int
#  543|   getEntryPoint(): [BlockStmt] { ... }
#  544|     getStmt(0): [IfStmt] if (...) ... 
#  544|       getCondition(): [LTExpr] ... < ...
#  544|           Type = [BoolType] bool
#  544|           ValueCategory = prvalue
#  544|         getLesserOperand(): [VariableAccess] x
#  544|             Type = [IntType] int
#  544|             ValueCategory = prvalue(load)
#  544|         getGreaterOperand(): [VariableAccess] y
#  544|             Type = [IntType] int
#  544|             ValueCategory = prvalue(load)
#  544|       getThen(): [BlockStmt] { ... }
#  545|         getStmt(0): [ReturnStmt] return ...
#  545|           getExpr(): [VariableAccess] x
#  545|               Type = [IntType] int
#  545|               ValueCategory = prvalue(load)
#  548|     getStmt(1): [ReturnStmt] return ...
#  548|       getExpr(): [AddExpr] ... + ...
#  548|           Type = [IntType] int
#  548|           ValueCategory = prvalue
#  548|         getLeftOperand(): [VariableAccess] x
#  548|             Type = [IntType] int
#  548|             ValueCategory = prvalue(load)
#  548|         getRightOperand(): [VariableAccess] y
#  548|             Type = [IntType] int
#  548|             ValueCategory = prvalue(load)
#  551| [TopLevelFunction] int CallViaFuncPtr(int(*)(int))
#  551|   <params>: 
#  551|     getParameter(0): [Parameter] pfn
#  551|         Type = [FunctionPointerType] ..(*)(..)
#  551|   getEntryPoint(): [BlockStmt] { ... }
#  552|     getStmt(0): [ReturnStmt] return ...
#  552|       getExpr(): [VariableCall] call to expression
#  552|           Type = [IntType] int
#  552|           ValueCategory = prvalue
#  552|         getExpr(): [VariableAccess] pfn
#  552|             Type = [FunctionPointerType] ..(*)(..)
#  552|             ValueCategory = prvalue(load)
#  552|         getArgument(0): [Literal] 5
#  552|             Type = [IntType] int
#  552|             Value = [Literal] 5
#  552|             ValueCategory = prvalue
#  560| [TopLevelFunction] int EnumSwitch(E)
#  560|   <params>: 
#  560|     getParameter(0): [Parameter] e
#  560|         Type = [CTypedefType] E
#  560|   getEntryPoint(): [BlockStmt] { ... }
#  561|     getStmt(0): [SwitchStmt] switch (...) ... 
#  561|       getExpr(): [VariableAccess] e
#  561|           Type = [CTypedefType] E
#  561|           ValueCategory = prvalue(load)
#  561|       getStmt(): [BlockStmt] { ... }
#  562|         getStmt(0): [SwitchCase] case ...:
#  562|           getExpr(): [EnumConstantAccess] E_0
#  562|               Type = [Enum] E
#  562|               Value = [EnumConstantAccess] 0
#  562|               ValueCategory = prvalue
#  562|           getExpr().getFullyConverted(): [CStyleCast] (int)...
#  562|               Conversion = [IntegralConversion] integral conversion
#  562|               Type = [IntType] int
#  562|               Value = [CStyleCast] 0
#  562|               ValueCategory = prvalue
#  563|         getStmt(1): [ReturnStmt] return ...
#  563|           getExpr(): [Literal] 0
#  563|               Type = [IntType] int
#  563|               Value = [Literal] 0
#  563|               ValueCategory = prvalue
#  564|         getStmt(2): [SwitchCase] case ...:
#  564|           getExpr(): [EnumConstantAccess] E_1
#  564|               Type = [Enum] E
#  564|               Value = [EnumConstantAccess] 1
#  564|               ValueCategory = prvalue
#  564|           getExpr().getFullyConverted(): [CStyleCast] (int)...
#  564|               Conversion = [IntegralConversion] integral conversion
#  564|               Type = [IntType] int
#  564|               Value = [CStyleCast] 1
#  564|               ValueCategory = prvalue
#  565|         getStmt(3): [ReturnStmt] return ...
#  565|           getExpr(): [Literal] 1
#  565|               Type = [IntType] int
#  565|               Value = [Literal] 1
#  565|               ValueCategory = prvalue
#  566|         getStmt(4): [SwitchCase] default: 
#  567|         getStmt(5): [ReturnStmt] return ...
#  567|           getExpr(): [UnaryMinusExpr] - ...
#  567|               Type = [IntType] int
#  567|               Value = [UnaryMinusExpr] -1
#  567|               ValueCategory = prvalue
#  567|             getOperand(): [Literal] 1
#  567|                 Type = [IntType] int
#  567|                 Value = [Literal] 1
#  567|                 ValueCategory = prvalue
#  561|       getExpr().getFullyConverted(): [CStyleCast] (int)...
#  561|           Conversion = [IntegralConversion] integral conversion
#  561|           Type = [IntType] int
#  561|           ValueCategory = prvalue
#  571| [TopLevelFunction] void InitArray()
#  571|   <params>: 
#  571|   getEntryPoint(): [BlockStmt] { ... }
#  572|     getStmt(0): [DeclStmt] declaration
#  572|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a_pad
#  572|           Type = [ArrayType] char[32]
#  572|         getVariable().getInitializer(): [Initializer] initializer for a_pad
#  572|           getExpr(): 
#  572|               Type = [ArrayType] const char[32]
#  572|               Value = [StringLiteral] ""
#  572|               ValueCategory = lvalue
#  573|     getStmt(1): [DeclStmt] declaration
#  573|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a_nopad
#  573|           Type = [ArrayType] char[4]
#  573|         getVariable().getInitializer(): [Initializer] initializer for a_nopad
#  573|           getExpr(): foo
#  573|               Type = [ArrayType] const char[4]
#  573|               Value = [StringLiteral] "foo"
#  573|               ValueCategory = lvalue
#  574|     getStmt(2): [DeclStmt] declaration
#  574|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a_infer
#  574|           Type = [ArrayType] char[]
#  574|         getVariable().getInitializer(): [Initializer] initializer for a_infer
#  574|           getExpr(): blah
#  574|               Type = [ArrayType] const char[5]
#  574|               Value = [StringLiteral] "blah"
#  574|               ValueCategory = lvalue
#  575|     getStmt(3): [DeclStmt] declaration
#  575|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
#  575|           Type = [ArrayType] char[2]
#  576|     getStmt(4): [DeclStmt] declaration
#  576|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
#  576|           Type = [ArrayType] char[2]
#  576|         getVariable().getInitializer(): [Initializer] initializer for c
#  576|           getExpr(): [ArrayAggregateLiteral] {...}
#  576|               Type = [ArrayType] char[2]
#  576|               ValueCategory = prvalue
#  577|     getStmt(5): [DeclStmt] declaration
#  577|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
#  577|           Type = [ArrayType] char[2]
#  577|         getVariable().getInitializer(): [Initializer] initializer for d
#  577|           getExpr(): [ArrayAggregateLiteral] {...}
#  577|               Type = [ArrayType] char[2]
#  577|               ValueCategory = prvalue
#  577|             getAnElementExpr(0): [Literal] 0
#  577|                 Type = [IntType] int
#  577|                 Value = [Literal] 0
#  577|                 ValueCategory = prvalue
#  577|             getAnElementExpr(0).getFullyConverted(): [CStyleCast] (char)...
#  577|                 Conversion = [IntegralConversion] integral conversion
#  577|                 Type = [PlainCharType] char
#  577|                 Value = [CStyleCast] 0
#  577|                 ValueCategory = prvalue
#  578|     getStmt(6): [DeclStmt] declaration
#  578|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of e
#  578|           Type = [ArrayType] char[2]
#  578|         getVariable().getInitializer(): [Initializer] initializer for e
#  578|           getExpr(): [ArrayAggregateLiteral] {...}
#  578|               Type = [ArrayType] char[2]
#  578|               ValueCategory = prvalue
#  578|             getAnElementExpr(0): [Literal] 0
#  578|                 Type = [IntType] int
#  578|                 Value = [Literal] 0
#  578|                 ValueCategory = prvalue
#  578|             getAnElementExpr(1): [Literal] 1
#  578|                 Type = [IntType] int
#  578|                 Value = [Literal] 1
#  578|                 ValueCategory = prvalue
#  578|             getAnElementExpr(0).getFullyConverted(): [CStyleCast] (char)...
#  578|                 Conversion = [IntegralConversion] integral conversion
#  578|                 Type = [PlainCharType] char
#  578|                 Value = [CStyleCast] 0
#  578|                 ValueCategory = prvalue
#  578|             getAnElementExpr(1).getFullyConverted(): [CStyleCast] (char)...
#  578|                 Conversion = [IntegralConversion] integral conversion
#  578|                 Type = [PlainCharType] char
#  578|                 Value = [CStyleCast] 1
#  578|                 ValueCategory = prvalue
#  579|     getStmt(7): [DeclStmt] declaration
#  579|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of f
#  579|           Type = [ArrayType] char[3]
#  579|         getVariable().getInitializer(): [Initializer] initializer for f
#  579|           getExpr(): [ArrayAggregateLiteral] {...}
#  579|               Type = [ArrayType] char[3]
#  579|               ValueCategory = prvalue
#  579|             getAnElementExpr(0): [Literal] 0
#  579|                 Type = [IntType] int
#  579|                 Value = [Literal] 0
#  579|                 ValueCategory = prvalue
#  579|             getAnElementExpr(0).getFullyConverted(): [CStyleCast] (char)...
#  579|                 Conversion = [IntegralConversion] integral conversion
#  579|                 Type = [PlainCharType] char
#  579|                 Value = [CStyleCast] 0
#  579|                 ValueCategory = prvalue
#  580|     getStmt(8): [ReturnStmt] return ...
#  582| [TopLevelFunction] void VarArgFunction(char const*)
#  582|   <params>: 
#  582|     getParameter(0): [Parameter] s
#  582|         Type = [PointerType] const char *
#  584| [TopLevelFunction] void VarArgs()
#  584|   <params>: 
#  584|   getEntryPoint(): [BlockStmt] { ... }
#  585|     getStmt(0): [ExprStmt] ExprStmt
#  585|       getExpr(): [FunctionCall] call to VarArgFunction
#  585|           Type = [VoidType] void
#  585|           ValueCategory = prvalue
#  585|         getArgument(0): %d %s
#  585|             Type = [ArrayType] const char[6]
#  585|             Value = [StringLiteral] "%d %s"
#  585|             ValueCategory = lvalue
#  585|         getArgument(1): [Literal] 1
#  585|             Type = [IntType] int
#  585|             Value = [Literal] 1
#  585|             ValueCategory = prvalue
#  585|         getArgument(2): string
#  585|             Type = [ArrayType] const char[7]
#  585|             Value = [StringLiteral] "string"
#  585|             ValueCategory = lvalue
#  585|         getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  585|             Type = [PointerType] const char *
#  585|             ValueCategory = prvalue
#  585|         getArgument(2).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  585|             Type = [PointerType] const char *
#  585|             ValueCategory = prvalue
#  586|     getStmt(1): [ReturnStmt] return ...
#  588| [TopLevelFunction] int FuncPtrTarget(int)
#  588|   <params>: 
#  588|     getParameter(0): [Parameter] (unnamed parameter 0)
#  588|         Type = [IntType] int
#  590| [TopLevelFunction] void SetFuncPtr()
#  590|   <params>: 
#  590|   getEntryPoint(): [BlockStmt] { ... }
#  591|     getStmt(0): [DeclStmt] declaration
#  591|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pfn
#  591|           Type = [FunctionPointerType] ..(*)(..)
#  591|         getVariable().getInitializer(): [Initializer] initializer for pfn
#  591|           getExpr(): [FunctionAccess] FuncPtrTarget
#  591|               Type = [FunctionPointerType] ..(*)(..)
#  591|               ValueCategory = prvalue(load)
#  592|     getStmt(1): [ExprStmt] ExprStmt
#  592|       getExpr(): [AssignExpr] ... = ...
#  592|           Type = [FunctionPointerType] ..(*)(..)
#  592|           ValueCategory = lvalue
#  592|         getLValue(): [VariableAccess] pfn
#  592|             Type = [FunctionPointerType] ..(*)(..)
#  592|             ValueCategory = lvalue
#  592|         getRValue(): [AddressOfExpr] & ...
#  592|             Type = [FunctionPointerType] ..(*)(..)
#  592|             ValueCategory = prvalue
#  592|           getOperand(): [FunctionAccess] FuncPtrTarget
#  592|               Type = [RoutineType] ..()(..)
#  592|               ValueCategory = lvalue
#  593|     getStmt(2): [ExprStmt] ExprStmt
#  593|       getExpr(): [AssignExpr] ... = ...
#  593|           Type = [FunctionPointerType] ..(*)(..)
#  593|           ValueCategory = lvalue
#  593|         getLValue(): [VariableAccess] pfn
#  593|             Type = [FunctionPointerType] ..(*)(..)
#  593|             ValueCategory = lvalue
#  593|         getRValue(): [PointerDereferenceExpr] * ...
#  593|             Type = [FunctionPointerType] ..(*)(..)
#  593|             ValueCategory = prvalue(load)
#  593|           getOperand(): [FunctionAccess] FuncPtrTarget
#  593|               Type = [FunctionPointerType] ..(*)(..)
#  593|               ValueCategory = prvalue(load)
#  594|     getStmt(3): [ExprStmt] ExprStmt
#  594|       getExpr(): [AssignExpr] ... = ...
#  594|           Type = [FunctionPointerType] ..(*)(..)
#  594|           ValueCategory = lvalue
#  594|         getLValue(): [VariableAccess] pfn
#  594|             Type = [FunctionPointerType] ..(*)(..)
#  594|             ValueCategory = lvalue
#  594|         getRValue(): [PointerDereferenceExpr] * ...
#  594|             Type = [FunctionPointerType] ..(*)(..)
#  594|             ValueCategory = prvalue(load)
#  594|           getOperand(): [PointerDereferenceExpr] * ...
#  594|               Type = [FunctionPointerType] ..(*)(..)
#  594|               ValueCategory = prvalue(load)
#  594|             getOperand(): [PointerDereferenceExpr] * ...
#  594|                 Type = [FunctionPointerType] ..(*)(..)
#  594|                 ValueCategory = prvalue(load)
#  594|               getOperand(): [AddressOfExpr] & ...
#  594|                   Type = [FunctionPointerType] ..(*)(..)
#  594|                   ValueCategory = prvalue
#  594|                 getOperand(): [FunctionAccess] FuncPtrTarget
#  594|                     Type = [RoutineType] ..()(..)
#  594|                     ValueCategory = lvalue
#  595|     getStmt(4): [ReturnStmt] return ...
#  599| [CopyConstructor] void String::String(String const&)
#  599|   <params>: 
#  599|     getParameter(0): [Parameter] (unnamed parameter 0)
#  599|         Type = [LValueReferenceType] const String &
#  600| [MoveConstructor] void String::String(String&&)
#  600|   <params>: 
#  600|     getParameter(0): [Parameter] (unnamed parameter 0)
#  600|         Type = [RValueReferenceType] String &&
#  601| [Constructor] void String::String(char const*)
#  601|   <params>: 
#  601|     getParameter(0): [Parameter] (unnamed parameter 0)
#  601|         Type = [PointerType] const char *
#  602| [Destructor] void String::~String()
#  602|   <params>: 
#  604| [CopyAssignmentOperator] String& String::operator=(String const&)
#  604|   <params>: 
#  604|     getParameter(0): [Parameter] (unnamed parameter 0)
#  604|         Type = [LValueReferenceType] const String &
#  605| [MoveAssignmentOperator] String& String::operator=(String&&)
#  605|   <params>: 
#  605|     getParameter(0): [Parameter] (unnamed parameter 0)
#  605|         Type = [RValueReferenceType] String &&
#  607| [ConstMemberFunction] char const* String::c_str() const
#  607|   <params>: 
#  608| [MemberFunction] char String::pop_back()
#  608|   <params>: 
#  613| [TopLevelFunction] String ReturnObject()
#  613|   <params>: 
#  615| [TopLevelFunction] void DeclareObject()
#  615|   <params>: 
#  615|   getEntryPoint(): [BlockStmt] { ... }
#  616|     getStmt(0): [DeclStmt] declaration
#  616|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s1
#  616|           Type = [Struct] String
#  616|         getVariable().getInitializer(): [Initializer] initializer for s1
#  616|           getExpr(): [ConstructorCall] call to String
#  616|               Type = [VoidType] void
#  616|               ValueCategory = prvalue
#  617|     getStmt(1): [DeclStmt] declaration
#  617|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s2
#  617|           Type = [Struct] String
#  617|         getVariable().getInitializer(): [Initializer] initializer for s2
#  617|           getExpr(): [ConstructorCall] call to String
#  617|               Type = [VoidType] void
#  617|               ValueCategory = prvalue
#  617|             getArgument(0): hello
#  617|                 Type = [ArrayType] const char[6]
#  617|                 Value = [StringLiteral] "hello"
#  617|                 ValueCategory = lvalue
#  617|             getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  617|                 Type = [PointerType] const char *
#  617|                 ValueCategory = prvalue
#  618|     getStmt(2): [DeclStmt] declaration
#  618|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s3
#  618|           Type = [Struct] String
#  618|         getVariable().getInitializer(): [Initializer] initializer for s3
#  618|           getExpr(): [FunctionCall] call to ReturnObject
#  618|               Type = [Struct] String
#  618|               ValueCategory = prvalue
#  619|     getStmt(3): [DeclStmt] declaration
#  619|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s4
#  619|           Type = [Struct] String
#  619|         getVariable().getInitializer(): [Initializer] initializer for s4
#  619|           getExpr(): [ConstructorCall] call to String
#  619|               Type = [VoidType] void
#  619|               ValueCategory = prvalue
#  619|             getArgument(0): test
#  619|                 Type = [ArrayType] const char[5]
#  619|                 Value = [StringLiteral] "test"
#  619|                 ValueCategory = lvalue
#  619|             getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  619|                 Type = [PointerType] const char *
#  619|                 ValueCategory = prvalue
#  620|     getStmt(4): [ReturnStmt] return ...
#  620|       getImplicitDestructorCall(0): [DestructorCall] call to ~String
#  620|           Type = [VoidType] void
#  620|           ValueCategory = prvalue
#  620|         getQualifier(): [VariableAccess] s4
#  620|             Type = [Struct] String
#  620|             ValueCategory = lvalue
#  620|       getImplicitDestructorCall(1): [DestructorCall] call to ~String
#  620|           Type = [VoidType] void
#  620|           ValueCategory = prvalue
#  620|         getQualifier(): [VariableAccess] s3
#  620|             Type = [Struct] String
#  620|             ValueCategory = lvalue
#  620|       getImplicitDestructorCall(2): [DestructorCall] call to ~String
#  620|           Type = [VoidType] void
#  620|           ValueCategory = prvalue
#  620|         getQualifier(): [VariableAccess] s2
#  620|             Type = [Struct] String
#  620|             ValueCategory = lvalue
#  620|       getImplicitDestructorCall(3): [DestructorCall] call to ~String
#  620|           Type = [VoidType] void
#  620|           ValueCategory = prvalue
#  620|         getQualifier(): [VariableAccess] s1
#  620|             Type = [Struct] String
#  620|             ValueCategory = lvalue
#  622| [TopLevelFunction] void CallMethods(String&, String*, String)
#  622|   <params>: 
#  622|     getParameter(0): [Parameter] r
#  622|         Type = [LValueReferenceType] String &
#  622|     getParameter(1): [Parameter] p
#  622|         Type = [PointerType] String *
#  622|     getParameter(2): [Parameter] s
#  622|         Type = [Struct] String
#  622|   getEntryPoint(): [BlockStmt] { ... }
#  623|     getStmt(0): [ExprStmt] ExprStmt
#  623|       getExpr(): [FunctionCall] call to c_str
#  623|           Type = [PointerType] const char *
#  623|           ValueCategory = prvalue
#  623|         getQualifier(): [VariableAccess] r
#  623|             Type = [LValueReferenceType] String &
#  623|             ValueCategory = prvalue(load)
#  623|         getQualifier().getFullyConverted(): [CStyleCast] (const String)...
#  623|             Conversion = [GlvalueConversion] glvalue conversion
#  623|             Type = [SpecifiedType] const String
#  623|             ValueCategory = lvalue
#  623|           getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#  623|               Type = [Struct] String
#  623|               ValueCategory = lvalue
#  624|     getStmt(1): [ExprStmt] ExprStmt
#  624|       getExpr(): [FunctionCall] call to c_str
#  624|           Type = [PointerType] const char *
#  624|           ValueCategory = prvalue
#  624|         getQualifier(): [VariableAccess] p
#  624|             Type = [PointerType] String *
#  624|             ValueCategory = prvalue(load)
#  624|         getQualifier().getFullyConverted(): [CStyleCast] (const String *)...
#  624|             Conversion = [PointerConversion] pointer conversion
#  624|             Type = [PointerType] const String *
#  624|             ValueCategory = prvalue
#  625|     getStmt(2): [ExprStmt] ExprStmt
#  625|       getExpr(): [FunctionCall] call to c_str
#  625|           Type = [PointerType] const char *
#  625|           ValueCategory = prvalue
#  625|         getQualifier(): [VariableAccess] s
#  625|             Type = [Struct] String
#  625|             ValueCategory = lvalue
#  625|         getQualifier().getFullyConverted(): [CStyleCast] (const String)...
#  625|             Conversion = [GlvalueConversion] glvalue conversion
#  625|             Type = [SpecifiedType] const String
#  625|             ValueCategory = lvalue
#  626|     getStmt(3): [ReturnStmt] return ...
#  628| [CopyAssignmentOperator] C& C::operator=(C const&)
#  628|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const C &
#  628| [MoveAssignmentOperator] C& C::operator=(C&&)
#  628|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] C &&
#  628| [CopyConstructor] void C::C(C const&)
#  628|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const C &
#  628| [MoveConstructor] void C::C(C&&)
#  628|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] C &&
#  628| [Destructor] void C::~C()
#  628|   <params>: 
#-----|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [ReturnStmt] return ...
#  628|   <destructions>: 
#  628|     getDestruction(0): [DestructorFieldDestruction] destructor field destruction of m_f
#  628|         Type = [Struct] String
#  628|         ValueCategory = prvalue
#  628|       getExpr(): [DestructorCall] call to ~String
#  628|           Type = [VoidType] void
#  628|           ValueCategory = prvalue
#  628|         getQualifier(): [ImplicitThisFieldAccess] m_f
#  628|             Type = [Struct] String
#  628|             ValueCategory = lvalue
#  628|     getDestruction(1): [DestructorFieldDestruction] destructor field destruction of m_b
#  628|         Type = [Struct] String
#  628|         ValueCategory = prvalue
#  628|       getExpr(): [DestructorCall] call to ~String
#  628|           Type = [VoidType] void
#  628|           ValueCategory = prvalue
#  628|         getQualifier(): [ImplicitThisFieldAccess] m_b
#  628|             Type = [Struct] String
#  628|             ValueCategory = lvalue
#  630| [MemberFunction] int C::StaticMemberFunction(int)
#  630|   <params>: 
#  630|     getParameter(0): [Parameter] x
#  630|         Type = [IntType] int
#  630|   getEntryPoint(): [BlockStmt] { ... }
#  631|     getStmt(0): [ReturnStmt] return ...
#  631|       getExpr(): [VariableAccess] x
#  631|           Type = [IntType] int
#  631|           ValueCategory = prvalue(load)
#  634| [MemberFunction] int C::InstanceMemberFunction(int)
#  634|   <params>: 
#  634|     getParameter(0): [Parameter] x
#  634|         Type = [IntType] int
#  634|   getEntryPoint(): [BlockStmt] { ... }
#  635|     getStmt(0): [ReturnStmt] return ...
#  635|       getExpr(): [VariableAccess] x
#  635|           Type = [IntType] int
#  635|           ValueCategory = prvalue(load)
#  638| [VirtualFunction] int C::VirtualMemberFunction(int)
#  638|   <params>: 
#  638|     getParameter(0): [Parameter] x
#  638|         Type = [IntType] int
#  638|   getEntryPoint(): [BlockStmt] { ... }
#  639|     getStmt(0): [ReturnStmt] return ...
#  639|       getExpr(): [VariableAccess] x
#  639|           Type = [IntType] int
#  639|           ValueCategory = prvalue(load)
#  642| [MemberFunction] void C::FieldAccess()
#  642|   <params>: 
#  642|   getEntryPoint(): [BlockStmt] { ... }
#  643|     getStmt(0): [ExprStmt] ExprStmt
#  643|       getExpr(): [AssignExpr] ... = ...
#  643|           Type = [IntType] int
#  643|           ValueCategory = lvalue
#  643|         getLValue(): [PointerFieldAccess] m_a
#  643|             Type = [IntType] int
#  643|             ValueCategory = lvalue
#  643|           getQualifier(): [ThisExpr] this
#  643|               Type = [PointerType] C *
#  643|               ValueCategory = prvalue(load)
#  643|         getRValue(): [Literal] 0
#  643|             Type = [IntType] int
#  643|             Value = [Literal] 0
#  643|             ValueCategory = prvalue
#  644|     getStmt(1): [ExprStmt] ExprStmt
#  644|       getExpr(): [AssignExpr] ... = ...
#  644|           Type = [IntType] int
#  644|           ValueCategory = lvalue
#  644|         getLValue(): [ValueFieldAccess] m_a
#  644|             Type = [IntType] int
#  644|             ValueCategory = lvalue
#  644|           getQualifier(): [PointerDereferenceExpr] * ...
#  644|               Type = [Class] C
#  644|               ValueCategory = lvalue
#  644|             getOperand(): [ThisExpr] this
#  644|                 Type = [PointerType] C *
#  644|                 ValueCategory = prvalue(load)
#  644|           getQualifier().getFullyConverted(): [ParenthesisExpr] (...)
#  644|               Type = [Class] C
#  644|               ValueCategory = lvalue
#  644|         getRValue(): [Literal] 1
#  644|             Type = [IntType] int
#  644|             Value = [Literal] 1
#  644|             ValueCategory = prvalue
#  645|     getStmt(2): [ExprStmt] ExprStmt
#  645|       getExpr(): [AssignExpr] ... = ...
#  645|           Type = [IntType] int
#  645|           ValueCategory = lvalue
#  645|         getLValue(): [ImplicitThisFieldAccess,PointerFieldAccess] m_a
#  645|             Type = [IntType] int
#  645|             ValueCategory = lvalue
#  645|           getQualifier(): [ThisExpr] this
#  645|               Type = [PointerType] C *
#  645|               ValueCategory = prvalue(load)
#  645|         getRValue(): [Literal] 2
#  645|             Type = [IntType] int
#  645|             Value = [Literal] 2
#  645|             ValueCategory = prvalue
#  646|     getStmt(3): [DeclStmt] declaration
#  646|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#  646|           Type = [IntType] int
#  647|     getStmt(4): [ExprStmt] ExprStmt
#  647|       getExpr(): [AssignExpr] ... = ...
#  647|           Type = [IntType] int
#  647|           ValueCategory = lvalue
#  647|         getLValue(): [VariableAccess] x
#  647|             Type = [IntType] int
#  647|             ValueCategory = lvalue
#  647|         getRValue(): [PointerFieldAccess] m_a
#  647|             Type = [IntType] int
#  647|             ValueCategory = prvalue(load)
#  647|           getQualifier(): [ThisExpr] this
#  647|               Type = [PointerType] C *
#  647|               ValueCategory = prvalue(load)
#  648|     getStmt(5): [ExprStmt] ExprStmt
#  648|       getExpr(): [AssignExpr] ... = ...
#  648|           Type = [IntType] int
#  648|           ValueCategory = lvalue
#  648|         getLValue(): [VariableAccess] x
#  648|             Type = [IntType] int
#  648|             ValueCategory = lvalue
#  648|         getRValue(): [ValueFieldAccess] m_a
#  648|             Type = [IntType] int
#  648|             ValueCategory = prvalue(load)
#  648|           getQualifier(): [PointerDereferenceExpr] * ...
#  648|               Type = [Class] C
#  648|               ValueCategory = lvalue
#  648|             getOperand(): [ThisExpr] this
#  648|                 Type = [PointerType] C *
#  648|                 ValueCategory = prvalue(load)
#  648|           getQualifier().getFullyConverted(): [ParenthesisExpr] (...)
#  648|               Type = [Class] C
#  648|               ValueCategory = lvalue
#  649|     getStmt(6): [ExprStmt] ExprStmt
#  649|       getExpr(): [AssignExpr] ... = ...
#  649|           Type = [IntType] int
#  649|           ValueCategory = lvalue
#  649|         getLValue(): [VariableAccess] x
#  649|             Type = [IntType] int
#  649|             ValueCategory = lvalue
#  649|         getRValue(): [ImplicitThisFieldAccess,PointerFieldAccess] m_a
#  649|             Type = [IntType] int
#  649|             ValueCategory = prvalue(load)
#  649|           getQualifier(): [ThisExpr] this
#  649|               Type = [PointerType] C *
#  649|               ValueCategory = prvalue(load)
#  650|     getStmt(7): [ReturnStmt] return ...
#  652| [MemberFunction] void C::MethodCalls()
#  652|   <params>: 
#  652|   getEntryPoint(): [BlockStmt] { ... }
#  653|     getStmt(0): [ExprStmt] ExprStmt
#  653|       getExpr(): [FunctionCall] call to InstanceMemberFunction
#  653|           Type = [IntType] int
#  653|           ValueCategory = prvalue
#  653|         getQualifier(): [ThisExpr] this
#  653|             Type = [PointerType] C *
#  653|             ValueCategory = prvalue(load)
#  653|         getArgument(0): [Literal] 0
#  653|             Type = [IntType] int
#  653|             Value = [Literal] 0
#  653|             ValueCategory = prvalue
#  654|     getStmt(1): [ExprStmt] ExprStmt
#  654|       getExpr(): [FunctionCall] call to InstanceMemberFunction
#  654|           Type = [IntType] int
#  654|           ValueCategory = prvalue
#  654|         getQualifier(): [PointerDereferenceExpr] * ...
#  654|             Type = [Class] C
#  654|             ValueCategory = lvalue
#  654|           getOperand(): [ThisExpr] this
#  654|               Type = [PointerType] C *
#  654|               ValueCategory = prvalue(load)
#  654|         getArgument(0): [Literal] 1
#  654|             Type = [IntType] int
#  654|             Value = [Literal] 1
#  654|             ValueCategory = prvalue
#  654|         getQualifier().getFullyConverted(): [ParenthesisExpr] (...)
#  654|             Type = [Class] C
#  654|             ValueCategory = lvalue
#  655|     getStmt(2): [ExprStmt] ExprStmt
#  655|       getExpr(): [FunctionCall] call to InstanceMemberFunction
#  655|           Type = [IntType] int
#  655|           ValueCategory = prvalue
#  655|         getQualifier(): [ThisExpr] this
#  655|             Type = [PointerType] C *
#  655|             ValueCategory = prvalue(load)
#  655|         getArgument(0): [Literal] 2
#  655|             Type = [IntType] int
#  655|             Value = [Literal] 2
#  655|             ValueCategory = prvalue
#  656|     getStmt(3): [ReturnStmt] return ...
#  658| [Constructor] void C::C()
#  658|   <params>: 
#  658|   <initializations>: 
#  659|     getInitializer(0): [ConstructorFieldInit] constructor init of field m_a
#  659|         Type = [IntType] int
#  659|         ValueCategory = prvalue
#  659|       getExpr(): [Literal] 1
#  659|           Type = [IntType] int
#  659|           Value = [Literal] 1
#  659|           ValueCategory = prvalue
#  663|     getInitializer(1): [ConstructorFieldInit] constructor init of field m_b
#  663|         Type = [Struct] String
#  663|         ValueCategory = prvalue
#  663|       getExpr(): [ConstructorCall] call to String
#  663|           Type = [VoidType] void
#  663|           ValueCategory = prvalue
#  660|     getInitializer(2): [ConstructorFieldInit] constructor init of field m_c
#  660|         Type = [PlainCharType] char
#  660|         ValueCategory = prvalue
#  660|       getExpr(): [Literal] 3
#  660|           Type = [IntType] int
#  660|           Value = [Literal] 3
#  660|           ValueCategory = prvalue
#  660|       getExpr().getFullyConverted(): [CStyleCast] (char)...
#  660|           Conversion = [IntegralConversion] integral conversion
#  660|           Type = [PlainCharType] char
#  660|           Value = [CStyleCast] 3
#  660|           ValueCategory = prvalue
#  661|     getInitializer(3): [ConstructorFieldInit] constructor init of field m_e
#  661|         Type = [VoidPointerType] void *
#  661|         ValueCategory = prvalue
#  661|       getExpr(): [Literal] 0
#  661|           Type = [VoidPointerType] void *
#  661|           Value = [Literal] 0
#  661|           ValueCategory = prvalue
#  662|     getInitializer(4): [ConstructorFieldInit] constructor init of field m_f
#  662|         Type = [Struct] String
#  662|         ValueCategory = prvalue
#  662|       getExpr(): [ConstructorCall] call to String
#  662|           Type = [VoidType] void
#  662|           ValueCategory = prvalue
#  662|         getArgument(0): test
#  662|             Type = [ArrayType] const char[5]
#  662|             Value = [StringLiteral] "test"
#  662|             ValueCategory = lvalue
#  662|         getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  662|             Type = [PointerType] const char *
#  662|             ValueCategory = prvalue
#  663|   getEntryPoint(): [BlockStmt] { ... }
#  664|     getStmt(0): [ReturnStmt] return ...
#  675| [TopLevelFunction] int DerefReference(int&)
#  675|   <params>: 
#  675|     getParameter(0): [Parameter] r
#  675|         Type = [LValueReferenceType] int &
#  675|   getEntryPoint(): [BlockStmt] { ... }
#  676|     getStmt(0): [ReturnStmt] return ...
#  676|       getExpr(): [VariableAccess] r
#  676|           Type = [LValueReferenceType] int &
#  676|           ValueCategory = prvalue(load)
#  676|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  676|           Type = [IntType] int
#  676|           ValueCategory = prvalue(load)
#  679| [TopLevelFunction] int& TakeReference()
#  679|   <params>: 
#  679|   getEntryPoint(): [BlockStmt] { ... }
#  680|     getStmt(0): [ReturnStmt] return ...
#  680|       getExpr(): [VariableAccess] g
#  680|           Type = [IntType] int
#  680|           ValueCategory = lvalue
#  680|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#  680|           Type = [LValueReferenceType] int &
#  680|           ValueCategory = prvalue
#  683| [TopLevelFunction] String& ReturnReference()
#  683|   <params>: 
#  685| [TopLevelFunction] void InitReference(int)
#  685|   <params>: 
#  685|     getParameter(0): [Parameter] x
#  685|         Type = [IntType] int
#  685|   getEntryPoint(): [BlockStmt] { ... }
#  686|     getStmt(0): [DeclStmt] declaration
#  686|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of r
#  686|           Type = [LValueReferenceType] int &
#  686|         getVariable().getInitializer(): [Initializer] initializer for r
#  686|           getExpr(): [VariableAccess] x
#  686|               Type = [IntType] int
#  686|               ValueCategory = lvalue
#  686|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#  686|               Type = [LValueReferenceType] int &
#  686|               ValueCategory = prvalue
#  687|     getStmt(1): [DeclStmt] declaration
#  687|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of r2
#  687|           Type = [LValueReferenceType] int &
#  687|         getVariable().getInitializer(): [Initializer] initializer for r2
#  687|           getExpr(): [VariableAccess] r
#  687|               Type = [LValueReferenceType] int &
#  687|               ValueCategory = prvalue(load)
#  687|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#  687|               Type = [LValueReferenceType] int &
#  687|               ValueCategory = prvalue
#  687|             getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#  687|                 Type = [IntType] int
#  687|                 ValueCategory = lvalue
#  688|     getStmt(2): [DeclStmt] declaration
#  688|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of r3
#  688|           Type = [LValueReferenceType] const String &
#  688|         getVariable().getInitializer(): [Initializer] initializer for r3
#  688|           getExpr(): [FunctionCall] call to ReturnReference
#  688|               Type = [LValueReferenceType] String &
#  688|               ValueCategory = prvalue
#  688|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#  688|               Type = [LValueReferenceType] const String &
#  688|               ValueCategory = prvalue
#  688|             getExpr(): [CStyleCast] (const String)...
#  688|                 Conversion = [GlvalueConversion] glvalue conversion
#  688|                 Type = [SpecifiedType] const String
#  688|                 ValueCategory = lvalue
#  688|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#  688|                   Type = [Struct] String
#  688|                   ValueCategory = lvalue
#  689|     getStmt(3): [ReturnStmt] return ...
#  691| [TopLevelFunction] void ArrayReferences()
#  691|   <params>: 
#  691|   getEntryPoint(): [BlockStmt] { ... }
#  692|     getStmt(0): [DeclStmt] declaration
#  692|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a
#  692|           Type = [ArrayType] int[10]
#  693|     getStmt(1): [DeclStmt] declaration
#  693|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of ra
#  693|           Type = [LValueReferenceType] int(&)[10]
#  693|         getVariable().getInitializer(): [Initializer] initializer for ra
#  693|           getExpr(): [VariableAccess] a
#  693|               Type = [ArrayType] int[10]
#  693|               ValueCategory = lvalue
#  693|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#  693|               Type = [LValueReferenceType] int(&)[10]
#  693|               ValueCategory = prvalue
#  694|     getStmt(2): [DeclStmt] declaration
#  694|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#  694|           Type = [IntType] int
#  694|         getVariable().getInitializer(): [Initializer] initializer for x
#  694|           getExpr(): [ArrayExpr] access to array
#  694|               Type = [IntType] int
#  694|               ValueCategory = prvalue(load)
#  694|             getArrayBase(): [VariableAccess] ra
#  694|                 Type = [LValueReferenceType] int(&)[10]
#  694|                 ValueCategory = prvalue(load)
#  694|             getArrayOffset(): [Literal] 5
#  694|                 Type = [IntType] int
#  694|                 Value = [Literal] 5
#  694|                 ValueCategory = prvalue
#  694|             getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  694|                 Type = [IntPointerType] int *
#  694|                 ValueCategory = prvalue
#  694|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#  694|                   Type = [ArrayType] int[10]
#  694|                   ValueCategory = lvalue
#  695|     getStmt(3): [ReturnStmt] return ...
#  697| [TopLevelFunction] void FunctionReferences()
#  697|   <params>: 
#  697|   getEntryPoint(): [BlockStmt] { ... }
#  698|     getStmt(0): [DeclStmt] declaration
#  698|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rfn
#  698|           Type = [FunctionReferenceType] ..(&)(..)
#  698|         getVariable().getInitializer(): [Initializer] initializer for rfn
#  698|           getExpr(): [FunctionAccess] FuncPtrTarget
#  698|               Type = [RoutineType] ..()(..)
#  698|               ValueCategory = lvalue
#  698|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#  698|               Type = [FunctionReferenceType] ..(&)(..)
#  698|               ValueCategory = prvalue
#  699|     getStmt(1): [DeclStmt] declaration
#  699|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pfn
#  699|           Type = [FunctionPointerType] ..(*)(..)
#  699|         getVariable().getInitializer(): [Initializer] initializer for pfn
#  699|           getExpr(): [VariableAccess] rfn
#  699|               Type = [FunctionReferenceType] ..(&)(..)
#  699|               ValueCategory = prvalue(load)
#  699|           getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  699|               Type = [FunctionPointerType] ..(*)(..)
#  699|               ValueCategory = prvalue(load)
#  700|     getStmt(2): [ExprStmt] ExprStmt
#  700|       getExpr(): [VariableCall] call to expression
#  700|           Type = [IntType] int
#  700|           ValueCategory = prvalue
#  700|         getExpr(): [VariableAccess] rfn
#  700|             Type = [FunctionReferenceType] ..(&)(..)
#  700|             ValueCategory = prvalue(load)
#  700|         getArgument(0): [Literal] 5
#  700|             Type = [IntType] int
#  700|             Value = [Literal] 5
#  700|             ValueCategory = prvalue
#  700|         getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  700|             Type = [FunctionPointerType] ..(*)(..)
#  700|             ValueCategory = prvalue(load)
#  701|     getStmt(3): [ReturnStmt] return ...
#  704| [TemplateFunction,TopLevelFunction] T min<T>(T, T)
#  704|   <params>: 
#  704|     getParameter(0): [Parameter] x
#  704|         Type = [TemplateParameter] T
#  704|     getParameter(1): [Parameter] y
#  704|         Type = [TemplateParameter] T
#  704|   getEntryPoint(): [BlockStmt] { ... }
#  705|     getStmt(0): [ReturnStmt] return ...
#  705|       getExpr(): [ConditionalExpr] ... ? ... : ...
#  705|           Type = [UnknownType] unknown
#  705|           ValueCategory = prvalue
#  705|         getCondition(): [LTExpr] ... < ...
#  705|             Type = [UnknownType] unknown
#  705|             ValueCategory = prvalue
#  705|           getLesserOperand(): [VariableAccess] x
#  705|               Type = [TemplateParameter] T
#  705|               ValueCategory = lvalue
#  705|           getGreaterOperand(): [VariableAccess] y
#  705|               Type = [TemplateParameter] T
#  705|               ValueCategory = lvalue
#  705|         getThen(): [VariableAccess] x
#  705|             Type = [TemplateParameter] T
#  705|             ValueCategory = lvalue
#  705|         getElse(): [VariableAccess] y
#  705|             Type = [TemplateParameter] T
#  705|             ValueCategory = lvalue
#  705|         getCondition().getFullyConverted(): [CStyleCast] (bool)...
#  705|             Conversion = [BoolConversion] conversion to bool
#  705|             Type = [BoolType] bool
#  705|             ValueCategory = prvalue
#  705|           getExpr(): [ParenthesisExpr] (...)
#  705|               Type = [UnknownType] unknown
#  705|               ValueCategory = prvalue
#  704| [FunctionTemplateInstantiation,TopLevelFunction] int min<int>(int, int)
#  704|   <params>: 
#  704|     getParameter(0): [Parameter] x
#  704|         Type = [IntType] int
#  704|     getParameter(1): [Parameter] y
#  704|         Type = [IntType] int
#  704|   getEntryPoint(): [BlockStmt] { ... }
#  705|     getStmt(0): [ReturnStmt] return ...
#  705|       getExpr(): [ConditionalExpr] ... ? ... : ...
#  705|           Type = [IntType] int
#  705|           ValueCategory = prvalue(load)
#  705|         getCondition(): [LTExpr] ... < ...
#  705|             Type = [BoolType] bool
#  705|             ValueCategory = prvalue
#  705|           getLesserOperand(): [VariableAccess] x
#  705|               Type = [IntType] int
#  705|               ValueCategory = prvalue(load)
#  705|           getGreaterOperand(): [VariableAccess] y
#  705|               Type = [IntType] int
#  705|               ValueCategory = prvalue(load)
#  705|         getThen(): [VariableAccess] x
#  705|             Type = [IntType] int
#  705|             ValueCategory = prvalue(load)
#  705|         getElse(): [VariableAccess] y
#  705|             Type = [IntType] int
#  705|             ValueCategory = prvalue(load)
#  705|         getCondition().getFullyConverted(): [ParenthesisExpr] (...)
#  705|             Type = [BoolType] bool
#  705|             ValueCategory = prvalue
#  708| [TopLevelFunction] int CallMin(int, int)
#  708|   <params>: 
#  708|     getParameter(0): [Parameter] x
#  708|         Type = [IntType] int
#  708|     getParameter(1): [Parameter] y
#  708|         Type = [IntType] int
#  708|   getEntryPoint(): [BlockStmt] { ... }
#  709|     getStmt(0): [ReturnStmt] return ...
#  709|       getExpr(): [FunctionCall] call to min
#  709|           Type = [IntType] int
#  709|           ValueCategory = prvalue
#  709|         getArgument(0): [VariableAccess] x
#  709|             Type = [IntType] int
#  709|             ValueCategory = prvalue(load)
#  709|         getArgument(1): [VariableAccess] y
#  709|             Type = [IntType] int
#  709|             ValueCategory = prvalue(load)
#  715| [MemberFunction,TemplateFunction] T Outer<T>::Func<U, V>(U, V)
#  715|   <params>: 
#  715|     getParameter(0): [Parameter] x
#  715|         Type = [TemplateParameter] U
#  715|     getParameter(1): [Parameter] y
#  715|         Type = [TemplateParameter] V
#  715|   getEntryPoint(): [BlockStmt] { ... }
#  716|     getStmt(0): [ReturnStmt] return ...
#  716|       getExpr(): [Literal] 0
#  716|           Type = [TemplateParameter] T
#  716|           Value = [Literal] 0
#  716|           ValueCategory = prvalue
#  716|       getExpr().getFullyConverted(): [TemporaryObjectExpr] temporary object
#  716|           Type = [TemplateParameter] T
#  716|           ValueCategory = prvalue(load)
#  715| [MemberFunction,TemplateFunction] long Outer<long>::Func<U, V>(U, V)
#  715|   <params>: 
#  715|     getParameter(0): [Parameter] x
#  715|         Type = [TemplateParameter] U
#  715|     getParameter(1): [Parameter] y
#  715|         Type = [TemplateParameter] V
#  715| [FunctionTemplateInstantiation,MemberFunction] long Outer<long>::Func<void*, char>(void*, char)
#  715|   <params>: 
#  715|     getParameter(0): [Parameter] x
#  715|         Type = [VoidPointerType] void *
#  715|     getParameter(1): [Parameter] y
#  715|         Type = [PlainCharType] char
#  715|   getEntryPoint(): [BlockStmt] { ... }
#  716|     getStmt(0): [ReturnStmt] return ...
#  716|       getExpr(): [Literal] 0
#  716|           Type = [LongType] long
#  716|           Value = [Literal] 0
#  716|           ValueCategory = prvalue
#  716|       getExpr().getFullyConverted(): [TemporaryObjectExpr] temporary object
#  716|           Type = [LongType] long
#  716|           ValueCategory = prvalue(load)
#  720| [TopLevelFunction] double CallNestedTemplateFunc()
#  720|   <params>: 
#  720|   getEntryPoint(): [BlockStmt] { ... }
#  721|     getStmt(0): [ReturnStmt] return ...
#  721|       getExpr(): [FunctionCall] call to Func
#  721|           Type = [LongType] long
#  721|           ValueCategory = prvalue
#  721|         getArgument(0): [Literal] 0
#  721|             Type = [NullPointerType] decltype(nullptr)
#  721|             Value = [Literal] 0
#  721|             ValueCategory = prvalue
#  721|         getArgument(1): [CharLiteral] 111
#  721|             Type = [PlainCharType] char
#  721|             Value = [CharLiteral] 111
#  721|             ValueCategory = prvalue
#  721|         getArgument(0).getFullyConverted(): [CStyleCast] (void *)...
#  721|             Conversion = [PointerConversion] pointer conversion
#  721|             Type = [VoidPointerType] void *
#  721|             Value = [CStyleCast] 0
#  721|             ValueCategory = prvalue
#  721|       getExpr().getFullyConverted(): [CStyleCast] (double)...
#  721|           Conversion = [IntegralToFloatingPointConversion] integral to floating point conversion
#  721|           Type = [DoubleType] double
#  721|           ValueCategory = prvalue
#  724| [TopLevelFunction] void TryCatch(bool)
#  724|   <params>: 
#  724|     getParameter(0): [Parameter] b
#  724|         Type = [BoolType] bool
#  724|   getEntryPoint(): [BlockStmt] { ... }
#  725|     getStmt(0): [TryStmt] try { ... }
#  725|       getStmt(): [BlockStmt] { ... }
#  726|         getStmt(0): [DeclStmt] declaration
#  726|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#  726|               Type = [IntType] int
#  726|             getVariable().getInitializer(): [Initializer] initializer for x
#  726|               getExpr(): [Literal] 5
#  726|                   Type = [IntType] int
#  726|                   Value = [Literal] 5
#  726|                   ValueCategory = prvalue
#  727|         getStmt(1): [IfStmt] if (...) ... 
#  727|           getCondition(): [VariableAccess] b
#  727|               Type = [BoolType] bool
#  727|               ValueCategory = prvalue(load)
#  727|           getThen(): [BlockStmt] { ... }
#  728|             getStmt(0): [ExprStmt] ExprStmt
#  728|               getExpr(): [ThrowExpr] throw ...
#  728|                   Type = [PointerType] const char *
#  728|                   ValueCategory = prvalue
#  728|                 getExpr(): string literal
#  728|                     Type = [ArrayType] const char[15]
#  728|                     Value = [StringLiteral] "string literal"
#  728|                     ValueCategory = lvalue
#  728|                 getExpr().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  728|                     Type = [PointerType] const char *
#  728|                     ValueCategory = prvalue
#  730|           getElse(): [IfStmt] if (...) ... 
#  730|             getCondition(): [LTExpr] ... < ...
#  730|                 Type = [BoolType] bool
#  730|                 ValueCategory = prvalue
#  730|               getLesserOperand(): [VariableAccess] x
#  730|                   Type = [IntType] int
#  730|                   ValueCategory = prvalue(load)
#  730|               getGreaterOperand(): [Literal] 2
#  730|                   Type = [IntType] int
#  730|                   Value = [Literal] 2
#  730|                   ValueCategory = prvalue
#  730|             getThen(): [BlockStmt] { ... }
#  731|               getStmt(0): [ExprStmt] ExprStmt
#  731|                 getExpr(): [AssignExpr] ... = ...
#  731|                     Type = [IntType] int
#  731|                     ValueCategory = lvalue
#  731|                   getLValue(): [VariableAccess] x
#  731|                       Type = [IntType] int
#  731|                       ValueCategory = lvalue
#  731|                   getRValue(): [ConditionalExpr] ... ? ... : ...
#  731|                       Type = [IntType] int
#  731|                       ValueCategory = prvalue
#  731|                     getCondition(): [VariableAccess] b
#  731|                         Type = [BoolType] bool
#  731|                         ValueCategory = prvalue(load)
#  731|                     getThen(): [Literal] 7
#  731|                         Type = [IntType] int
#  731|                         Value = [Literal] 7
#  731|                         ValueCategory = prvalue
#  731|                     getElse(): [ThrowExpr] throw ...
#  731|                         Type = [Struct] String
#  731|                         ValueCategory = prvalue
#  731|                       getExpr(): [ConstructorCall] call to String
#  731|                           Type = [VoidType] void
#  731|                           ValueCategory = prvalue
#  731|                         getArgument(0): String object
#  731|                             Type = [ArrayType] const char[14]
#  731|                             Value = [StringLiteral] "String object"
#  731|                             ValueCategory = lvalue
#  731|                         getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  731|                             Type = [PointerType] const char *
#  731|                             ValueCategory = prvalue
#  733|         getStmt(2): [ExprStmt] ExprStmt
#  733|           getExpr(): [AssignExpr] ... = ...
#  733|               Type = [IntType] int
#  733|               ValueCategory = lvalue
#  733|             getLValue(): [VariableAccess] x
#  733|                 Type = [IntType] int
#  733|                 ValueCategory = lvalue
#  733|             getRValue(): [Literal] 7
#  733|                 Type = [IntType] int
#  733|                 Value = [Literal] 7
#  733|                 ValueCategory = prvalue
#  735|       getChild(1): [Handler] <handler>
#  735|         getBlock(): [CatchBlock] { ... }
#  736|           getStmt(0): [ExprStmt] ExprStmt
#  736|             getExpr(): [ThrowExpr] throw ...
#  736|                 Type = [Struct] String
#  736|                 ValueCategory = prvalue
#  736|               getExpr(): [ConstructorCall] call to String
#  736|                   Type = [VoidType] void
#  736|                   ValueCategory = prvalue
#  736|                 getArgument(0): [VariableAccess] s
#  736|                     Type = [PointerType] const char *
#  736|                     ValueCategory = prvalue(load)
#  738|       getChild(2): [Handler] <handler>
#  738|         getBlock(): [CatchBlock] { ... }
#  740|       getChild(3): [Handler] <handler>
#  740|         getBlock(): [CatchAnyBlock] { ... }
#  741|           getStmt(0): [ExprStmt] ExprStmt
#  741|             getExpr(): [ReThrowExpr] re-throw exception 
#  741|                 Type = [VoidType] void
#  741|                 ValueCategory = prvalue
#  743|     getStmt(1): [ReturnStmt] return ...
#  745| [CopyAssignmentOperator] Base& Base::operator=(Base const&)
#  745|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Base &
#-----|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [ExprStmt] ExprStmt
#  745|       getExpr(): [FunctionCall] call to operator=
#  745|           Type = [LValueReferenceType] String &
#  745|           ValueCategory = prvalue
#  745|         getQualifier(): [AddressOfExpr] & ...
#  745|             Type = [PointerType] String *
#  745|             ValueCategory = prvalue
#  745|           getOperand(): [PointerFieldAccess] base_s
#  745|               Type = [Struct] String
#  745|               ValueCategory = lvalue
#  745|             getQualifier(): [ThisExpr] this
#  745|                 Type = [PointerType] Base *
#  745|                 ValueCategory = prvalue(load)
#  745|         getArgument(0): [ReferenceFieldAccess] base_s
#  745|             Type = [Struct] String
#  745|             ValueCategory = lvalue
#  745|           getQualifier(): [VariableAccess] (unnamed parameter 0)
#  745|               Type = [LValueReferenceType] const Base &
#  745|               ValueCategory = prvalue(load)
#-----|           getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|               Type = [SpecifiedType] const Base
#-----|               ValueCategory = lvalue
#-----|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|             Type = [LValueReferenceType] const String &
#-----|             ValueCategory = prvalue
#-----|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|           Type = [Struct] String
#-----|           ValueCategory = lvalue
#-----|     getStmt(1): [ReturnStmt] return ...
#-----|       getExpr(): [PointerDereferenceExpr] * ...
#-----|           Type = [Struct,VirtualBaseClass] Base
#-----|           ValueCategory = lvalue
#-----|         getOperand(): [ThisExpr] this
#-----|             Type = [PointerType] Base *
#-----|             ValueCategory = prvalue(load)
#-----|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|           Type = [LValueReferenceType] Base &
#-----|           ValueCategory = prvalue
#  745| [CopyConstructor] void Base::Base(Base const&)
#  745|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Base &
#  745|   <initializations>: 
#  745|     getInitializer(0): [ConstructorFieldInit] constructor init of field base_s
#  745|         Type = [Struct] String
#  745|         ValueCategory = prvalue
#  745|       getExpr(): [ConstructorCall] call to String
#  745|           Type = [VoidType] void
#  745|           ValueCategory = prvalue
#  745|   getEntryPoint(): [BlockStmt] { ... }
#  745|     getStmt(0): [ReturnStmt] return ...
#  748| [Constructor] void Base::Base()
#  748|   <params>: 
#  748|   <initializations>: 
#  748|     getInitializer(0): [ConstructorFieldInit] constructor init of field base_s
#  748|         Type = [Struct] String
#  748|         ValueCategory = prvalue
#  748|       getExpr(): [ConstructorCall] call to String
#  748|           Type = [VoidType] void
#  748|           ValueCategory = prvalue
#  748|   getEntryPoint(): [BlockStmt] { ... }
#  749|     getStmt(0): [ReturnStmt] return ...
#  750| [Destructor] void Base::~Base()
#  750|   <params>: 
#  750|   getEntryPoint(): [BlockStmt] { ... }
#  751|     getStmt(0): [ReturnStmt] return ...
#  750|   <destructions>: 
#  751|     getDestruction(0): [DestructorFieldDestruction] destructor field destruction of base_s
#  751|         Type = [Struct] String
#  751|         ValueCategory = prvalue
#  751|       getExpr(): [DestructorCall] call to ~String
#  751|           Type = [VoidType] void
#  751|           ValueCategory = prvalue
#  751|         getQualifier(): [ImplicitThisFieldAccess] base_s
#  751|             Type = [Struct] String
#  751|             ValueCategory = lvalue
#  754| [CopyAssignmentOperator] Middle& Middle::operator=(Middle const&)
#  754|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Middle &
#-----|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [ExprStmt] ExprStmt
#  754|       getExpr(): [FunctionCall] call to operator=
#  754|           Type = [LValueReferenceType] Base &
#  754|           ValueCategory = prvalue
#  754|         getQualifier(): [ThisExpr] this
#  754|             Type = [PointerType] Middle *
#  754|             ValueCategory = prvalue(load)
#  754|         getArgument(0): [PointerDereferenceExpr] * ...
#  754|             Type = [SpecifiedType] const Base
#  754|             ValueCategory = lvalue
#  754|           getOperand(): [AddressOfExpr] & ...
#  754|               Type = [PointerType] const Middle *
#  754|               ValueCategory = prvalue
#  754|             getOperand(): [VariableAccess] (unnamed parameter 0)
#  754|                 Type = [LValueReferenceType] const Middle &
#  754|                 ValueCategory = prvalue(load)
#-----|             getOperand().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                 Type = [SpecifiedType] const Middle
#-----|                 ValueCategory = lvalue
#-----|           getOperand().getFullyConverted(): [CStyleCast] (const Base *)...
#-----|               Conversion = [BaseClassConversion] base class conversion
#-----|               Type = [PointerType] const Base *
#-----|               ValueCategory = prvalue
#-----|         getQualifier().getFullyConverted(): [CStyleCast] (Base *)...
#-----|             Conversion = [BaseClassConversion] base class conversion
#-----|             Type = [PointerType] Base *
#-----|             ValueCategory = prvalue
#-----|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|             Type = [LValueReferenceType] const Base &
#-----|             ValueCategory = prvalue
#-----|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|           Type = [Struct,VirtualBaseClass] Base
#-----|           ValueCategory = lvalue
#-----|     getStmt(1): [ExprStmt] ExprStmt
#  754|       getExpr(): [FunctionCall] call to operator=
#  754|           Type = [LValueReferenceType] String &
#  754|           ValueCategory = prvalue
#  754|         getQualifier(): [AddressOfExpr] & ...
#  754|             Type = [PointerType] String *
#  754|             ValueCategory = prvalue
#  754|           getOperand(): [PointerFieldAccess] middle_s
#  754|               Type = [Struct] String
#  754|               ValueCategory = lvalue
#  754|             getQualifier(): [ThisExpr] this
#  754|                 Type = [PointerType] Middle *
#  754|                 ValueCategory = prvalue(load)
#  754|         getArgument(0): [ReferenceFieldAccess] middle_s
#  754|             Type = [Struct] String
#  754|             ValueCategory = lvalue
#  754|           getQualifier(): [VariableAccess] (unnamed parameter 0)
#  754|               Type = [LValueReferenceType] const Middle &
#  754|               ValueCategory = prvalue(load)
#-----|           getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|               Type = [SpecifiedType] const Middle
#-----|               ValueCategory = lvalue
#-----|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|             Type = [LValueReferenceType] const String &
#-----|             ValueCategory = prvalue
#-----|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|           Type = [Struct] String
#-----|           ValueCategory = lvalue
#-----|     getStmt(2): [ReturnStmt] return ...
#-----|       getExpr(): [PointerDereferenceExpr] * ...
#-----|           Type = [Struct] Middle
#-----|           ValueCategory = lvalue
#-----|         getOperand(): [ThisExpr] this
#-----|             Type = [PointerType] Middle *
#-----|             ValueCategory = prvalue(load)
#-----|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|           Type = [LValueReferenceType] Middle &
#-----|           ValueCategory = prvalue
#  754| [CopyConstructor] void Middle::Middle(Middle const&)
#  754|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Middle &
#  757| [Constructor] void Middle::Middle()
#  757|   <params>: 
#  757|   <initializations>: 
#  757|     getInitializer(0): [ConstructorDirectInit] call to Base
#  757|         Type = [VoidType] void
#  757|         ValueCategory = prvalue
#  757|     getInitializer(1): [ConstructorFieldInit] constructor init of field middle_s
#  757|         Type = [Struct] String
#  757|         ValueCategory = prvalue
#  757|       getExpr(): [ConstructorCall] call to String
#  757|           Type = [VoidType] void
#  757|           ValueCategory = prvalue
#  757|   getEntryPoint(): [BlockStmt] { ... }
#  758|     getStmt(0): [ReturnStmt] return ...
#  759| [Destructor] void Middle::~Middle()
#  759|   <params>: 
#  759|   getEntryPoint(): [BlockStmt] { ... }
#  760|     getStmt(0): [ReturnStmt] return ...
#  759|   <destructions>: 
#  760|     getDestruction(0): [DestructorFieldDestruction] destructor field destruction of middle_s
#  760|         Type = [Struct] String
#  760|         ValueCategory = prvalue
#  760|       getExpr(): [DestructorCall] call to ~String
#  760|           Type = [VoidType] void
#  760|           ValueCategory = prvalue
#  760|         getQualifier(): [ImplicitThisFieldAccess] middle_s
#  760|             Type = [Struct] String
#  760|             ValueCategory = lvalue
#  760|     getDestruction(1): [DestructorDirectDestruction] call to ~Base
#  760|         Type = [VoidType] void
#  760|         ValueCategory = prvalue
#  763| [CopyAssignmentOperator] Derived& Derived::operator=(Derived const&)
#  763|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Derived &
#-----|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [ExprStmt] ExprStmt
#  763|       getExpr(): [FunctionCall] call to operator=
#  763|           Type = [LValueReferenceType] Middle &
#  763|           ValueCategory = prvalue
#  763|         getQualifier(): [ThisExpr] this
#  763|             Type = [PointerType] Derived *
#  763|             ValueCategory = prvalue(load)
#  763|         getArgument(0): [PointerDereferenceExpr] * ...
#  763|             Type = [SpecifiedType] const Middle
#  763|             ValueCategory = lvalue
#  763|           getOperand(): [AddressOfExpr] & ...
#  763|               Type = [PointerType] const Derived *
#  763|               ValueCategory = prvalue
#  763|             getOperand(): [VariableAccess] (unnamed parameter 0)
#  763|                 Type = [LValueReferenceType] const Derived &
#  763|                 ValueCategory = prvalue(load)
#-----|             getOperand().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                 Type = [SpecifiedType] const Derived
#-----|                 ValueCategory = lvalue
#-----|           getOperand().getFullyConverted(): [CStyleCast] (const Middle *)...
#-----|               Conversion = [BaseClassConversion] base class conversion
#-----|               Type = [PointerType] const Middle *
#-----|               ValueCategory = prvalue
#-----|         getQualifier().getFullyConverted(): [CStyleCast] (Middle *)...
#-----|             Conversion = [BaseClassConversion] base class conversion
#-----|             Type = [PointerType] Middle *
#-----|             ValueCategory = prvalue
#-----|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|             Type = [LValueReferenceType] const Middle &
#-----|             ValueCategory = prvalue
#-----|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|           Type = [Struct] Middle
#-----|           ValueCategory = lvalue
#-----|     getStmt(1): [ExprStmt] ExprStmt
#  763|       getExpr(): [FunctionCall] call to operator=
#  763|           Type = [LValueReferenceType] String &
#  763|           ValueCategory = prvalue
#  763|         getQualifier(): [AddressOfExpr] & ...
#  763|             Type = [PointerType] String *
#  763|             ValueCategory = prvalue
#  763|           getOperand(): [PointerFieldAccess] derived_s
#  763|               Type = [Struct] String
#  763|               ValueCategory = lvalue
#  763|             getQualifier(): [ThisExpr] this
#  763|                 Type = [PointerType] Derived *
#  763|                 ValueCategory = prvalue(load)
#  763|         getArgument(0): [ReferenceFieldAccess] derived_s
#  763|             Type = [Struct] String
#  763|             ValueCategory = lvalue
#  763|           getQualifier(): [VariableAccess] (unnamed parameter 0)
#  763|               Type = [LValueReferenceType] const Derived &
#  763|               ValueCategory = prvalue(load)
#-----|           getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|               Type = [SpecifiedType] const Derived
#-----|               ValueCategory = lvalue
#-----|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|             Type = [LValueReferenceType] const String &
#-----|             ValueCategory = prvalue
#-----|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|           Type = [Struct] String
#-----|           ValueCategory = lvalue
#-----|     getStmt(2): [ReturnStmt] return ...
#-----|       getExpr(): [PointerDereferenceExpr] * ...
#-----|           Type = [Struct] Derived
#-----|           ValueCategory = lvalue
#-----|         getOperand(): [ThisExpr] this
#-----|             Type = [PointerType] Derived *
#-----|             ValueCategory = prvalue(load)
#-----|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|           Type = [LValueReferenceType] Derived &
#-----|           ValueCategory = prvalue
#  763| [CopyConstructor] void Derived::Derived(Derived const&)
#  763|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Derived &
#  766| [Constructor] void Derived::Derived()
#  766|   <params>: 
#  766|   <initializations>: 
#  766|     getInitializer(0): [ConstructorDirectInit] call to Middle
#  766|         Type = [VoidType] void
#  766|         ValueCategory = prvalue
#  766|     getInitializer(1): [ConstructorFieldInit] constructor init of field derived_s
#  766|         Type = [Struct] String
#  766|         ValueCategory = prvalue
#  766|       getExpr(): [ConstructorCall] call to String
#  766|           Type = [VoidType] void
#  766|           ValueCategory = prvalue
#  766|   getEntryPoint(): [BlockStmt] { ... }
#  767|     getStmt(0): [ReturnStmt] return ...
#  768| [Destructor] void Derived::~Derived()
#  768|   <params>: 
#  768|   getEntryPoint(): [BlockStmt] { ... }
#  769|     getStmt(0): [ReturnStmt] return ...
#  768|   <destructions>: 
#  769|     getDestruction(0): [DestructorFieldDestruction] destructor field destruction of derived_s
#  769|         Type = [Struct] String
#  769|         ValueCategory = prvalue
#  769|       getExpr(): [DestructorCall] call to ~String
#  769|           Type = [VoidType] void
#  769|           ValueCategory = prvalue
#  769|         getQualifier(): [ImplicitThisFieldAccess] derived_s
#  769|             Type = [Struct] String
#  769|             ValueCategory = lvalue
#  769|     getDestruction(1): [DestructorDirectDestruction] call to ~Middle
#  769|         Type = [VoidType] void
#  769|         ValueCategory = prvalue
#  772| [CopyAssignmentOperator] MiddleVB1& MiddleVB1::operator=(MiddleVB1 const&)
#  772|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const MiddleVB1 &
#  772| [CopyConstructor] void MiddleVB1::MiddleVB1(MiddleVB1 const&)
#  772|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const MiddleVB1 &
#  775| [Constructor] void MiddleVB1::MiddleVB1()
#  775|   <params>: 
#  775|   <initializations>: 
#  775|     getInitializer(0): [ConstructorVirtualInit] call to Base
#  775|         Type = [VoidType] void
#  775|         ValueCategory = prvalue
#  775|     getInitializer(1): [ConstructorFieldInit] constructor init of field middlevb1_s
#  775|         Type = [Struct] String
#  775|         ValueCategory = prvalue
#  775|       getExpr(): [ConstructorCall] call to String
#  775|           Type = [VoidType] void
#  775|           ValueCategory = prvalue
#  775|   getEntryPoint(): [BlockStmt] { ... }
#  776|     getStmt(0): [ReturnStmt] return ...
#  777| [Destructor] void MiddleVB1::~MiddleVB1()
#  777|   <params>: 
#  777|   getEntryPoint(): [BlockStmt] { ... }
#  778|     getStmt(0): [ReturnStmt] return ...
#  777|   <destructions>: 
#  778|     getDestruction(0): [DestructorFieldDestruction] destructor field destruction of middlevb1_s
#  778|         Type = [Struct] String
#  778|         ValueCategory = prvalue
#  778|       getExpr(): [DestructorCall] call to ~String
#  778|           Type = [VoidType] void
#  778|           ValueCategory = prvalue
#  778|         getQualifier(): [ImplicitThisFieldAccess] middlevb1_s
#  778|             Type = [Struct] String
#  778|             ValueCategory = lvalue
#  778|     getDestruction(1): [DestructorVirtualDestruction] call to ~Base
#  778|         Type = [VoidType] void
#  778|         ValueCategory = prvalue
#  781| [CopyAssignmentOperator] MiddleVB2& MiddleVB2::operator=(MiddleVB2 const&)
#  781|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const MiddleVB2 &
#  781| [CopyConstructor] void MiddleVB2::MiddleVB2(MiddleVB2 const&)
#  781|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const MiddleVB2 &
#  784| [Constructor] void MiddleVB2::MiddleVB2()
#  784|   <params>: 
#  784|   <initializations>: 
#  784|     getInitializer(0): [ConstructorVirtualInit] call to Base
#  784|         Type = [VoidType] void
#  784|         ValueCategory = prvalue
#  784|     getInitializer(1): [ConstructorFieldInit] constructor init of field middlevb2_s
#  784|         Type = [Struct] String
#  784|         ValueCategory = prvalue
#  784|       getExpr(): [ConstructorCall] call to String
#  784|           Type = [VoidType] void
#  784|           ValueCategory = prvalue
#  784|   getEntryPoint(): [BlockStmt] { ... }
#  785|     getStmt(0): [ReturnStmt] return ...
#  786| [Destructor] void MiddleVB2::~MiddleVB2()
#  786|   <params>: 
#  786|   getEntryPoint(): [BlockStmt] { ... }
#  787|     getStmt(0): [ReturnStmt] return ...
#  786|   <destructions>: 
#  787|     getDestruction(0): [DestructorFieldDestruction] destructor field destruction of middlevb2_s
#  787|         Type = [Struct] String
#  787|         ValueCategory = prvalue
#  787|       getExpr(): [DestructorCall] call to ~String
#  787|           Type = [VoidType] void
#  787|           ValueCategory = prvalue
#  787|         getQualifier(): [ImplicitThisFieldAccess] middlevb2_s
#  787|             Type = [Struct] String
#  787|             ValueCategory = lvalue
#  787|     getDestruction(1): [DestructorVirtualDestruction] call to ~Base
#  787|         Type = [VoidType] void
#  787|         ValueCategory = prvalue
#  790| [CopyAssignmentOperator] DerivedVB& DerivedVB::operator=(DerivedVB const&)
#  790|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const DerivedVB &
#  790| [CopyConstructor] void DerivedVB::DerivedVB(DerivedVB const&)
#  790|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const DerivedVB &
#  793| [Constructor] void DerivedVB::DerivedVB()
#  793|   <params>: 
#  793|   <initializations>: 
#  793|     getInitializer(0): [ConstructorVirtualInit] call to Base
#  793|         Type = [VoidType] void
#  793|         ValueCategory = prvalue
#  793|     getInitializer(1): [ConstructorDirectInit] call to MiddleVB1
#  793|         Type = [VoidType] void
#  793|         ValueCategory = prvalue
#  793|     getInitializer(2): [ConstructorDirectInit] call to MiddleVB2
#  793|         Type = [VoidType] void
#  793|         ValueCategory = prvalue
#  793|     getInitializer(3): [ConstructorFieldInit] constructor init of field derivedvb_s
#  793|         Type = [Struct] String
#  793|         ValueCategory = prvalue
#  793|       getExpr(): [ConstructorCall] call to String
#  793|           Type = [VoidType] void
#  793|           ValueCategory = prvalue
#  793|   getEntryPoint(): [BlockStmt] { ... }
#  794|     getStmt(0): [ReturnStmt] return ...
#  795| [Destructor] void DerivedVB::~DerivedVB()
#  795|   <params>: 
#  795|   getEntryPoint(): [BlockStmt] { ... }
#  796|     getStmt(0): [ReturnStmt] return ...
#  795|   <destructions>: 
#  796|     getDestruction(0): [DestructorFieldDestruction] destructor field destruction of derivedvb_s
#  796|         Type = [Struct] String
#  796|         ValueCategory = prvalue
#  796|       getExpr(): [DestructorCall] call to ~String
#  796|           Type = [VoidType] void
#  796|           ValueCategory = prvalue
#  796|         getQualifier(): [ImplicitThisFieldAccess] derivedvb_s
#  796|             Type = [Struct] String
#  796|             ValueCategory = lvalue
#  796|     getDestruction(1): [DestructorDirectDestruction] call to ~MiddleVB2
#  796|         Type = [VoidType] void
#  796|         ValueCategory = prvalue
#  796|     getDestruction(2): [DestructorDirectDestruction] call to ~MiddleVB1
#  796|         Type = [VoidType] void
#  796|         ValueCategory = prvalue
#  796|     getDestruction(3): [DestructorVirtualDestruction] call to ~Base
#  796|         Type = [VoidType] void
#  796|         ValueCategory = prvalue
#  799| [TopLevelFunction] void HierarchyConversions()
#  799|   <params>: 
#  799|   getEntryPoint(): [BlockStmt] { ... }
#  800|     getStmt(0): [DeclStmt] declaration
#  800|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
#  800|           Type = [Struct,VirtualBaseClass] Base
#  800|         getVariable().getInitializer(): [Initializer] initializer for b
#  800|           getExpr(): [ConstructorCall] call to Base
#  800|               Type = [VoidType] void
#  800|               ValueCategory = prvalue
#  801|     getStmt(1): [DeclStmt] declaration
#  801|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of m
#  801|           Type = [Struct] Middle
#  801|         getVariable().getInitializer(): [Initializer] initializer for m
#  801|           getExpr(): [ConstructorCall] call to Middle
#  801|               Type = [VoidType] void
#  801|               ValueCategory = prvalue
#  802|     getStmt(2): [DeclStmt] declaration
#  802|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
#  802|           Type = [Struct] Derived
#  802|         getVariable().getInitializer(): [Initializer] initializer for d
#  802|           getExpr(): [ConstructorCall] call to Derived
#  802|               Type = [VoidType] void
#  802|               ValueCategory = prvalue
#  804|     getStmt(3): [DeclStmt] declaration
#  804|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pb
#  804|           Type = [PointerType] Base *
#  804|         getVariable().getInitializer(): [Initializer] initializer for pb
#  804|           getExpr(): [AddressOfExpr] & ...
#  804|               Type = [PointerType] Base *
#  804|               ValueCategory = prvalue
#  804|             getOperand(): [VariableAccess] b
#  804|                 Type = [Struct,VirtualBaseClass] Base
#  804|                 ValueCategory = lvalue
#  805|     getStmt(4): [DeclStmt] declaration
#  805|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pm
#  805|           Type = [PointerType] Middle *
#  805|         getVariable().getInitializer(): [Initializer] initializer for pm
#  805|           getExpr(): [AddressOfExpr] & ...
#  805|               Type = [PointerType] Middle *
#  805|               ValueCategory = prvalue
#  805|             getOperand(): [VariableAccess] m
#  805|                 Type = [Struct] Middle
#  805|                 ValueCategory = lvalue
#  806|     getStmt(5): [DeclStmt] declaration
#  806|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pd
#  806|           Type = [PointerType] Derived *
#  806|         getVariable().getInitializer(): [Initializer] initializer for pd
#  806|           getExpr(): [AddressOfExpr] & ...
#  806|               Type = [PointerType] Derived *
#  806|               ValueCategory = prvalue
#  806|             getOperand(): [VariableAccess] d
#  806|                 Type = [Struct] Derived
#  806|                 ValueCategory = lvalue
#  808|     getStmt(6): [ExprStmt] ExprStmt
#  808|       getExpr(): [FunctionCall] call to operator=
#  808|           Type = [LValueReferenceType] Base &
#  808|           ValueCategory = prvalue
#  808|         getQualifier(): [VariableAccess] b
#  808|             Type = [Struct,VirtualBaseClass] Base
#  808|             ValueCategory = lvalue
#  808|         getArgument(0): [VariableAccess] m
#  808|             Type = [Struct] Middle
#  808|             ValueCategory = lvalue
#  808|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  808|             Type = [LValueReferenceType] const Base &
#  808|             ValueCategory = prvalue
#  808|           getExpr(): [CStyleCast] (const Base)...
#  808|               Conversion = [BaseClassConversion] base class conversion
#  808|               Type = [SpecifiedType] const Base
#  808|               ValueCategory = lvalue
#  808|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  808|           Type = [Struct,VirtualBaseClass] Base
#  808|           ValueCategory = lvalue
#  809|     getStmt(7): [ExprStmt] ExprStmt
#  809|       getExpr(): [FunctionCall] call to operator=
#  809|           Type = [LValueReferenceType] Base &
#  809|           ValueCategory = prvalue
#  809|         getQualifier(): [VariableAccess] b
#  809|             Type = [Struct,VirtualBaseClass] Base
#  809|             ValueCategory = lvalue
#  809|         getArgument(0): [ConstructorCall] call to Base
#  809|             Type = [VoidType] void
#  809|             ValueCategory = prvalue
#  809|           getArgument(0): [VariableAccess] m
#  809|               Type = [Struct] Middle
#  809|               ValueCategory = lvalue
#  809|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  809|               Type = [LValueReferenceType] const Base &
#  809|               ValueCategory = prvalue
#  809|             getExpr(): [CStyleCast] (const Base)...
#  809|                 Conversion = [BaseClassConversion] base class conversion
#  809|                 Type = [SpecifiedType] const Base
#  809|                 ValueCategory = lvalue
#  809|         getImplicitDestructorCall(0): [DestructorCall] call to ~Base
#  809|             Type = [VoidType] void
#  809|             ValueCategory = prvalue
#  809|           getQualifier(): [ReuseExpr] reuse of temporary object
#  809|               Type = [Struct,VirtualBaseClass] Base
#  809|               ValueCategory = xvalue
#  809|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  809|             Type = [LValueReferenceType] const Base &
#  809|             ValueCategory = prvalue
#  809|           getExpr(): [CStyleCast] (const Base)...
#  809|               Conversion = [GlvalueConversion] glvalue conversion
#  809|               Type = [SpecifiedType] const Base
#  809|               ValueCategory = lvalue
#  809|             getExpr(): [TemporaryObjectExpr] temporary object
#  809|                 Type = [Struct,VirtualBaseClass] Base
#  809|                 ValueCategory = lvalue
#  809|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  809|           Type = [Struct,VirtualBaseClass] Base
#  809|           ValueCategory = lvalue
#  810|     getStmt(8): [ExprStmt] ExprStmt
#  810|       getExpr(): [FunctionCall] call to operator=
#  810|           Type = [LValueReferenceType] Base &
#  810|           ValueCategory = prvalue
#  810|         getQualifier(): [VariableAccess] b
#  810|             Type = [Struct,VirtualBaseClass] Base
#  810|             ValueCategory = lvalue
#  810|         getArgument(0): [ConstructorCall] call to Base
#  810|             Type = [VoidType] void
#  810|             ValueCategory = prvalue
#  810|           getArgument(0): [VariableAccess] m
#  810|               Type = [Struct] Middle
#  810|               ValueCategory = lvalue
#  810|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  810|               Type = [LValueReferenceType] const Base &
#  810|               ValueCategory = prvalue
#  810|             getExpr(): [CStyleCast] (const Base)...
#  810|                 Conversion = [BaseClassConversion] base class conversion
#  810|                 Type = [SpecifiedType] const Base
#  810|                 ValueCategory = lvalue
#  810|         getImplicitDestructorCall(0): [DestructorCall] call to ~Base
#  810|             Type = [VoidType] void
#  810|             ValueCategory = prvalue
#  810|           getQualifier(): [ReuseExpr] reuse of temporary object
#  810|               Type = [Struct,VirtualBaseClass] Base
#  810|               ValueCategory = xvalue
#  810|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  810|             Type = [LValueReferenceType] const Base &
#  810|             ValueCategory = prvalue
#  810|           getExpr(): [CStyleCast] (const Base)...
#  810|               Conversion = [GlvalueConversion] glvalue conversion
#  810|               Type = [SpecifiedType] const Base
#  810|               ValueCategory = lvalue
#  810|             getExpr(): [TemporaryObjectExpr] temporary object
#  810|                 Type = [Struct,VirtualBaseClass] Base
#  810|                 ValueCategory = lvalue
#  810|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  810|           Type = [Struct,VirtualBaseClass] Base
#  810|           ValueCategory = lvalue
#  811|     getStmt(9): [ExprStmt] ExprStmt
#  811|       getExpr(): [AssignExpr] ... = ...
#  811|           Type = [PointerType] Base *
#  811|           ValueCategory = lvalue
#  811|         getLValue(): [VariableAccess] pb
#  811|             Type = [PointerType] Base *
#  811|             ValueCategory = lvalue
#  811|         getRValue(): [VariableAccess] pm
#  811|             Type = [PointerType] Middle *
#  811|             ValueCategory = prvalue(load)
#  811|         getRValue().getFullyConverted(): [CStyleCast] (Base *)...
#  811|             Conversion = [BaseClassConversion] base class conversion
#  811|             Type = [PointerType] Base *
#  811|             ValueCategory = prvalue
#  812|     getStmt(10): [ExprStmt] ExprStmt
#  812|       getExpr(): [AssignExpr] ... = ...
#  812|           Type = [PointerType] Base *
#  812|           ValueCategory = lvalue
#  812|         getLValue(): [VariableAccess] pb
#  812|             Type = [PointerType] Base *
#  812|             ValueCategory = lvalue
#  812|         getRValue(): [VariableAccess] pm
#  812|             Type = [PointerType] Middle *
#  812|             ValueCategory = prvalue(load)
#  812|         getRValue().getFullyConverted(): [CStyleCast] (Base *)...
#  812|             Conversion = [BaseClassConversion] base class conversion
#  812|             Type = [PointerType] Base *
#  812|             ValueCategory = prvalue
#  813|     getStmt(11): [ExprStmt] ExprStmt
#  813|       getExpr(): [AssignExpr] ... = ...
#  813|           Type = [PointerType] Base *
#  813|           ValueCategory = lvalue
#  813|         getLValue(): [VariableAccess] pb
#  813|             Type = [PointerType] Base *
#  813|             ValueCategory = lvalue
#  813|         getRValue(): [VariableAccess] pm
#  813|             Type = [PointerType] Middle *
#  813|             ValueCategory = prvalue(load)
#  813|         getRValue().getFullyConverted(): [StaticCast] static_cast<Base *>...
#  813|             Conversion = [BaseClassConversion] base class conversion
#  813|             Type = [PointerType] Base *
#  813|             ValueCategory = prvalue
#  814|     getStmt(12): [ExprStmt] ExprStmt
#  814|       getExpr(): [AssignExpr] ... = ...
#  814|           Type = [PointerType] Base *
#  814|           ValueCategory = lvalue
#  814|         getLValue(): [VariableAccess] pb
#  814|             Type = [PointerType] Base *
#  814|             ValueCategory = lvalue
#  814|         getRValue(): [VariableAccess] pm
#  814|             Type = [PointerType] Middle *
#  814|             ValueCategory = prvalue(load)
#  814|         getRValue().getFullyConverted(): [ReinterpretCast] reinterpret_cast<Base *>...
#  814|             Conversion = [PointerConversion] pointer conversion
#  814|             Type = [PointerType] Base *
#  814|             ValueCategory = prvalue
#  816|     getStmt(13): [ExprStmt] ExprStmt
#  816|       getExpr(): [FunctionCall] call to operator=
#  816|           Type = [LValueReferenceType] Middle &
#  816|           ValueCategory = prvalue
#  816|         getQualifier(): [VariableAccess] m
#  816|             Type = [Struct] Middle
#  816|             ValueCategory = lvalue
#  816|         getArgument(0): [VariableAccess] b
#  816|             Type = [Struct,VirtualBaseClass] Base
#  816|             ValueCategory = lvalue
#  816|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  816|             Type = [LValueReferenceType] const Middle &
#  816|             ValueCategory = prvalue
#  816|           getExpr(): [CStyleCast] (const Middle)...
#  816|               Conversion = [GlvalueConversion] glvalue conversion
#  816|               Type = [SpecifiedType] const Middle
#  816|               ValueCategory = lvalue
#  816|             getExpr(): [CStyleCast] (Middle)...
#  816|                 Conversion = [DerivedClassConversion] derived class conversion
#  816|                 Type = [Struct] Middle
#  816|                 ValueCategory = lvalue
#  816|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  816|           Type = [Struct] Middle
#  816|           ValueCategory = lvalue
#  817|     getStmt(14): [ExprStmt] ExprStmt
#  817|       getExpr(): [FunctionCall] call to operator=
#  817|           Type = [LValueReferenceType] Middle &
#  817|           ValueCategory = prvalue
#  817|         getQualifier(): [VariableAccess] m
#  817|             Type = [Struct] Middle
#  817|             ValueCategory = lvalue
#  817|         getArgument(0): [VariableAccess] b
#  817|             Type = [Struct,VirtualBaseClass] Base
#  817|             ValueCategory = lvalue
#  817|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  817|             Type = [LValueReferenceType] const Middle &
#  817|             ValueCategory = prvalue
#  817|           getExpr(): [CStyleCast] (const Middle)...
#  817|               Conversion = [GlvalueConversion] glvalue conversion
#  817|               Type = [SpecifiedType] const Middle
#  817|               ValueCategory = lvalue
#  817|             getExpr(): [StaticCast] static_cast<Middle>...
#  817|                 Conversion = [DerivedClassConversion] derived class conversion
#  817|                 Type = [Struct] Middle
#  817|                 ValueCategory = lvalue
#  817|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  817|           Type = [Struct] Middle
#  817|           ValueCategory = lvalue
#  818|     getStmt(15): [ExprStmt] ExprStmt
#  818|       getExpr(): [AssignExpr] ... = ...
#  818|           Type = [PointerType] Middle *
#  818|           ValueCategory = lvalue
#  818|         getLValue(): [VariableAccess] pm
#  818|             Type = [PointerType] Middle *
#  818|             ValueCategory = lvalue
#  818|         getRValue(): [VariableAccess] pb
#  818|             Type = [PointerType] Base *
#  818|             ValueCategory = prvalue(load)
#  818|         getRValue().getFullyConverted(): [CStyleCast] (Middle *)...
#  818|             Conversion = [DerivedClassConversion] derived class conversion
#  818|             Type = [PointerType] Middle *
#  818|             ValueCategory = prvalue
#  819|     getStmt(16): [ExprStmt] ExprStmt
#  819|       getExpr(): [AssignExpr] ... = ...
#  819|           Type = [PointerType] Middle *
#  819|           ValueCategory = lvalue
#  819|         getLValue(): [VariableAccess] pm
#  819|             Type = [PointerType] Middle *
#  819|             ValueCategory = lvalue
#  819|         getRValue(): [VariableAccess] pb
#  819|             Type = [PointerType] Base *
#  819|             ValueCategory = prvalue(load)
#  819|         getRValue().getFullyConverted(): [StaticCast] static_cast<Middle *>...
#  819|             Conversion = [DerivedClassConversion] derived class conversion
#  819|             Type = [PointerType] Middle *
#  819|             ValueCategory = prvalue
#  820|     getStmt(17): [ExprStmt] ExprStmt
#  820|       getExpr(): [AssignExpr] ... = ...
#  820|           Type = [PointerType] Middle *
#  820|           ValueCategory = lvalue
#  820|         getLValue(): [VariableAccess] pm
#  820|             Type = [PointerType] Middle *
#  820|             ValueCategory = lvalue
#  820|         getRValue(): [VariableAccess] pb
#  820|             Type = [PointerType] Base *
#  820|             ValueCategory = prvalue(load)
#  820|         getRValue().getFullyConverted(): [ReinterpretCast] reinterpret_cast<Middle *>...
#  820|             Conversion = [PointerConversion] pointer conversion
#  820|             Type = [PointerType] Middle *
#  820|             ValueCategory = prvalue
#  822|     getStmt(18): [ExprStmt] ExprStmt
#  822|       getExpr(): [FunctionCall] call to operator=
#  822|           Type = [LValueReferenceType] Base &
#  822|           ValueCategory = prvalue
#  822|         getQualifier(): [VariableAccess] b
#  822|             Type = [Struct,VirtualBaseClass] Base
#  822|             ValueCategory = lvalue
#  822|         getArgument(0): [VariableAccess] d
#  822|             Type = [Struct] Derived
#  822|             ValueCategory = lvalue
#  822|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  822|             Type = [LValueReferenceType] const Base &
#  822|             ValueCategory = prvalue
#  822|           getExpr(): [CStyleCast] (const Base)...
#  822|               Conversion = [BaseClassConversion] base class conversion
#  822|               Type = [SpecifiedType] const Base
#  822|               ValueCategory = lvalue
#  822|             getExpr(): [CStyleCast] (const Middle)...
#  822|                 Conversion = [BaseClassConversion] base class conversion
#  822|                 Type = [SpecifiedType] const Middle
#  822|                 ValueCategory = lvalue
#  822|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  822|           Type = [Struct,VirtualBaseClass] Base
#  822|           ValueCategory = lvalue
#  823|     getStmt(19): [ExprStmt] ExprStmt
#  823|       getExpr(): [FunctionCall] call to operator=
#  823|           Type = [LValueReferenceType] Base &
#  823|           ValueCategory = prvalue
#  823|         getQualifier(): [VariableAccess] b
#  823|             Type = [Struct,VirtualBaseClass] Base
#  823|             ValueCategory = lvalue
#  823|         getArgument(0): [ConstructorCall] call to Base
#  823|             Type = [VoidType] void
#  823|             ValueCategory = prvalue
#  823|           getArgument(0): [VariableAccess] d
#  823|               Type = [Struct] Derived
#  823|               ValueCategory = lvalue
#  823|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  823|               Type = [LValueReferenceType] const Base &
#  823|               ValueCategory = prvalue
#  823|             getExpr(): [CStyleCast] (const Base)...
#  823|                 Conversion = [BaseClassConversion] base class conversion
#  823|                 Type = [SpecifiedType] const Base
#  823|                 ValueCategory = lvalue
#  823|               getExpr(): [CStyleCast] (const Middle)...
#  823|                   Conversion = [BaseClassConversion] base class conversion
#  823|                   Type = [SpecifiedType] const Middle
#  823|                   ValueCategory = lvalue
#  823|         getImplicitDestructorCall(0): [DestructorCall] call to ~Base
#  823|             Type = [VoidType] void
#  823|             ValueCategory = prvalue
#  823|           getQualifier(): [ReuseExpr] reuse of temporary object
#  823|               Type = [Struct,VirtualBaseClass] Base
#  823|               ValueCategory = xvalue
#  823|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  823|             Type = [LValueReferenceType] const Base &
#  823|             ValueCategory = prvalue
#  823|           getExpr(): [CStyleCast] (const Base)...
#  823|               Conversion = [GlvalueConversion] glvalue conversion
#  823|               Type = [SpecifiedType] const Base
#  823|               ValueCategory = lvalue
#  823|             getExpr(): [TemporaryObjectExpr] temporary object
#  823|                 Type = [Struct,VirtualBaseClass] Base
#  823|                 ValueCategory = lvalue
#  823|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  823|           Type = [Struct,VirtualBaseClass] Base
#  823|           ValueCategory = lvalue
#  824|     getStmt(20): [ExprStmt] ExprStmt
#  824|       getExpr(): [FunctionCall] call to operator=
#  824|           Type = [LValueReferenceType] Base &
#  824|           ValueCategory = prvalue
#  824|         getQualifier(): [VariableAccess] b
#  824|             Type = [Struct,VirtualBaseClass] Base
#  824|             ValueCategory = lvalue
#  824|         getArgument(0): [ConstructorCall] call to Base
#  824|             Type = [VoidType] void
#  824|             ValueCategory = prvalue
#  824|           getArgument(0): [VariableAccess] d
#  824|               Type = [Struct] Derived
#  824|               ValueCategory = lvalue
#  824|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  824|               Type = [LValueReferenceType] const Base &
#  824|               ValueCategory = prvalue
#  824|             getExpr(): [CStyleCast] (const Base)...
#  824|                 Conversion = [BaseClassConversion] base class conversion
#  824|                 Type = [SpecifiedType] const Base
#  824|                 ValueCategory = lvalue
#  824|               getExpr(): [CStyleCast] (const Middle)...
#  824|                   Conversion = [BaseClassConversion] base class conversion
#  824|                   Type = [SpecifiedType] const Middle
#  824|                   ValueCategory = lvalue
#  824|         getImplicitDestructorCall(0): [DestructorCall] call to ~Base
#  824|             Type = [VoidType] void
#  824|             ValueCategory = prvalue
#  824|           getQualifier(): [ReuseExpr] reuse of temporary object
#  824|               Type = [Struct,VirtualBaseClass] Base
#  824|               ValueCategory = xvalue
#  824|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  824|             Type = [LValueReferenceType] const Base &
#  824|             ValueCategory = prvalue
#  824|           getExpr(): [CStyleCast] (const Base)...
#  824|               Conversion = [GlvalueConversion] glvalue conversion
#  824|               Type = [SpecifiedType] const Base
#  824|               ValueCategory = lvalue
#  824|             getExpr(): [TemporaryObjectExpr] temporary object
#  824|                 Type = [Struct,VirtualBaseClass] Base
#  824|                 ValueCategory = lvalue
#  824|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  824|           Type = [Struct,VirtualBaseClass] Base
#  824|           ValueCategory = lvalue
#  825|     getStmt(21): [ExprStmt] ExprStmt
#  825|       getExpr(): [AssignExpr] ... = ...
#  825|           Type = [PointerType] Base *
#  825|           ValueCategory = lvalue
#  825|         getLValue(): [VariableAccess] pb
#  825|             Type = [PointerType] Base *
#  825|             ValueCategory = lvalue
#  825|         getRValue(): [VariableAccess] pd
#  825|             Type = [PointerType] Derived *
#  825|             ValueCategory = prvalue(load)
#  825|         getRValue().getFullyConverted(): [CStyleCast] (Base *)...
#  825|             Conversion = [BaseClassConversion] base class conversion
#  825|             Type = [PointerType] Base *
#  825|             ValueCategory = prvalue
#  825|           getExpr(): [CStyleCast] (Middle *)...
#  825|               Conversion = [BaseClassConversion] base class conversion
#  825|               Type = [PointerType] Middle *
#  825|               ValueCategory = prvalue
#  826|     getStmt(22): [ExprStmt] ExprStmt
#  826|       getExpr(): [AssignExpr] ... = ...
#  826|           Type = [PointerType] Base *
#  826|           ValueCategory = lvalue
#  826|         getLValue(): [VariableAccess] pb
#  826|             Type = [PointerType] Base *
#  826|             ValueCategory = lvalue
#  826|         getRValue(): [VariableAccess] pd
#  826|             Type = [PointerType] Derived *
#  826|             ValueCategory = prvalue(load)
#  826|         getRValue().getFullyConverted(): [CStyleCast] (Base *)...
#  826|             Conversion = [BaseClassConversion] base class conversion
#  826|             Type = [PointerType] Base *
#  826|             ValueCategory = prvalue
#  826|           getExpr(): [CStyleCast] (Middle *)...
#  826|               Conversion = [BaseClassConversion] base class conversion
#  826|               Type = [PointerType] Middle *
#  826|               ValueCategory = prvalue
#  827|     getStmt(23): [ExprStmt] ExprStmt
#  827|       getExpr(): [AssignExpr] ... = ...
#  827|           Type = [PointerType] Base *
#  827|           ValueCategory = lvalue
#  827|         getLValue(): [VariableAccess] pb
#  827|             Type = [PointerType] Base *
#  827|             ValueCategory = lvalue
#  827|         getRValue(): [VariableAccess] pd
#  827|             Type = [PointerType] Derived *
#  827|             ValueCategory = prvalue(load)
#  827|         getRValue().getFullyConverted(): [StaticCast] static_cast<Base *>...
#  827|             Conversion = [BaseClassConversion] base class conversion
#  827|             Type = [PointerType] Base *
#  827|             ValueCategory = prvalue
#  827|           getExpr(): [CStyleCast] (Middle *)...
#  827|               Conversion = [BaseClassConversion] base class conversion
#  827|               Type = [PointerType] Middle *
#  827|               ValueCategory = prvalue
#  828|     getStmt(24): [ExprStmt] ExprStmt
#  828|       getExpr(): [AssignExpr] ... = ...
#  828|           Type = [PointerType] Base *
#  828|           ValueCategory = lvalue
#  828|         getLValue(): [VariableAccess] pb
#  828|             Type = [PointerType] Base *
#  828|             ValueCategory = lvalue
#  828|         getRValue(): [VariableAccess] pd
#  828|             Type = [PointerType] Derived *
#  828|             ValueCategory = prvalue(load)
#  828|         getRValue().getFullyConverted(): [ReinterpretCast] reinterpret_cast<Base *>...
#  828|             Conversion = [PointerConversion] pointer conversion
#  828|             Type = [PointerType] Base *
#  828|             ValueCategory = prvalue
#  830|     getStmt(25): [ExprStmt] ExprStmt
#  830|       getExpr(): [FunctionCall] call to operator=
#  830|           Type = [LValueReferenceType] Derived &
#  830|           ValueCategory = prvalue
#  830|         getQualifier(): [VariableAccess] d
#  830|             Type = [Struct] Derived
#  830|             ValueCategory = lvalue
#  830|         getArgument(0): [VariableAccess] b
#  830|             Type = [Struct,VirtualBaseClass] Base
#  830|             ValueCategory = lvalue
#  830|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  830|             Type = [LValueReferenceType] const Derived &
#  830|             ValueCategory = prvalue
#  830|           getExpr(): [CStyleCast] (const Derived)...
#  830|               Conversion = [GlvalueConversion] glvalue conversion
#  830|               Type = [SpecifiedType] const Derived
#  830|               ValueCategory = lvalue
#  830|             getExpr(): [CStyleCast] (Derived)...
#  830|                 Conversion = [DerivedClassConversion] derived class conversion
#  830|                 Type = [Struct] Derived
#  830|                 ValueCategory = lvalue
#  830|               getExpr(): [CStyleCast] (Middle)...
#  830|                   Conversion = [DerivedClassConversion] derived class conversion
#  830|                   Type = [Struct] Middle
#  830|                   ValueCategory = lvalue
#  830|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  830|           Type = [Struct] Derived
#  830|           ValueCategory = lvalue
#  831|     getStmt(26): [ExprStmt] ExprStmt
#  831|       getExpr(): [FunctionCall] call to operator=
#  831|           Type = [LValueReferenceType] Derived &
#  831|           ValueCategory = prvalue
#  831|         getQualifier(): [VariableAccess] d
#  831|             Type = [Struct] Derived
#  831|             ValueCategory = lvalue
#  831|         getArgument(0): [VariableAccess] b
#  831|             Type = [Struct,VirtualBaseClass] Base
#  831|             ValueCategory = lvalue
#  831|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#  831|             Type = [LValueReferenceType] const Derived &
#  831|             ValueCategory = prvalue
#  831|           getExpr(): [CStyleCast] (const Derived)...
#  831|               Conversion = [GlvalueConversion] glvalue conversion
#  831|               Type = [SpecifiedType] const Derived
#  831|               ValueCategory = lvalue
#  831|             getExpr(): [StaticCast] static_cast<Derived>...
#  831|                 Conversion = [DerivedClassConversion] derived class conversion
#  831|                 Type = [Struct] Derived
#  831|                 ValueCategory = lvalue
#  831|               getExpr(): [CStyleCast] (Middle)...
#  831|                   Conversion = [DerivedClassConversion] derived class conversion
#  831|                   Type = [Struct] Middle
#  831|                   ValueCategory = lvalue
#  831|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#  831|           Type = [Struct] Derived
#  831|           ValueCategory = lvalue
#  832|     getStmt(27): [ExprStmt] ExprStmt
#  832|       getExpr(): [AssignExpr] ... = ...
#  832|           Type = [PointerType] Derived *
#  832|           ValueCategory = lvalue
#  832|         getLValue(): [VariableAccess] pd
#  832|             Type = [PointerType] Derived *
#  832|             ValueCategory = lvalue
#  832|         getRValue(): [VariableAccess] pb
#  832|             Type = [PointerType] Base *
#  832|             ValueCategory = prvalue(load)
#  832|         getRValue().getFullyConverted(): [CStyleCast] (Derived *)...
#  832|             Conversion = [DerivedClassConversion] derived class conversion
#  832|             Type = [PointerType] Derived *
#  832|             ValueCategory = prvalue
#  832|           getExpr(): [CStyleCast] (Middle *)...
#  832|               Conversion = [DerivedClassConversion] derived class conversion
#  832|               Type = [PointerType] Middle *
#  832|               ValueCategory = prvalue
#  833|     getStmt(28): [ExprStmt] ExprStmt
#  833|       getExpr(): [AssignExpr] ... = ...
#  833|           Type = [PointerType] Derived *
#  833|           ValueCategory = lvalue
#  833|         getLValue(): [VariableAccess] pd
#  833|             Type = [PointerType] Derived *
#  833|             ValueCategory = lvalue
#  833|         getRValue(): [VariableAccess] pb
#  833|             Type = [PointerType] Base *
#  833|             ValueCategory = prvalue(load)
#  833|         getRValue().getFullyConverted(): [StaticCast] static_cast<Derived *>...
#  833|             Conversion = [DerivedClassConversion] derived class conversion
#  833|             Type = [PointerType] Derived *
#  833|             ValueCategory = prvalue
#  833|           getExpr(): [CStyleCast] (Middle *)...
#  833|               Conversion = [DerivedClassConversion] derived class conversion
#  833|               Type = [PointerType] Middle *
#  833|               ValueCategory = prvalue
#  834|     getStmt(29): [ExprStmt] ExprStmt
#  834|       getExpr(): [AssignExpr] ... = ...
#  834|           Type = [PointerType] Derived *
#  834|           ValueCategory = lvalue
#  834|         getLValue(): [VariableAccess] pd
#  834|             Type = [PointerType] Derived *
#  834|             ValueCategory = lvalue
#  834|         getRValue(): [VariableAccess] pb
#  834|             Type = [PointerType] Base *
#  834|             ValueCategory = prvalue(load)
#  834|         getRValue().getFullyConverted(): [ReinterpretCast] reinterpret_cast<Derived *>...
#  834|             Conversion = [PointerConversion] pointer conversion
#  834|             Type = [PointerType] Derived *
#  834|             ValueCategory = prvalue
#  836|     getStmt(30): [DeclStmt] declaration
#  836|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pmv
#  836|           Type = [PointerType] MiddleVB1 *
#  836|         getVariable().getInitializer(): [Initializer] initializer for pmv
#  836|           getExpr(): [Literal] 0
#  836|               Type = [NullPointerType] decltype(nullptr)
#  836|               Value = [Literal] 0
#  836|               ValueCategory = prvalue
#  836|           getExpr().getFullyConverted(): [CStyleCast] (MiddleVB1 *)...
#  836|               Conversion = [PointerConversion] pointer conversion
#  836|               Type = [PointerType] MiddleVB1 *
#  836|               Value = [CStyleCast] 0
#  836|               ValueCategory = prvalue
#  837|     getStmt(31): [DeclStmt] declaration
#  837|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pdv
#  837|           Type = [PointerType] DerivedVB *
#  837|         getVariable().getInitializer(): [Initializer] initializer for pdv
#  837|           getExpr(): [Literal] 0
#  837|               Type = [NullPointerType] decltype(nullptr)
#  837|               Value = [Literal] 0
#  837|               ValueCategory = prvalue
#  837|           getExpr().getFullyConverted(): [CStyleCast] (DerivedVB *)...
#  837|               Conversion = [PointerConversion] pointer conversion
#  837|               Type = [PointerType] DerivedVB *
#  837|               Value = [CStyleCast] 0
#  837|               ValueCategory = prvalue
#  838|     getStmt(32): [ExprStmt] ExprStmt
#  838|       getExpr(): [AssignExpr] ... = ...
#  838|           Type = [PointerType] Base *
#  838|           ValueCategory = lvalue
#  838|         getLValue(): [VariableAccess] pb
#  838|             Type = [PointerType] Base *
#  838|             ValueCategory = lvalue
#  838|         getRValue(): [VariableAccess] pmv
#  838|             Type = [PointerType] MiddleVB1 *
#  838|             ValueCategory = prvalue(load)
#  838|         getRValue().getFullyConverted(): [CStyleCast] (Base *)...
#  838|             Conversion = [BaseClassConversion] base class conversion
#  838|             Type = [PointerType] Base *
#  838|             ValueCategory = prvalue
#  839|     getStmt(33): [ExprStmt] ExprStmt
#  839|       getExpr(): [AssignExpr] ... = ...
#  839|           Type = [PointerType] Base *
#  839|           ValueCategory = lvalue
#  839|         getLValue(): [VariableAccess] pb
#  839|             Type = [PointerType] Base *
#  839|             ValueCategory = lvalue
#  839|         getRValue(): [VariableAccess] pdv
#  839|             Type = [PointerType] DerivedVB *
#  839|             ValueCategory = prvalue(load)
#  839|         getRValue().getFullyConverted(): [CStyleCast] (Base *)...
#  839|             Conversion = [BaseClassConversion] base class conversion
#  839|             Type = [PointerType] Base *
#  839|             ValueCategory = prvalue
#  840|     getStmt(34): [ReturnStmt] return ...
#  840|       getImplicitDestructorCall(0): [DestructorCall] call to ~Derived
#  840|           Type = [VoidType] void
#  840|           ValueCategory = prvalue
#  840|         getQualifier(): [VariableAccess] d
#  840|             Type = [Struct] Derived
#  840|             ValueCategory = lvalue
#  840|       getImplicitDestructorCall(1): [DestructorCall] call to ~Middle
#  840|           Type = [VoidType] void
#  840|           ValueCategory = prvalue
#  840|         getQualifier(): [VariableAccess] m
#  840|             Type = [Struct] Middle
#  840|             ValueCategory = lvalue
#  840|       getImplicitDestructorCall(2): [DestructorCall] call to ~Base
#  840|           Type = [VoidType] void
#  840|           ValueCategory = prvalue
#  840|         getQualifier(): [VariableAccess] b
#  840|             Type = [Struct,VirtualBaseClass] Base
#  840|             ValueCategory = lvalue
#  842| [CopyAssignmentOperator] PolymorphicBase& PolymorphicBase::operator=(PolymorphicBase const&)
#  842|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const PolymorphicBase &
#  842| [Constructor] void PolymorphicBase::PolymorphicBase()
#  842|   <params>: 
#  842|   <initializations>: 
#  842|   getEntryPoint(): [BlockStmt] { ... }
#  842|     getStmt(0): [ReturnStmt] return ...
#  842| [CopyConstructor] void PolymorphicBase::PolymorphicBase(PolymorphicBase const&)
#  842|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const PolymorphicBase &
#  843| [Destructor,VirtualFunction] void PolymorphicBase::~PolymorphicBase()
#  843|   <params>: 
#  846| [CopyAssignmentOperator] PolymorphicDerived& PolymorphicDerived::operator=(PolymorphicDerived const&)
#  846|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const PolymorphicDerived &
#  846| [MoveAssignmentOperator] PolymorphicDerived& PolymorphicDerived::operator=(PolymorphicDerived&&)
#  846|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] PolymorphicDerived &&
#  846| [Constructor] void PolymorphicDerived::PolymorphicDerived()
#  846|   <params>: 
#  846|   <initializations>: 
#  846|     getInitializer(0): [ConstructorDirectInit] call to PolymorphicBase
#  846|         Type = [VoidType] void
#  846|         ValueCategory = prvalue
#  846|   getEntryPoint(): [BlockStmt] { ... }
#  846|     getStmt(0): [ReturnStmt] return ...
#  846| [CopyConstructor] void PolymorphicDerived::PolymorphicDerived(PolymorphicDerived const&)
#  846|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const PolymorphicDerived &
#  846| [MoveConstructor] void PolymorphicDerived::PolymorphicDerived(PolymorphicDerived&&)
#  846|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] PolymorphicDerived &&
#  846| [Destructor,VirtualFunction] void PolymorphicDerived::~PolymorphicDerived()
#  846|   <params>: 
#-----|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [ReturnStmt] return ...
#  846|   <destructions>: 
#  846|     getDestruction(0): [DestructorDirectDestruction] call to ~PolymorphicBase
#  846|         Type = [VoidType] void
#  846|         ValueCategory = prvalue
#  849| [TopLevelFunction] void DynamicCast()
#  849|   <params>: 
#  849|   getEntryPoint(): [BlockStmt] { ... }
#  850|     getStmt(0): [DeclStmt] declaration
#  850|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
#  850|           Type = [Struct] PolymorphicBase
#  850|         getVariable().getInitializer(): [Initializer] initializer for b
#  850|           getExpr(): [ConstructorCall] call to PolymorphicBase
#  850|               Type = [VoidType] void
#  850|               ValueCategory = prvalue
#  851|     getStmt(1): [DeclStmt] declaration
#  851|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
#  851|           Type = [Struct] PolymorphicDerived
#  851|         getVariable().getInitializer(): [Initializer] initializer for d
#  851|           getExpr(): [ConstructorCall] call to PolymorphicDerived
#  851|               Type = [VoidType] void
#  851|               ValueCategory = prvalue
#  853|     getStmt(2): [DeclStmt] declaration
#  853|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pb
#  853|           Type = [PointerType] PolymorphicBase *
#  853|         getVariable().getInitializer(): [Initializer] initializer for pb
#  853|           getExpr(): [AddressOfExpr] & ...
#  853|               Type = [PointerType] PolymorphicBase *
#  853|               ValueCategory = prvalue
#  853|             getOperand(): [VariableAccess] b
#  853|                 Type = [Struct] PolymorphicBase
#  853|                 ValueCategory = lvalue
#  854|     getStmt(3): [DeclStmt] declaration
#  854|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pd
#  854|           Type = [PointerType] PolymorphicDerived *
#  854|         getVariable().getInitializer(): [Initializer] initializer for pd
#  854|           getExpr(): [AddressOfExpr] & ...
#  854|               Type = [PointerType] PolymorphicDerived *
#  854|               ValueCategory = prvalue
#  854|             getOperand(): [VariableAccess] d
#  854|                 Type = [Struct] PolymorphicDerived
#  854|                 ValueCategory = lvalue
#  857|     getStmt(4): [ExprStmt] ExprStmt
#  857|       getExpr(): [AssignExpr] ... = ...
#  857|           Type = [PointerType] PolymorphicBase *
#  857|           ValueCategory = lvalue
#  857|         getLValue(): [VariableAccess] pb
#  857|             Type = [PointerType] PolymorphicBase *
#  857|             ValueCategory = lvalue
#  857|         getRValue(): [VariableAccess] pd
#  857|             Type = [PointerType] PolymorphicDerived *
#  857|             ValueCategory = prvalue(load)
#  857|         getRValue().getFullyConverted(): [DynamicCast] dynamic_cast<PolymorphicBase *>...
#  857|             Conversion = [DynamicCast] dynamic_cast
#  857|             Type = [PointerType] PolymorphicBase *
#  857|             ValueCategory = prvalue
#  858|     getStmt(5): [DeclStmt] declaration
#  858|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rb
#  858|           Type = [LValueReferenceType] PolymorphicBase &
#  858|         getVariable().getInitializer(): [Initializer] initializer for rb
#  858|           getExpr(): [VariableAccess] d
#  858|               Type = [Struct] PolymorphicDerived
#  858|               ValueCategory = lvalue
#  858|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#  858|               Type = [LValueReferenceType] PolymorphicBase &
#  858|               ValueCategory = prvalue
#  858|             getExpr(): [DynamicCast] dynamic_cast<PolymorphicBase>...
#  858|                 Conversion = [DynamicCast] dynamic_cast
#  858|                 Type = [Struct] PolymorphicBase
#  858|                 ValueCategory = lvalue
#  860|     getStmt(6): [ExprStmt] ExprStmt
#  860|       getExpr(): [AssignExpr] ... = ...
#  860|           Type = [PointerType] PolymorphicDerived *
#  860|           ValueCategory = lvalue
#  860|         getLValue(): [VariableAccess] pd
#  860|             Type = [PointerType] PolymorphicDerived *
#  860|             ValueCategory = lvalue
#  860|         getRValue(): [VariableAccess] pb
#  860|             Type = [PointerType] PolymorphicBase *
#  860|             ValueCategory = prvalue(load)
#  860|         getRValue().getFullyConverted(): [DynamicCast] dynamic_cast<PolymorphicDerived *>...
#  860|             Conversion = [DynamicCast] dynamic_cast
#  860|             Type = [PointerType] PolymorphicDerived *
#  860|             ValueCategory = prvalue
#  861|     getStmt(7): [DeclStmt] declaration
#  861|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rd
#  861|           Type = [LValueReferenceType] PolymorphicDerived &
#  861|         getVariable().getInitializer(): [Initializer] initializer for rd
#  861|           getExpr(): [VariableAccess] b
#  861|               Type = [Struct] PolymorphicBase
#  861|               ValueCategory = lvalue
#  861|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#  861|               Type = [LValueReferenceType] PolymorphicDerived &
#  861|               ValueCategory = prvalue
#  861|             getExpr(): [DynamicCast] dynamic_cast<PolymorphicDerived>...
#  861|                 Conversion = [DynamicCast] dynamic_cast
#  861|                 Type = [Struct] PolymorphicDerived
#  861|                 ValueCategory = lvalue
#  863|     getStmt(8): [DeclStmt] declaration
#  863|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pv
#  863|           Type = [VoidPointerType] void *
#  863|         getVariable().getInitializer(): [Initializer] initializer for pv
#  863|           getExpr(): [VariableAccess] pb
#  863|               Type = [PointerType] PolymorphicBase *
#  863|               ValueCategory = prvalue(load)
#  863|           getExpr().getFullyConverted(): [DynamicCast] dynamic_cast<void *>...
#  863|               Conversion = [DynamicCast] dynamic_cast
#  863|               Type = [VoidPointerType] void *
#  863|               ValueCategory = prvalue
#  864|     getStmt(9): [DeclStmt] declaration
#  864|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pcv
#  864|           Type = [PointerType] const void *
#  864|         getVariable().getInitializer(): [Initializer] initializer for pcv
#  864|           getExpr(): [VariableAccess] pd
#  864|               Type = [PointerType] PolymorphicDerived *
#  864|               ValueCategory = prvalue(load)
#  864|           getExpr().getFullyConverted(): [DynamicCast] dynamic_cast<const void *>...
#  864|               Conversion = [DynamicCast] dynamic_cast
#  864|               Type = [PointerType] const void *
#  864|               ValueCategory = prvalue
#  865|     getStmt(10): [ReturnStmt] return ...
#  865|       getImplicitDestructorCall(0): [DestructorCall] call to ~PolymorphicDerived
#  865|           Type = [VoidType] void
#  865|           ValueCategory = prvalue
#  865|         getQualifier(): [VariableAccess] d
#  865|             Type = [Struct] PolymorphicDerived
#  865|             ValueCategory = lvalue
#  865|       getImplicitDestructorCall(1): [DestructorCall] call to ~PolymorphicBase
#  865|           Type = [VoidType] void
#  865|           ValueCategory = prvalue
#  865|         getQualifier(): [VariableAccess] b
#  865|             Type = [Struct] PolymorphicBase
#  865|             ValueCategory = lvalue
#  867| [Constructor] void String::String()
#  867|   <params>: 
#  867|   <initializations>: 
#  868|     getInitializer(0): [ConstructorDelegationInit] call to String
#  868|         Type = [VoidType] void
#  868|         ValueCategory = prvalue
#  868|       getArgument(0): 
#  868|           Type = [ArrayType] const char[1]
#  868|           Value = [StringLiteral] ""
#  868|           ValueCategory = lvalue
#  868|       getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  868|           Type = [PointerType] const char *
#  868|           ValueCategory = prvalue
#  868|   getEntryPoint(): [BlockStmt] { ... }
#  869|     getStmt(0): [ReturnStmt] return ...
#  871| [TopLevelFunction] void ArrayConversions()
#  871|   <params>: 
#  871|   getEntryPoint(): [BlockStmt] { ... }
#  872|     getStmt(0): [DeclStmt] declaration
#  872|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a
#  872|           Type = [ArrayType] char[5]
#  873|     getStmt(1): [DeclStmt] declaration
#  873|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of p
#  873|           Type = [PointerType] const char *
#  873|         getVariable().getInitializer(): [Initializer] initializer for p
#  873|           getExpr(): [VariableAccess] a
#  873|               Type = [ArrayType] char[5]
#  873|               ValueCategory = lvalue
#  873|           getExpr().getFullyConverted(): [CStyleCast] (const char *)...
#  873|               Conversion = [PointerConversion] pointer conversion
#  873|               Type = [PointerType] const char *
#  873|               ValueCategory = prvalue
#  873|             getExpr(): [ArrayToPointerConversion] array to pointer conversion
#  873|                 Type = [CharPointerType] char *
#  873|                 ValueCategory = prvalue
#  874|     getStmt(2): [ExprStmt] ExprStmt
#  874|       getExpr(): [AssignExpr] ... = ...
#  874|           Type = [PointerType] const char *
#  874|           ValueCategory = lvalue
#  874|         getLValue(): [VariableAccess] p
#  874|             Type = [PointerType] const char *
#  874|             ValueCategory = lvalue
#  874|         getRValue(): test
#  874|             Type = [ArrayType] const char[5]
#  874|             Value = [StringLiteral] "test"
#  874|             ValueCategory = lvalue
#  874|         getRValue().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  874|             Type = [PointerType] const char *
#  874|             ValueCategory = prvalue
#  875|     getStmt(3): [ExprStmt] ExprStmt
#  875|       getExpr(): [AssignExpr] ... = ...
#  875|           Type = [PointerType] const char *
#  875|           ValueCategory = lvalue
#  875|         getLValue(): [VariableAccess] p
#  875|             Type = [PointerType] const char *
#  875|             ValueCategory = lvalue
#  875|         getRValue(): [AddressOfExpr] & ...
#  875|             Type = [CharPointerType] char *
#  875|             ValueCategory = prvalue
#  875|           getOperand(): [ArrayExpr] access to array
#  875|               Type = [PlainCharType] char
#  875|               ValueCategory = lvalue
#  875|             getArrayBase(): [VariableAccess] a
#  875|                 Type = [ArrayType] char[5]
#  875|                 ValueCategory = lvalue
#  875|             getArrayOffset(): [Literal] 0
#  875|                 Type = [IntType] int
#  875|                 Value = [Literal] 0
#  875|                 ValueCategory = prvalue
#  875|             getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  875|                 Type = [CharPointerType] char *
#  875|                 ValueCategory = prvalue
#  875|         getRValue().getFullyConverted(): [CStyleCast] (const char *)...
#  875|             Conversion = [PointerConversion] pointer conversion
#  875|             Type = [PointerType] const char *
#  875|             ValueCategory = prvalue
#  876|     getStmt(4): [ExprStmt] ExprStmt
#  876|       getExpr(): [AssignExpr] ... = ...
#  876|           Type = [PointerType] const char *
#  876|           ValueCategory = lvalue
#  876|         getLValue(): [VariableAccess] p
#  876|             Type = [PointerType] const char *
#  876|             ValueCategory = lvalue
#  876|         getRValue(): [AddressOfExpr] & ...
#  876|             Type = [PointerType] const char *
#  876|             ValueCategory = prvalue
#  876|           getOperand(): [ArrayExpr] access to array
#  876|               Type = [SpecifiedType] const char
#  876|               ValueCategory = lvalue
#  876|             getArrayBase(): test
#  876|                 Type = [ArrayType] const char[5]
#  876|                 Value = [StringLiteral] "test"
#  876|                 ValueCategory = lvalue
#  876|             getArrayOffset(): [Literal] 0
#  876|                 Type = [IntType] int
#  876|                 Value = [Literal] 0
#  876|                 ValueCategory = prvalue
#  876|             getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  876|                 Type = [PointerType] const char *
#  876|                 ValueCategory = prvalue
#  877|     getStmt(5): [DeclStmt] declaration
#  877|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of ra
#  877|           Type = [LValueReferenceType] char(&)[5]
#  877|         getVariable().getInitializer(): [Initializer] initializer for ra
#  877|           getExpr(): [VariableAccess] a
#  877|               Type = [ArrayType] char[5]
#  877|               ValueCategory = lvalue
#  877|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#  877|               Type = [LValueReferenceType] char(&)[5]
#  877|               ValueCategory = prvalue
#  878|     getStmt(6): [DeclStmt] declaration
#  878|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rs
#  878|           Type = [LValueReferenceType] const char(&)[5]
#  878|         getVariable().getInitializer(): [Initializer] initializer for rs
#  878|           getExpr(): test
#  878|               Type = [ArrayType] const char[5]
#  878|               Value = [StringLiteral] "test"
#  878|               ValueCategory = lvalue
#  878|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#  878|               Type = [LValueReferenceType] const char(&)[5]
#  878|               ValueCategory = prvalue
#  879|     getStmt(7): [DeclStmt] declaration
#  879|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pa
#  879|           Type = [PointerType] const char(*)[5]
#  879|         getVariable().getInitializer(): [Initializer] initializer for pa
#  879|           getExpr(): [AddressOfExpr] & ...
#  879|               Type = [PointerType] char(*)[5]
#  879|               ValueCategory = prvalue
#  879|             getOperand(): [VariableAccess] a
#  879|                 Type = [ArrayType] char[5]
#  879|                 ValueCategory = lvalue
#  879|           getExpr().getFullyConverted(): [CStyleCast] (const char(*)[5])...
#  879|               Conversion = [PointerConversion] pointer conversion
#  879|               Type = [PointerType] const char(*)[5]
#  879|               ValueCategory = prvalue
#  880|     getStmt(8): [ExprStmt] ExprStmt
#  880|       getExpr(): [AssignExpr] ... = ...
#  880|           Type = [PointerType] const char(*)[5]
#  880|           ValueCategory = lvalue
#  880|         getLValue(): [VariableAccess] pa
#  880|             Type = [PointerType] const char(*)[5]
#  880|             ValueCategory = lvalue
#  880|         getRValue(): [AddressOfExpr] & ...
#  880|             Type = [PointerType] const char(*)[5]
#  880|             ValueCategory = prvalue
#  880|           getOperand(): test
#  880|               Type = [ArrayType] const char[5]
#  880|               Value = [StringLiteral] "test"
#  880|               ValueCategory = lvalue
#  881|     getStmt(9): [ReturnStmt] return ...
#  883| [TopLevelFunction] void FuncPtrConversions(int(*)(int), void*)
#  883|   <params>: 
#  883|     getParameter(0): [Parameter] pfn
#  883|         Type = [FunctionPointerType] ..(*)(..)
#  883|     getParameter(1): [Parameter] p
#  883|         Type = [VoidPointerType] void *
#  883|   getEntryPoint(): [BlockStmt] { ... }
#  884|     getStmt(0): [ExprStmt] ExprStmt
#  884|       getExpr(): [AssignExpr] ... = ...
#  884|           Type = [VoidPointerType] void *
#  884|           ValueCategory = lvalue
#  884|         getLValue(): [VariableAccess] p
#  884|             Type = [VoidPointerType] void *
#  884|             ValueCategory = lvalue
#  884|         getRValue(): [VariableAccess] pfn
#  884|             Type = [FunctionPointerType] ..(*)(..)
#  884|             ValueCategory = prvalue(load)
#  884|         getRValue().getFullyConverted(): [CStyleCast] (void *)...
#  884|             Conversion = [PointerConversion] pointer conversion
#  884|             Type = [VoidPointerType] void *
#  884|             ValueCategory = prvalue
#  885|     getStmt(1): [ExprStmt] ExprStmt
#  885|       getExpr(): [AssignExpr] ... = ...
#  885|           Type = [FunctionPointerType] ..(*)(..)
#  885|           ValueCategory = lvalue
#  885|         getLValue(): [VariableAccess] pfn
#  885|             Type = [FunctionPointerType] ..(*)(..)
#  885|             ValueCategory = lvalue
#  885|         getRValue(): [VariableAccess] p
#  885|             Type = [VoidPointerType] void *
#  885|             ValueCategory = prvalue(load)
#  885|         getRValue().getFullyConverted(): [CStyleCast] (..(*)(..))...
#  885|             Conversion = [PointerConversion] pointer conversion
#  885|             Type = [FunctionPointerType] ..(*)(..)
#  885|             ValueCategory = prvalue
#  886|     getStmt(2): [ReturnStmt] return ...
#  888| [TopLevelFunction] void VAListUsage(int, __va_list_tag[1])
#  888|   <params>: 
#  888|     getParameter(0): [Parameter] x
#  888|         Type = [IntType] int
#  888|     getParameter(1): [Parameter] args
#  888|         Type = [ArrayType] __va_list_tag[1]
#  888|   getEntryPoint(): [BlockStmt] { ... }
#  889|     getStmt(0): [DeclStmt] declaration
#  889|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of args2
#  889|           Type = [ArrayType] __va_list_tag[1]
#  890|     getStmt(1): [ExprStmt] ExprStmt
#  890|       getExpr(): [BuiltInVarArgCopy] __builtin_va_copy
#  890|           Type = [VoidType] void
#  890|           ValueCategory = prvalue
#  890|         getDestinationVAList(): [VariableAccess] args2
#  890|             Type = [ArrayType] __va_list_tag[1]
#  890|             ValueCategory = lvalue
#  890|         getSourceVAList(): [VariableAccess] args
#  890|             Type = [PointerType] __va_list_tag *
#  890|             ValueCategory = prvalue(load)
#  890|         getDestinationVAList().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  890|             Type = [PointerType] __va_list_tag *
#  890|             ValueCategory = prvalue
#  891|     getStmt(2): [DeclStmt] declaration
#  891|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
#  891|           Type = [DoubleType] double
#  891|         getVariable().getInitializer(): [Initializer] initializer for d
#  891|           getExpr(): [BuiltInVarArg] __builtin_va_arg
#  891|               Type = [DoubleType] double
#  891|               ValueCategory = prvalue(load)
#  891|             getVAList(): [VariableAccess] args
#  891|                 Type = [PointerType] __va_list_tag *
#  891|                 ValueCategory = prvalue(load)
#  892|     getStmt(3): [DeclStmt] declaration
#  892|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of f
#  892|           Type = [FloatType] float
#  892|         getVariable().getInitializer(): [Initializer] initializer for f
#  892|           getExpr(): [BuiltInVarArg] __builtin_va_arg
#  892|               Type = [IntType] int
#  892|               ValueCategory = prvalue(load)
#  892|             getVAList(): [VariableAccess] args
#  892|                 Type = [PointerType] __va_list_tag *
#  892|                 ValueCategory = prvalue(load)
#  892|           getExpr().getFullyConverted(): [CStyleCast] (float)...
#  892|               Conversion = [IntegralToFloatingPointConversion] integral to floating point conversion
#  892|               Type = [FloatType] float
#  892|               ValueCategory = prvalue
#  893|     getStmt(4): [ExprStmt] ExprStmt
#  893|       getExpr(): [BuiltInVarArgsEnd] __builtin_va_end
#  893|           Type = [VoidType] void
#  893|           ValueCategory = prvalue
#  893|         getVAList(): [VariableAccess] args2
#  893|             Type = [ArrayType] __va_list_tag[1]
#  893|             ValueCategory = lvalue
#  893|         getVAList().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  893|             Type = [PointerType] __va_list_tag *
#  893|             ValueCategory = prvalue
#  894|     getStmt(5): [ReturnStmt] return ...
#  896| [TopLevelFunction] void VarArgUsage(int)
#  896|   <params>: 
#  896|     getParameter(0): [Parameter] x
#  896|         Type = [IntType] int
#  896|   getEntryPoint(): [BlockStmt] { ... }
#  897|     getStmt(0): [DeclStmt] declaration
#  897|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of args
#  897|           Type = [ArrayType] __va_list_tag[1]
#  899|     getStmt(1): [ExprStmt] ExprStmt
#  899|       getExpr(): [BuiltInVarArgsStart] __builtin_va_start
#  899|           Type = [VoidType] void
#  899|           ValueCategory = prvalue
#  899|         getVAList(): [VariableAccess] args
#  899|             Type = [ArrayType] __va_list_tag[1]
#  899|             ValueCategory = lvalue
#  899|         getLastNamedParameter(): [VariableAccess] x
#  899|             Type = [IntType] int
#  899|             ValueCategory = lvalue
#  899|         getVAList().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  899|             Type = [PointerType] __va_list_tag *
#  899|             ValueCategory = prvalue
#  900|     getStmt(2): [DeclStmt] declaration
#  900|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of args2
#  900|           Type = [ArrayType] __va_list_tag[1]
#  901|     getStmt(3): [ExprStmt] ExprStmt
#  901|       getExpr(): [BuiltInVarArgCopy] __builtin_va_copy
#  901|           Type = [VoidType] void
#  901|           ValueCategory = prvalue
#  901|         getDestinationVAList(): [VariableAccess] args2
#  901|             Type = [ArrayType] __va_list_tag[1]
#  901|             ValueCategory = lvalue
#  901|         getSourceVAList(): [VariableAccess] args
#  901|             Type = [ArrayType] __va_list_tag[1]
#  901|             ValueCategory = lvalue
#  901|         getDestinationVAList().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  901|             Type = [PointerType] __va_list_tag *
#  901|             ValueCategory = prvalue
#  901|         getSourceVAList().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  901|             Type = [PointerType] __va_list_tag *
#  901|             ValueCategory = prvalue
#  902|     getStmt(4): [DeclStmt] declaration
#  902|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
#  902|           Type = [DoubleType] double
#  902|         getVariable().getInitializer(): [Initializer] initializer for d
#  902|           getExpr(): [BuiltInVarArg] __builtin_va_arg
#  902|               Type = [DoubleType] double
#  902|               ValueCategory = prvalue(load)
#  902|             getVAList(): [VariableAccess] args
#  902|                 Type = [ArrayType] __va_list_tag[1]
#  902|                 ValueCategory = lvalue
#  902|             getVAList().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  902|                 Type = [PointerType] __va_list_tag *
#  902|                 ValueCategory = prvalue
#  903|     getStmt(5): [DeclStmt] declaration
#  903|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of f
#  903|           Type = [FloatType] float
#  903|         getVariable().getInitializer(): [Initializer] initializer for f
#  903|           getExpr(): [BuiltInVarArg] __builtin_va_arg
#  903|               Type = [IntType] int
#  903|               ValueCategory = prvalue(load)
#  903|             getVAList(): [VariableAccess] args
#  903|                 Type = [ArrayType] __va_list_tag[1]
#  903|                 ValueCategory = lvalue
#  903|             getVAList().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  903|                 Type = [PointerType] __va_list_tag *
#  903|                 ValueCategory = prvalue
#  903|           getExpr().getFullyConverted(): [CStyleCast] (float)...
#  903|               Conversion = [IntegralToFloatingPointConversion] integral to floating point conversion
#  903|               Type = [FloatType] float
#  903|               ValueCategory = prvalue
#  904|     getStmt(6): [ExprStmt] ExprStmt
#  904|       getExpr(): [BuiltInVarArgsEnd] __builtin_va_end
#  904|           Type = [VoidType] void
#  904|           ValueCategory = prvalue
#  904|         getVAList(): [VariableAccess] args
#  904|             Type = [ArrayType] __va_list_tag[1]
#  904|             ValueCategory = lvalue
#  904|         getVAList().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  904|             Type = [PointerType] __va_list_tag *
#  904|             ValueCategory = prvalue
#  905|     getStmt(7): [ExprStmt] ExprStmt
#  905|       getExpr(): [FunctionCall] call to VAListUsage
#  905|           Type = [VoidType] void
#  905|           ValueCategory = prvalue
#  905|         getArgument(0): [VariableAccess] x
#  905|             Type = [IntType] int
#  905|             ValueCategory = prvalue(load)
#  905|         getArgument(1): [VariableAccess] args2
#  905|             Type = [ArrayType] __va_list_tag[1]
#  905|             ValueCategory = lvalue
#  905|         getArgument(1).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  905|             Type = [PointerType] __va_list_tag *
#  905|             ValueCategory = prvalue
#  906|     getStmt(8): [ExprStmt] ExprStmt
#  906|       getExpr(): [BuiltInVarArgsEnd] __builtin_va_end
#  906|           Type = [VoidType] void
#  906|           ValueCategory = prvalue
#  906|         getVAList(): [VariableAccess] args2
#  906|             Type = [ArrayType] __va_list_tag[1]
#  906|             ValueCategory = lvalue
#  906|         getVAList().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  906|             Type = [PointerType] __va_list_tag *
#  906|             ValueCategory = prvalue
#  907|     getStmt(9): [ReturnStmt] return ...
#  909| [TopLevelFunction] void CastToVoid(int)
#  909|   <params>: 
#  909|     getParameter(0): [Parameter] x
#  909|         Type = [IntType] int
#  909|   getEntryPoint(): [BlockStmt] { ... }
#  910|     getStmt(0): [ExprStmt] ExprStmt
#  910|       getExpr(): [VariableAccess] x
#  910|           Type = [IntType] int
#  910|           ValueCategory = lvalue
#  910|       getExpr().getFullyConverted(): [CStyleCast] (void)...
#  910|           Conversion = [VoidConversion] conversion to void
#  910|           Type = [VoidType] void
#  910|           ValueCategory = prvalue
#  911|     getStmt(1): [ReturnStmt] return ...
#  913| [TopLevelFunction] void ConstantConditions(int)
#  913|   <params>: 
#  913|     getParameter(0): [Parameter] x
#  913|         Type = [IntType] int
#  913|   getEntryPoint(): [BlockStmt] { ... }
#  914|     getStmt(0): [DeclStmt] declaration
#  914|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a
#  914|           Type = [BoolType] bool
#  914|         getVariable().getInitializer(): [Initializer] initializer for a
#  914|           getExpr(): [LogicalAndExpr] ... && ...
#  914|               Type = [BoolType] bool
#  914|               Value = [LogicalAndExpr] 1
#  914|               ValueCategory = prvalue
#  914|             getLeftOperand(): [Literal] 1
#  914|                 Type = [BoolType] bool
#  914|                 Value = [Literal] 1
#  914|                 ValueCategory = prvalue
#  914|             getRightOperand(): [Literal] 1
#  914|                 Type = [BoolType] bool
#  914|                 Value = [Literal] 1
#  914|                 ValueCategory = prvalue
#  915|     getStmt(1): [DeclStmt] declaration
#  915|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
#  915|           Type = [IntType] int
#  915|         getVariable().getInitializer(): [Initializer] initializer for b
#  915|           getExpr(): [ConditionalExpr] ... ? ... : ...
#  915|               Type = [IntType] int
#  915|               ValueCategory = prvalue(load)
#  915|             getCondition(): [Literal] 1
#  915|                 Type = [BoolType] bool
#  915|                 Value = [Literal] 1
#  915|                 ValueCategory = prvalue
#  915|             getThen(): [VariableAccess] x
#  915|                 Type = [IntType] int
#  915|                 ValueCategory = prvalue(load)
#  915|             getElse(): [VariableAccess] x
#  915|                 Type = [IntType] int
#  915|                 ValueCategory = prvalue(load)
#  915|             getCondition().getFullyConverted(): [ParenthesisExpr] (...)
#  915|                 Type = [BoolType] bool
#  915|                 Value = [ParenthesisExpr] 1
#  915|                 ValueCategory = prvalue
#  916|     getStmt(2): [ReturnStmt] return ...
#  924| [Operator,TopLevelFunction] void* operator new(size_t, float)
#  924|   <params>: 
#  924|     getParameter(0): [Parameter] (unnamed parameter 0)
#  924|         Type = [CTypedefType,Size_t] size_t
#  924|     getParameter(1): [Parameter] (unnamed parameter 1)
#  924|         Type = [FloatType] float
#  925| [Operator,TopLevelFunction] void* operator new[](size_t, float)
#  925|   <params>: 
#  925|     getParameter(0): [Parameter] (unnamed parameter 0)
#  925|         Type = [CTypedefType,Size_t] size_t
#  925|     getParameter(1): [Parameter] (unnamed parameter 1)
#  925|         Type = [FloatType] float
#  926| [Operator,TopLevelFunction] void* operator new(size_t, std::align_val_t, float)
#  926|   <params>: 
#  926|     getParameter(0): [Parameter] (unnamed parameter 0)
#  926|         Type = [CTypedefType,Size_t] size_t
#  926|     getParameter(1): [Parameter] (unnamed parameter 1)
#  926|         Type = [ScopedEnum] align_val_t
#  926|     getParameter(2): [Parameter] (unnamed parameter 2)
#  926|         Type = [FloatType] float
#  927| [Operator,TopLevelFunction] void* operator new[](size_t, std::align_val_t, float)
#  927|   <params>: 
#  927|     getParameter(0): [Parameter] (unnamed parameter 0)
#  927|         Type = [CTypedefType,Size_t] size_t
#  927|     getParameter(1): [Parameter] (unnamed parameter 1)
#  927|         Type = [ScopedEnum] align_val_t
#  927|     getParameter(2): [Parameter] (unnamed parameter 2)
#  927|         Type = [FloatType] float
#  928| [Operator,TopLevelFunction] void operator delete(void*, float)
#  928|   <params>: 
#  928|     getParameter(0): [Parameter] (unnamed parameter 0)
#  928|         Type = [VoidPointerType] void *
#  928|     getParameter(1): [Parameter] (unnamed parameter 1)
#  928|         Type = [FloatType] float
#  929| [Operator,TopLevelFunction] void operator delete[](void*, float)
#  929|   <params>: 
#  929|     getParameter(0): [Parameter] (unnamed parameter 0)
#  929|         Type = [VoidPointerType] void *
#  929|     getParameter(1): [Parameter] (unnamed parameter 1)
#  929|         Type = [FloatType] float
#  930| [Operator,TopLevelFunction] void operator delete(void*, std::align_val_t, float)
#  930|   <params>: 
#  930|     getParameter(0): [Parameter] (unnamed parameter 0)
#  930|         Type = [VoidPointerType] void *
#  930|     getParameter(1): [Parameter] (unnamed parameter 1)
#  930|         Type = [ScopedEnum] align_val_t
#  930|     getParameter(2): [Parameter] (unnamed parameter 2)
#  930|         Type = [FloatType] float
#  931| [Operator,TopLevelFunction] void operator delete[](void*, std::align_val_t, float)
#  931|   <params>: 
#  931|     getParameter(0): [Parameter] (unnamed parameter 0)
#  931|         Type = [VoidPointerType] void *
#  931|     getParameter(1): [Parameter] (unnamed parameter 1)
#  931|         Type = [ScopedEnum] align_val_t
#  931|     getParameter(2): [Parameter] (unnamed parameter 2)
#  931|         Type = [FloatType] float
#  933| [CopyAssignmentOperator] SizedDealloc& SizedDealloc::operator=(SizedDealloc const&)
#  933|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const SizedDealloc &
#  933| [MoveAssignmentOperator] SizedDealloc& SizedDealloc::operator=(SizedDealloc&&)
#  933|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] SizedDealloc &&
#  935| [MemberFunction] void* SizedDealloc::operator new(size_t)
#  935|   <params>: 
#  935|     getParameter(0): [Parameter] (unnamed parameter 0)
#  935|         Type = [CTypedefType,Size_t] size_t
#  936| [MemberFunction] void* SizedDealloc::operator new[](size_t)
#  936|   <params>: 
#  936|     getParameter(0): [Parameter] (unnamed parameter 0)
#  936|         Type = [CTypedefType,Size_t] size_t
#  937| [MemberFunction] void SizedDealloc::operator delete(void*, size_t)
#  937|   <params>: 
#  937|     getParameter(0): [Parameter] (unnamed parameter 0)
#  937|         Type = [VoidPointerType] void *
#  937|     getParameter(1): [Parameter] (unnamed parameter 1)
#  937|         Type = [CTypedefType,Size_t] size_t
#  938| [MemberFunction] void SizedDealloc::operator delete[](void*, size_t)
#  938|   <params>: 
#  938|     getParameter(0): [Parameter] (unnamed parameter 0)
#  938|         Type = [VoidPointerType] void *
#  938|     getParameter(1): [Parameter] (unnamed parameter 1)
#  938|         Type = [CTypedefType,Size_t] size_t
#  941| [CopyAssignmentOperator] Overaligned& Overaligned::operator=(Overaligned const&)
#  941|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Overaligned &
#  941| [MoveAssignmentOperator] Overaligned& Overaligned::operator=(Overaligned&&)
#  941|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] Overaligned &&
#  945| [CopyAssignmentOperator] DefaultCtorWithDefaultParam& DefaultCtorWithDefaultParam::operator=(DefaultCtorWithDefaultParam const&)
#  945|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const DefaultCtorWithDefaultParam &
#  945| [MoveAssignmentOperator] DefaultCtorWithDefaultParam& DefaultCtorWithDefaultParam::operator=(DefaultCtorWithDefaultParam&&)
#  945|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] DefaultCtorWithDefaultParam &&
#  945| [CopyConstructor] void DefaultCtorWithDefaultParam::DefaultCtorWithDefaultParam(DefaultCtorWithDefaultParam const&)
#  945|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const DefaultCtorWithDefaultParam &
#  945| [MoveConstructor] void DefaultCtorWithDefaultParam::DefaultCtorWithDefaultParam(DefaultCtorWithDefaultParam&&)
#  945|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] DefaultCtorWithDefaultParam &&
#  946| [Constructor] void DefaultCtorWithDefaultParam::DefaultCtorWithDefaultParam(double)
#  946|   <params>: 
#  946|     getParameter(0): [Parameter] d
#  946|         Type = [DoubleType] double
#  949| [TopLevelFunction] void OperatorNew()
#  949|   <params>: 
#  949|   getEntryPoint(): [BlockStmt] { ... }
#  950|     getStmt(0): [ExprStmt] ExprStmt
#  950|       getExpr(): [NewExpr] new
#  950|           Type = [IntPointerType] int *
#  950|           ValueCategory = prvalue
#  951|     getStmt(1): [ExprStmt] ExprStmt
#  951|       getExpr(): [NewExpr] new
#  951|           Type = [IntPointerType] int *
#  951|           ValueCategory = prvalue
#  951|         getAllocatorCall(): [FunctionCall] call to operator new
#  951|             Type = [VoidPointerType] void *
#  951|             ValueCategory = prvalue
#  951|           getArgument(0): [ErrorExpr] <error expr>
#  951|               Type = [LongType] unsigned long
#  951|               ValueCategory = prvalue
#  951|           getArgument(1): [Literal] 1.0
#  951|               Type = [FloatType] float
#  951|               Value = [Literal] 1.0
#  951|               ValueCategory = prvalue
#  952|     getStmt(2): [ExprStmt] ExprStmt
#  952|       getExpr(): [NewExpr] new
#  952|           Type = [IntPointerType] int *
#  952|           ValueCategory = prvalue
#  952|         getInitializer(): [Literal] 0
#  952|             Type = [IntType] int
#  952|             Value = [Literal] 0
#  952|             ValueCategory = prvalue
#  953|     getStmt(3): [ExprStmt] ExprStmt
#  953|       getExpr(): [NewExpr] new
#  953|           Type = [PointerType] String *
#  953|           ValueCategory = prvalue
#  953|         getInitializer(): [ConstructorCall] call to String
#  953|             Type = [VoidType] void
#  953|             ValueCategory = prvalue
#  954|     getStmt(4): [ExprStmt] ExprStmt
#  954|       getExpr(): [NewExpr] new
#  954|           Type = [PointerType] String *
#  954|           ValueCategory = prvalue
#  954|         getAllocatorCall(): [FunctionCall] call to operator new
#  954|             Type = [VoidPointerType] void *
#  954|             ValueCategory = prvalue
#  954|           getArgument(0): [ErrorExpr] <error expr>
#  954|               Type = [LongType] unsigned long
#  954|               ValueCategory = prvalue
#  954|           getArgument(1): [Literal] 1.0
#  954|               Type = [FloatType] float
#  954|               Value = [Literal] 1.0
#  954|               ValueCategory = prvalue
#  954|         getInitializer(): [ConstructorCall] call to String
#  954|             Type = [VoidType] void
#  954|             ValueCategory = prvalue
#  954|           getArgument(0): hello
#  954|               Type = [ArrayType] const char[6]
#  954|               Value = [StringLiteral] "hello"
#  954|               ValueCategory = lvalue
#  954|           getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  954|               Type = [PointerType] const char *
#  954|               ValueCategory = prvalue
#  955|     getStmt(5): [ExprStmt] ExprStmt
#  955|       getExpr(): [NewExpr] new
#  955|           Type = [PointerType] Overaligned *
#  955|           ValueCategory = prvalue
#  955|         getAlignmentArgument(): [Literal] 128
#  955|             Type = [ScopedEnum] align_val_t
#  955|             Value = [Literal] 128
#  955|             ValueCategory = prvalue
#  956|     getStmt(6): [ExprStmt] ExprStmt
#  956|       getExpr(): [NewExpr] new
#  956|           Type = [PointerType] Overaligned *
#  956|           ValueCategory = prvalue
#  956|         getAllocatorCall(): [FunctionCall] call to operator new
#  956|             Type = [VoidPointerType] void *
#  956|             ValueCategory = prvalue
#  956|           getArgument(0): [ErrorExpr] <error expr>
#  956|               Type = [LongType] unsigned long
#  956|               ValueCategory = prvalue
#  956|           getArgument(1): [Literal] 128
#  956|               Type = [ScopedEnum] align_val_t
#  956|               Value = [Literal] 128
#  956|               ValueCategory = prvalue
#  956|           getArgument(2): [Literal] 1.0
#  956|               Type = [FloatType] float
#  956|               Value = [Literal] 1.0
#  956|               ValueCategory = prvalue
#  956|         getInitializer(): [Literal] 0
#  956|             Type = [Struct] Overaligned
#  956|             Value = [Literal] 0
#  956|             ValueCategory = prvalue
#  957|     getStmt(7): [ReturnStmt] return ...
#  959| [TopLevelFunction] void OperatorNewArray(int)
#  959|   <params>: 
#  959|     getParameter(0): [Parameter] n
#  959|         Type = [IntType] int
#  959|   getEntryPoint(): [BlockStmt] { ... }
#  960|     getStmt(0): [ExprStmt] ExprStmt
#  960|       getExpr(): [NewArrayExpr] new[]
#  960|           Type = [IntPointerType] int *
#  960|           ValueCategory = prvalue
#  961|     getStmt(1): [ExprStmt] ExprStmt
#  961|       getExpr(): [NewArrayExpr] new[]
#  961|           Type = [IntPointerType] int *
#  961|           ValueCategory = prvalue
#  961|         getExtent(): [VariableAccess] n
#  961|             Type = [IntType] int
#  961|             ValueCategory = prvalue(load)
#  962|     getStmt(2): [ExprStmt] ExprStmt
#  962|       getExpr(): [NewArrayExpr] new[]
#  962|           Type = [IntPointerType] int *
#  962|           ValueCategory = prvalue
#  962|         getAllocatorCall(): [FunctionCall] call to operator new[]
#  962|             Type = [VoidPointerType] void *
#  962|             ValueCategory = prvalue
#  962|           getArgument(0): [ErrorExpr] <error expr>
#  962|               Type = [LongType] unsigned long
#  962|               ValueCategory = prvalue
#  962|           getArgument(1): [Literal] 1.0
#  962|               Type = [FloatType] float
#  962|               Value = [Literal] 1.0
#  962|               ValueCategory = prvalue
#  962|         getExtent(): [VariableAccess] n
#  962|             Type = [IntType] int
#  962|             ValueCategory = prvalue(load)
#  963|     getStmt(3): [ExprStmt] ExprStmt
#  963|       getExpr(): [NewArrayExpr] new[]
#  963|           Type = [PointerType] String *
#  963|           ValueCategory = prvalue
#  963|         getInitializer(): [ArrayAggregateLiteral] {...}
#  963|             Type = [ArrayType] String[]
#  963|             ValueCategory = prvalue
#  963|           getAnElementExpr(0): [ConstructorCall] call to String
#  963|               Type = [VoidType] void
#  963|               ValueCategory = prvalue
#  963|         getExtent(): [VariableAccess] n
#  963|             Type = [IntType] int
#  963|             ValueCategory = prvalue(load)
#  964|     getStmt(4): [ExprStmt] ExprStmt
#  964|       getExpr(): [NewArrayExpr] new[]
#  964|           Type = [PointerType] Overaligned *
#  964|           ValueCategory = prvalue
#  964|         getExtent(): [VariableAccess] n
#  964|             Type = [IntType] int
#  964|             ValueCategory = prvalue(load)
#  964|         getAlignmentArgument(): [Literal] 128
#  964|             Type = [ScopedEnum] align_val_t
#  964|             Value = [Literal] 128
#  964|             ValueCategory = prvalue
#  965|     getStmt(5): [ExprStmt] ExprStmt
#  965|       getExpr(): [NewArrayExpr] new[]
#  965|           Type = [PointerType] Overaligned *
#  965|           ValueCategory = prvalue
#  965|         getAllocatorCall(): [FunctionCall] call to operator new[]
#  965|             Type = [VoidPointerType] void *
#  965|             ValueCategory = prvalue
#  965|           getArgument(0): [ErrorExpr] <error expr>
#  965|               Type = [LongType] unsigned long
#  965|               ValueCategory = prvalue
#  965|           getArgument(1): [Literal] 128
#  965|               Type = [ScopedEnum] align_val_t
#  965|               Value = [Literal] 128
#  965|               ValueCategory = prvalue
#  965|           getArgument(2): [Literal] 1.0
#  965|               Type = [FloatType] float
#  965|               Value = [Literal] 1.0
#  965|               ValueCategory = prvalue
#  966|     getStmt(6): [ExprStmt] ExprStmt
#  966|       getExpr(): [NewArrayExpr] new[]
#  966|           Type = [PointerType] DefaultCtorWithDefaultParam *
#  966|           ValueCategory = prvalue
#  966|         getInitializer(): [ArrayAggregateLiteral] {...}
#  966|             Type = [ArrayType] DefaultCtorWithDefaultParam[]
#  966|             ValueCategory = prvalue
#  966|           getAnElementExpr(0): [ConstructorCall] call to DefaultCtorWithDefaultParam
#  966|               Type = [VoidType] void
#  966|               ValueCategory = prvalue
#  966|         getExtent(): [VariableAccess] n
#  966|             Type = [IntType] int
#  966|             ValueCategory = prvalue(load)
#  967|     getStmt(7): [ExprStmt] ExprStmt
#  967|       getExpr(): [NewArrayExpr] new[]
#  967|           Type = [IntPointerType] int *
#  967|           ValueCategory = prvalue
#  967|         getInitializer(): [ArrayAggregateLiteral] {...}
#  967|             Type = [ArrayType] int[3]
#  967|             ValueCategory = prvalue
#  967|           getAnElementExpr(0): [Literal] 0
#  967|               Type = [IntType] int
#  967|               Value = [Literal] 0
#  967|               ValueCategory = prvalue
#  967|           getAnElementExpr(1): [Literal] 1
#  967|               Type = [IntType] int
#  967|               Value = [Literal] 1
#  967|               ValueCategory = prvalue
#  967|           getAnElementExpr(2): [Literal] 2
#  967|               Type = [IntType] int
#  967|               Value = [Literal] 2
#  967|               ValueCategory = prvalue
#  967|         getExtent(): [VariableAccess] n
#  967|             Type = [IntType] int
#  967|             ValueCategory = prvalue(load)
#  968|     getStmt(8): [ReturnStmt] return ...
#  970| [TopLevelFunction] int designatedInit()
#  970|   <params>: 
#  970|   getEntryPoint(): [BlockStmt] { ... }
#  971|     getStmt(0): [DeclStmt] declaration
#  971|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a1
#  971|           Type = [ArrayType] int[1000]
#  971|         getVariable().getInitializer(): [Initializer] initializer for a1
#  971|           getExpr(): [ArrayAggregateLiteral] {...}
#  971|               Type = [ArrayType] int[1000]
#  971|               ValueCategory = prvalue
#  971|             getAnElementExpr(2): [Literal] 10002
#  971|                 Type = [IntType] int
#  971|                 Value = [Literal] 10002
#  971|                 ValueCategory = prvalue
#  971|             getAnElementExpr(900): [Literal] 10900
#  971|                 Type = [IntType] int
#  971|                 Value = [Literal] 10900
#  971|                 ValueCategory = prvalue
#  972|     getStmt(1): [ReturnStmt] return ...
#  972|       getExpr(): [ArrayExpr] access to array
#  972|           Type = [IntType] int
#  972|           ValueCategory = prvalue(load)
#  972|         getArrayBase(): [VariableAccess] a1
#  972|             Type = [ArrayType] int[1000]
#  972|             ValueCategory = lvalue
#  972|         getArrayOffset(): [Literal] 900
#  972|             Type = [IntType] int
#  972|             Value = [Literal] 900
#  972|             ValueCategory = prvalue
#  972|         getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#  972|             Type = [IntPointerType] int *
#  972|             ValueCategory = prvalue
#  975| [TopLevelFunction] void IfStmtWithDeclaration(int, int)
#  975|   <params>: 
#  975|     getParameter(0): [Parameter] x
#  975|         Type = [IntType] int
#  975|     getParameter(1): [Parameter] y
#  975|         Type = [IntType] int
#  975|   getEntryPoint(): [BlockStmt] { ... }
#  976|     getStmt(0): [IfStmt] if (...) ... 
#  976|       getCondition(): [ConditionDeclExpr] (condition decl)
#  976|           Type = [BoolType] bool
#  976|           ValueCategory = prvalue
#  976|         getVariableAccess(): [VariableAccess] b
#  976|             Type = [BoolType] bool
#  976|             ValueCategory = prvalue(load)
#  976|         getInitializingExpr(): [LTExpr] ... < ...
#  976|             Type = [BoolType] bool
#  976|             ValueCategory = prvalue
#  976|           getLesserOperand(): [VariableAccess] x
#  976|               Type = [IntType] int
#  976|               ValueCategory = prvalue(load)
#  976|           getGreaterOperand(): [VariableAccess] y
#  976|               Type = [IntType] int
#  976|               ValueCategory = prvalue(load)
#  976|       getThen(): [BlockStmt] { ... }
#  977|         getStmt(0): [ExprStmt] ExprStmt
#  977|           getExpr(): [AssignExpr] ... = ...
#  977|               Type = [IntType] int
#  977|               ValueCategory = lvalue
#  977|             getLValue(): [VariableAccess] x
#  977|                 Type = [IntType] int
#  977|                 ValueCategory = lvalue
#  977|             getRValue(): [Literal] 5
#  977|                 Type = [IntType] int
#  977|                 Value = [Literal] 5
#  977|                 ValueCategory = prvalue
#  979|       getElse(): [IfStmt] if (...) ... 
#  979|         getCondition(): [ConditionDeclExpr] (condition decl)
#  979|             Type = [BoolType] bool
#  979|             ValueCategory = prvalue
#  979|           getVariableAccess(): [VariableAccess] z
#  979|               Type = [IntType] int
#  979|               ValueCategory = prvalue(load)
#  979|           getInitializingExpr(): [AddExpr] ... + ...
#  979|               Type = [IntType] int
#  979|               ValueCategory = prvalue
#  979|             getLeftOperand(): [VariableAccess] x
#  979|                 Type = [IntType] int
#  979|                 ValueCategory = prvalue(load)
#  979|             getRightOperand(): [VariableAccess] y
#  979|                 Type = [IntType] int
#  979|                 ValueCategory = prvalue(load)
#  979|           getVariableAccess().getFullyConverted(): [CStyleCast] (bool)...
#  979|               Conversion = [BoolConversion] conversion to bool
#  979|               Type = [BoolType] bool
#  979|               ValueCategory = prvalue
#  979|         getThen(): [BlockStmt] { ... }
#  980|           getStmt(0): [ExprStmt] ExprStmt
#  980|             getExpr(): [AssignExpr] ... = ...
#  980|                 Type = [IntType] int
#  980|                 ValueCategory = lvalue
#  980|               getLValue(): [VariableAccess] y
#  980|                   Type = [IntType] int
#  980|                   ValueCategory = lvalue
#  980|               getRValue(): [Literal] 7
#  980|                   Type = [IntType] int
#  980|                   Value = [Literal] 7
#  980|                   ValueCategory = prvalue
#  982|         getElse(): [IfStmt] if (...) ... 
#  982|           getCondition(): [ConditionDeclExpr] (condition decl)
#  982|               Type = [BoolType] bool
#  982|               ValueCategory = prvalue
#  982|             getVariableAccess(): [VariableAccess] p
#  982|                 Type = [IntPointerType] int *
#  982|                 ValueCategory = prvalue(load)
#  982|             getInitializingExpr(): [AddressOfExpr] & ...
#  982|                 Type = [IntPointerType] int *
#  982|                 ValueCategory = prvalue
#  982|               getOperand(): [VariableAccess] x
#  982|                   Type = [IntType] int
#  982|                   ValueCategory = lvalue
#  982|             getVariableAccess().getFullyConverted(): [CStyleCast] (bool)...
#  982|                 Conversion = [BoolConversion] conversion to bool
#  982|                 Type = [BoolType] bool
#  982|                 ValueCategory = prvalue
#  982|           getThen(): [BlockStmt] { ... }
#  983|             getStmt(0): [ExprStmt] ExprStmt
#  983|               getExpr(): [AssignExpr] ... = ...
#  983|                   Type = [IntType] int
#  983|                   ValueCategory = lvalue
#  983|                 getLValue(): [PointerDereferenceExpr] * ...
#  983|                     Type = [IntType] int
#  983|                     ValueCategory = lvalue
#  983|                   getOperand(): [VariableAccess] p
#  983|                       Type = [IntPointerType] int *
#  983|                       ValueCategory = prvalue(load)
#  983|                 getRValue(): [Literal] 2
#  983|                     Type = [IntType] int
#  983|                     Value = [Literal] 2
#  983|                     ValueCategory = prvalue
#  985|     getStmt(1): [ReturnStmt] return ...
#  987| [TopLevelFunction] void WhileStmtWithDeclaration(int, int)
#  987|   <params>: 
#  987|     getParameter(0): [Parameter] x
#  987|         Type = [IntType] int
#  987|     getParameter(1): [Parameter] y
#  987|         Type = [IntType] int
#  987|   getEntryPoint(): [BlockStmt] { ... }
#  988|     getStmt(0): [WhileStmt] while (...) ...
#  988|       getCondition(): [ConditionDeclExpr] (condition decl)
#  988|           Type = [BoolType] bool
#  988|           ValueCategory = prvalue
#  988|         getVariableAccess(): [VariableAccess] b
#  988|             Type = [BoolType] bool
#  988|             ValueCategory = prvalue(load)
#  988|         getInitializingExpr(): [LTExpr] ... < ...
#  988|             Type = [BoolType] bool
#  988|             ValueCategory = prvalue
#  988|           getLesserOperand(): [VariableAccess] x
#  988|               Type = [IntType] int
#  988|               ValueCategory = prvalue(load)
#  988|           getGreaterOperand(): [VariableAccess] y
#  988|               Type = [IntType] int
#  988|               ValueCategory = prvalue(load)
#  988|       getStmt(): [BlockStmt] { ... }
#  990|     getStmt(1): [WhileStmt] while (...) ...
#  990|       getCondition(): [ConditionDeclExpr] (condition decl)
#  990|           Type = [BoolType] bool
#  990|           ValueCategory = prvalue
#  990|         getVariableAccess(): [VariableAccess] z
#  990|             Type = [IntType] int
#  990|             ValueCategory = prvalue(load)
#  990|         getInitializingExpr(): [AddExpr] ... + ...
#  990|             Type = [IntType] int
#  990|             ValueCategory = prvalue
#  990|           getLeftOperand(): [VariableAccess] x
#  990|               Type = [IntType] int
#  990|               ValueCategory = prvalue(load)
#  990|           getRightOperand(): [VariableAccess] y
#  990|               Type = [IntType] int
#  990|               ValueCategory = prvalue(load)
#  990|         getVariableAccess().getFullyConverted(): [CStyleCast] (bool)...
#  990|             Conversion = [BoolConversion] conversion to bool
#  990|             Type = [BoolType] bool
#  990|             ValueCategory = prvalue
#  990|       getStmt(): [BlockStmt] { ... }
#  992|     getStmt(2): [WhileStmt] while (...) ...
#  992|       getCondition(): [ConditionDeclExpr] (condition decl)
#  992|           Type = [BoolType] bool
#  992|           ValueCategory = prvalue
#  992|         getVariableAccess(): [VariableAccess] p
#  992|             Type = [IntPointerType] int *
#  992|             ValueCategory = prvalue(load)
#  992|         getInitializingExpr(): [AddressOfExpr] & ...
#  992|             Type = [IntPointerType] int *
#  992|             ValueCategory = prvalue
#  992|           getOperand(): [VariableAccess] x
#  992|               Type = [IntType] int
#  992|               ValueCategory = lvalue
#  992|         getVariableAccess().getFullyConverted(): [CStyleCast] (bool)...
#  992|             Conversion = [BoolConversion] conversion to bool
#  992|             Type = [BoolType] bool
#  992|             ValueCategory = prvalue
#  992|       getStmt(): [BlockStmt] { ... }
#  994|     getStmt(3): [ReturnStmt] return ...
#  996| [TopLevelFunction] int PointerDecay(int[], int(float))
#  996|   <params>: 
#  996|     getParameter(0): [Parameter] a
#  996|         Type = [ArrayType] int[]
#  996|     getParameter(1): [Parameter] fn
#  996|         Type = [RoutineType] ..()(..)
#  996|   getEntryPoint(): [BlockStmt] { ... }
#  997|     getStmt(0): [ReturnStmt] return ...
#  997|       getExpr(): [AddExpr] ... + ...
#  997|           Type = [IntType] int
#  997|           ValueCategory = prvalue
#  997|         getLeftOperand(): [ArrayExpr] access to array
#  997|             Type = [IntType] int
#  997|             ValueCategory = prvalue(load)
#  997|           getArrayBase(): [VariableAccess] a
#  997|               Type = [IntPointerType] int *
#  997|               ValueCategory = prvalue(load)
#  997|           getArrayOffset(): [Literal] 0
#  997|               Type = [IntType] int
#  997|               Value = [Literal] 0
#  997|               ValueCategory = prvalue
#  997|         getRightOperand(): [VariableCall] call to expression
#  997|             Type = [IntType] int
#  997|             ValueCategory = prvalue
#  997|           getExpr(): [VariableAccess] fn
#  997|               Type = [FunctionPointerType] ..(*)(..)
#  997|               ValueCategory = prvalue(load)
#  997|           getArgument(0): [Literal] 1.0
#  997|               Type = [DoubleType] double
#  997|               Value = [Literal] 1.0
#  997|               ValueCategory = prvalue
#  997|           getArgument(0).getFullyConverted(): [CStyleCast] (float)...
#  997|               Conversion = [FloatingPointConversion] floating point conversion
#  997|               Type = [FloatType] float
#  997|               Value = [CStyleCast] 1.0
#  997|               ValueCategory = prvalue
# 1000| [TopLevelFunction] int StmtExpr(int, int, int)
# 1000|   <params>: 
# 1000|     getParameter(0): [Parameter] b
# 1000|         Type = [IntType] int
# 1000|     getParameter(1): [Parameter] y
# 1000|         Type = [IntType] int
# 1000|     getParameter(2): [Parameter] z
# 1000|         Type = [IntType] int
# 1000|   getEntryPoint(): [BlockStmt] { ... }
# 1001|     getStmt(0): [DeclStmt] declaration
# 1001|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 1001|           Type = [IntType] int
# 1001|         getVariable().getInitializer(): [Initializer] initializer for x
# 1001|           getExpr(): [StmtExpr] (statement expression)
# 1001|               Type = [IntType] int
# 1001|               ValueCategory = prvalue
# 1001|             getStmt(): [BlockStmt] { ... }
# 1002|               getStmt(0): [DeclStmt] declaration
# 1002|                 getDeclarationEntry(0): [VariableDeclarationEntry] definition of w
# 1002|                     Type = [IntType] int
# 1003|               getStmt(1): [IfStmt] if (...) ... 
# 1003|                 getCondition(): [VariableAccess] b
# 1003|                     Type = [IntType] int
# 1003|                     ValueCategory = prvalue(load)
# 1003|                 getThen(): [BlockStmt] { ... }
# 1004|                   getStmt(0): [ExprStmt] ExprStmt
# 1004|                     getExpr(): [AssignExpr] ... = ...
# 1004|                         Type = [IntType] int
# 1004|                         ValueCategory = lvalue
# 1004|                       getLValue(): [VariableAccess] w
# 1004|                           Type = [IntType] int
# 1004|                           ValueCategory = lvalue
# 1004|                       getRValue(): [VariableAccess] y
# 1004|                           Type = [IntType] int
# 1004|                           ValueCategory = prvalue(load)
# 1005|                 getElse(): [BlockStmt] { ... }
# 1006|                   getStmt(0): [ExprStmt] ExprStmt
# 1006|                     getExpr(): [AssignExpr] ... = ...
# 1006|                         Type = [IntType] int
# 1006|                         ValueCategory = lvalue
# 1006|                       getLValue(): [VariableAccess] w
# 1006|                           Type = [IntType] int
# 1006|                           ValueCategory = lvalue
# 1006|                       getRValue(): [VariableAccess] z
# 1006|                           Type = [IntType] int
# 1006|                           ValueCategory = prvalue(load)
# 1003|                 getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 1003|                     Conversion = [BoolConversion] conversion to bool
# 1003|                     Type = [BoolType] bool
# 1003|                     ValueCategory = prvalue
# 1008|               getStmt(2): [ExprStmt] ExprStmt
# 1008|                 getExpr(): [VariableAccess] w
# 1008|                     Type = [IntType] int
# 1008|                     ValueCategory = prvalue(load)
# 1011|     getStmt(1): [ReturnStmt] return ...
# 1011|       getExpr(): [StmtExpr] (statement expression)
# 1011|           Type = [IntType] int
# 1011|           ValueCategory = prvalue
# 1011|         getStmt(): [BlockStmt] { ... }
# 1011|           getStmt(0): [ExprStmt] ExprStmt
# 1011|             getExpr(): [VariableAccess] x
# 1011|                 Type = [IntType] int
# 1011|                 ValueCategory = prvalue(load)
# 1015| [TopLevelFunction] void OperatorDelete()
# 1015|   <params>: 
# 1015|   getEntryPoint(): [BlockStmt] { ... }
# 1016|     getStmt(0): [ExprStmt] ExprStmt
# 1016|       getExpr(): [DeleteExpr] delete
# 1016|           Type = [VoidType] void
# 1016|           ValueCategory = prvalue
# 1016|         getExprWithReuse(): [Literal] 0
# 1016|             Type = [NullPointerType] decltype(nullptr)
# 1016|             Value = [Literal] 0
# 1016|             ValueCategory = prvalue
# 1016|         getExprWithReuse().getFullyConverted(): [StaticCast] static_cast<int *>...
# 1016|             Conversion = [PointerConversion] pointer conversion
# 1016|             Type = [IntPointerType] int *
# 1016|             Value = [StaticCast] 0
# 1016|             ValueCategory = prvalue
# 1017|     getStmt(1): [ExprStmt] ExprStmt
# 1017|       getExpr(): [DeleteExpr] delete
# 1017|           Type = [VoidType] void
# 1017|           ValueCategory = prvalue
# 1017|         getDestructorCall(): [DestructorCall] call to ~String
# 1017|             Type = [VoidType] void
# 1017|             ValueCategory = prvalue
# 1017|           getQualifier(): [Literal] 0
# 1017|               Type = [NullPointerType] decltype(nullptr)
# 1017|               Value = [Literal] 0
# 1017|               ValueCategory = prvalue
# 1017|           getQualifier().getFullyConverted(): [StaticCast] static_cast<String *>...
# 1017|               Conversion = [PointerConversion] pointer conversion
# 1017|               Type = [PointerType] String *
# 1017|               Value = [StaticCast] 0
# 1017|               ValueCategory = prvalue
# 1017|         getExprWithReuse(): [ReuseExpr] reuse of static_cast<String *>...
# 1017|             Type = [PointerType] String *
# 1017|             ValueCategory = prvalue
# 1018|     getStmt(2): [ExprStmt] ExprStmt
# 1018|       getExpr(): [DeleteExpr] delete
# 1018|           Type = [VoidType] void
# 1018|           ValueCategory = prvalue
# 1018|         getDeallocatorCall(): [FunctionCall] call to operator delete
# 1018|             Type = [VoidType] void
# 1018|             ValueCategory = prvalue
# 1018|         getExprWithReuse(): [Literal] 0
# 1018|             Type = [NullPointerType] decltype(nullptr)
# 1018|             Value = [Literal] 0
# 1018|             ValueCategory = prvalue
# 1018|         getExprWithReuse().getFullyConverted(): [StaticCast] static_cast<SizedDealloc *>...
# 1018|             Conversion = [PointerConversion] pointer conversion
# 1018|             Type = [PointerType] SizedDealloc *
# 1018|             Value = [StaticCast] 0
# 1018|             ValueCategory = prvalue
# 1019|     getStmt(3): [ExprStmt] ExprStmt
# 1019|       getExpr(): [DeleteExpr] delete
# 1019|           Type = [VoidType] void
# 1019|           ValueCategory = prvalue
# 1019|         getExprWithReuse(): [Literal] 0
# 1019|             Type = [NullPointerType] decltype(nullptr)
# 1019|             Value = [Literal] 0
# 1019|             ValueCategory = prvalue
# 1019|         getExprWithReuse().getFullyConverted(): [StaticCast] static_cast<Overaligned *>...
# 1019|             Conversion = [PointerConversion] pointer conversion
# 1019|             Type = [PointerType] Overaligned *
# 1019|             Value = [StaticCast] 0
# 1019|             ValueCategory = prvalue
# 1020|     getStmt(4): [ExprStmt] ExprStmt
# 1020|       getExpr(): [DeleteExpr] delete
# 1020|           Type = [VoidType] void
# 1020|           ValueCategory = prvalue
# 1020|         getDestructorCall(): [DestructorCall] call to ~PolymorphicBase
# 1020|             Type = [VoidType] void
# 1020|             ValueCategory = prvalue
# 1020|           getQualifier(): [Literal] 0
# 1020|               Type = [NullPointerType] decltype(nullptr)
# 1020|               Value = [Literal] 0
# 1020|               ValueCategory = prvalue
# 1020|           getQualifier().getFullyConverted(): [StaticCast] static_cast<PolymorphicBase *>...
# 1020|               Conversion = [PointerConversion] pointer conversion
# 1020|               Type = [PointerType] PolymorphicBase *
# 1020|               Value = [StaticCast] 0
# 1020|               ValueCategory = prvalue
# 1020|         getExprWithReuse(): [ReuseExpr] reuse of static_cast<PolymorphicBase *>...
# 1020|             Type = [PointerType] PolymorphicBase *
# 1020|             ValueCategory = prvalue
# 1021|     getStmt(5): [ReturnStmt] return ...
# 1024| [TopLevelFunction] void OperatorDeleteArray()
# 1024|   <params>: 
# 1024|   getEntryPoint(): [BlockStmt] { ... }
# 1025|     getStmt(0): [ExprStmt] ExprStmt
# 1025|       getExpr(): [DeleteArrayExpr] delete[]
# 1025|           Type = [VoidType] void
# 1025|           ValueCategory = prvalue
# 1025|         getExprWithReuse(): [Literal] 0
# 1025|             Type = [NullPointerType] decltype(nullptr)
# 1025|             Value = [Literal] 0
# 1025|             ValueCategory = prvalue
# 1025|         getExprWithReuse().getFullyConverted(): [StaticCast] static_cast<int *>...
# 1025|             Conversion = [PointerConversion] pointer conversion
# 1025|             Type = [IntPointerType] int *
# 1025|             Value = [StaticCast] 0
# 1025|             ValueCategory = prvalue
# 1026|     getStmt(1): [ExprStmt] ExprStmt
# 1026|       getExpr(): [DeleteArrayExpr] delete[]
# 1026|           Type = [VoidType] void
# 1026|           ValueCategory = prvalue
# 1026|         getDestructorCall(): [DestructorCall] call to ~String
# 1026|             Type = [VoidType] void
# 1026|             ValueCategory = prvalue
# 1026|           getQualifier(): [Literal] 0
# 1026|               Type = [NullPointerType] decltype(nullptr)
# 1026|               Value = [Literal] 0
# 1026|               ValueCategory = prvalue
# 1026|           getQualifier().getFullyConverted(): [StaticCast] static_cast<String *>...
# 1026|               Conversion = [PointerConversion] pointer conversion
# 1026|               Type = [PointerType] String *
# 1026|               Value = [StaticCast] 0
# 1026|               ValueCategory = prvalue
# 1026|         getExprWithReuse(): [ReuseExpr] reuse of static_cast<String *>...
# 1026|             Type = [PointerType] String *
# 1026|             ValueCategory = prvalue
# 1027|     getStmt(2): [ExprStmt] ExprStmt
# 1027|       getExpr(): [DeleteArrayExpr] delete[]
# 1027|           Type = [VoidType] void
# 1027|           ValueCategory = prvalue
# 1027|         getDeallocatorCall(): [FunctionCall] call to operator delete[]
# 1027|             Type = [VoidType] void
# 1027|             ValueCategory = prvalue
# 1027|         getExprWithReuse(): [Literal] 0
# 1027|             Type = [NullPointerType] decltype(nullptr)
# 1027|             Value = [Literal] 0
# 1027|             ValueCategory = prvalue
# 1027|         getExprWithReuse().getFullyConverted(): [StaticCast] static_cast<SizedDealloc *>...
# 1027|             Conversion = [PointerConversion] pointer conversion
# 1027|             Type = [PointerType] SizedDealloc *
# 1027|             Value = [StaticCast] 0
# 1027|             ValueCategory = prvalue
# 1028|     getStmt(3): [ExprStmt] ExprStmt
# 1028|       getExpr(): [DeleteArrayExpr] delete[]
# 1028|           Type = [VoidType] void
# 1028|           ValueCategory = prvalue
# 1028|         getExprWithReuse(): [Literal] 0
# 1028|             Type = [NullPointerType] decltype(nullptr)
# 1028|             Value = [Literal] 0
# 1028|             ValueCategory = prvalue
# 1028|         getExprWithReuse().getFullyConverted(): [StaticCast] static_cast<Overaligned *>...
# 1028|             Conversion = [PointerConversion] pointer conversion
# 1028|             Type = [PointerType] Overaligned *
# 1028|             Value = [StaticCast] 0
# 1028|             ValueCategory = prvalue
# 1029|     getStmt(4): [ExprStmt] ExprStmt
# 1029|       getExpr(): [DeleteArrayExpr] delete[]
# 1029|           Type = [VoidType] void
# 1029|           ValueCategory = prvalue
# 1029|         getDestructorCall(): [DestructorCall] call to ~PolymorphicBase
# 1029|             Type = [VoidType] void
# 1029|             ValueCategory = prvalue
# 1029|           getQualifier(): [Literal] 0
# 1029|               Type = [NullPointerType] decltype(nullptr)
# 1029|               Value = [Literal] 0
# 1029|               ValueCategory = prvalue
# 1029|           getQualifier().getFullyConverted(): [StaticCast] static_cast<PolymorphicBase *>...
# 1029|               Conversion = [PointerConversion] pointer conversion
# 1029|               Type = [PointerType] PolymorphicBase *
# 1029|               Value = [StaticCast] 0
# 1029|               ValueCategory = prvalue
# 1029|         getExprWithReuse(): [ReuseExpr] reuse of static_cast<PolymorphicBase *>...
# 1029|             Type = [PointerType] PolymorphicBase *
# 1029|             ValueCategory = prvalue
# 1030|     getStmt(5): [ReturnStmt] return ...
# 1032| [CopyAssignmentOperator] EmptyStruct& EmptyStruct::operator=(EmptyStruct const&)
# 1032|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const EmptyStruct &
# 1032| [MoveAssignmentOperator] EmptyStruct& EmptyStruct::operator=(EmptyStruct&&)
# 1032|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] EmptyStruct &&
# 1034| [TopLevelFunction] void EmptyStructInit()
# 1034|   <params>: 
# 1034|   getEntryPoint(): [BlockStmt] { ... }
# 1035|     getStmt(0): [DeclStmt] declaration
# 1035|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 1035|           Type = [Struct] EmptyStruct
# 1035|         getVariable().getInitializer(): [Initializer] initializer for s
# 1035|           getExpr(): [ClassAggregateLiteral] {...}
# 1035|               Type = [Struct] EmptyStruct
# 1035|               ValueCategory = prvalue
# 1036|     getStmt(1): [ReturnStmt] return ...
# 1038| [GlobalVariable] (lambda [] type at line 1038, col. 12) lam
# 1038|   getInitializer(): [Initializer] initializer for lam
# 1038|     getExpr(): [LambdaExpression] [...](...){...}
# 1038|         Type = [Closure] decltype([...](...){...})
# 1038|         ValueCategory = prvalue
# 1038| [CopyAssignmentOperator] (lambda [] type at line 1038, col. 12)& (lambda [] type at line 1038, col. 12)::operator=((lambda [] type at line 1038, col. 12) const&)
# 1038|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1038, col. 12 &
# 1038| [CopyConstructor] void (lambda [] type at line 1038, col. 12)::(unnamed constructor)((lambda [] type at line 1038, col. 12) const&)
# 1038|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1038, col. 12 &
# 1038| [MoveConstructor] void (lambda [] type at line 1038, col. 12)::(unnamed constructor)((lambda [] type at line 1038, col. 12)&&)
# 1038|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1038, col. 12 &&
# 1038|   <initializations>: 
# 1038|   getEntryPoint(): [BlockStmt] { ... }
# 1038|     getStmt(0): [ReturnStmt] return ...
# 1038| [Constructor] void (lambda [] type at line 1038, col. 12)::(unnamed constructor)()
# 1038|   <params>: 
# 1038| [MemberFunction] void (lambda [] type at line 1038, col. 12)::_FUN()
# 1038|   <params>: 
# 1038| [ConstMemberFunction] void (lambda [] type at line 1038, col. 12)::operator()() const
# 1038|   <params>: 
# 1038|   getEntryPoint(): [BlockStmt] { ... }
# 1038|     getStmt(0): [ReturnStmt] return ...
# 1038| [ConstMemberFunction,ConversionOperator] void(* (lambda [] type at line 1038, col. 12)::operator void (*)()() const)()
# 1038|   <params>: 
#-----|   getEntryPoint(): [BlockStmt] { ... }
# 1038|     getStmt(0): [ReturnStmt] return ...
# 1038|       getExpr(): [FunctionAccess] _FUN
# 1038|           Type = [FunctionPointerType] ..(*)(..)
# 1038|           ValueCategory = prvalue(load)
# 1040| [TopLevelFunction] void Lambda(int, String const&)
# 1040|   <params>: 
# 1040|     getParameter(0): [Parameter] x
# 1040|         Type = [IntType] int
# 1040|     getParameter(1): [Parameter] s
# 1040|         Type = [LValueReferenceType] const String &
# 1040|   getEntryPoint(): [BlockStmt] { ... }
# 1041|     getStmt(0): [DeclStmt] declaration
# 1041|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of lambda_empty
# 1041|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1041|         getVariable().getInitializer(): [Initializer] initializer for lambda_empty
# 1041|           getExpr(): [LambdaExpression] [...](...){...}
# 1041|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1041|               ValueCategory = prvalue
# 1042|     getStmt(1): [ExprStmt] ExprStmt
# 1042|       getExpr(): [FunctionCall] call to operator()
# 1042|           Type = [PlainCharType] char
# 1042|           Value = [FunctionCall] 65
# 1042|           ValueCategory = prvalue
# 1042|         getQualifier(): [VariableAccess] lambda_empty
# 1042|             Type = [Closure,LocalClass] decltype([...](...){...})
# 1042|             ValueCategory = lvalue
# 1042|         getArgument(0): [Literal] 0
# 1042|             Type = [IntType] int
# 1042|             Value = [Literal] 0
# 1042|             ValueCategory = prvalue
# 1042|         getQualifier().getFullyConverted(): [CStyleCast] (const lambda [] type at line 1041, col. 23)...
# 1042|             Conversion = [GlvalueConversion] glvalue conversion
# 1042|             Type = [SpecifiedType] const lambda [] type at line 1041, col. 23
# 1042|             ValueCategory = lvalue
# 1042|         getArgument(0).getFullyConverted(): [CStyleCast] (float)...
# 1042|             Conversion = [IntegralToFloatingPointConversion] integral to floating point conversion
# 1042|             Type = [FloatType] float
# 1042|             Value = [CStyleCast] 0.0
# 1042|             ValueCategory = prvalue
# 1043|     getStmt(2): [DeclStmt] declaration
# 1043|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of lambda_ref
# 1043|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1043|         getVariable().getInitializer(): [Initializer] initializer for lambda_ref
# 1043|           getExpr(): [LambdaExpression] [...](...){...}
# 1043|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1043|               ValueCategory = prvalue
# 1043|             getInitializer(): [ClassAggregateLiteral] {...}
# 1043|                 Type = [Closure,LocalClass] decltype([...](...){...})
# 1043|                 ValueCategory = prvalue
# 1043|               getAFieldExpr(s): [VariableAccess] s
# 1043|                   Type = [LValueReferenceType] const String &
# 1043|                   ValueCategory = prvalue(load)
# 1043|               getAFieldExpr(x): [VariableAccess] x
# 1043|                   Type = [IntType] int
# 1043|                   ValueCategory = lvalue
# 1043|               getAFieldExpr(s).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1043|                   Type = [LValueReferenceType] const String &
# 1043|                   ValueCategory = prvalue
# 1043|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1043|                     Type = [SpecifiedType] const String
# 1043|                     ValueCategory = lvalue
#-----|               getAFieldExpr(x).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|                   Type = [LValueReferenceType] int &
#-----|                   ValueCategory = prvalue
# 1044|     getStmt(3): [ExprStmt] ExprStmt
# 1044|       getExpr(): [FunctionCall] call to operator()
# 1044|           Type = [PlainCharType] char
# 1044|           ValueCategory = prvalue
# 1044|         getQualifier(): [VariableAccess] lambda_ref
# 1044|             Type = [Closure,LocalClass] decltype([...](...){...})
# 1044|             ValueCategory = lvalue
# 1044|         getArgument(0): [Literal] 1
# 1044|             Type = [IntType] int
# 1044|             Value = [Literal] 1
# 1044|             ValueCategory = prvalue
# 1044|         getQualifier().getFullyConverted(): [CStyleCast] (const lambda [] type at line 1043, col. 21)...
# 1044|             Conversion = [GlvalueConversion] glvalue conversion
# 1044|             Type = [SpecifiedType] const lambda [] type at line 1043, col. 21
# 1044|             ValueCategory = lvalue
# 1044|         getArgument(0).getFullyConverted(): [CStyleCast] (float)...
# 1044|             Conversion = [IntegralToFloatingPointConversion] integral to floating point conversion
# 1044|             Type = [FloatType] float
# 1044|             Value = [CStyleCast] 1.0
# 1044|             ValueCategory = prvalue
# 1045|     getStmt(4): [DeclStmt] declaration
# 1045|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of lambda_val
# 1045|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1045|         getVariable().getInitializer(): [Initializer] initializer for lambda_val
# 1045|           getExpr(): [LambdaExpression] [...](...){...}
# 1045|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1045|               ValueCategory = prvalue
# 1045|             getInitializer(): [ClassAggregateLiteral] {...}
# 1045|                 Type = [Closure,LocalClass] decltype([...](...){...})
# 1045|                 ValueCategory = prvalue
# 1045|               getAFieldExpr(s): [ConstructorCall] call to String
# 1045|                   Type = [VoidType] void
# 1045|                   ValueCategory = prvalue
# 1045|               getAFieldExpr(x): [VariableAccess] x
# 1045|                   Type = [IntType] int
# 1045|                   ValueCategory = prvalue(load)
# 1046|     getStmt(5): [ExprStmt] ExprStmt
# 1046|       getExpr(): [FunctionCall] call to operator()
# 1046|           Type = [PlainCharType] char
# 1046|           ValueCategory = prvalue
# 1046|         getQualifier(): [VariableAccess] lambda_val
# 1046|             Type = [Closure,LocalClass] decltype([...](...){...})
# 1046|             ValueCategory = lvalue
# 1046|         getArgument(0): [Literal] 2
# 1046|             Type = [IntType] int
# 1046|             Value = [Literal] 2
# 1046|             ValueCategory = prvalue
# 1046|         getQualifier().getFullyConverted(): [CStyleCast] (const lambda [] type at line 1045, col. 21)...
# 1046|             Conversion = [GlvalueConversion] glvalue conversion
# 1046|             Type = [SpecifiedType] const lambda [] type at line 1045, col. 21
# 1046|             ValueCategory = lvalue
# 1046|         getArgument(0).getFullyConverted(): [CStyleCast] (float)...
# 1046|             Conversion = [IntegralToFloatingPointConversion] integral to floating point conversion
# 1046|             Type = [FloatType] float
# 1046|             Value = [CStyleCast] 2.0
# 1046|             ValueCategory = prvalue
# 1047|     getStmt(6): [DeclStmt] declaration
# 1047|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of lambda_ref_explicit
# 1047|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1047|         getVariable().getInitializer(): [Initializer] initializer for lambda_ref_explicit
# 1047|           getExpr(): [LambdaExpression] [...](...){...}
# 1047|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1047|               ValueCategory = prvalue
# 1047|             getInitializer(): [ClassAggregateLiteral] {...}
# 1047|                 Type = [Closure,LocalClass] decltype([...](...){...})
# 1047|                 ValueCategory = prvalue
# 1047|               getAFieldExpr(s): [VariableAccess] s
# 1047|                   Type = [LValueReferenceType] const String &
# 1047|                   ValueCategory = prvalue(load)
# 1047|               getAFieldExpr(s).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1047|                   Type = [LValueReferenceType] const String &
# 1047|                   ValueCategory = prvalue
# 1047|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1047|                     Type = [SpecifiedType] const String
# 1047|                     ValueCategory = lvalue
# 1048|     getStmt(7): [ExprStmt] ExprStmt
# 1048|       getExpr(): [FunctionCall] call to operator()
# 1048|           Type = [PlainCharType] char
# 1048|           ValueCategory = prvalue
# 1048|         getQualifier(): [VariableAccess] lambda_ref_explicit
# 1048|             Type = [Closure,LocalClass] decltype([...](...){...})
# 1048|             ValueCategory = lvalue
# 1048|         getArgument(0): [Literal] 3
# 1048|             Type = [IntType] int
# 1048|             Value = [Literal] 3
# 1048|             ValueCategory = prvalue
# 1048|         getQualifier().getFullyConverted(): [CStyleCast] (const lambda [] type at line 1047, col. 30)...
# 1048|             Conversion = [GlvalueConversion] glvalue conversion
# 1048|             Type = [SpecifiedType] const lambda [] type at line 1047, col. 30
# 1048|             ValueCategory = lvalue
# 1048|         getArgument(0).getFullyConverted(): [CStyleCast] (float)...
# 1048|             Conversion = [IntegralToFloatingPointConversion] integral to floating point conversion
# 1048|             Type = [FloatType] float
# 1048|             Value = [CStyleCast] 3.0
# 1048|             ValueCategory = prvalue
# 1049|     getStmt(8): [DeclStmt] declaration
# 1049|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of lambda_val_explicit
# 1049|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1049|         getVariable().getInitializer(): [Initializer] initializer for lambda_val_explicit
# 1049|           getExpr(): [LambdaExpression] [...](...){...}
# 1049|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1049|               ValueCategory = prvalue
# 1049|             getInitializer(): [ClassAggregateLiteral] {...}
# 1049|                 Type = [Closure,LocalClass] decltype([...](...){...})
# 1049|                 ValueCategory = prvalue
# 1049|               getAFieldExpr(s): [ConstructorCall] call to String
# 1049|                   Type = [VoidType] void
# 1049|                   ValueCategory = prvalue
# 1050|     getStmt(9): [ExprStmt] ExprStmt
# 1050|       getExpr(): [FunctionCall] call to operator()
# 1050|           Type = [PlainCharType] char
# 1050|           ValueCategory = prvalue
# 1050|         getQualifier(): [VariableAccess] lambda_val_explicit
# 1050|             Type = [Closure,LocalClass] decltype([...](...){...})
# 1050|             ValueCategory = lvalue
# 1050|         getArgument(0): [Literal] 4
# 1050|             Type = [IntType] int
# 1050|             Value = [Literal] 4
# 1050|             ValueCategory = prvalue
# 1050|         getQualifier().getFullyConverted(): [CStyleCast] (const lambda [] type at line 1049, col. 30)...
# 1050|             Conversion = [GlvalueConversion] glvalue conversion
# 1050|             Type = [SpecifiedType] const lambda [] type at line 1049, col. 30
# 1050|             ValueCategory = lvalue
# 1050|         getArgument(0).getFullyConverted(): [CStyleCast] (float)...
# 1050|             Conversion = [IntegralToFloatingPointConversion] integral to floating point conversion
# 1050|             Type = [FloatType] float
# 1050|             Value = [CStyleCast] 4.0
# 1050|             ValueCategory = prvalue
# 1051|     getStmt(10): [DeclStmt] declaration
# 1051|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of lambda_mixed_explicit
# 1051|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1051|         getVariable().getInitializer(): [Initializer] initializer for lambda_mixed_explicit
# 1051|           getExpr(): [LambdaExpression] [...](...){...}
# 1051|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1051|               ValueCategory = prvalue
# 1051|             getInitializer(): [ClassAggregateLiteral] {...}
# 1051|                 Type = [Closure,LocalClass] decltype([...](...){...})
# 1051|                 ValueCategory = prvalue
# 1051|               getAFieldExpr(s): [VariableAccess] s
# 1051|                   Type = [LValueReferenceType] const String &
# 1051|                   ValueCategory = prvalue(load)
# 1051|               getAFieldExpr(x): [VariableAccess] x
# 1051|                   Type = [IntType] int
# 1051|                   ValueCategory = prvalue(load)
# 1051|               getAFieldExpr(s).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1051|                   Type = [LValueReferenceType] const String &
# 1051|                   ValueCategory = prvalue
# 1051|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1051|                     Type = [SpecifiedType] const String
# 1051|                     ValueCategory = lvalue
# 1052|     getStmt(11): [ExprStmt] ExprStmt
# 1052|       getExpr(): [FunctionCall] call to operator()
# 1052|           Type = [PlainCharType] char
# 1052|           ValueCategory = prvalue
# 1052|         getQualifier(): [VariableAccess] lambda_mixed_explicit
# 1052|             Type = [Closure,LocalClass] decltype([...](...){...})
# 1052|             ValueCategory = lvalue
# 1052|         getArgument(0): [Literal] 5
# 1052|             Type = [IntType] int
# 1052|             Value = [Literal] 5
# 1052|             ValueCategory = prvalue
# 1052|         getQualifier().getFullyConverted(): [CStyleCast] (const lambda [] type at line 1051, col. 32)...
# 1052|             Conversion = [GlvalueConversion] glvalue conversion
# 1052|             Type = [SpecifiedType] const lambda [] type at line 1051, col. 32
# 1052|             ValueCategory = lvalue
# 1052|         getArgument(0).getFullyConverted(): [CStyleCast] (float)...
# 1052|             Conversion = [IntegralToFloatingPointConversion] integral to floating point conversion
# 1052|             Type = [FloatType] float
# 1052|             Value = [CStyleCast] 5.0
# 1052|             ValueCategory = prvalue
# 1053|     getStmt(12): [DeclStmt] declaration
# 1053|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of r
# 1053|           Type = [IntType] int
# 1053|         getVariable().getInitializer(): [Initializer] initializer for r
# 1053|           getExpr(): [SubExpr] ... - ...
# 1053|               Type = [IntType] int
# 1053|               ValueCategory = prvalue
# 1053|             getLeftOperand(): [VariableAccess] x
# 1053|                 Type = [IntType] int
# 1053|                 ValueCategory = prvalue(load)
# 1053|             getRightOperand(): [Literal] 1
# 1053|                 Type = [IntType] int
# 1053|                 Value = [Literal] 1
# 1053|                 ValueCategory = prvalue
# 1054|     getStmt(13): [DeclStmt] declaration
# 1054|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of lambda_inits
# 1054|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1054|         getVariable().getInitializer(): [Initializer] initializer for lambda_inits
# 1054|           getExpr(): [LambdaExpression] [...](...){...}
# 1054|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1054|               ValueCategory = prvalue
# 1054|             getInitializer(): [ClassAggregateLiteral] {...}
# 1054|                 Type = [Closure,LocalClass] decltype([...](...){...})
# 1054|                 ValueCategory = prvalue
# 1054|               getAFieldExpr(s): [VariableAccess] s
# 1054|                   Type = [LValueReferenceType] const String &
# 1054|                   ValueCategory = prvalue(load)
# 1054|               getAFieldExpr(x): [VariableAccess] x
# 1054|                   Type = [IntType] int
# 1054|                   ValueCategory = prvalue(load)
# 1054|               getAFieldExpr(i): [AddExpr] ... + ...
# 1054|                   Type = [IntType] int
# 1054|                   ValueCategory = prvalue
# 1054|                 getLeftOperand(): [VariableAccess] x
# 1054|                     Type = [IntType] int
# 1054|                     ValueCategory = prvalue(load)
# 1054|                 getRightOperand(): [Literal] 1
# 1054|                     Type = [IntType] int
# 1054|                     Value = [Literal] 1
# 1054|                     ValueCategory = prvalue
# 1054|               getAFieldExpr(j): [VariableAccess] r
# 1054|                   Type = [IntType] int
# 1054|                   ValueCategory = lvalue
# 1054|               getAFieldExpr(s).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1054|                   Type = [LValueReferenceType] const String &
# 1054|                   ValueCategory = prvalue
# 1054|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1054|                     Type = [SpecifiedType] const String
# 1054|                     ValueCategory = lvalue
# 1054|               getAFieldExpr(j).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1054|                   Type = [LValueReferenceType] int &
# 1054|                   ValueCategory = prvalue
# 1055|     getStmt(14): [ExprStmt] ExprStmt
# 1055|       getExpr(): [FunctionCall] call to operator()
# 1055|           Type = [PlainCharType] char
# 1055|           ValueCategory = prvalue
# 1055|         getQualifier(): [VariableAccess] lambda_inits
# 1055|             Type = [Closure,LocalClass] decltype([...](...){...})
# 1055|             ValueCategory = lvalue
# 1055|         getArgument(0): [Literal] 6
# 1055|             Type = [IntType] int
# 1055|             Value = [Literal] 6
# 1055|             ValueCategory = prvalue
# 1055|         getQualifier().getFullyConverted(): [CStyleCast] (const lambda [] type at line 1054, col. 23)...
# 1055|             Conversion = [GlvalueConversion] glvalue conversion
# 1055|             Type = [SpecifiedType] const lambda [] type at line 1054, col. 23
# 1055|             ValueCategory = lvalue
# 1055|         getArgument(0).getFullyConverted(): [CStyleCast] (float)...
# 1055|             Conversion = [IntegralToFloatingPointConversion] integral to floating point conversion
# 1055|             Type = [FloatType] float
# 1055|             Value = [CStyleCast] 6.0
# 1055|             ValueCategory = prvalue
# 1056|     getStmt(15): [ReturnStmt] return ...
# 1056|       getImplicitDestructorCall(0): [DestructorCall] call to ~<unnamed>
# 1056|           Type = [VoidType] void
# 1056|           ValueCategory = prvalue
# 1056|         getQualifier(): [VariableAccess] lambda_val_explicit
# 1056|             Type = [Closure,LocalClass] decltype([...](...){...})
# 1056|             ValueCategory = lvalue
# 1056|       getImplicitDestructorCall(1): [DestructorCall] call to ~<unnamed>
# 1056|           Type = [VoidType] void
# 1056|           ValueCategory = prvalue
# 1056|         getQualifier(): [VariableAccess] lambda_val
# 1056|             Type = [Closure,LocalClass] decltype([...](...){...})
# 1056|             ValueCategory = lvalue
# 1041| [CopyAssignmentOperator] (void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)& (void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)::operator=((void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23) const&)
# 1041|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1041, col. 23 &
# 1041| [CopyConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23) const&)
# 1041|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1041, col. 23 &
# 1041| [MoveConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)&&)
# 1041|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1041, col. 23 &&
# 1041|   <initializations>: 
# 1041|   getEntryPoint(): [BlockStmt] { ... }
# 1041|     getStmt(0): [ReturnStmt] return ...
# 1041| [Constructor] void (void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)::(unnamed constructor)()
# 1041|   <params>: 
# 1041| [MemberFunction] char (void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)::_FUN(float)
# 1041|   <params>: 
# 1041|     getParameter(0): [Parameter] f
# 1041|         Type = [FloatType] float
# 1041| [ConstMemberFunction] char (void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)::operator()(float) const
# 1041|   <params>: 
# 1041|     getParameter(0): [Parameter] f
# 1041|         Type = [FloatType] float
# 1041|   getEntryPoint(): [BlockStmt] { ... }
# 1041|     getStmt(0): [ReturnStmt] return ...
# 1041|       getExpr(): [CharLiteral] 65
# 1041|           Type = [PlainCharType] char
# 1041|           Value = [CharLiteral] 65
# 1041|           ValueCategory = prvalue
# 1041| [ConstMemberFunction,ConversionOperator] char(* (void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)::operator char (*)(float)() const)(float)
# 1041|   <params>: 
#-----|   getEntryPoint(): [BlockStmt] { ... }
# 1041|     getStmt(0): [ReturnStmt] return ...
# 1041|       getExpr(): [FunctionAccess] _FUN
# 1041|           Type = [FunctionPointerType] ..(*)(..)
# 1041|           ValueCategory = prvalue(load)
# 1043| [CopyAssignmentOperator] (void Lambda(int, String const&))::(lambda [] type at line 1043, col. 21)& (void Lambda(int, String const&))::(lambda [] type at line 1043, col. 21)::operator=((void Lambda(int, String const&))::(lambda [] type at line 1043, col. 21) const&)
# 1043|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1043, col. 21 &
# 1043| [CopyConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1043, col. 21)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1043, col. 21) const&)
# 1043|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1043, col. 21 &
# 1043| [MoveConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1043, col. 21)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1043, col. 21)&&)
# 1043|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1043, col. 21 &&
# 1043| [Constructor] void (void Lambda(int, String const&))::(lambda [] type at line 1043, col. 21)::(unnamed constructor)()
# 1043|   <params>: 
# 1043| [ConstMemberFunction] char (void Lambda(int, String const&))::(lambda [] type at line 1043, col. 21)::operator()(float) const
# 1043|   <params>: 
# 1043|     getParameter(0): [Parameter] f
# 1043|         Type = [FloatType] float
# 1043|   getEntryPoint(): [BlockStmt] { ... }
# 1043|     getStmt(0): [ReturnStmt] return ...
# 1043|       getExpr(): [ArrayExpr] access to array
# 1043|           Type = [PlainCharType] char
# 1043|           ValueCategory = prvalue(load)
# 1043|         getArrayBase(): [FunctionCall] call to c_str
# 1043|             Type = [PointerType] const char *
# 1043|             ValueCategory = prvalue
# 1043|           getQualifier(): [ImplicitThisFieldAccess,PointerFieldAccess] s
# 1043|               Type = [LValueReferenceType] const String &
# 1043|               ValueCategory = prvalue(load)
# 1043|             getQualifier(): [ThisExpr] this
# 1043|                 Type = [PointerType] const lambda [] type at line 1043, col. 21 *
# 1043|                 ValueCategory = prvalue(load)
# 1043|           getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1043|               Type = [SpecifiedType] const String
# 1043|               ValueCategory = lvalue
# 1043|         getArrayOffset(): [ImplicitThisFieldAccess,PointerFieldAccess] x
# 1043|             Type = [LValueReferenceType] int &
# 1043|             ValueCategory = prvalue(load)
# 1043|           getQualifier(): [ThisExpr] this
# 1043|               Type = [PointerType] const lambda [] type at line 1043, col. 21 *
# 1043|               ValueCategory = prvalue(load)
# 1043|         getArrayOffset().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1043|             Type = [IntType] int
# 1043|             ValueCategory = prvalue(load)
# 1045| [CopyAssignmentOperator] (void Lambda(int, String const&))::(lambda [] type at line 1045, col. 21)& (void Lambda(int, String const&))::(lambda [] type at line 1045, col. 21)::operator=((void Lambda(int, String const&))::(lambda [] type at line 1045, col. 21) const&)
# 1045|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1045, col. 21 &
# 1045| [CopyConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1045, col. 21)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1045, col. 21) const&)
# 1045|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1045, col. 21 &
# 1045| [MoveConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1045, col. 21)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1045, col. 21)&&)
# 1045|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1045, col. 21 &&
# 1045| [Constructor] void (void Lambda(int, String const&))::(lambda [] type at line 1045, col. 21)::(unnamed constructor)()
# 1045|   <params>: 
# 1045| [Destructor] void (void Lambda(int, String const&))::(lambda [] type at line 1045, col. 21)::~<unnamed>()
# 1045|   <params>: 
#-----|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [ReturnStmt] return ...
# 1045|   <destructions>: 
# 1045|     getDestruction(0): [DestructorFieldDestruction] destructor field destruction of s
# 1045|         Type = [SpecifiedType] const String
# 1045|         ValueCategory = prvalue
# 1045|       getExpr(): [DestructorCall] call to ~String
# 1045|           Type = [VoidType] void
# 1045|           ValueCategory = prvalue
# 1045|         getQualifier(): [ImplicitThisFieldAccess] s
# 1045|             Type = [SpecifiedType] const String
# 1045|             ValueCategory = lvalue
# 1045| [ConstMemberFunction] char (void Lambda(int, String const&))::(lambda [] type at line 1045, col. 21)::operator()(float) const
# 1045|   <params>: 
# 1045|     getParameter(0): [Parameter] f
# 1045|         Type = [FloatType] float
# 1045|   getEntryPoint(): [BlockStmt] { ... }
# 1045|     getStmt(0): [ReturnStmt] return ...
# 1045|       getExpr(): [ArrayExpr] access to array
# 1045|           Type = [PlainCharType] char
# 1045|           ValueCategory = prvalue(load)
# 1045|         getArrayBase(): [FunctionCall] call to c_str
# 1045|             Type = [PointerType] const char *
# 1045|             ValueCategory = prvalue
# 1045|           getQualifier(): [ImplicitThisFieldAccess,PointerFieldAccess] s
# 1045|               Type = [SpecifiedType] const String
# 1045|               ValueCategory = lvalue
# 1045|             getQualifier(): [ThisExpr] this
# 1045|                 Type = [PointerType] const lambda [] type at line 1045, col. 21 *
# 1045|                 ValueCategory = prvalue(load)
# 1045|         getArrayOffset(): [ImplicitThisFieldAccess,PointerFieldAccess] x
# 1045|             Type = [IntType] int
# 1045|             ValueCategory = prvalue(load)
# 1045|           getQualifier(): [ThisExpr] this
# 1045|               Type = [PointerType] const lambda [] type at line 1045, col. 21 *
# 1045|               ValueCategory = prvalue(load)
# 1047| [CopyAssignmentOperator] (void Lambda(int, String const&))::(lambda [] type at line 1047, col. 30)& (void Lambda(int, String const&))::(lambda [] type at line 1047, col. 30)::operator=((void Lambda(int, String const&))::(lambda [] type at line 1047, col. 30) const&)
# 1047|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1047, col. 30 &
# 1047| [CopyConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1047, col. 30)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1047, col. 30) const&)
# 1047|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1047, col. 30 &
# 1047| [MoveConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1047, col. 30)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1047, col. 30)&&)
# 1047|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1047, col. 30 &&
# 1047| [Constructor] void (void Lambda(int, String const&))::(lambda [] type at line 1047, col. 30)::(unnamed constructor)()
# 1047|   <params>: 
# 1047| [ConstMemberFunction] char (void Lambda(int, String const&))::(lambda [] type at line 1047, col. 30)::operator()(float) const
# 1047|   <params>: 
# 1047|     getParameter(0): [Parameter] f
# 1047|         Type = [FloatType] float
# 1047|   getEntryPoint(): [BlockStmt] { ... }
# 1047|     getStmt(0): [ReturnStmt] return ...
# 1047|       getExpr(): [ArrayExpr] access to array
# 1047|           Type = [PlainCharType] char
# 1047|           ValueCategory = prvalue(load)
# 1047|         getArrayBase(): [FunctionCall] call to c_str
# 1047|             Type = [PointerType] const char *
# 1047|             ValueCategory = prvalue
# 1047|           getQualifier(): [ImplicitThisFieldAccess,PointerFieldAccess] s
# 1047|               Type = [LValueReferenceType] const String &
# 1047|               ValueCategory = prvalue(load)
# 1047|             getQualifier(): [ThisExpr] this
# 1047|                 Type = [PointerType] const lambda [] type at line 1047, col. 30 *
# 1047|                 ValueCategory = prvalue(load)
# 1047|           getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1047|               Type = [SpecifiedType] const String
# 1047|               ValueCategory = lvalue
# 1047|         getArrayOffset(): [Literal] 0
# 1047|             Type = [IntType] int
# 1047|             Value = [Literal] 0
# 1047|             ValueCategory = prvalue
# 1049| [CopyAssignmentOperator] (void Lambda(int, String const&))::(lambda [] type at line 1049, col. 30)& (void Lambda(int, String const&))::(lambda [] type at line 1049, col. 30)::operator=((void Lambda(int, String const&))::(lambda [] type at line 1049, col. 30) const&)
# 1049|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1049, col. 30 &
# 1049| [CopyConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1049, col. 30)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1049, col. 30) const&)
# 1049|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1049, col. 30 &
# 1049| [MoveConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1049, col. 30)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1049, col. 30)&&)
# 1049|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1049, col. 30 &&
# 1049| [Constructor] void (void Lambda(int, String const&))::(lambda [] type at line 1049, col. 30)::(unnamed constructor)()
# 1049|   <params>: 
# 1049| [Destructor] void (void Lambda(int, String const&))::(lambda [] type at line 1049, col. 30)::~<unnamed>()
# 1049|   <params>: 
#-----|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [ReturnStmt] return ...
# 1049|   <destructions>: 
# 1049|     getDestruction(0): [DestructorFieldDestruction] destructor field destruction of s
# 1049|         Type = [SpecifiedType] const String
# 1049|         ValueCategory = prvalue
# 1049|       getExpr(): [DestructorCall] call to ~String
# 1049|           Type = [VoidType] void
# 1049|           ValueCategory = prvalue
# 1049|         getQualifier(): [ImplicitThisFieldAccess] s
# 1049|             Type = [SpecifiedType] const String
# 1049|             ValueCategory = lvalue
# 1049| [ConstMemberFunction] char (void Lambda(int, String const&))::(lambda [] type at line 1049, col. 30)::operator()(float) const
# 1049|   <params>: 
# 1049|     getParameter(0): [Parameter] f
# 1049|         Type = [FloatType] float
# 1049|   getEntryPoint(): [BlockStmt] { ... }
# 1049|     getStmt(0): [ReturnStmt] return ...
# 1049|       getExpr(): [ArrayExpr] access to array
# 1049|           Type = [PlainCharType] char
# 1049|           ValueCategory = prvalue(load)
# 1049|         getArrayBase(): [FunctionCall] call to c_str
# 1049|             Type = [PointerType] const char *
# 1049|             ValueCategory = prvalue
# 1049|           getQualifier(): [ImplicitThisFieldAccess,PointerFieldAccess] s
# 1049|               Type = [SpecifiedType] const String
# 1049|               ValueCategory = lvalue
# 1049|             getQualifier(): [ThisExpr] this
# 1049|                 Type = [PointerType] const lambda [] type at line 1049, col. 30 *
# 1049|                 ValueCategory = prvalue(load)
# 1049|         getArrayOffset(): [Literal] 0
# 1049|             Type = [IntType] int
# 1049|             Value = [Literal] 0
# 1049|             ValueCategory = prvalue
# 1051| [CopyAssignmentOperator] (void Lambda(int, String const&))::(lambda [] type at line 1051, col. 32)& (void Lambda(int, String const&))::(lambda [] type at line 1051, col. 32)::operator=((void Lambda(int, String const&))::(lambda [] type at line 1051, col. 32) const&)
# 1051|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1051, col. 32 &
# 1051| [CopyConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1051, col. 32)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1051, col. 32) const&)
# 1051|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1051, col. 32 &
# 1051| [MoveConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1051, col. 32)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1051, col. 32)&&)
# 1051|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1051, col. 32 &&
# 1051| [Constructor] void (void Lambda(int, String const&))::(lambda [] type at line 1051, col. 32)::(unnamed constructor)()
# 1051|   <params>: 
# 1051| [ConstMemberFunction] char (void Lambda(int, String const&))::(lambda [] type at line 1051, col. 32)::operator()(float) const
# 1051|   <params>: 
# 1051|     getParameter(0): [Parameter] f
# 1051|         Type = [FloatType] float
# 1051|   getEntryPoint(): [BlockStmt] { ... }
# 1051|     getStmt(0): [ReturnStmt] return ...
# 1051|       getExpr(): [ArrayExpr] access to array
# 1051|           Type = [PlainCharType] char
# 1051|           ValueCategory = prvalue(load)
# 1051|         getArrayBase(): [FunctionCall] call to c_str
# 1051|             Type = [PointerType] const char *
# 1051|             ValueCategory = prvalue
# 1051|           getQualifier(): [ImplicitThisFieldAccess,PointerFieldAccess] s
# 1051|               Type = [LValueReferenceType] const String &
# 1051|               ValueCategory = prvalue(load)
# 1051|             getQualifier(): [ThisExpr] this
# 1051|                 Type = [PointerType] const lambda [] type at line 1051, col. 32 *
# 1051|                 ValueCategory = prvalue(load)
# 1051|           getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1051|               Type = [SpecifiedType] const String
# 1051|               ValueCategory = lvalue
# 1051|         getArrayOffset(): [ImplicitThisFieldAccess,PointerFieldAccess] x
# 1051|             Type = [IntType] int
# 1051|             ValueCategory = prvalue(load)
# 1051|           getQualifier(): [ThisExpr] this
# 1051|               Type = [PointerType] const lambda [] type at line 1051, col. 32 *
# 1051|               ValueCategory = prvalue(load)
# 1054| [CopyAssignmentOperator] (void Lambda(int, String const&))::(lambda [] type at line 1054, col. 23)& (void Lambda(int, String const&))::(lambda [] type at line 1054, col. 23)::operator=((void Lambda(int, String const&))::(lambda [] type at line 1054, col. 23) const&)
# 1054|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1054, col. 23 &
# 1054| [CopyConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1054, col. 23)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1054, col. 23) const&)
# 1054|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1054, col. 23 &
# 1054| [MoveConstructor] void (void Lambda(int, String const&))::(lambda [] type at line 1054, col. 23)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1054, col. 23)&&)
# 1054|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1054, col. 23 &&
# 1054| [Constructor] void (void Lambda(int, String const&))::(lambda [] type at line 1054, col. 23)::(unnamed constructor)()
# 1054|   <params>: 
# 1054| [ConstMemberFunction] char (void Lambda(int, String const&))::(lambda [] type at line 1054, col. 23)::operator()(float) const
# 1054|   <params>: 
# 1054|     getParameter(0): [Parameter] f
# 1054|         Type = [FloatType] float
# 1054|   getEntryPoint(): [BlockStmt] { ... }
# 1054|     getStmt(0): [ReturnStmt] return ...
# 1054|       getExpr(): [ArrayExpr] access to array
# 1054|           Type = [PlainCharType] char
# 1054|           ValueCategory = prvalue(load)
# 1054|         getArrayBase(): [FunctionCall] call to c_str
# 1054|             Type = [PointerType] const char *
# 1054|             ValueCategory = prvalue
# 1054|           getQualifier(): [ImplicitThisFieldAccess,PointerFieldAccess] s
# 1054|               Type = [LValueReferenceType] const String &
# 1054|               ValueCategory = prvalue(load)
# 1054|             getQualifier(): [ThisExpr] this
# 1054|                 Type = [PointerType] const lambda [] type at line 1054, col. 23 *
# 1054|                 ValueCategory = prvalue(load)
# 1054|           getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1054|               Type = [SpecifiedType] const String
# 1054|               ValueCategory = lvalue
# 1054|         getArrayOffset(): [SubExpr] ... - ...
# 1054|             Type = [IntType] int
# 1054|             ValueCategory = prvalue
# 1054|           getLeftOperand(): [AddExpr] ... + ...
# 1054|               Type = [IntType] int
# 1054|               ValueCategory = prvalue
# 1054|             getLeftOperand(): [ImplicitThisFieldAccess,PointerFieldAccess] x
# 1054|                 Type = [IntType] int
# 1054|                 ValueCategory = prvalue(load)
# 1054|               getQualifier(): [ThisExpr] this
# 1054|                   Type = [PointerType] const lambda [] type at line 1054, col. 23 *
# 1054|                   ValueCategory = prvalue(load)
# 1054|             getRightOperand(): [PointerFieldAccess] i
# 1054|                 Type = [IntType] int
# 1054|                 ValueCategory = prvalue(load)
# 1054|               getQualifier(): [ThisExpr] this
# 1054|                   Type = [PointerType] const lambda [] type at line 1054, col. 23 *
# 1054|                   ValueCategory = prvalue(load)
# 1054|           getRightOperand(): [PointerFieldAccess] j
# 1054|               Type = [LValueReferenceType] int &
# 1054|               ValueCategory = prvalue(load)
# 1054|             getQualifier(): [ThisExpr] this
# 1054|                 Type = [PointerType] const lambda [] type at line 1054, col. 23 *
# 1054|                 ValueCategory = prvalue(load)
# 1054|           getRightOperand().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1054|               Type = [IntType] int
# 1054|               ValueCategory = prvalue(load)
# 1081| [Constructor] void std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::iterator()
# 1081|   <params>: 
# 1082| [Constructor] void std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::iterator(std::iterator<Category, type, std::ptrdiff_t, type*, type&> const&)
# 1082|   <params>: 
# 1082|     getParameter(0): [Parameter] other
# 1082|         Type = [LValueReferenceType] const iterator<Category, type, ptrdiff_t, type *, type &> &
# 1082| [CopyConstructor] void std::iterator<std::random_access_iterator_tag, ClassWithDestructor, std::ptrdiff_t, ClassWithDestructor*, ClassWithDestructor&>::iterator(std::iterator<std::random_access_iterator_tag, ClassWithDestructor, std::ptrdiff_t, ClassWithDestructor*, ClassWithDestructor&> const&)
# 1082|   <params>: 
# 1082|     getParameter(0): [Parameter] other
# 1082|         Type = [LValueReferenceType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &
# 1082| [CopyConstructor] void std::iterator<std::random_access_iterator_tag, String, std::ptrdiff_t, String*, String&>::iterator(std::iterator<std::random_access_iterator_tag, String, std::ptrdiff_t, String*, String&> const&)
# 1082|   <params>: 
# 1082|     getParameter(0): [Parameter] other
# 1082|         Type = [LValueReferenceType] const iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &> &
# 1082| [CopyConstructor] void std::iterator<std::random_access_iterator_tag, char, std::ptrdiff_t, char*, char&>::iterator(std::iterator<std::random_access_iterator_tag, char, std::ptrdiff_t, char*, char&> const&)
# 1082|   <params>: 
# 1082|     getParameter(0): [Parameter] other
# 1082|         Type = [LValueReferenceType] const iterator<random_access_iterator_tag, char, ptrdiff_t, char *, char &> &
# 1082| [CopyConstructor] void std::iterator<std::random_access_iterator_tag, int, std::ptrdiff_t, int*, int&>::iterator(std::iterator<std::random_access_iterator_tag, int, std::ptrdiff_t, int*, int&> const&)
# 1082|   <params>: 
# 1082|     getParameter(0): [Parameter] other
# 1082|         Type = [LValueReferenceType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &
# 1084| [MemberFunction] std::iterator<Category, value_type, difference_type, pointer_type, reference_type>& std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator++()
# 1084|   <params>: 
# 1084| [MemberFunction] std::iterator<std::random_access_iterator_tag, ClassWithDestructor, std::ptrdiff_t, ClassWithDestructor*, ClassWithDestructor&>& std::iterator<std::random_access_iterator_tag, ClassWithDestructor, std::ptrdiff_t, ClassWithDestructor*, ClassWithDestructor&>::operator++()
# 1084|   <params>: 
# 1084| [MemberFunction] std::iterator<std::random_access_iterator_tag, String, std::ptrdiff_t, String*, String&>& std::iterator<std::random_access_iterator_tag, String, std::ptrdiff_t, String*, String&>::operator++()
# 1084|   <params>: 
# 1084| [MemberFunction] std::iterator<std::random_access_iterator_tag, char, std::ptrdiff_t, char*, char&>& std::iterator<std::random_access_iterator_tag, char, std::ptrdiff_t, char*, char&>::operator++()
# 1084|   <params>: 
# 1084| [MemberFunction] std::iterator<std::random_access_iterator_tag, int, std::ptrdiff_t, int*, int&>& std::iterator<std::random_access_iterator_tag, int, std::ptrdiff_t, int*, int&>::operator++()
# 1084|   <params>: 
# 1085| [MemberFunction] std::iterator<Category, value_type, difference_type, pointer_type, reference_type> std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator++(int)
# 1085|   <params>: 
# 1085|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1085|         Type = [IntType] int
# 1086| [MemberFunction] std::iterator<Category, value_type, difference_type, pointer_type, reference_type>& std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator--()
# 1086|   <params>: 
# 1087| [MemberFunction] std::iterator<Category, value_type, difference_type, pointer_type, reference_type> std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator--(int)
# 1087|   <params>: 
# 1087|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1087|         Type = [IntType] int
# 1088| [ConstMemberFunction] bool std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator==(std::iterator<Category, value_type, difference_type, pointer_type, reference_type>) const
# 1088|   <params>: 
# 1088|     getParameter(0): [Parameter] other
# 1088|         Type = [TemplateClass] iterator<Category, value_type, difference_type, pointer_type, reference_type>
# 1089| [ConstMemberFunction] bool std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator!=(std::iterator<Category, value_type, difference_type, pointer_type, reference_type>) const
# 1089|   <params>: 
# 1089|     getParameter(0): [Parameter] other
# 1089|         Type = [TemplateClass] iterator<Category, value_type, difference_type, pointer_type, reference_type>
# 1089| [ConstMemberFunction] bool std::iterator<std::random_access_iterator_tag, ClassWithDestructor, std::ptrdiff_t, ClassWithDestructor*, ClassWithDestructor&>::operator!=(std::iterator<std::random_access_iterator_tag, ClassWithDestructor, std::ptrdiff_t, ClassWithDestructor*, ClassWithDestructor&>) const
# 1089|   <params>: 
# 1089|     getParameter(0): [Parameter] other
# 1089|         Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
# 1089| [ConstMemberFunction] bool std::iterator<std::random_access_iterator_tag, String, std::ptrdiff_t, String*, String&>::operator!=(std::iterator<std::random_access_iterator_tag, String, std::ptrdiff_t, String*, String&>) const
# 1089|   <params>: 
# 1089|     getParameter(0): [Parameter] other
# 1089|         Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>
# 1089| [ConstMemberFunction] bool std::iterator<std::random_access_iterator_tag, char, std::ptrdiff_t, char*, char&>::operator!=(std::iterator<std::random_access_iterator_tag, char, std::ptrdiff_t, char*, char&>) const
# 1089|   <params>: 
# 1089|     getParameter(0): [Parameter] other
# 1089|         Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, char, ptrdiff_t, char *, char &>
# 1089| [ConstMemberFunction] bool std::iterator<std::random_access_iterator_tag, int, std::ptrdiff_t, int*, int&>::operator!=(std::iterator<std::random_access_iterator_tag, int, std::ptrdiff_t, int*, int&>) const
# 1089|   <params>: 
# 1089|     getParameter(0): [Parameter] other
# 1089|         Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
# 1090| [ConstMemberFunction] ClassWithDestructor& std::iterator<std::random_access_iterator_tag, ClassWithDestructor, std::ptrdiff_t, ClassWithDestructor*, ClassWithDestructor&>::operator*() const
# 1090|   <params>: 
# 1090| [ConstMemberFunction] String& std::iterator<std::random_access_iterator_tag, String, std::ptrdiff_t, String*, String&>::operator*() const
# 1090|   <params>: 
# 1090| [ConstMemberFunction] char& std::iterator<std::random_access_iterator_tag, char, std::ptrdiff_t, char*, char&>::operator*() const
# 1090|   <params>: 
# 1090| [ConstMemberFunction] int& std::iterator<std::random_access_iterator_tag, int, std::ptrdiff_t, int*, int&>::operator*() const
# 1090|   <params>: 
# 1090| [ConstMemberFunction] reference_type std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator*() const
# 1090|   <params>: 
# 1091| [ConstMemberFunction] pointer_type std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator->() const
# 1091|   <params>: 
# 1092| [MemberFunction] std::iterator<Category, value_type, difference_type, pointer_type, reference_type> std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator+(int)
# 1092|   <params>: 
# 1092|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1092|         Type = [IntType] int
# 1093| [MemberFunction] std::iterator<Category, value_type, difference_type, pointer_type, reference_type> std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator-(int)
# 1093|   <params>: 
# 1093|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1093|         Type = [IntType] int
# 1094| [MemberFunction] std::iterator<Category, value_type, difference_type, pointer_type, reference_type>& std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator+=(int)
# 1094|   <params>: 
# 1094|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1094|         Type = [IntType] int
# 1095| [MemberFunction] std::iterator<Category, value_type, difference_type, pointer_type, reference_type>& std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator-=(int)
# 1095|   <params>: 
# 1095|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1095|         Type = [IntType] int
# 1096| [MemberFunction] int std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator-(std::iterator<Category, value_type, difference_type, pointer_type, reference_type>)
# 1096|   <params>: 
# 1096|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1096|         Type = [TemplateClass] iterator<Category, value_type, difference_type, pointer_type, reference_type>
# 1097| [MemberFunction] reference_type std::iterator<Category, value_type, difference_type, pointer_type, reference_type>::operator[](int)
# 1097|   <params>: 
# 1097|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1097|         Type = [IntType] int
# 1100| [CopyAssignmentOperator] std::input_iterator_tag& std::input_iterator_tag::operator=(std::input_iterator_tag const&)
# 1100|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const input_iterator_tag &
# 1100| [MoveAssignmentOperator] std::input_iterator_tag& std::input_iterator_tag::operator=(std::input_iterator_tag&&)
# 1100|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] input_iterator_tag &&
# 1101| [CopyAssignmentOperator] std::forward_iterator_tag& std::forward_iterator_tag::operator=(std::forward_iterator_tag const&)
# 1101|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const forward_iterator_tag &
# 1101| [MoveAssignmentOperator] std::forward_iterator_tag& std::forward_iterator_tag::operator=(std::forward_iterator_tag&&)
# 1101|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] forward_iterator_tag &&
# 1101| [Constructor] void std::forward_iterator_tag::forward_iterator_tag()
# 1101|   <params>: 
# 1102| [CopyAssignmentOperator] std::bidirectional_iterator_tag& std::bidirectional_iterator_tag::operator=(std::bidirectional_iterator_tag const&)
# 1102|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const bidirectional_iterator_tag &
# 1102| [MoveAssignmentOperator] std::bidirectional_iterator_tag& std::bidirectional_iterator_tag::operator=(std::bidirectional_iterator_tag&&)
# 1102|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] bidirectional_iterator_tag &&
# 1102| [Constructor] void std::bidirectional_iterator_tag::bidirectional_iterator_tag()
# 1102|   <params>: 
# 1103| [CopyAssignmentOperator] std::random_access_iterator_tag& std::random_access_iterator_tag::operator=(std::random_access_iterator_tag const&)
# 1103|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const random_access_iterator_tag &
# 1103| [MoveAssignmentOperator] std::random_access_iterator_tag& std::random_access_iterator_tag::operator=(std::random_access_iterator_tag&&)
# 1103|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] random_access_iterator_tag &&
# 1103| [Constructor] void std::random_access_iterator_tag::random_access_iterator_tag()
# 1103|   <params>: 
# 1105| [CopyAssignmentOperator] std::output_iterator_tag& std::output_iterator_tag::operator=(std::output_iterator_tag const&)
# 1105|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const output_iterator_tag &
# 1105| [MoveAssignmentOperator] std::output_iterator_tag& std::output_iterator_tag::operator=(std::output_iterator_tag&&)
# 1105|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] output_iterator_tag &&
# 1109| [Constructor] void std::vector<ClassWithDestructor>::vector(ClassWithDestructor)
# 1109|   <params>: 
# 1109|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1109|         Type = [Class] ClassWithDestructor
# 1109| [Constructor] void std::vector<String>::vector(String)
# 1109|   <params>: 
# 1109|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1109|         Type = [Struct] String
# 1109| [Constructor] void std::vector<T>::vector(T)
# 1109|   <params>: 
# 1109|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1109|         Type = [TemplateParameter] T
# 1109| [Constructor] void std::vector<char>::vector(char)
# 1109|   <params>: 
# 1109|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1109|         Type = [PlainCharType] char
# 1109| [Constructor] void std::vector<int>::vector(int)
# 1109|   <params>: 
# 1109|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1109|         Type = [IntType] int
# 1110| [Destructor] void std::vector<ClassWithDestructor>::~vector()
# 1110|   <params>: 
# 1110| [Destructor] void std::vector<String>::~vector()
# 1110|   <params>: 
# 1110| [Destructor] void std::vector<T>::~vector()
# 1110|   <params>: 
# 1110| [Destructor] void std::vector<char>::~vector()
# 1110|   <params>: 
# 1110| [Destructor] void std::vector<int>::~vector()
# 1110|   <params>: 
# 1115| [ConstMemberFunction] std::vector<ClassWithDestructor>::iterator std::vector<ClassWithDestructor>::begin() const
# 1115|   <params>: 
# 1115| [ConstMemberFunction] std::vector<String>::iterator std::vector<String>::begin() const
# 1115|   <params>: 
# 1115| [ConstMemberFunction] std::vector<T>::iterator std::vector<T>::begin() const
# 1115|   <params>: 
# 1115| [ConstMemberFunction] std::vector<char>::iterator std::vector<char>::begin() const
# 1115|   <params>: 
# 1115| [ConstMemberFunction] std::vector<int>::iterator std::vector<int>::begin() const
# 1115|   <params>: 
# 1116| [ConstMemberFunction] std::vector<ClassWithDestructor>::iterator std::vector<ClassWithDestructor>::end() const
# 1116|   <params>: 
# 1116| [ConstMemberFunction] std::vector<String>::iterator std::vector<String>::end() const
# 1116|   <params>: 
# 1116| [ConstMemberFunction] std::vector<T>::iterator std::vector<T>::end() const
# 1116|   <params>: 
# 1116| [ConstMemberFunction] std::vector<char>::iterator std::vector<char>::end() const
# 1116|   <params>: 
# 1116| [ConstMemberFunction] std::vector<int>::iterator std::vector<int>::end() const
# 1116|   <params>: 
# 1120| [Operator,TemplateFunction,TopLevelFunction] bool std::operator==<T>(iterator, iterator)
# 1120|   <params>: 
# 1120|     getParameter(0): [Parameter] left
# 1120|         Type = [TemplateParameter] iterator
# 1120|     getParameter(1): [Parameter] right
# 1120|         Type = [TemplateParameter] iterator
# 1122| [Operator,TemplateFunction,TopLevelFunction] bool std::operator!=<T>(iterator, iterator)
# 1122|   <params>: 
# 1122|     getParameter(0): [Parameter] left
# 1122|         Type = [TemplateParameter] iterator
# 1122|     getParameter(1): [Parameter] right
# 1122|         Type = [TemplateParameter] iterator
# 1126| [TopLevelFunction] void RangeBasedFor(std::vector<int> const&)
# 1126|   <params>: 
# 1126|     getParameter(0): [Parameter] v
# 1126|         Type = [LValueReferenceType] const vector<int> &
# 1126|   getEntryPoint(): [BlockStmt] { ... }
# 1127|     getStmt(0): [RangeBasedForStmt] for(...:...) ...
# 1127|       getChild(1): [DeclStmt] declaration
# 1127|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__range)
# 1127|             Type = [LValueReferenceType] const vector<int> &
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__range)
# 1127|             getExpr(): [VariableAccess] v
# 1127|                 Type = [LValueReferenceType] const vector<int> &
# 1127|                 ValueCategory = prvalue(load)
# 1127|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1127|                 Type = [LValueReferenceType] const vector<int> &
# 1127|                 ValueCategory = prvalue
# 1127|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1127|                   Type = [SpecifiedType] const vector<int>
# 1127|                   ValueCategory = lvalue
# 1127|       getBeginEndDeclaration(): [DeclStmt] declaration
# 1127|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__begin)
# 1127|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__begin)
# 1127|             getExpr(): [FunctionCall] call to begin
# 1127|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 1127|                 ValueCategory = prvalue
# 1127|               getQualifier(): [VariableAccess] (__range)
# 1127|                   Type = [LValueReferenceType] const vector<int> &
# 1127|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                   Type = [SpecifiedType] const vector<int>
#-----|                   ValueCategory = lvalue
# 1127|         getDeclarationEntry(1): [VariableDeclarationEntry] declaration of (__end)
# 1127|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__end)
# 1127|             getExpr(): [FunctionCall] call to end
# 1127|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 1127|                 ValueCategory = prvalue
# 1127|               getQualifier(): [VariableAccess] (__range)
# 1127|                   Type = [LValueReferenceType] const vector<int> &
# 1127|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                   Type = [SpecifiedType] const vector<int>
#-----|                   ValueCategory = lvalue
# 1127|       getCondition(): [FunctionCall] call to operator!=
# 1127|           Type = [BoolType] bool
# 1127|           ValueCategory = prvalue
# 1127|         getQualifier(): [VariableAccess] (__begin)
# 1127|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 1127|             ValueCategory = lvalue
# 1127|         getArgument(0): [ConstructorCall] call to iterator
# 1127|             Type = [VoidType] void
# 1127|             ValueCategory = prvalue
# 1127|           getArgument(0): [VariableAccess] (__end)
# 1127|               Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 1127|               ValueCategory = lvalue
#-----|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|               Type = [LValueReferenceType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &
#-----|               ValueCategory = prvalue
#-----|             getExpr(): [CStyleCast] (const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)...
#-----|                 Conversion = [GlvalueConversion] glvalue conversion
#-----|                 Type = [SpecifiedType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
#-----|                 ValueCategory = lvalue
#-----|         getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)...
#-----|             Conversion = [GlvalueConversion] glvalue conversion
#-----|             Type = [SpecifiedType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
#-----|             ValueCategory = lvalue
#-----|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
#-----|             ValueCategory = lvalue
# 1127|       getUpdate(): [FunctionCall] call to operator++
# 1127|           Type = [LValueReferenceType] iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &
# 1127|           ValueCategory = prvalue
# 1127|         getQualifier(): [VariableAccess] (__begin)
# 1127|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 1127|             ValueCategory = lvalue
# 1127|       getChild(5): [DeclStmt] declaration
# 1127|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of e
# 1127|             Type = [IntType] int
# 1127|           getVariable().getInitializer(): [Initializer] initializer for e
# 1127|             getExpr(): [OverloadedPointerDereferenceExpr] call to operator*
# 1127|                 Type = [LValueReferenceType] int &
# 1127|                 ValueCategory = prvalue
# 1127|               getQualifier(): [VariableAccess] (__begin)
# 1127|                   Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 1127|                   ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
#-----|                   ValueCategory = lvalue
# 1127|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1127|                 Type = [IntType] int
# 1127|                 ValueCategory = prvalue(load)
# 1127|       getStmt(): [BlockStmt] { ... }
# 1128|         getStmt(0): [IfStmt] if (...) ... 
# 1128|           getCondition(): [GTExpr] ... > ...
# 1128|               Type = [BoolType] bool
# 1128|               ValueCategory = prvalue
# 1128|             getGreaterOperand(): [VariableAccess] e
# 1128|                 Type = [IntType] int
# 1128|                 ValueCategory = prvalue(load)
# 1128|             getLesserOperand(): [Literal] 0
# 1128|                 Type = [IntType] int
# 1128|                 Value = [Literal] 0
# 1128|                 ValueCategory = prvalue
# 1128|           getThen(): [BlockStmt] { ... }
# 1129|             getStmt(0): [ContinueStmt] continue;
# 1127|         getStmt(1): [LabelStmt] label ...:
# 1127|       getUpdate().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1127|           Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
# 1127|           ValueCategory = lvalue
# 1133|     getStmt(1): [RangeBasedForStmt] for(...:...) ...
# 1133|       getChild(1): [DeclStmt] declaration
# 1133|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__range)
# 1133|             Type = [LValueReferenceType] const vector<int> &
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__range)
# 1133|             getExpr(): [VariableAccess] v
# 1133|                 Type = [LValueReferenceType] const vector<int> &
# 1133|                 ValueCategory = prvalue(load)
# 1133|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1133|                 Type = [LValueReferenceType] const vector<int> &
# 1133|                 ValueCategory = prvalue
# 1133|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1133|                   Type = [SpecifiedType] const vector<int>
# 1133|                   ValueCategory = lvalue
# 1133|       getBeginEndDeclaration(): [DeclStmt] declaration
# 1133|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__begin)
# 1133|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__begin)
# 1133|             getExpr(): [FunctionCall] call to begin
# 1133|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 1133|                 ValueCategory = prvalue
# 1133|               getQualifier(): [VariableAccess] (__range)
# 1133|                   Type = [LValueReferenceType] const vector<int> &
# 1133|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                   Type = [SpecifiedType] const vector<int>
#-----|                   ValueCategory = lvalue
# 1133|         getDeclarationEntry(1): [VariableDeclarationEntry] declaration of (__end)
# 1133|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__end)
# 1133|             getExpr(): [FunctionCall] call to end
# 1133|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 1133|                 ValueCategory = prvalue
# 1133|               getQualifier(): [VariableAccess] (__range)
# 1133|                   Type = [LValueReferenceType] const vector<int> &
# 1133|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                   Type = [SpecifiedType] const vector<int>
#-----|                   ValueCategory = lvalue
# 1133|       getCondition(): [FunctionCall] call to operator!=
# 1133|           Type = [BoolType] bool
# 1133|           ValueCategory = prvalue
# 1133|         getQualifier(): [VariableAccess] (__begin)
# 1133|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 1133|             ValueCategory = lvalue
# 1133|         getArgument(0): [ConstructorCall] call to iterator
# 1133|             Type = [VoidType] void
# 1133|             ValueCategory = prvalue
# 1133|           getArgument(0): [VariableAccess] (__end)
# 1133|               Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 1133|               ValueCategory = lvalue
#-----|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|               Type = [LValueReferenceType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &
#-----|               ValueCategory = prvalue
#-----|             getExpr(): [CStyleCast] (const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)...
#-----|                 Conversion = [GlvalueConversion] glvalue conversion
#-----|                 Type = [SpecifiedType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
#-----|                 ValueCategory = lvalue
#-----|         getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)...
#-----|             Conversion = [GlvalueConversion] glvalue conversion
#-----|             Type = [SpecifiedType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
#-----|             ValueCategory = lvalue
#-----|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
#-----|             ValueCategory = lvalue
# 1133|       getUpdate(): [FunctionCall] call to operator++
# 1133|           Type = [LValueReferenceType] iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &
# 1133|           ValueCategory = prvalue
# 1133|         getQualifier(): [VariableAccess] (__begin)
# 1133|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 1133|             ValueCategory = lvalue
# 1133|       getChild(5): [DeclStmt] declaration
# 1133|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of e
# 1133|             Type = [LValueReferenceType] const int &
# 1133|           getVariable().getInitializer(): [Initializer] initializer for e
# 1133|             getExpr(): [OverloadedPointerDereferenceExpr] call to operator*
# 1133|                 Type = [LValueReferenceType] int &
# 1133|                 ValueCategory = prvalue
# 1133|               getQualifier(): [VariableAccess] (__begin)
# 1133|                   Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 1133|                   ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
#-----|                   ValueCategory = lvalue
# 1133|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1133|                 Type = [LValueReferenceType] const int &
# 1133|                 ValueCategory = prvalue
# 1133|               getExpr(): [CStyleCast] (const int)...
# 1133|                   Conversion = [GlvalueConversion] glvalue conversion
# 1133|                   Type = [SpecifiedType] const int
# 1133|                   ValueCategory = lvalue
# 1133|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1133|                     Type = [IntType] int
# 1133|                     ValueCategory = lvalue
# 1133|       getStmt(): [BlockStmt] { ... }
# 1134|         getStmt(0): [IfStmt] if (...) ... 
# 1134|           getCondition(): [LTExpr] ... < ...
# 1134|               Type = [BoolType] bool
# 1134|               ValueCategory = prvalue
# 1134|             getLesserOperand(): [VariableAccess] e
# 1134|                 Type = [LValueReferenceType] const int &
# 1134|                 ValueCategory = prvalue(load)
# 1134|             getGreaterOperand(): [Literal] 5
# 1134|                 Type = [IntType] int
# 1134|                 Value = [Literal] 5
# 1134|                 ValueCategory = prvalue
# 1134|             getLesserOperand().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1134|                 Type = [IntType] int
# 1134|                 ValueCategory = prvalue(load)
# 1134|           getThen(): [BlockStmt] { ... }
# 1135|             getStmt(0): [BreakStmt] break;
# 1133|       getUpdate().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1133|           Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
# 1133|           ValueCategory = lvalue
# 1137|     getStmt(2): [LabelStmt] label ...:
# 1138|     getStmt(3): [ReturnStmt] return ...
# 1157| [TopLevelFunction] int AsmStmt(int)
# 1157|   <params>: 
# 1157|     getParameter(0): [Parameter] x
# 1157|         Type = [IntType] int
# 1157|   getEntryPoint(): [BlockStmt] { ... }
# 1158|     getStmt(0): [AsmStmt] asm statement
# 1159|     getStmt(1): [ReturnStmt] return ...
# 1159|       getExpr(): [VariableAccess] x
# 1159|           Type = [IntType] int
# 1159|           ValueCategory = prvalue(load)
# 1162| [TopLevelFunction] void AsmStmtWithOutputs(unsigned int&, unsigned int, unsigned int&, unsigned int)
# 1162|   <params>: 
# 1162|     getParameter(0): [Parameter] a
# 1162|         Type = [LValueReferenceType] unsigned int &
# 1162|     getParameter(1): [Parameter] b
# 1162|         Type = [IntType] unsigned int
# 1162|     getParameter(2): [Parameter] c
# 1162|         Type = [LValueReferenceType] unsigned int &
# 1162|     getParameter(3): [Parameter] d
# 1162|         Type = [IntType] unsigned int
# 1163|   getEntryPoint(): [BlockStmt] { ... }
# 1164|     getStmt(0): [AsmStmt] asm statement
# 1167|       getChild(0): [VariableAccess] a
# 1167|           Type = [LValueReferenceType] unsigned int &
# 1167|           ValueCategory = prvalue(load)
# 1167|       getChild(1): [VariableAccess] b
# 1167|           Type = [IntType] unsigned int
# 1167|           ValueCategory = lvalue
# 1167|       getChild(2): [VariableAccess] c
# 1167|           Type = [LValueReferenceType] unsigned int &
# 1167|           ValueCategory = prvalue(load)
# 1167|       getChild(3): [VariableAccess] d
# 1167|           Type = [IntType] unsigned int
# 1167|           ValueCategory = prvalue(load)
# 1167|       getChild(0).getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1167|           Type = [IntType] unsigned int
# 1167|           ValueCategory = lvalue
# 1167|       getChild(2).getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1167|           Type = [IntType] unsigned int
# 1167|           ValueCategory = prvalue(load)
# 1169|     getStmt(1): [ReturnStmt] return ...
# 1171| [TopLevelFunction] void ExternDeclarations()
# 1171|   <params>: 
# 1172|   getEntryPoint(): [BlockStmt] { ... }
# 1173|     getStmt(0): [DeclStmt] declaration
# 1173|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of g
# 1173|           Type = [IntType] int
# 1174|     getStmt(1): [DeclStmt] declaration
# 1174|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 1174|           Type = [IntType] int
# 1175|     getStmt(2): [DeclStmt] declaration
# 1175|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 1175|           Type = [IntType] int
# 1175|       getDeclarationEntry(1): [FunctionDeclarationEntry] declaration of f
# 1175|           Type = [IntType] int
# 1176|     getStmt(3): [DeclStmt] declaration
# 1176|       getDeclarationEntry(0): [FunctionDeclarationEntry] declaration of z
# 1176|           Type = [IntType] int
# 1176|       getDeclarationEntry(1): [FunctionDeclarationEntry] declaration of w
# 1176|           Type = [IntType] int
# 1176|       getDeclarationEntry(2): [VariableDeclarationEntry] definition of h
# 1176|           Type = [IntType] int
# 1177|     getStmt(4): [DeclStmt] declaration
# 1177|       getDeclarationEntry(0): [TypeDeclarationEntry] declaration of d
# 1177|           Type = [CTypedefType,LocalTypedefType] d
# 1178|     getStmt(5): [ReturnStmt] return ...
# 1175| [TopLevelFunction] int f(float)
# 1175|   <params>: 
# 1175|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1175|         Type = [FloatType] float
# 1176| [TopLevelFunction] int z(float)
# 1176|   <params>: 
# 1176|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1176|         Type = [FloatType] float
# 1176| [TopLevelFunction] int w(float)
# 1176|   <params>: 
# 1176|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1176|         Type = [FloatType] float
# 1186| [TopLevelFunction] void ExternDeclarationsInMacro()
# 1186|   <params>: 
# 1187|   getEntryPoint(): [BlockStmt] { ... }
# 1188|     getStmt(0): [DeclStmt] declaration
# 1188|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of g
# 1188|           Type = [IntType] int
# 1188|     getStmt(1): [ForStmt] for(...;...;...) ...
# 1188|       getInitialization(): [DeclStmt] declaration
# 1188|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
# 1188|             Type = [IntType] int
# 1188|           getVariable().getInitializer(): [Initializer] initializer for i
# 1188|             getExpr(): [Literal] 0
# 1188|                 Type = [IntType] int
# 1188|                 Value = [Literal] 0
# 1188|                 ValueCategory = prvalue
# 1188|       getCondition(): [LTExpr] ... < ...
# 1188|           Type = [BoolType] bool
# 1188|           ValueCategory = prvalue
# 1188|         getLesserOperand(): [VariableAccess] i
# 1188|             Type = [IntType] int
# 1188|             ValueCategory = prvalue(load)
# 1188|         getGreaterOperand(): [Literal] 10
# 1188|             Type = [IntType] int
# 1188|             Value = [Literal] 10
# 1188|             ValueCategory = prvalue
# 1188|       getUpdate(): [PrefixIncrExpr] ++ ...
# 1188|           Type = [IntType] int
# 1188|           ValueCategory = lvalue
# 1188|         getOperand(): [VariableAccess] i
# 1188|             Type = [IntType] int
# 1188|             ValueCategory = lvalue
# 1188|       getStmt(): [BlockStmt] { ... }
# 1188|         getStmt(0): [DeclStmt] declaration
# 1188|           getDeclarationEntry(0): [VariableDeclarationEntry] declaration of g
# 1188|               Type = [IntType] int
# 1188|     getStmt(2): [EmptyStmt] ;
# 1189|     getStmt(3): [ReturnStmt] return ...
# 1191| [TopLevelFunction] void TryCatchNoCatchAny(bool)
# 1191|   <params>: 
# 1191|     getParameter(0): [Parameter] b
# 1191|         Type = [BoolType] bool
# 1191|   getEntryPoint(): [BlockStmt] { ... }
# 1192|     getStmt(0): [TryStmt] try { ... }
# 1192|       getStmt(): [BlockStmt] { ... }
# 1193|         getStmt(0): [DeclStmt] declaration
# 1193|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 1193|               Type = [IntType] int
# 1193|             getVariable().getInitializer(): [Initializer] initializer for x
# 1193|               getExpr(): [Literal] 5
# 1193|                   Type = [IntType] int
# 1193|                   Value = [Literal] 5
# 1193|                   ValueCategory = prvalue
# 1194|         getStmt(1): [IfStmt] if (...) ... 
# 1194|           getCondition(): [VariableAccess] b
# 1194|               Type = [BoolType] bool
# 1194|               ValueCategory = prvalue(load)
# 1194|           getThen(): [BlockStmt] { ... }
# 1195|             getStmt(0): [ExprStmt] ExprStmt
# 1195|               getExpr(): [ThrowExpr] throw ...
# 1195|                   Type = [PointerType] const char *
# 1195|                   ValueCategory = prvalue
# 1195|                 getExpr(): string literal
# 1195|                     Type = [ArrayType] const char[15]
# 1195|                     Value = [StringLiteral] "string literal"
# 1195|                     ValueCategory = lvalue
# 1195|                 getExpr().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1195|                     Type = [PointerType] const char *
# 1195|                     ValueCategory = prvalue
# 1197|           getElse(): [IfStmt] if (...) ... 
# 1197|             getCondition(): [LTExpr] ... < ...
# 1197|                 Type = [BoolType] bool
# 1197|                 ValueCategory = prvalue
# 1197|               getLesserOperand(): [VariableAccess] x
# 1197|                   Type = [IntType] int
# 1197|                   ValueCategory = prvalue(load)
# 1197|               getGreaterOperand(): [Literal] 2
# 1197|                   Type = [IntType] int
# 1197|                   Value = [Literal] 2
# 1197|                   ValueCategory = prvalue
# 1197|             getThen(): [BlockStmt] { ... }
# 1198|               getStmt(0): [ExprStmt] ExprStmt
# 1198|                 getExpr(): [AssignExpr] ... = ...
# 1198|                     Type = [IntType] int
# 1198|                     ValueCategory = lvalue
# 1198|                   getLValue(): [VariableAccess] x
# 1198|                       Type = [IntType] int
# 1198|                       ValueCategory = lvalue
# 1198|                   getRValue(): [ConditionalExpr] ... ? ... : ...
# 1198|                       Type = [IntType] int
# 1198|                       ValueCategory = prvalue
# 1198|                     getCondition(): [VariableAccess] b
# 1198|                         Type = [BoolType] bool
# 1198|                         ValueCategory = prvalue(load)
# 1198|                     getThen(): [Literal] 7
# 1198|                         Type = [IntType] int
# 1198|                         Value = [Literal] 7
# 1198|                         ValueCategory = prvalue
# 1198|                     getElse(): [ThrowExpr] throw ...
# 1198|                         Type = [Struct] String
# 1198|                         ValueCategory = prvalue
# 1198|                       getExpr(): [ConstructorCall] call to String
# 1198|                           Type = [VoidType] void
# 1198|                           ValueCategory = prvalue
# 1198|                         getArgument(0): String object
# 1198|                             Type = [ArrayType] const char[14]
# 1198|                             Value = [StringLiteral] "String object"
# 1198|                             ValueCategory = lvalue
# 1198|                         getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1198|                             Type = [PointerType] const char *
# 1198|                             ValueCategory = prvalue
# 1200|         getStmt(2): [ExprStmt] ExprStmt
# 1200|           getExpr(): [AssignExpr] ... = ...
# 1200|               Type = [IntType] int
# 1200|               ValueCategory = lvalue
# 1200|             getLValue(): [VariableAccess] x
# 1200|                 Type = [IntType] int
# 1200|                 ValueCategory = lvalue
# 1200|             getRValue(): [Literal] 7
# 1200|                 Type = [IntType] int
# 1200|                 Value = [Literal] 7
# 1200|                 ValueCategory = prvalue
# 1202|       getChild(1): [Handler] <handler>
# 1202|         getBlock(): [CatchBlock] { ... }
# 1203|           getStmt(0): [ExprStmt] ExprStmt
# 1203|             getExpr(): [ThrowExpr] throw ...
# 1203|                 Type = [Struct] String
# 1203|                 ValueCategory = prvalue
# 1203|               getExpr(): [ConstructorCall] call to String
# 1203|                   Type = [VoidType] void
# 1203|                   ValueCategory = prvalue
# 1203|                 getArgument(0): [VariableAccess] s
# 1203|                     Type = [PointerType] const char *
# 1203|                     ValueCategory = prvalue(load)
# 1205|       getChild(2): [Handler] <handler>
# 1205|         getBlock(): [CatchBlock] { ... }
# 1207|     getStmt(1): [ReturnStmt] return ...
# 1211| [TopLevelFunction] void VectorTypes(int)
# 1211|   <params>: 
# 1211|     getParameter(0): [Parameter] i
# 1211|         Type = [IntType] int
# 1211|   getEntryPoint(): [BlockStmt] { ... }
# 1212|     getStmt(0): [DeclStmt] declaration
# 1212|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of vi4
# 1212|           Type = [SpecifiedType] __attribute((vector_size(16UL))) int
# 1212|         getVariable().getInitializer(): [Initializer] initializer for vi4
# 1212|           getExpr(): [VectorAggregateLiteral] {...}
# 1212|               Type = [GNUVectorType] __attribute((vector_size(16UL))) int
# 1212|               ValueCategory = prvalue
# 1212|             getAnElementExpr(0): [Literal] 0
# 1212|                 Type = [IntType] int
# 1212|                 Value = [Literal] 0
# 1212|                 ValueCategory = prvalue
# 1212|             getAnElementExpr(1): [Literal] 1
# 1212|                 Type = [IntType] int
# 1212|                 Value = [Literal] 1
# 1212|                 ValueCategory = prvalue
# 1212|             getAnElementExpr(2): [Literal] 2
# 1212|                 Type = [IntType] int
# 1212|                 Value = [Literal] 2
# 1212|                 ValueCategory = prvalue
# 1212|             getAnElementExpr(3): [Literal] 3
# 1212|                 Type = [IntType] int
# 1212|                 Value = [Literal] 3
# 1212|                 ValueCategory = prvalue
# 1213|     getStmt(1): [DeclStmt] declaration
# 1213|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 1213|           Type = [IntType] int
# 1213|         getVariable().getInitializer(): [Initializer] initializer for x
# 1213|           getExpr(): [ArrayExpr] access to array
# 1213|               Type = [IntType] int
# 1213|               ValueCategory = prvalue(load)
# 1213|             getArrayBase(): [VariableAccess] vi4
# 1213|                 Type = [SpecifiedType] __attribute((vector_size(16UL))) int
# 1213|                 ValueCategory = lvalue
# 1213|             getArrayOffset(): [VariableAccess] i
# 1213|                 Type = [IntType] int
# 1213|                 ValueCategory = prvalue(load)
# 1214|     getStmt(2): [ExprStmt] ExprStmt
# 1214|       getExpr(): [AssignExpr] ... = ...
# 1214|           Type = [IntType] int
# 1214|           ValueCategory = lvalue
# 1214|         getLValue(): [ArrayExpr] access to array
# 1214|             Type = [IntType] int
# 1214|             ValueCategory = lvalue
# 1214|           getArrayBase(): [VariableAccess] vi4
# 1214|               Type = [SpecifiedType] __attribute((vector_size(16UL))) int
# 1214|               ValueCategory = lvalue
# 1214|           getArrayOffset(): [VariableAccess] i
# 1214|               Type = [IntType] int
# 1214|               ValueCategory = prvalue(load)
# 1214|         getRValue(): [VariableAccess] x
# 1214|             Type = [IntType] int
# 1214|             ValueCategory = prvalue(load)
# 1215|     getStmt(3): [DeclStmt] declaration
# 1215|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of vi4_shuffle
# 1215|           Type = [SpecifiedType] __attribute((vector_size(16UL))) int
# 1215|         getVariable().getInitializer(): [Initializer] initializer for vi4_shuffle
# 1215|           getExpr(): [BuiltInOperationBuiltInShuffleVector] __builtin_shufflevector
# 1215|               Type = [GNUVectorType] __attribute((vector_size(16))) int
# 1215|               ValueCategory = prvalue
# 1215|             getChild(0): [VariableAccess] vi4
# 1215|                 Type = [SpecifiedType] __attribute((vector_size(16UL))) int
# 1215|                 ValueCategory = prvalue(load)
# 1215|             getChild(1): [VariableAccess] vi4
# 1215|                 Type = [SpecifiedType] __attribute((vector_size(16UL))) int
# 1215|                 ValueCategory = prvalue(load)
# 1215|             getChild(2): [AddExpr] ... + ...
# 1215|                 Type = [IntType] int
# 1215|                 Value = [AddExpr] 3
# 1215|                 ValueCategory = prvalue
# 1215|               getLeftOperand(): [Literal] 3
# 1215|                   Type = [IntType] int
# 1215|                   Value = [Literal] 3
# 1215|                   ValueCategory = prvalue
# 1215|               getRightOperand(): [Literal] 0
# 1215|                   Type = [IntType] int
# 1215|                   Value = [Literal] 0
# 1215|                   ValueCategory = prvalue
# 1215|             getChild(3): [Literal] 2
# 1215|                 Type = [IntType] int
# 1215|                 Value = [Literal] 2
# 1215|                 ValueCategory = prvalue
# 1215|             getChild(4): [Literal] 1
# 1215|                 Type = [IntType] int
# 1215|                 Value = [Literal] 1
# 1215|                 ValueCategory = prvalue
# 1215|             getChild(5): [Literal] 0
# 1215|                 Type = [IntType] int
# 1215|                 Value = [Literal] 0
# 1215|                 ValueCategory = prvalue
# 1216|     getStmt(4): [ExprStmt] ExprStmt
# 1216|       getExpr(): [AssignExpr] ... = ...
# 1216|           Type = [SpecifiedType] __attribute((vector_size(16UL))) int
# 1216|           ValueCategory = lvalue
# 1216|         getLValue(): [VariableAccess] vi4
# 1216|             Type = [SpecifiedType] __attribute((vector_size(16UL))) int
# 1216|             ValueCategory = lvalue
# 1216|         getRValue(): [AddExpr] ... + ...
# 1216|             Type = [GNUVectorType] __attribute((vector_size(16UL))) int
# 1216|             ValueCategory = prvalue
# 1216|           getLeftOperand(): [VariableAccess] vi4
# 1216|               Type = [SpecifiedType] __attribute((vector_size(16UL))) int
# 1216|               ValueCategory = prvalue(load)
# 1216|           getRightOperand(): [VariableAccess] vi4_shuffle
# 1216|               Type = [SpecifiedType] __attribute((vector_size(16UL))) int
# 1216|               ValueCategory = prvalue(load)
# 1217|     getStmt(5): [ReturnStmt] return ...
# 1219| [TopLevelFunction] void* memcpy(void*, void*, int)
# 1219|   <params>: 
# 1219|     getParameter(0): [Parameter] dst
# 1219|         Type = [VoidPointerType] void *
# 1219|     getParameter(1): [Parameter] src
# 1219|         Type = [VoidPointerType] void *
# 1219|     getParameter(2): [Parameter] size
# 1219|         Type = [IntType] int
# 1221| [TopLevelFunction] int ModeledCallTarget(int)
# 1221|   <params>: 
# 1221|     getParameter(0): [Parameter] x
# 1221|         Type = [IntType] int
# 1221|   getEntryPoint(): [BlockStmt] { ... }
# 1222|     getStmt(0): [DeclStmt] declaration
# 1222|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 1222|           Type = [IntType] int
# 1223|     getStmt(1): [ExprStmt] ExprStmt
# 1223|       getExpr(): [FunctionCall] call to memcpy
# 1223|           Type = [VoidPointerType] void *
# 1223|           ValueCategory = prvalue
# 1223|         getArgument(0): [AddressOfExpr] & ...
# 1223|             Type = [IntPointerType] int *
# 1223|             ValueCategory = prvalue
# 1223|           getOperand(): [VariableAccess] y
# 1223|               Type = [IntType] int
# 1223|               ValueCategory = lvalue
# 1223|         getArgument(1): [AddressOfExpr] & ...
# 1223|             Type = [IntPointerType] int *
# 1223|             ValueCategory = prvalue
# 1223|           getOperand(): [VariableAccess] x
# 1223|               Type = [IntType] int
# 1223|               ValueCategory = lvalue
# 1223|         getArgument(2): [SizeofTypeOperator] sizeof(int)
# 1223|             Type = [LongType] unsigned long
# 1223|             Value = [SizeofTypeOperator] 4
# 1223|             ValueCategory = prvalue
# 1223|         getArgument(0).getFullyConverted(): [CStyleCast] (void *)...
# 1223|             Conversion = [PointerConversion] pointer conversion
# 1223|             Type = [VoidPointerType] void *
# 1223|             ValueCategory = prvalue
# 1223|         getArgument(1).getFullyConverted(): [CStyleCast] (void *)...
# 1223|             Conversion = [PointerConversion] pointer conversion
# 1223|             Type = [VoidPointerType] void *
# 1223|             ValueCategory = prvalue
# 1223|         getArgument(2).getFullyConverted(): [CStyleCast] (int)...
# 1223|             Conversion = [IntegralConversion] integral conversion
# 1223|             Type = [IntType] int
# 1223|             Value = [CStyleCast] 4
# 1223|             ValueCategory = prvalue
# 1224|     getStmt(2): [ReturnStmt] return ...
# 1224|       getExpr(): [VariableAccess] y
# 1224|           Type = [IntType] int
# 1224|           ValueCategory = prvalue(load)
# 1227| [TopLevelFunction] String ReturnObjectImpl()
# 1227|   <params>: 
# 1227|   getEntryPoint(): [BlockStmt] { ... }
# 1228|     getStmt(0): [ReturnStmt] return ...
# 1228|       getExpr(): [ConstructorCall] call to String
# 1228|           Type = [VoidType] void
# 1228|           ValueCategory = prvalue
# 1228|         getArgument(0): foo
# 1228|             Type = [ArrayType] const char[4]
# 1228|             Value = [StringLiteral] "foo"
# 1228|             ValueCategory = lvalue
# 1228|         getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1228|             Type = [PointerType] const char *
# 1228|             ValueCategory = prvalue
# 1231| [TopLevelFunction] void switch1Case(int)
# 1231|   <params>: 
# 1231|     getParameter(0): [Parameter] x
# 1231|         Type = [IntType] int
# 1231|   getEntryPoint(): [BlockStmt] { ... }
# 1232|     getStmt(0): [DeclStmt] declaration
# 1232|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 1232|           Type = [IntType] int
# 1232|         getVariable().getInitializer(): [Initializer] initializer for y
# 1232|           getExpr(): [Literal] 0
# 1232|               Type = [IntType] int
# 1232|               Value = [Literal] 0
# 1232|               ValueCategory = prvalue
# 1233|     getStmt(1): [SwitchStmt] switch (...) ... 
# 1233|       getExpr(): [VariableAccess] x
# 1233|           Type = [IntType] int
# 1233|           ValueCategory = prvalue(load)
# 1233|       getStmt(): [BlockStmt] { ... }
# 1234|         getStmt(0): [SwitchCase] case ...:
# 1234|           getExpr(): [Literal] 1
# 1234|               Type = [IntType] int
# 1234|               Value = [Literal] 1
# 1234|               ValueCategory = prvalue
# 1235|         getStmt(1): [ExprStmt] ExprStmt
# 1235|           getExpr(): [AssignExpr] ... = ...
# 1235|               Type = [IntType] int
# 1235|               ValueCategory = lvalue
# 1235|             getLValue(): [VariableAccess] y
# 1235|                 Type = [IntType] int
# 1235|                 ValueCategory = lvalue
# 1235|             getRValue(): [Literal] 2
# 1235|                 Type = [IntType] int
# 1235|                 Value = [Literal] 2
# 1235|                 ValueCategory = prvalue
# 1237|     getStmt(2): [DeclStmt] declaration
# 1237|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
# 1237|           Type = [IntType] int
# 1237|         getVariable().getInitializer(): [Initializer] initializer for z
# 1237|           getExpr(): [VariableAccess] y
# 1237|               Type = [IntType] int
# 1237|               ValueCategory = prvalue(load)
# 1238|     getStmt(3): [ReturnStmt] return ...
# 1240| [TopLevelFunction] void switch2Case_fallthrough(int)
# 1240|   <params>: 
# 1240|     getParameter(0): [Parameter] x
# 1240|         Type = [IntType] int
# 1240|   getEntryPoint(): [BlockStmt] { ... }
# 1241|     getStmt(0): [DeclStmt] declaration
# 1241|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 1241|           Type = [IntType] int
# 1241|         getVariable().getInitializer(): [Initializer] initializer for y
# 1241|           getExpr(): [Literal] 0
# 1241|               Type = [IntType] int
# 1241|               Value = [Literal] 0
# 1241|               ValueCategory = prvalue
# 1242|     getStmt(1): [SwitchStmt] switch (...) ... 
# 1242|       getExpr(): [VariableAccess] x
# 1242|           Type = [IntType] int
# 1242|           ValueCategory = prvalue(load)
# 1242|       getStmt(): [BlockStmt] { ... }
# 1243|         getStmt(0): [SwitchCase] case ...:
# 1243|           getExpr(): [Literal] 1
# 1243|               Type = [IntType] int
# 1243|               Value = [Literal] 1
# 1243|               ValueCategory = prvalue
# 1244|         getStmt(1): [ExprStmt] ExprStmt
# 1244|           getExpr(): [AssignExpr] ... = ...
# 1244|               Type = [IntType] int
# 1244|               ValueCategory = lvalue
# 1244|             getLValue(): [VariableAccess] y
# 1244|                 Type = [IntType] int
# 1244|                 ValueCategory = lvalue
# 1244|             getRValue(): [Literal] 2
# 1244|                 Type = [IntType] int
# 1244|                 Value = [Literal] 2
# 1244|                 ValueCategory = prvalue
# 1245|         getStmt(2): [SwitchCase] case ...:
# 1245|           getExpr(): [Literal] 2
# 1245|               Type = [IntType] int
# 1245|               Value = [Literal] 2
# 1245|               ValueCategory = prvalue
# 1246|         getStmt(3): [ExprStmt] ExprStmt
# 1246|           getExpr(): [AssignExpr] ... = ...
# 1246|               Type = [IntType] int
# 1246|               ValueCategory = lvalue
# 1246|             getLValue(): [VariableAccess] y
# 1246|                 Type = [IntType] int
# 1246|                 ValueCategory = lvalue
# 1246|             getRValue(): [Literal] 3
# 1246|                 Type = [IntType] int
# 1246|                 Value = [Literal] 3
# 1246|                 ValueCategory = prvalue
# 1248|     getStmt(2): [DeclStmt] declaration
# 1248|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
# 1248|           Type = [IntType] int
# 1248|         getVariable().getInitializer(): [Initializer] initializer for z
# 1248|           getExpr(): [VariableAccess] y
# 1248|               Type = [IntType] int
# 1248|               ValueCategory = prvalue(load)
# 1249|     getStmt(3): [ReturnStmt] return ...
# 1251| [TopLevelFunction] void switch2Case(int)
# 1251|   <params>: 
# 1251|     getParameter(0): [Parameter] x
# 1251|         Type = [IntType] int
# 1251|   getEntryPoint(): [BlockStmt] { ... }
# 1252|     getStmt(0): [DeclStmt] declaration
# 1252|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 1252|           Type = [IntType] int
# 1252|         getVariable().getInitializer(): [Initializer] initializer for y
# 1252|           getExpr(): [Literal] 0
# 1252|               Type = [IntType] int
# 1252|               Value = [Literal] 0
# 1252|               ValueCategory = prvalue
# 1253|     getStmt(1): [SwitchStmt] switch (...) ... 
# 1253|       getExpr(): [VariableAccess] x
# 1253|           Type = [IntType] int
# 1253|           ValueCategory = prvalue(load)
# 1253|       getStmt(): [BlockStmt] { ... }
# 1254|         getStmt(0): [SwitchCase] case ...:
# 1254|           getExpr(): [Literal] 1
# 1254|               Type = [IntType] int
# 1254|               Value = [Literal] 1
# 1254|               ValueCategory = prvalue
# 1255|         getStmt(1): [ExprStmt] ExprStmt
# 1255|           getExpr(): [AssignExpr] ... = ...
# 1255|               Type = [IntType] int
# 1255|               ValueCategory = lvalue
# 1255|             getLValue(): [VariableAccess] y
# 1255|                 Type = [IntType] int
# 1255|                 ValueCategory = lvalue
# 1255|             getRValue(): [Literal] 2
# 1255|                 Type = [IntType] int
# 1255|                 Value = [Literal] 2
# 1255|                 ValueCategory = prvalue
# 1256|         getStmt(2): [BreakStmt] break;
# 1257|         getStmt(3): [SwitchCase] case ...:
# 1257|           getExpr(): [Literal] 2
# 1257|               Type = [IntType] int
# 1257|               Value = [Literal] 2
# 1257|               ValueCategory = prvalue
# 1258|         getStmt(4): [ExprStmt] ExprStmt
# 1258|           getExpr(): [AssignExpr] ... = ...
# 1258|               Type = [IntType] int
# 1258|               ValueCategory = lvalue
# 1258|             getLValue(): [VariableAccess] y
# 1258|                 Type = [IntType] int
# 1258|                 ValueCategory = lvalue
# 1258|             getRValue(): [Literal] 3
# 1258|                 Type = [IntType] int
# 1258|                 Value = [Literal] 3
# 1258|                 ValueCategory = prvalue
# 1259|     getStmt(2): [LabelStmt] label ...:
# 1260|     getStmt(3): [DeclStmt] declaration
# 1260|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
# 1260|           Type = [IntType] int
# 1260|         getVariable().getInitializer(): [Initializer] initializer for z
# 1260|           getExpr(): [VariableAccess] y
# 1260|               Type = [IntType] int
# 1260|               ValueCategory = prvalue(load)
# 1261|     getStmt(4): [ReturnStmt] return ...
# 1263| [TopLevelFunction] void switch2Case_default(int)
# 1263|   <params>: 
# 1263|     getParameter(0): [Parameter] x
# 1263|         Type = [IntType] int
# 1263|   getEntryPoint(): [BlockStmt] { ... }
# 1264|     getStmt(0): [DeclStmt] declaration
# 1264|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 1264|           Type = [IntType] int
# 1264|         getVariable().getInitializer(): [Initializer] initializer for y
# 1264|           getExpr(): [Literal] 0
# 1264|               Type = [IntType] int
# 1264|               Value = [Literal] 0
# 1264|               ValueCategory = prvalue
# 1265|     getStmt(1): [SwitchStmt] switch (...) ... 
# 1265|       getExpr(): [VariableAccess] x
# 1265|           Type = [IntType] int
# 1265|           ValueCategory = prvalue(load)
# 1265|       getStmt(): [BlockStmt] { ... }
# 1266|         getStmt(0): [SwitchCase] case ...:
# 1266|           getExpr(): [Literal] 1
# 1266|               Type = [IntType] int
# 1266|               Value = [Literal] 1
# 1266|               ValueCategory = prvalue
# 1267|         getStmt(1): [ExprStmt] ExprStmt
# 1267|           getExpr(): [AssignExpr] ... = ...
# 1267|               Type = [IntType] int
# 1267|               ValueCategory = lvalue
# 1267|             getLValue(): [VariableAccess] y
# 1267|                 Type = [IntType] int
# 1267|                 ValueCategory = lvalue
# 1267|             getRValue(): [Literal] 2
# 1267|                 Type = [IntType] int
# 1267|                 Value = [Literal] 2
# 1267|                 ValueCategory = prvalue
# 1268|         getStmt(2): [BreakStmt] break;
# 1270|         getStmt(3): [SwitchCase] case ...:
# 1270|           getExpr(): [Literal] 2
# 1270|               Type = [IntType] int
# 1270|               Value = [Literal] 2
# 1270|               ValueCategory = prvalue
# 1271|         getStmt(4): [ExprStmt] ExprStmt
# 1271|           getExpr(): [AssignExpr] ... = ...
# 1271|               Type = [IntType] int
# 1271|               ValueCategory = lvalue
# 1271|             getLValue(): [VariableAccess] y
# 1271|                 Type = [IntType] int
# 1271|                 ValueCategory = lvalue
# 1271|             getRValue(): [Literal] 3
# 1271|                 Type = [IntType] int
# 1271|                 Value = [Literal] 3
# 1271|                 ValueCategory = prvalue
# 1272|         getStmt(5): [BreakStmt] break;
# 1274|         getStmt(6): [SwitchCase] default: 
# 1275|         getStmt(7): [ExprStmt] ExprStmt
# 1275|           getExpr(): [AssignExpr] ... = ...
# 1275|               Type = [IntType] int
# 1275|               ValueCategory = lvalue
# 1275|             getLValue(): [VariableAccess] y
# 1275|                 Type = [IntType] int
# 1275|                 ValueCategory = lvalue
# 1275|             getRValue(): [Literal] 4
# 1275|                 Type = [IntType] int
# 1275|                 Value = [Literal] 4
# 1275|                 ValueCategory = prvalue
# 1276|     getStmt(2): [LabelStmt] label ...:
# 1277|     getStmt(3): [DeclStmt] declaration
# 1277|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
# 1277|           Type = [IntType] int
# 1277|         getVariable().getInitializer(): [Initializer] initializer for z
# 1277|           getExpr(): [VariableAccess] y
# 1277|               Type = [IntType] int
# 1277|               ValueCategory = prvalue(load)
# 1278|     getStmt(4): [ReturnStmt] return ...
# 1280| [TopLevelFunction] int staticLocalInit(int)
# 1280|   <params>: 
# 1280|     getParameter(0): [Parameter] x
# 1280|         Type = [IntType] int
# 1280|   getEntryPoint(): [BlockStmt] { ... }
# 1281|     getStmt(0): [DeclStmt] declaration
# 1281|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a
# 1281|           Type = [IntType] int
# 1281|         getVariable().getInitializer(): [Initializer] initializer for a
# 1281|           getExpr(): [Literal] 0
# 1281|               Type = [IntType] int
# 1281|               Value = [Literal] 0
# 1281|               ValueCategory = prvalue
# 1282|     getStmt(1): [DeclStmt] declaration
# 1282|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
# 1282|           Type = [IntType] int
# 1282|         getVariable().getInitializer(): [Initializer] initializer for b
# 1282|           getExpr(): [SizeofExprOperator] sizeof(<expr>)
# 1282|               Type = [LongType] unsigned long
# 1282|               Value = [SizeofExprOperator] 4
# 1282|               ValueCategory = prvalue
# 1282|             getExprOperand(): [VariableAccess] x
# 1282|                 Type = [IntType] int
# 1282|                 ValueCategory = lvalue
# 1282|             getExprOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 1282|                 Type = [IntType] int
# 1282|                 ValueCategory = lvalue
# 1282|           getExpr().getFullyConverted(): [CStyleCast] (int)...
# 1282|               Conversion = [IntegralConversion] integral conversion
# 1282|               Type = [IntType] int
# 1282|               Value = [CStyleCast] 4
# 1282|               ValueCategory = prvalue
# 1283|     getStmt(2): [DeclStmt] declaration
# 1283|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
# 1283|           Type = [IntType] int
# 1283|         getVariable().getInitializer(): [Initializer] initializer for c
# 1283|           getExpr(): [VariableAccess] x
# 1283|               Type = [IntType] int
# 1283|               ValueCategory = prvalue(load)
# 1284|     getStmt(3): [DeclStmt] declaration
# 1284|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
# 1284|           Type = [IntType] int
# 1286|     getStmt(4): [ReturnStmt] return ...
# 1286|       getExpr(): [AddExpr] ... + ...
# 1286|           Type = [IntType] int
# 1286|           ValueCategory = prvalue
# 1286|         getLeftOperand(): [AddExpr] ... + ...
# 1286|             Type = [IntType] int
# 1286|             ValueCategory = prvalue
# 1286|           getLeftOperand(): [AddExpr] ... + ...
# 1286|               Type = [IntType] int
# 1286|               ValueCategory = prvalue
# 1286|             getLeftOperand(): [VariableAccess] a
# 1286|                 Type = [IntType] int
# 1286|                 ValueCategory = prvalue(load)
# 1286|             getRightOperand(): [VariableAccess] b
# 1286|                 Type = [IntType] int
# 1286|                 ValueCategory = prvalue(load)
# 1286|           getRightOperand(): [VariableAccess] c
# 1286|               Type = [IntType] int
# 1286|               ValueCategory = prvalue(load)
# 1286|         getRightOperand(): [VariableAccess] d
# 1286|             Type = [IntType] int
# 1286|             ValueCategory = prvalue(load)
# 1289| [TopLevelFunction] void staticLocalWithConstructor(char const*)
# 1289|   <params>: 
# 1289|     getParameter(0): [Parameter] dynamic
# 1289|         Type = [PointerType] const char *
# 1289|   getEntryPoint(): [BlockStmt] { ... }
# 1290|     getStmt(0): [DeclStmt] declaration
# 1290|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a
# 1290|           Type = [Struct] String
#-----|         getVariable().getInitializer(): [Initializer] initializer for a
#-----|           getExpr(): [ConstructorCall] call to String
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
# 1291|     getStmt(1): [DeclStmt] declaration
# 1291|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
# 1291|           Type = [Struct] String
# 1291|         getVariable().getInitializer(): [Initializer] initializer for b
# 1291|           getExpr(): [ConstructorCall] call to String
# 1291|               Type = [VoidType] void
# 1291|               ValueCategory = prvalue
# 1291|             getArgument(0): static
# 1291|                 Type = [ArrayType] const char[7]
# 1291|                 Value = [StringLiteral] "static"
# 1291|                 ValueCategory = lvalue
# 1291|             getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1291|                 Type = [PointerType] const char *
# 1291|                 ValueCategory = prvalue
# 1292|     getStmt(2): [DeclStmt] declaration
# 1292|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
# 1292|           Type = [Struct] String
# 1292|         getVariable().getInitializer(): [Initializer] initializer for c
# 1292|           getExpr(): [ConstructorCall] call to String
# 1292|               Type = [VoidType] void
# 1292|               ValueCategory = prvalue
# 1292|             getArgument(0): [VariableAccess] dynamic
# 1292|                 Type = [PointerType] const char *
# 1292|                 ValueCategory = prvalue(load)
# 1293|     getStmt(3): [ReturnStmt] return ...
# 1297| [TopLevelFunction] char* strcpy(char*, char const*)
# 1297|   <params>: 
# 1297|     getParameter(0): [Parameter] destination
# 1297|         Type = [CharPointerType] char *
# 1297|     getParameter(1): [Parameter] source
# 1297|         Type = [PointerType] const char *
# 1298| [TopLevelFunction] char* strcat(char*, char const*)
# 1298|   <params>: 
# 1298|     getParameter(0): [Parameter] destination
# 1298|         Type = [CharPointerType] char *
# 1298|     getParameter(1): [Parameter] source
# 1298|         Type = [PointerType] const char *
# 1300| [TopLevelFunction] void test_strings(char*, char*)
# 1300|   <params>: 
# 1300|     getParameter(0): [Parameter] s1
# 1300|         Type = [CharPointerType] char *
# 1300|     getParameter(1): [Parameter] s2
# 1300|         Type = [CharPointerType] char *
# 1300|   getEntryPoint(): [BlockStmt] { ... }
# 1301|     getStmt(0): [DeclStmt] declaration
# 1301|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of buffer
# 1301|           Type = [ArrayType] char[1024]
# 1301|         getVariable().getInitializer(): [Initializer] initializer for buffer
# 1301|           getExpr(): [ArrayAggregateLiteral] {...}
# 1301|               Type = [ArrayType] char[1024]
# 1301|               ValueCategory = prvalue
# 1301|             getAnElementExpr(0): [Literal] 0
# 1301|                 Type = [IntType] int
# 1301|                 Value = [Literal] 0
# 1301|                 ValueCategory = prvalue
# 1301|             getAnElementExpr(0).getFullyConverted(): [CStyleCast] (char)...
# 1301|                 Conversion = [IntegralConversion] integral conversion
# 1301|                 Type = [PlainCharType] char
# 1301|                 Value = [CStyleCast] 0
# 1301|                 ValueCategory = prvalue
# 1303|     getStmt(1): [ExprStmt] ExprStmt
# 1303|       getExpr(): [FunctionCall] call to strcpy
# 1303|           Type = [CharPointerType] char *
# 1303|           ValueCategory = prvalue
# 1303|         getArgument(0): [VariableAccess] buffer
# 1303|             Type = [ArrayType] char[1024]
# 1303|             ValueCategory = lvalue
# 1303|         getArgument(1): [VariableAccess] s1
# 1303|             Type = [CharPointerType] char *
# 1303|             ValueCategory = prvalue(load)
# 1303|         getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1303|             Type = [CharPointerType] char *
# 1303|             ValueCategory = prvalue
# 1303|         getArgument(1).getFullyConverted(): [CStyleCast] (const char *)...
# 1303|             Conversion = [PointerConversion] pointer conversion
# 1303|             Type = [PointerType] const char *
# 1303|             ValueCategory = prvalue
# 1304|     getStmt(2): [ExprStmt] ExprStmt
# 1304|       getExpr(): [FunctionCall] call to strcat
# 1304|           Type = [CharPointerType] char *
# 1304|           ValueCategory = prvalue
# 1304|         getArgument(0): [VariableAccess] buffer
# 1304|             Type = [ArrayType] char[1024]
# 1304|             ValueCategory = lvalue
# 1304|         getArgument(1): [VariableAccess] s2
# 1304|             Type = [CharPointerType] char *
# 1304|             ValueCategory = prvalue(load)
# 1304|         getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1304|             Type = [CharPointerType] char *
# 1304|             ValueCategory = prvalue
# 1304|         getArgument(1).getFullyConverted(): [CStyleCast] (const char *)...
# 1304|             Conversion = [PointerConversion] pointer conversion
# 1304|             Type = [PointerType] const char *
# 1304|             ValueCategory = prvalue
# 1305|     getStmt(3): [ReturnStmt] return ...
# 1307| [CopyAssignmentOperator] A& A::operator=(A const&)
# 1307|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const A &
# 1307| [MoveAssignmentOperator] A& A::operator=(A&&)
# 1307|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] A &&
# 1310| [MemberFunction] void A::static_member(A*, int)
# 1310|   <params>: 
# 1310|     getParameter(0): [Parameter] a
# 1310|         Type = [PointerType] A *
# 1310|     getParameter(1): [Parameter] x
# 1310|         Type = [IntType] int
# 1310|   getEntryPoint(): [BlockStmt] { ... }
# 1311|     getStmt(0): [ExprStmt] ExprStmt
# 1311|       getExpr(): [AssignExpr] ... = ...
# 1311|           Type = [IntType] int
# 1311|           ValueCategory = lvalue
# 1311|         getLValue(): [PointerFieldAccess] member
# 1311|             Type = [IntType] int
# 1311|             ValueCategory = lvalue
# 1311|           getQualifier(): [VariableAccess] a
# 1311|               Type = [PointerType] A *
# 1311|               ValueCategory = prvalue(load)
# 1311|         getRValue(): [VariableAccess] x
# 1311|             Type = [IntType] int
# 1311|             ValueCategory = prvalue(load)
# 1312|     getStmt(1): [ReturnStmt] return ...
# 1314| [MemberFunction] void A::static_member_without_def()
# 1314|   <params>: 
# 1317| [TopLevelFunction] A* getAnInstanceOfA()
# 1317|   <params>: 
# 1319| [TopLevelFunction] void test_static_member_functions(int, A*)
# 1319|   <params>: 
# 1319|     getParameter(0): [Parameter] int_arg
# 1319|         Type = [IntType] int
# 1319|     getParameter(1): [Parameter] a_arg
# 1319|         Type = [PointerType] A *
# 1319|   getEntryPoint(): [BlockStmt] { ... }
# 1320|     getStmt(0): [DeclStmt] declaration
# 1320|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
# 1320|           Type = [Class] C
# 1320|         getVariable().getInitializer(): [Initializer] initializer for c
# 1320|           getExpr(): [ConstructorCall] call to C
# 1320|               Type = [VoidType] void
# 1320|               ValueCategory = prvalue
# 1321|     getStmt(1): [ExprStmt] ExprStmt
# 1321|       getExpr(): [FunctionCall] call to StaticMemberFunction
# 1321|           Type = [IntType] int
# 1321|           ValueCategory = prvalue
# 1321|         getQualifier(): [VariableAccess] c
# 1321|             Type = [Class] C
# 1321|             ValueCategory = lvalue
# 1321|         getArgument(0): [Literal] 10
# 1321|             Type = [IntType] int
# 1321|             Value = [Literal] 10
# 1321|             ValueCategory = prvalue
# 1322|     getStmt(2): [ExprStmt] ExprStmt
# 1322|       getExpr(): [FunctionCall] call to StaticMemberFunction
# 1322|           Type = [IntType] int
# 1322|           ValueCategory = prvalue
# 1322|         getArgument(0): [Literal] 10
# 1322|             Type = [IntType] int
# 1322|             Value = [Literal] 10
# 1322|             ValueCategory = prvalue
# 1324|     getStmt(3): [DeclStmt] declaration
# 1324|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a
# 1324|           Type = [Struct] A
# 1325|     getStmt(4): [ExprStmt] ExprStmt
# 1325|       getExpr(): [FunctionCall] call to static_member
# 1325|           Type = [VoidType] void
# 1325|           ValueCategory = prvalue
# 1325|         getQualifier(): [VariableAccess] a
# 1325|             Type = [Struct] A
# 1325|             ValueCategory = lvalue
# 1325|         getArgument(0): [AddressOfExpr] & ...
# 1325|             Type = [PointerType] A *
# 1325|             ValueCategory = prvalue
# 1325|           getOperand(): [VariableAccess] a
# 1325|               Type = [Struct] A
# 1325|               ValueCategory = lvalue
# 1325|         getArgument(1): [VariableAccess] int_arg
# 1325|             Type = [IntType] int
# 1325|             ValueCategory = prvalue(load)
# 1326|     getStmt(5): [ExprStmt] ExprStmt
# 1326|       getExpr(): [FunctionCall] call to static_member
# 1326|           Type = [VoidType] void
# 1326|           ValueCategory = prvalue
# 1326|         getArgument(0): [AddressOfExpr] & ...
# 1326|             Type = [PointerType] A *
# 1326|             ValueCategory = prvalue
# 1326|           getOperand(): [VariableAccess] a
# 1326|               Type = [Struct] A
# 1326|               ValueCategory = lvalue
# 1326|         getArgument(1): [VariableAccess] int_arg
# 1326|             Type = [IntType] int
# 1326|             ValueCategory = prvalue(load)
# 1328|     getStmt(6): [ExprStmt] ExprStmt
# 1328|       getExpr(): [FunctionCall] call to static_member
# 1328|           Type = [VoidType] void
# 1328|           ValueCategory = prvalue
# 1328|         getQualifier(): [AddressOfExpr] & ...
# 1328|             Type = [PointerType] A *
# 1328|             ValueCategory = prvalue
# 1328|           getOperand(): [VariableAccess] a
# 1328|               Type = [Struct] A
# 1328|               ValueCategory = lvalue
# 1328|         getArgument(0): [VariableAccess] a_arg
# 1328|             Type = [PointerType] A *
# 1328|             ValueCategory = prvalue(load)
# 1328|         getArgument(1): [AddExpr] ... + ...
# 1328|             Type = [IntType] int
# 1328|             ValueCategory = prvalue
# 1328|           getLeftOperand(): [VariableAccess] int_arg
# 1328|               Type = [IntType] int
# 1328|               ValueCategory = prvalue(load)
# 1328|           getRightOperand(): [Literal] 2
# 1328|               Type = [IntType] int
# 1328|               Value = [Literal] 2
# 1328|               ValueCategory = prvalue
# 1328|         getQualifier().getFullyConverted(): [ParenthesisExpr] (...)
# 1328|             Type = [PointerType] A *
# 1328|             ValueCategory = prvalue
# 1329|     getStmt(7): [ExprStmt] ExprStmt
# 1329|       getExpr(): [FunctionCall] call to static_member
# 1329|           Type = [VoidType] void
# 1329|           ValueCategory = prvalue
# 1329|         getQualifier(): [PointerDereferenceExpr] * ...
# 1329|             Type = [Struct] A
# 1329|             ValueCategory = lvalue
# 1329|           getOperand(): [VariableAccess] a_arg
# 1329|               Type = [PointerType] A *
# 1329|               ValueCategory = prvalue(load)
# 1329|         getArgument(0): [AddressOfExpr] & ...
# 1329|             Type = [PointerType] A *
# 1329|             ValueCategory = prvalue
# 1329|           getOperand(): [VariableAccess] a
# 1329|               Type = [Struct] A
# 1329|               ValueCategory = lvalue
# 1329|         getArgument(1): [Literal] 99
# 1329|             Type = [IntType] int
# 1329|             Value = [Literal] 99
# 1329|             ValueCategory = prvalue
# 1329|         getQualifier().getFullyConverted(): [ParenthesisExpr] (...)
# 1329|             Type = [Struct] A
# 1329|             ValueCategory = lvalue
# 1330|     getStmt(8): [ExprStmt] ExprStmt
# 1330|       getExpr(): [FunctionCall] call to static_member
# 1330|           Type = [VoidType] void
# 1330|           ValueCategory = prvalue
# 1330|         getQualifier(): [VariableAccess] a_arg
# 1330|             Type = [PointerType] A *
# 1330|             ValueCategory = prvalue(load)
# 1330|         getArgument(0): [VariableAccess] a_arg
# 1330|             Type = [PointerType] A *
# 1330|             ValueCategory = prvalue(load)
# 1330|         getArgument(1): [UnaryMinusExpr] - ...
# 1330|             Type = [IntType] int
# 1330|             Value = [UnaryMinusExpr] -1
# 1330|             ValueCategory = prvalue
# 1330|           getOperand(): [Literal] 1
# 1330|               Type = [IntType] int
# 1330|               Value = [Literal] 1
# 1330|               ValueCategory = prvalue
# 1332|     getStmt(9): [ExprStmt] ExprStmt
# 1332|       getExpr(): [FunctionCall] call to static_member_without_def
# 1332|           Type = [VoidType] void
# 1332|           ValueCategory = prvalue
# 1332|         getQualifier(): [VariableAccess] a
# 1332|             Type = [Struct] A
# 1332|             ValueCategory = lvalue
# 1333|     getStmt(10): [ExprStmt] ExprStmt
# 1333|       getExpr(): [FunctionCall] call to static_member_without_def
# 1333|           Type = [VoidType] void
# 1333|           ValueCategory = prvalue
# 1335|     getStmt(11): [ExprStmt] ExprStmt
# 1335|       getExpr(): [FunctionCall] call to static_member_without_def
# 1335|           Type = [VoidType] void
# 1335|           ValueCategory = prvalue
# 1335|         getQualifier(): [FunctionCall] call to getAnInstanceOfA
# 1335|             Type = [PointerType] A *
# 1335|             ValueCategory = prvalue
# 1336|     getStmt(12): [ReturnStmt] return ...
# 1336|       getImplicitDestructorCall(0): [DestructorCall] call to ~C
# 1336|           Type = [VoidType] void
# 1336|           ValueCategory = prvalue
# 1336|         getQualifier(): [VariableAccess] c
# 1336|             Type = [Class] C
# 1336|             ValueCategory = lvalue
# 1338| [TopLevelFunction] int missingReturnValue(bool, int)
# 1338|   <params>: 
# 1338|     getParameter(0): [Parameter] b
# 1338|         Type = [BoolType] bool
# 1338|     getParameter(1): [Parameter] x
# 1338|         Type = [IntType] int
# 1338|   getEntryPoint(): [BlockStmt] { ... }
# 1339|     getStmt(0): [IfStmt] if (...) ... 
# 1339|       getCondition(): [VariableAccess] b
# 1339|           Type = [BoolType] bool
# 1339|           ValueCategory = prvalue(load)
# 1339|       getThen(): [BlockStmt] { ... }
# 1340|         getStmt(0): [ReturnStmt] return ...
# 1340|           getExpr(): [VariableAccess] x
# 1340|               Type = [IntType] int
# 1340|               ValueCategory = prvalue(load)
# 1342|     getStmt(1): [ReturnStmt] return ...
# 1344| [TopLevelFunction] void returnVoid(int, int)
# 1344|   <params>: 
# 1344|     getParameter(0): [Parameter] x
# 1344|         Type = [IntType] int
# 1344|     getParameter(1): [Parameter] y
# 1344|         Type = [IntType] int
# 1344|   getEntryPoint(): [BlockStmt] { ... }
# 1345|     getStmt(0): [ReturnStmt] return ...
# 1345|       getExpr(): [FunctionCall] call to IntegerOps
# 1345|           Type = [VoidType] void
# 1345|           ValueCategory = prvalue
# 1345|         getArgument(0): [VariableAccess] x
# 1345|             Type = [IntType] int
# 1345|             ValueCategory = prvalue(load)
# 1345|         getArgument(1): [VariableAccess] y
# 1345|             Type = [IntType] int
# 1345|             ValueCategory = prvalue(load)
# 1348| [TopLevelFunction] void gccBinaryConditional(bool, int, long)
# 1348|   <params>: 
# 1348|     getParameter(0): [Parameter] b
# 1348|         Type = [BoolType] bool
# 1348|     getParameter(1): [Parameter] x
# 1348|         Type = [IntType] int
# 1348|     getParameter(2): [Parameter] y
# 1348|         Type = [LongType] long
# 1348|   getEntryPoint(): [BlockStmt] { ... }
# 1349|     getStmt(0): [DeclStmt] declaration
# 1349|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
# 1349|           Type = [IntType] int
# 1349|         getVariable().getInitializer(): [Initializer] initializer for z
# 1349|           getExpr(): [VariableAccess] x
# 1349|               Type = [IntType] int
# 1349|               ValueCategory = prvalue(load)
# 1350|     getStmt(1): [ExprStmt] ExprStmt
# 1350|       getExpr(): [AssignExpr] ... = ...
# 1350|           Type = [IntType] int
# 1350|           ValueCategory = lvalue
# 1350|         getLValue(): [VariableAccess] z
# 1350|             Type = [IntType] int
# 1350|             ValueCategory = lvalue
# 1350|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 1350|             Type = [IntType] int
# 1350|             ValueCategory = prvalue(load)
# 1350|           getCondition(): [VariableAccess] b
# 1350|               Type = [BoolType] bool
# 1350|               ValueCategory = prvalue(load)
# 1350|           getElse(): [VariableAccess] x
# 1350|               Type = [IntType] int
# 1350|               ValueCategory = prvalue(load)
# 1351|     getStmt(2): [ExprStmt] ExprStmt
# 1351|       getExpr(): [AssignExpr] ... = ...
# 1351|           Type = [IntType] int
# 1351|           ValueCategory = lvalue
# 1351|         getLValue(): [VariableAccess] z
# 1351|             Type = [IntType] int
# 1351|             ValueCategory = lvalue
# 1351|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 1351|             Type = [LongType] long
# 1351|             ValueCategory = prvalue(load)
# 1351|           getCondition(): [VariableAccess] b
# 1351|               Type = [BoolType] bool
# 1351|               ValueCategory = prvalue(load)
# 1351|           getElse(): [VariableAccess] y
# 1351|               Type = [LongType] long
# 1351|               ValueCategory = prvalue(load)
# 1351|         getRValue().getFullyConverted(): [CStyleCast] (int)...
# 1351|             Conversion = [IntegralConversion] integral conversion
# 1351|             Type = [IntType] int
# 1351|             ValueCategory = prvalue
# 1352|     getStmt(3): [ExprStmt] ExprStmt
# 1352|       getExpr(): [AssignExpr] ... = ...
# 1352|           Type = [IntType] int
# 1352|           ValueCategory = lvalue
# 1352|         getLValue(): [VariableAccess] z
# 1352|             Type = [IntType] int
# 1352|             ValueCategory = lvalue
# 1352|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 1352|             Type = [IntType] int
# 1352|             ValueCategory = prvalue(load)
# 1352|           getCondition(): [VariableAccess] x
# 1352|               Type = [IntType] int
# 1352|               ValueCategory = prvalue(load)
# 1352|           getElse(): [VariableAccess] x
# 1352|               Type = [IntType] int
# 1352|               ValueCategory = prvalue(load)
# 1352|           getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 1352|               Conversion = [BoolConversion] conversion to bool
# 1352|               Type = [BoolType] bool
# 1352|               ValueCategory = prvalue
# 1353|     getStmt(4): [ExprStmt] ExprStmt
# 1353|       getExpr(): [AssignExpr] ... = ...
# 1353|           Type = [IntType] int
# 1353|           ValueCategory = lvalue
# 1353|         getLValue(): [VariableAccess] z
# 1353|             Type = [IntType] int
# 1353|             ValueCategory = lvalue
# 1353|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 1353|             Type = [LongType] long
# 1353|             ValueCategory = prvalue(load)
# 1353|           getCondition(): [VariableAccess] x
# 1353|               Type = [IntType] int
# 1353|               ValueCategory = prvalue(load)
# 1353|           getElse(): [VariableAccess] y
# 1353|               Type = [LongType] long
# 1353|               ValueCategory = prvalue(load)
# 1353|           getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 1353|               Conversion = [BoolConversion] conversion to bool
# 1353|               Type = [BoolType] bool
# 1353|               ValueCategory = prvalue
# 1353|         getRValue().getFullyConverted(): [CStyleCast] (int)...
# 1353|             Conversion = [IntegralConversion] integral conversion
# 1353|             Type = [IntType] int
# 1353|             ValueCategory = prvalue
# 1354|     getStmt(5): [ExprStmt] ExprStmt
# 1354|       getExpr(): [AssignExpr] ... = ...
# 1354|           Type = [IntType] int
# 1354|           ValueCategory = lvalue
# 1354|         getLValue(): [VariableAccess] z
# 1354|             Type = [IntType] int
# 1354|             ValueCategory = lvalue
# 1354|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 1354|             Type = [LongType] long
# 1354|             ValueCategory = prvalue(load)
# 1354|           getCondition(): [VariableAccess] y
# 1354|               Type = [LongType] long
# 1354|               ValueCategory = prvalue(load)
# 1354|           getElse(): [VariableAccess] x
# 1354|               Type = [IntType] int
# 1354|               ValueCategory = prvalue(load)
# 1354|           getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 1354|               Conversion = [BoolConversion] conversion to bool
# 1354|               Type = [BoolType] bool
# 1354|               ValueCategory = prvalue
# 1354|           getElse().getFullyConverted(): [CStyleCast] (long)...
# 1354|               Conversion = [IntegralConversion] integral conversion
# 1354|               Type = [LongType] long
# 1354|               ValueCategory = prvalue
# 1354|         getRValue().getFullyConverted(): [CStyleCast] (int)...
# 1354|             Conversion = [IntegralConversion] integral conversion
# 1354|             Type = [IntType] int
# 1354|             ValueCategory = prvalue
# 1355|     getStmt(6): [ExprStmt] ExprStmt
# 1355|       getExpr(): [AssignExpr] ... = ...
# 1355|           Type = [IntType] int
# 1355|           ValueCategory = lvalue
# 1355|         getLValue(): [VariableAccess] z
# 1355|             Type = [IntType] int
# 1355|             ValueCategory = lvalue
# 1355|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 1355|             Type = [LongType] long
# 1355|             ValueCategory = prvalue(load)
# 1355|           getCondition(): [VariableAccess] y
# 1355|               Type = [LongType] long
# 1355|               ValueCategory = prvalue(load)
# 1355|           getElse(): [VariableAccess] y
# 1355|               Type = [LongType] long
# 1355|               ValueCategory = prvalue(load)
# 1355|           getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 1355|               Conversion = [BoolConversion] conversion to bool
# 1355|               Type = [BoolType] bool
# 1355|               ValueCategory = prvalue
# 1355|         getRValue().getFullyConverted(): [CStyleCast] (int)...
# 1355|             Conversion = [IntegralConversion] integral conversion
# 1355|             Type = [IntType] int
# 1355|             ValueCategory = prvalue
# 1357|     getStmt(7): [ExprStmt] ExprStmt
# 1357|       getExpr(): [AssignExpr] ... = ...
# 1357|           Type = [IntType] int
# 1357|           ValueCategory = lvalue
# 1357|         getLValue(): [VariableAccess] z
# 1357|             Type = [IntType] int
# 1357|             ValueCategory = lvalue
# 1357|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 1357|             Type = [IntType] int
# 1357|             ValueCategory = prvalue(load)
# 1357|           getCondition(): [LogicalOrExpr] ... || ...
# 1357|               Type = [BoolType] bool
# 1357|               ValueCategory = prvalue
# 1357|             getLeftOperand(): [LogicalAndExpr] ... && ...
# 1357|                 Type = [BoolType] bool
# 1357|                 ValueCategory = prvalue
# 1357|               getLeftOperand(): [VariableAccess] x
# 1357|                   Type = [IntType] int
# 1357|                   ValueCategory = prvalue(load)
# 1357|               getRightOperand(): [VariableAccess] b
# 1357|                   Type = [BoolType] bool
# 1357|                   ValueCategory = prvalue(load)
# 1357|               getLeftOperand().getFullyConverted(): [CStyleCast] (bool)...
# 1357|                   Conversion = [BoolConversion] conversion to bool
# 1357|                   Type = [BoolType] bool
# 1357|                   ValueCategory = prvalue
# 1357|             getRightOperand(): [VariableAccess] y
# 1357|                 Type = [LongType] long
# 1357|                 ValueCategory = prvalue(load)
# 1357|             getRightOperand().getFullyConverted(): [CStyleCast] (bool)...
# 1357|                 Conversion = [BoolConversion] conversion to bool
# 1357|                 Type = [BoolType] bool
# 1357|                 ValueCategory = prvalue
# 1357|           getElse(): [VariableAccess] x
# 1357|               Type = [IntType] int
# 1357|               ValueCategory = prvalue(load)
# 1357|           getCondition().getFullyConverted(): [ParenthesisExpr] (...)
# 1357|               Type = [BoolType] bool
# 1357|               ValueCategory = prvalue
# 1358|     getStmt(8): [ReturnStmt] return ...
# 1360| [TopLevelFunction] bool predicateA()
# 1360|   <params>: 
# 1361| [TopLevelFunction] bool predicateB()
# 1361|   <params>: 
# 1363| [TopLevelFunction] int shortCircuitConditional(int, int)
# 1363|   <params>: 
# 1363|     getParameter(0): [Parameter] x
# 1363|         Type = [IntType] int
# 1363|     getParameter(1): [Parameter] y
# 1363|         Type = [IntType] int
# 1363|   getEntryPoint(): [BlockStmt] { ... }
# 1364|     getStmt(0): [ReturnStmt] return ...
# 1364|       getExpr(): [ConditionalExpr] ... ? ... : ...
# 1364|           Type = [IntType] int
# 1364|           ValueCategory = prvalue(load)
# 1364|         getCondition(): [LogicalAndExpr] ... && ...
# 1364|             Type = [BoolType] bool
# 1364|             ValueCategory = prvalue
# 1364|           getLeftOperand(): [FunctionCall] call to predicateA
# 1364|               Type = [BoolType] bool
# 1364|               ValueCategory = prvalue
# 1364|           getRightOperand(): [FunctionCall] call to predicateB
# 1364|               Type = [BoolType] bool
# 1364|               ValueCategory = prvalue
# 1364|         getThen(): [VariableAccess] x
# 1364|             Type = [IntType] int
# 1364|             ValueCategory = prvalue(load)
# 1364|         getElse(): [VariableAccess] y
# 1364|             Type = [IntType] int
# 1364|             ValueCategory = prvalue(load)
# 1367| [Operator,TopLevelFunction] void* operator new(size_t, void*)
# 1367|   <params>: 
# 1367|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1367|         Type = [CTypedefType,Size_t] size_t
# 1367|     getParameter(1): [Parameter] (unnamed parameter 1)
# 1367|         Type = [VoidPointerType] void *
# 1369| [TopLevelFunction] void f(int*)
# 1369|   <params>: 
# 1369|     getParameter(0): [Parameter] p
# 1369|         Type = [IntPointerType] int *
# 1370|   getEntryPoint(): [BlockStmt] { ... }
# 1371|     getStmt(0): [ExprStmt] ExprStmt
# 1371|       getExpr(): [NewExpr] new
# 1371|           Type = [IntPointerType] int *
# 1371|           ValueCategory = prvalue
# 1371|         getAllocatorCall(): [FunctionCall] call to operator new
# 1371|             Type = [VoidPointerType] void *
# 1371|             ValueCategory = prvalue
# 1371|           getArgument(0): [ErrorExpr] <error expr>
# 1371|               Type = [LongType] unsigned long
# 1371|               ValueCategory = prvalue
# 1371|           getArgument(1): [VariableAccess] p
# 1371|               Type = [IntPointerType] int *
# 1371|               ValueCategory = prvalue(load)
# 1371|           getArgument(1).getFullyConverted(): [CStyleCast] (void *)...
# 1371|               Conversion = [PointerConversion] pointer conversion
# 1371|               Type = [VoidPointerType] void *
# 1371|               ValueCategory = prvalue
# 1372|     getStmt(1): [ReturnStmt] return ...
# 1375| [FunctionTemplateInstantiation,TopLevelFunction] Point defaultConstruct<Point>()
# 1375|   <params>: 
# 1375|   getEntryPoint(): [BlockStmt] { ... }
# 1376|     getStmt(0): [ReturnStmt] return ...
# 1376|       getExpr(): [Literal] 0
# 1376|           Type = [Struct] Point
# 1376|           Value = [Literal] 0
# 1376|           ValueCategory = prvalue
# 1375| [FunctionTemplateInstantiation,TopLevelFunction] String defaultConstruct<String>()
# 1375|   <params>: 
# 1375|   getEntryPoint(): [BlockStmt] { ... }
# 1376|     getStmt(0): [ReturnStmt] return ...
# 1376|       getExpr(): [ConstructorCall] call to String
# 1376|           Type = [VoidType] void
# 1376|           ValueCategory = prvalue
# 1375| [TemplateFunction,TopLevelFunction] T defaultConstruct<T>()
# 1375|   <params>: 
# 1375|   getEntryPoint(): [BlockStmt] { ... }
# 1376|     getStmt(0): [ReturnStmt] return ...
# 1376|       getExpr(): [Literal] 0
# 1376|           Type = [TemplateParameter] T
# 1376|           Value = [Literal] 0
# 1376|           ValueCategory = prvalue
# 1376|       getExpr().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1376|           Type = [TemplateParameter] T
# 1376|           ValueCategory = prvalue(load)
# 1375| [FunctionTemplateInstantiation,TopLevelFunction] copy_constructor defaultConstruct<copy_constructor>()
# 1375|   <params>: 
# 1375|   getEntryPoint(): [BlockStmt] { ... }
# 1376|     getStmt(0): [ReturnStmt] return ...
# 1376|       getExpr(): [ConstructorCall] call to copy_constructor
# 1376|           Type = [VoidType] void
# 1376|           ValueCategory = prvalue
# 1375| [FunctionTemplateInstantiation,TopLevelFunction] destructor_only defaultConstruct<destructor_only>()
# 1375|   <params>: 
# 1375|   getEntryPoint(): [BlockStmt] { ... }
# 1376|     getStmt(0): [ReturnStmt] return ...
# 1376|       getExpr(): [Literal] 0
# 1376|           Type = [Class] destructor_only
# 1376|           Value = [Literal] 0
# 1376|           ValueCategory = prvalue
# 1379| [CopyAssignmentOperator] constructor_only& constructor_only::operator=(constructor_only const&)
# 1379|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const constructor_only &
# 1379| [MoveAssignmentOperator] constructor_only& constructor_only::operator=(constructor_only&&)
# 1379|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] constructor_only &&
# 1379| [CopyConstructor] void constructor_only::constructor_only(constructor_only const&)
# 1379|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const constructor_only &
# 1379| [MoveConstructor] void constructor_only::constructor_only(constructor_only&&)
# 1379|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] constructor_only &&
# 1384| [Constructor] void constructor_only::constructor_only(int)
# 1384|   <params>: 
# 1384|     getParameter(0): [Parameter] x
# 1384|         Type = [IntType] int
# 1387| [CopyAssignmentOperator] copy_constructor& copy_constructor::operator=(copy_constructor const&)
# 1387|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const copy_constructor &
# 1392| [Constructor] void copy_constructor::copy_constructor()
# 1392|   <params>: 
# 1393| [CopyConstructor] void copy_constructor::copy_constructor(copy_constructor const&)
# 1393|   <params>: 
# 1393|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1393|         Type = [LValueReferenceType] const copy_constructor &
# 1395| [MemberFunction] void copy_constructor::method()
# 1395|   <params>: 
# 1398| [CopyAssignmentOperator] destructor_only& destructor_only::operator=(destructor_only const&)
# 1398|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const destructor_only &
# 1398| [Constructor] void destructor_only::destructor_only()
# 1398|   <params>: 
# 1400| [Destructor] void destructor_only::~destructor_only()
# 1400|   <params>: 
# 1402| [MemberFunction] void destructor_only::method()
# 1402|   <params>: 
# 1406| [FunctionTemplateInstantiation,TopLevelFunction] void acceptRef<Point>(Point const&)
# 1406|   <params>: 
# 1406|     getParameter(0): [Parameter] v
# 1406|         Type = [LValueReferenceType] const Point &
# 1406| [FunctionTemplateInstantiation,TopLevelFunction] void acceptRef<String>(String const&)
# 1406|   <params>: 
# 1406|     getParameter(0): [Parameter] v
# 1406|         Type = [LValueReferenceType] const String &
# 1406| [TemplateFunction,TopLevelFunction] void acceptRef<T>(T const&)
# 1406|   <params>: 
# 1406|     getParameter(0): [Parameter] v
# 1406|         Type = [LValueReferenceType] const T &
# 1406| [FunctionTemplateInstantiation,TopLevelFunction] void acceptRef<copy_constructor>(copy_constructor const&)
# 1406|   <params>: 
# 1406|     getParameter(0): [Parameter] v
# 1406|         Type = [LValueReferenceType] const copy_constructor &
# 1406| [FunctionTemplateInstantiation,TopLevelFunction] void acceptRef<destructor_only>(destructor_only const&)
# 1406|   <params>: 
# 1406|     getParameter(0): [Parameter] v
# 1406|         Type = [LValueReferenceType] const destructor_only &
# 1409| [FunctionTemplateInstantiation,TopLevelFunction] void acceptValue<Point>(Point)
# 1409|   <params>: 
# 1409|     getParameter(0): [Parameter] v
# 1409|         Type = [Struct] Point
# 1409| [FunctionTemplateInstantiation,TopLevelFunction] void acceptValue<String>(String)
# 1409|   <params>: 
# 1409|     getParameter(0): [Parameter] v
# 1409|         Type = [Struct] String
# 1409| [TemplateFunction,TopLevelFunction] void acceptValue<T>(T)
# 1409|   <params>: 
# 1409|     getParameter(0): [Parameter] v
# 1409|         Type = [TemplateParameter] T
# 1409| [FunctionTemplateInstantiation,TopLevelFunction] void acceptValue<copy_constructor>(copy_constructor)
# 1409|   <params>: 
# 1409|     getParameter(0): [Parameter] v
# 1409|         Type = [Class] copy_constructor
# 1409| [FunctionTemplateInstantiation,TopLevelFunction] void acceptValue<destructor_only>(destructor_only)
# 1409|   <params>: 
# 1409|     getParameter(0): [Parameter] v
# 1409|         Type = [Class] destructor_only
# 1412| [FunctionTemplateInstantiation,TopLevelFunction] POD_Derived returnValue<POD_Derived>()
# 1412|   <params>: 
# 1412| [FunctionTemplateInstantiation,TopLevelFunction] POD_Middle returnValue<POD_Middle>()
# 1412|   <params>: 
# 1412| [FunctionTemplateInstantiation,TopLevelFunction] Point returnValue<Point>()
# 1412|   <params>: 
# 1412| [FunctionTemplateInstantiation,TopLevelFunction] String returnValue<String>()
# 1412|   <params>: 
# 1412| [TemplateFunction,TopLevelFunction] T returnValue<T>()
# 1412|   <params>: 
# 1412| [FunctionTemplateInstantiation,TopLevelFunction] UnusualFields returnValue<UnusualFields>()
# 1412|   <params>: 
# 1412| [FunctionTemplateInstantiation,TopLevelFunction] copy_constructor returnValue<copy_constructor>()
# 1412|   <params>: 
# 1412| [FunctionTemplateInstantiation,TopLevelFunction] destructor_only returnValue<destructor_only>()
# 1412|   <params>: 
# 1414| [TopLevelFunction] void temporary_string()
# 1414|   <params>: 
# 1414|   getEntryPoint(): [BlockStmt] { ... }
# 1415|     getStmt(0): [DeclStmt] declaration
# 1415|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 1415|           Type = [Struct] String
# 1415|         getVariable().getInitializer(): [Initializer] initializer for s
# 1415|           getExpr(): [FunctionCall] call to returnValue
# 1415|               Type = [Struct] String
# 1415|               ValueCategory = prvalue
# 1416|     getStmt(1): [DeclStmt] declaration
# 1416|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rs
# 1416|           Type = [LValueReferenceType] const String &
# 1416|         getVariable().getInitializer(): [Initializer] initializer for rs
# 1416|           getExpr(): [FunctionCall] call to returnValue
# 1416|               Type = [Struct] String
# 1416|               ValueCategory = prvalue
# 1416|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1416|               Type = [LValueReferenceType] const String &
# 1416|               ValueCategory = prvalue
# 1416|             getExpr(): [CStyleCast] (const String)...
# 1416|                 Conversion = [GlvalueConversion] glvalue conversion
# 1416|                 Type = [SpecifiedType] const String
# 1416|                 ValueCategory = lvalue
# 1416|               getExpr(): [TemporaryObjectExpr] temporary object
# 1416|                   Type = [Struct] String
# 1416|                   ValueCategory = lvalue
# 1418|     getStmt(2): [ExprStmt] ExprStmt
# 1418|       getExpr(): [FunctionCall] call to acceptRef
# 1418|           Type = [VoidType] void
# 1418|           ValueCategory = prvalue
# 1418|         getArgument(0): [VariableAccess] s
# 1418|             Type = [Struct] String
# 1418|             ValueCategory = lvalue
# 1418|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1418|             Type = [LValueReferenceType] const String &
# 1418|             ValueCategory = prvalue
# 1418|           getExpr(): [CStyleCast] (const String)...
# 1418|               Conversion = [GlvalueConversion] glvalue conversion
# 1418|               Type = [SpecifiedType] const String
# 1418|               ValueCategory = lvalue
# 1419|     getStmt(3): [ExprStmt] ExprStmt
# 1419|       getExpr(): [FunctionCall] call to acceptRef
# 1419|           Type = [VoidType] void
# 1419|           ValueCategory = prvalue
# 1419|         getArgument(0): [ConstructorCall] call to String
# 1419|             Type = [VoidType] void
# 1419|             ValueCategory = prvalue
# 1419|           getArgument(0): foo
# 1419|               Type = [ArrayType] const char[4]
# 1419|               Value = [StringLiteral] "foo"
# 1419|               ValueCategory = lvalue
# 1419|           getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1419|               Type = [PointerType] const char *
# 1419|               ValueCategory = prvalue
# 1419|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 1419|             Type = [VoidType] void
# 1419|             ValueCategory = prvalue
# 1419|           getQualifier(): [ReuseExpr] reuse of temporary object
# 1419|               Type = [SpecifiedType] const String
# 1419|               ValueCategory = xvalue
# 1419|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1419|             Type = [LValueReferenceType] const String &
# 1419|             ValueCategory = prvalue
# 1419|           getExpr(): [TemporaryObjectExpr] temporary object
# 1419|               Type = [SpecifiedType] const String
# 1419|               ValueCategory = lvalue
# 1420|     getStmt(4): [ExprStmt] ExprStmt
# 1420|       getExpr(): [FunctionCall] call to acceptValue
# 1420|           Type = [VoidType] void
# 1420|           ValueCategory = prvalue
# 1420|         getArgument(0): [ConstructorCall] call to String
# 1420|             Type = [VoidType] void
# 1420|             ValueCategory = prvalue
# 1420|           getArgument(0): [VariableAccess] s
# 1420|               Type = [Struct] String
# 1420|               ValueCategory = lvalue
# 1420|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1420|               Type = [LValueReferenceType] const String &
# 1420|               ValueCategory = prvalue
# 1420|             getExpr(): [CStyleCast] (const String)...
# 1420|                 Conversion = [GlvalueConversion] glvalue conversion
# 1420|                 Type = [SpecifiedType] const String
# 1420|                 ValueCategory = lvalue
# 1420|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 1420|             Type = [VoidType] void
# 1420|             ValueCategory = prvalue
# 1420|           getQualifier(): [ReuseExpr] reuse of temporary object
# 1420|               Type = [Struct] String
# 1420|               ValueCategory = xvalue
# 1420|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1420|             Type = [Struct] String
# 1420|             ValueCategory = lvalue
# 1421|     getStmt(5): [ExprStmt] ExprStmt
# 1421|       getExpr(): [FunctionCall] call to acceptValue
# 1421|           Type = [VoidType] void
# 1421|           ValueCategory = prvalue
# 1421|         getArgument(0): [ConstructorCall] call to String
# 1421|             Type = [VoidType] void
# 1421|             ValueCategory = prvalue
# 1421|           getArgument(0): foo
# 1421|               Type = [ArrayType] const char[4]
# 1421|               Value = [StringLiteral] "foo"
# 1421|               ValueCategory = lvalue
# 1421|           getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1421|               Type = [PointerType] const char *
# 1421|               ValueCategory = prvalue
# 1421|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 1421|             Type = [VoidType] void
# 1421|             ValueCategory = prvalue
# 1421|           getQualifier(): [ReuseExpr] reuse of temporary object
# 1421|               Type = [Struct] String
# 1421|               ValueCategory = xvalue
# 1421|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1421|             Type = [Struct] String
# 1421|             ValueCategory = lvalue
# 1422|     getStmt(6): [ExprStmt] ExprStmt
# 1422|       getExpr(): [FunctionCall] call to c_str
# 1422|           Type = [PointerType] const char *
# 1422|           ValueCategory = prvalue
# 1422|         getQualifier(): [ConstructorCall] call to String
# 1422|             Type = [VoidType] void
# 1422|             ValueCategory = prvalue
# 1422|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 1422|             Type = [VoidType] void
# 1422|             ValueCategory = prvalue
# 1422|           getQualifier(): [ReuseExpr] reuse of temporary object
# 1422|               Type = [Struct] String
# 1422|               ValueCategory = xvalue
# 1422|         getQualifier().getFullyConverted(): [CStyleCast] (const String)...
# 1422|             Conversion = [PrvalueAdjustmentConversion] prvalue adjustment conversion
# 1422|             Type = [SpecifiedType] const String
# 1422|             ValueCategory = prvalue
# 1422|           getExpr(): [TemporaryObjectExpr] temporary object
# 1422|               Type = [Struct] String
# 1422|               ValueCategory = prvalue(load)
# 1423|     getStmt(7): [ExprStmt] ExprStmt
# 1423|       getExpr(): [FunctionCall] call to c_str
# 1423|           Type = [PointerType] const char *
# 1423|           ValueCategory = prvalue
# 1423|         getQualifier(): [FunctionCall] call to returnValue
# 1423|             Type = [Struct] String
# 1423|             ValueCategory = prvalue
# 1423|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 1423|             Type = [VoidType] void
# 1423|             ValueCategory = prvalue
# 1423|           getQualifier(): [ReuseExpr] reuse of temporary object
# 1423|               Type = [Struct] String
# 1423|               ValueCategory = xvalue
# 1423|         getQualifier().getFullyConverted(): [CStyleCast] (const String)...
# 1423|             Conversion = [PrvalueAdjustmentConversion] prvalue adjustment conversion
# 1423|             Type = [SpecifiedType] const String
# 1423|             ValueCategory = prvalue
# 1423|           getExpr(): [TemporaryObjectExpr] temporary object
# 1423|               Type = [Struct] String
# 1423|               ValueCategory = prvalue(load)
# 1425|     getStmt(8): [ExprStmt] ExprStmt
# 1425|       getExpr(): [FunctionCall] call to defaultConstruct
# 1425|           Type = [Struct] String
# 1425|           ValueCategory = prvalue
# 1425|       getExpr().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1425|           Type = [Struct] String
# 1425|           ValueCategory = prvalue
# 1425|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 1425|             Type = [VoidType] void
# 1425|             ValueCategory = prvalue
# 1425|           getQualifier(): [ReuseExpr] reuse of temporary object
# 1425|               Type = [Struct] String
# 1425|               ValueCategory = xvalue
# 1426|     getStmt(9): [ReturnStmt] return ...
# 1426|       getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 1426|           Type = [VoidType] void
# 1426|           ValueCategory = prvalue
# 1426|         getQualifier(): [ReuseExpr] reuse of temporary object
# 1426|             Type = [Struct] String
# 1426|             ValueCategory = xvalue
# 1426|       getImplicitDestructorCall(1): [DestructorCall] call to ~String
# 1426|           Type = [VoidType] void
# 1426|           ValueCategory = prvalue
# 1426|         getQualifier(): [VariableAccess] s
# 1426|             Type = [Struct] String
# 1426|             ValueCategory = lvalue
# 1428| [TopLevelFunction] void temporary_destructor_only()
# 1428|   <params>: 
# 1428|   getEntryPoint(): [BlockStmt] { ... }
# 1429|     getStmt(0): [DeclStmt] declaration
# 1429|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
# 1429|           Type = [Class] destructor_only
# 1429|         getVariable().getInitializer(): [Initializer] initializer for d
# 1429|           getExpr(): [FunctionCall] call to returnValue
# 1429|               Type = [Class] destructor_only
# 1429|               ValueCategory = prvalue
# 1430|     getStmt(1): [DeclStmt] declaration
# 1430|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rd
# 1430|           Type = [LValueReferenceType] const destructor_only &
# 1430|         getVariable().getInitializer(): [Initializer] initializer for rd
# 1430|           getExpr(): [FunctionCall] call to returnValue
# 1430|               Type = [Class] destructor_only
# 1430|               ValueCategory = prvalue
# 1430|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1430|               Type = [LValueReferenceType] const destructor_only &
# 1430|               ValueCategory = prvalue
# 1430|             getExpr(): [CStyleCast] (const destructor_only)...
# 1430|                 Conversion = [GlvalueConversion] glvalue conversion
# 1430|                 Type = [SpecifiedType] const destructor_only
# 1430|                 ValueCategory = lvalue
# 1430|               getExpr(): [TemporaryObjectExpr] temporary object
# 1430|                   Type = [Class] destructor_only
# 1430|                   ValueCategory = lvalue
# 1431|     getStmt(2): [DeclStmt] declaration
# 1431|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d2
# 1431|           Type = [Class] destructor_only
# 1432|     getStmt(3): [ExprStmt] ExprStmt
# 1432|       getExpr(): [FunctionCall] call to acceptRef
# 1432|           Type = [VoidType] void
# 1432|           ValueCategory = prvalue
# 1432|         getArgument(0): [VariableAccess] d
# 1432|             Type = [Class] destructor_only
# 1432|             ValueCategory = lvalue
# 1432|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1432|             Type = [LValueReferenceType] const destructor_only &
# 1432|             ValueCategory = prvalue
# 1432|           getExpr(): [CStyleCast] (const destructor_only)...
# 1432|               Conversion = [GlvalueConversion] glvalue conversion
# 1432|               Type = [SpecifiedType] const destructor_only
# 1432|               ValueCategory = lvalue
# 1433|     getStmt(4): [ExprStmt] ExprStmt
# 1433|       getExpr(): [FunctionCall] call to acceptValue
# 1433|           Type = [VoidType] void
# 1433|           ValueCategory = prvalue
# 1433|         getArgument(0): [VariableAccess] d
# 1433|             Type = [Class] destructor_only
# 1433|             ValueCategory = prvalue(load)
# 1433|         getImplicitDestructorCall(0): [DestructorCall] call to ~destructor_only
# 1433|             Type = [VoidType] void
# 1433|             ValueCategory = prvalue
# 1433|           getQualifier(): [ReuseExpr] reuse of temporary object
# 1433|               Type = [Class] destructor_only
# 1433|               ValueCategory = xvalue
# 1433|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1433|             Type = [Class] destructor_only
# 1433|             ValueCategory = lvalue
# 1434|     getStmt(5): [ExprStmt] ExprStmt
# 1434|       getExpr(): [FunctionCall] call to method
# 1434|           Type = [VoidType] void
# 1434|           ValueCategory = prvalue
# 1434|         getQualifier(): [Literal] 0
# 1434|             Type = [Class] destructor_only
# 1434|             Value = [Literal] 0
# 1434|             ValueCategory = prvalue
# 1434|         getImplicitDestructorCall(0): [DestructorCall] call to ~destructor_only
# 1434|             Type = [VoidType] void
# 1434|             ValueCategory = prvalue
# 1434|           getQualifier(): [ReuseExpr] reuse of temporary object
# 1434|               Type = [Class] destructor_only
# 1434|               ValueCategory = xvalue
# 1434|         getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1434|             Type = [Class] destructor_only
# 1434|             ValueCategory = prvalue(load)
# 1435|     getStmt(6): [ExprStmt] ExprStmt
# 1435|       getExpr(): [FunctionCall] call to method
# 1435|           Type = [VoidType] void
# 1435|           ValueCategory = prvalue
# 1435|         getQualifier(): [FunctionCall] call to returnValue
# 1435|             Type = [Class] destructor_only
# 1435|             ValueCategory = prvalue
# 1435|         getImplicitDestructorCall(0): [DestructorCall] call to ~destructor_only
# 1435|             Type = [VoidType] void
# 1435|             ValueCategory = prvalue
# 1435|           getQualifier(): [ReuseExpr] reuse of temporary object
# 1435|               Type = [Class] destructor_only
# 1435|               ValueCategory = xvalue
# 1435|         getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1435|             Type = [Class] destructor_only
# 1435|             ValueCategory = prvalue(load)
# 1437|     getStmt(7): [ExprStmt] ExprStmt
# 1437|       getExpr(): [FunctionCall] call to defaultConstruct
# 1437|           Type = [Class] destructor_only
# 1437|           ValueCategory = prvalue
# 1437|       getExpr().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1437|           Type = [Class] destructor_only
# 1437|           ValueCategory = prvalue
# 1437|         getImplicitDestructorCall(0): [DestructorCall] call to ~destructor_only
# 1437|             Type = [VoidType] void
# 1437|             ValueCategory = prvalue
# 1437|           getQualifier(): [ReuseExpr] reuse of temporary object
# 1437|               Type = [Class] destructor_only
# 1437|               ValueCategory = xvalue
# 1438|     getStmt(8): [ReturnStmt] return ...
# 1438|       getImplicitDestructorCall(0): [DestructorCall] call to ~destructor_only
# 1438|           Type = [VoidType] void
# 1438|           ValueCategory = prvalue
# 1438|         getQualifier(): [VariableAccess] d2
# 1438|             Type = [Class] destructor_only
# 1438|             ValueCategory = lvalue
# 1438|       getImplicitDestructorCall(1): [DestructorCall] call to ~destructor_only
# 1438|           Type = [VoidType] void
# 1438|           ValueCategory = prvalue
# 1438|         getQualifier(): [ReuseExpr] reuse of temporary object
# 1438|             Type = [Class] destructor_only
# 1438|             ValueCategory = xvalue
# 1438|       getImplicitDestructorCall(2): [DestructorCall] call to ~destructor_only
# 1438|           Type = [VoidType] void
# 1438|           ValueCategory = prvalue
# 1438|         getQualifier(): [VariableAccess] d
# 1438|             Type = [Class] destructor_only
# 1438|             ValueCategory = lvalue
# 1440| [TopLevelFunction] void temporary_copy_constructor()
# 1440|   <params>: 
# 1440|   getEntryPoint(): [BlockStmt] { ... }
# 1441|     getStmt(0): [DeclStmt] declaration
# 1441|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
# 1441|           Type = [Class] copy_constructor
# 1441|         getVariable().getInitializer(): [Initializer] initializer for d
# 1441|           getExpr(): [FunctionCall] call to returnValue
# 1441|               Type = [Class] copy_constructor
# 1441|               ValueCategory = prvalue
# 1442|     getStmt(1): [DeclStmt] declaration
# 1442|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rd
# 1442|           Type = [LValueReferenceType] const copy_constructor &
# 1442|         getVariable().getInitializer(): [Initializer] initializer for rd
# 1442|           getExpr(): [FunctionCall] call to returnValue
# 1442|               Type = [Class] copy_constructor
# 1442|               ValueCategory = prvalue
# 1442|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1442|               Type = [LValueReferenceType] const copy_constructor &
# 1442|               ValueCategory = prvalue
# 1442|             getExpr(): [CStyleCast] (const copy_constructor)...
# 1442|                 Conversion = [GlvalueConversion] glvalue conversion
# 1442|                 Type = [SpecifiedType] const copy_constructor
# 1442|                 ValueCategory = lvalue
# 1442|               getExpr(): [TemporaryObjectExpr] temporary object
# 1442|                   Type = [Class] copy_constructor
# 1442|                   ValueCategory = lvalue
# 1443|     getStmt(2): [DeclStmt] declaration
# 1443|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d2
# 1443|           Type = [Class] copy_constructor
# 1443|         getVariable().getInitializer(): [Initializer] initializer for d2
# 1443|           getExpr(): [ConstructorCall] call to copy_constructor
# 1443|               Type = [VoidType] void
# 1443|               ValueCategory = prvalue
# 1444|     getStmt(3): [ExprStmt] ExprStmt
# 1444|       getExpr(): [FunctionCall] call to acceptRef
# 1444|           Type = [VoidType] void
# 1444|           ValueCategory = prvalue
# 1444|         getArgument(0): [VariableAccess] d
# 1444|             Type = [Class] copy_constructor
# 1444|             ValueCategory = lvalue
# 1444|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1444|             Type = [LValueReferenceType] const copy_constructor &
# 1444|             ValueCategory = prvalue
# 1444|           getExpr(): [CStyleCast] (const copy_constructor)...
# 1444|               Conversion = [GlvalueConversion] glvalue conversion
# 1444|               Type = [SpecifiedType] const copy_constructor
# 1444|               ValueCategory = lvalue
# 1445|     getStmt(4): [ExprStmt] ExprStmt
# 1445|       getExpr(): [FunctionCall] call to acceptValue
# 1445|           Type = [VoidType] void
# 1445|           ValueCategory = prvalue
# 1445|         getArgument(0): [ConstructorCall] call to copy_constructor
# 1445|             Type = [VoidType] void
# 1445|             ValueCategory = prvalue
# 1445|           getArgument(0): [VariableAccess] d
# 1445|               Type = [Class] copy_constructor
# 1445|               ValueCategory = lvalue
# 1445|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1445|               Type = [LValueReferenceType] const copy_constructor &
# 1445|               ValueCategory = prvalue
# 1445|             getExpr(): [CStyleCast] (const copy_constructor)...
# 1445|                 Conversion = [GlvalueConversion] glvalue conversion
# 1445|                 Type = [SpecifiedType] const copy_constructor
# 1445|                 ValueCategory = lvalue
# 1445|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1445|             Type = [Class] copy_constructor
# 1445|             ValueCategory = lvalue
# 1446|     getStmt(5): [ExprStmt] ExprStmt
# 1446|       getExpr(): [FunctionCall] call to method
# 1446|           Type = [VoidType] void
# 1446|           ValueCategory = prvalue
# 1446|         getQualifier(): [ConstructorCall] call to copy_constructor
# 1446|             Type = [VoidType] void
# 1446|             ValueCategory = prvalue
# 1446|         getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1446|             Type = [Class] copy_constructor
# 1446|             ValueCategory = prvalue(load)
# 1447|     getStmt(6): [ExprStmt] ExprStmt
# 1447|       getExpr(): [FunctionCall] call to method
# 1447|           Type = [VoidType] void
# 1447|           ValueCategory = prvalue
# 1447|         getQualifier(): [FunctionCall] call to returnValue
# 1447|             Type = [Class] copy_constructor
# 1447|             ValueCategory = prvalue
# 1447|         getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1447|             Type = [Class] copy_constructor
# 1447|             ValueCategory = prvalue(load)
# 1448|     getStmt(7): [ExprStmt] ExprStmt
# 1448|       getExpr(): [FunctionCall] call to defaultConstruct
# 1448|           Type = [Class] copy_constructor
# 1448|           ValueCategory = prvalue
# 1448|       getExpr().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1448|           Type = [Class] copy_constructor
# 1448|           ValueCategory = prvalue
# 1450|     getStmt(8): [DeclStmt] declaration
# 1450|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 1450|           Type = [IntType] int
# 1450|         getVariable().getInitializer(): [Initializer] initializer for y
# 1450|           getExpr(): [ValueFieldAccess] y
# 1450|               Type = [IntType] int
# 1450|               ValueCategory = prvalue
# 1450|             getQualifier(): [FunctionCall] call to returnValue
# 1450|                 Type = [Class] copy_constructor
# 1450|                 ValueCategory = prvalue
# 1450|             getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1450|                 Type = [Class] copy_constructor
# 1450|                 ValueCategory = prvalue(load)
# 1451|     getStmt(9): [ReturnStmt] return ...
# 1453| [TopLevelFunction] void temporary_point()
# 1453|   <params>: 
# 1453|   getEntryPoint(): [BlockStmt] { ... }
# 1454|     getStmt(0): [DeclStmt] declaration
# 1454|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of p
# 1454|           Type = [Struct] Point
# 1454|         getVariable().getInitializer(): [Initializer] initializer for p
# 1454|           getExpr(): [FunctionCall] call to returnValue
# 1454|               Type = [Struct] Point
# 1454|               ValueCategory = prvalue
# 1455|     getStmt(1): [DeclStmt] declaration
# 1455|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rp
# 1455|           Type = [LValueReferenceType] const Point &
# 1455|         getVariable().getInitializer(): [Initializer] initializer for rp
# 1455|           getExpr(): [FunctionCall] call to returnValue
# 1455|               Type = [Struct] Point
# 1455|               ValueCategory = prvalue
# 1455|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1455|               Type = [LValueReferenceType] const Point &
# 1455|               ValueCategory = prvalue
# 1455|             getExpr(): [CStyleCast] (const Point)...
# 1455|                 Conversion = [GlvalueConversion] glvalue conversion
# 1455|                 Type = [SpecifiedType] const Point
# 1455|                 ValueCategory = lvalue
# 1455|               getExpr(): [TemporaryObjectExpr] temporary object
# 1455|                   Type = [Struct] Point
# 1455|                   ValueCategory = lvalue
# 1457|     getStmt(2): [ExprStmt] ExprStmt
# 1457|       getExpr(): [FunctionCall] call to acceptRef
# 1457|           Type = [VoidType] void
# 1457|           ValueCategory = prvalue
# 1457|         getArgument(0): [VariableAccess] p
# 1457|             Type = [Struct] Point
# 1457|             ValueCategory = lvalue
# 1457|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1457|             Type = [LValueReferenceType] const Point &
# 1457|             ValueCategory = prvalue
# 1457|           getExpr(): [CStyleCast] (const Point)...
# 1457|               Conversion = [GlvalueConversion] glvalue conversion
# 1457|               Type = [SpecifiedType] const Point
# 1457|               ValueCategory = lvalue
# 1458|     getStmt(3): [ExprStmt] ExprStmt
# 1458|       getExpr(): [FunctionCall] call to acceptValue
# 1458|           Type = [VoidType] void
# 1458|           ValueCategory = prvalue
# 1458|         getArgument(0): [VariableAccess] p
# 1458|             Type = [Struct] Point
# 1458|             ValueCategory = prvalue(load)
# 1459|     getStmt(4): [ExprStmt] ExprStmt
# 1459|       getExpr(): [ValueFieldAccess] x
# 1459|           Type = [IntType] int
# 1459|           Value = [ValueFieldAccess] 0
# 1459|           ValueCategory = prvalue
# 1459|         getQualifier(): [Literal] 0
# 1459|             Type = [Struct] Point
# 1459|             Value = [Literal] 0
# 1459|             ValueCategory = prvalue
# 1459|         getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 1459|             Type = [Struct] Point
# 1459|             ValueCategory = prvalue(load)
# 1460|     getStmt(5): [DeclStmt] declaration
# 1460|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 1460|           Type = [IntType] int
# 1460|         getVariable().getInitializer(): [Initializer] initializer for y
# 1460|           getExpr(): [ValueFieldAccess] y
# 1460|               Type = [IntType] int
# 1460|               ValueCategory = prvalue
# 1460|             getQualifier(): [FunctionCall] call to returnValue
# 1460|                 Type = [Struct] Point
# 1460|                 ValueCategory = prvalue
# 1462|     getStmt(6): [ExprStmt] ExprStmt
# 1462|       getExpr(): [FunctionCall] call to defaultConstruct
# 1462|           Type = [Struct] Point
# 1462|           ValueCategory = prvalue
# 1463|     getStmt(7): [ReturnStmt] return ...
# 1465| [CopyAssignmentOperator] UnusualFields& UnusualFields::operator=(UnusualFields const&)
# 1465|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const UnusualFields &
# 1465| [Constructor] void UnusualFields::UnusualFields()
# 1465|   <params>: 
# 1465| [CopyConstructor] void UnusualFields::UnusualFields(UnusualFields const&)
# 1465|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const UnusualFields &
# 1465| [MoveConstructor] void UnusualFields::UnusualFields(UnusualFields&&)
# 1465|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] UnusualFields &&
# 1470| [TopLevelFunction] void temporary_unusual_fields()
# 1470|   <params>: 
# 1470|   getEntryPoint(): [BlockStmt] { ... }
# 1471|     getStmt(0): [DeclStmt] declaration
# 1471|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rx
# 1471|           Type = [LValueReferenceType] const int &
# 1471|         getVariable().getInitializer(): [Initializer] initializer for rx
# 1471|           getExpr(): [ValueFieldAccess] r
# 1471|               Type = [LValueReferenceType] int &
# 1471|               ValueCategory = prvalue
# 1471|             getQualifier(): [FunctionCall] call to returnValue
# 1471|                 Type = [Struct] UnusualFields
# 1471|                 ValueCategory = prvalue
# 1471|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1471|               Type = [LValueReferenceType] const int &
# 1471|               ValueCategory = prvalue
# 1471|             getExpr(): [CStyleCast] (const int)...
# 1471|                 Conversion = [GlvalueConversion] glvalue conversion
# 1471|                 Type = [SpecifiedType] const int
# 1471|                 ValueCategory = lvalue
# 1471|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1471|                   Type = [IntType] int
# 1471|                   ValueCategory = lvalue
# 1472|     getStmt(1): [DeclStmt] declaration
# 1472|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 1472|           Type = [IntType] int
# 1472|         getVariable().getInitializer(): [Initializer] initializer for x
# 1472|           getExpr(): [ValueFieldAccess] r
# 1472|               Type = [LValueReferenceType] int &
# 1472|               ValueCategory = prvalue
# 1472|             getQualifier(): [FunctionCall] call to returnValue
# 1472|                 Type = [Struct] UnusualFields
# 1472|                 ValueCategory = prvalue
# 1472|           getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1472|               Type = [IntType] int
# 1472|               ValueCategory = prvalue(load)
# 1474|     getStmt(2): [DeclStmt] declaration
# 1474|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rf
# 1474|           Type = [LValueReferenceType] const float &
# 1474|         getVariable().getInitializer(): [Initializer] initializer for rf
# 1474|           getExpr(): [ArrayExpr] access to array
# 1474|               Type = [FloatType] float
# 1474|               ValueCategory = lvalue
# 1474|             getArrayBase(): [ValueFieldAccess] a
# 1474|                 Type = [ArrayType] float[10]
# 1474|                 ValueCategory = prvalue
# 1474|               getQualifier(): [FunctionCall] call to returnValue
# 1474|                   Type = [Struct] UnusualFields
# 1474|                   ValueCategory = prvalue
# 1474|             getArrayOffset(): [Literal] 3
# 1474|                 Type = [IntType] int
# 1474|                 Value = [Literal] 3
# 1474|                 ValueCategory = prvalue
# 1474|             getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1474|                 Type = [PointerType] float *
# 1474|                 ValueCategory = prvalue
# 1474|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1474|               Type = [LValueReferenceType] const float &
# 1474|               ValueCategory = prvalue
# 1474|             getExpr(): [CStyleCast] (const float)...
# 1474|                 Conversion = [GlvalueConversion] glvalue conversion
# 1474|                 Type = [SpecifiedType] const float
# 1474|                 ValueCategory = lvalue
# 1475|     getStmt(3): [DeclStmt] declaration
# 1475|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of f
# 1475|           Type = [FloatType] float
# 1475|         getVariable().getInitializer(): [Initializer] initializer for f
# 1475|           getExpr(): [ArrayExpr] access to array
# 1475|               Type = [FloatType] float
# 1475|               ValueCategory = prvalue(load)
# 1475|             getArrayBase(): [ValueFieldAccess] a
# 1475|                 Type = [ArrayType] float[10]
# 1475|                 ValueCategory = prvalue
# 1475|               getQualifier(): [FunctionCall] call to returnValue
# 1475|                   Type = [Struct] UnusualFields
# 1475|                   ValueCategory = prvalue
# 1475|             getArrayOffset(): [Literal] 5
# 1475|                 Type = [IntType] int
# 1475|                 Value = [Literal] 5
# 1475|                 ValueCategory = prvalue
# 1475|             getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1475|                 Type = [PointerType] float *
# 1475|                 ValueCategory = prvalue
# 1476|     getStmt(4): [ReturnStmt] return ...
# 1478| [CopyAssignmentOperator] POD_Base& POD_Base::operator=(POD_Base const&)
# 1478|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const POD_Base &
# 1478| [MoveAssignmentOperator] POD_Base& POD_Base::operator=(POD_Base&&)
# 1478|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] POD_Base &&
# 1481| [ConstMemberFunction] float POD_Base::f() const
# 1481|   <params>: 
# 1484| [CopyAssignmentOperator] POD_Middle& POD_Middle::operator=(POD_Middle const&)
# 1484|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const POD_Middle &
# 1484| [MoveAssignmentOperator] POD_Middle& POD_Middle::operator=(POD_Middle&&)
# 1484|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] POD_Middle &&
# 1484| [Constructor] void POD_Middle::POD_Middle()
# 1484|   <params>: 
# 1488| [CopyAssignmentOperator] POD_Derived& POD_Derived::operator=(POD_Derived const&)
# 1488|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const POD_Derived &
# 1488| [MoveAssignmentOperator] POD_Derived& POD_Derived::operator=(POD_Derived&&)
# 1488|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] POD_Derived &&
# 1488| [Constructor] void POD_Derived::POD_Derived()
# 1488|   <params>: 
# 1492| [TopLevelFunction] void temporary_hierarchy()
# 1492|   <params>: 
# 1492|   getEntryPoint(): [BlockStmt] { ... }
# 1493|     getStmt(0): [DeclStmt] declaration
# 1493|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
# 1493|           Type = [Struct] POD_Base
# 1493|         getVariable().getInitializer(): [Initializer] initializer for b
# 1493|           getExpr(): [FunctionCall] call to returnValue
# 1493|               Type = [Struct] POD_Middle
# 1493|               ValueCategory = prvalue
#-----|           getExpr().getFullyConverted(): [CStyleCast] (POD_Base)...
#-----|               Conversion = [BaseClassConversion] base class conversion
#-----|               Type = [Struct] POD_Base
#-----|               ValueCategory = prvalue(load)
#-----|             getExpr(): [TemporaryObjectExpr] temporary object
#-----|                 Type = [Struct] POD_Middle
#-----|                 ValueCategory = xvalue
# 1494|     getStmt(1): [ExprStmt] ExprStmt
# 1494|       getExpr(): [AssignExpr] ... = ...
# 1494|           Type = [Struct] POD_Base
# 1494|           ValueCategory = lvalue
# 1494|         getLValue(): [VariableAccess] b
# 1494|             Type = [Struct] POD_Base
# 1494|             ValueCategory = lvalue
# 1494|         getRValue(): [FunctionCall] call to returnValue
# 1494|             Type = [Struct] POD_Derived
# 1494|             ValueCategory = prvalue
# 1494|         getRValue().getFullyConverted(): [CStyleCast] (POD_Base)...
# 1494|             Conversion = [BaseClassConversion] base class conversion
# 1494|             Type = [Struct] POD_Base
# 1494|             ValueCategory = prvalue(load)
# 1494|           getExpr(): [CStyleCast] (POD_Middle)...
# 1494|               Conversion = [BaseClassConversion] base class conversion
# 1494|               Type = [Struct] POD_Middle
# 1494|               ValueCategory = lvalue
# 1494|             getExpr(): [TemporaryObjectExpr] temporary object
# 1494|                 Type = [Struct] POD_Derived
# 1494|                 ValueCategory = lvalue
# 1494|               getExpr(): [ParenthesisExpr] (...)
# 1494|                   Type = [Struct] POD_Derived
# 1494|                   ValueCategory = prvalue
# 1495|     getStmt(2): [DeclStmt] declaration
# 1495|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 1495|           Type = [IntType] int
# 1495|         getVariable().getInitializer(): [Initializer] initializer for x
# 1495|           getExpr(): [ValueFieldAccess] x
# 1495|               Type = [IntType] int
# 1495|               ValueCategory = prvalue(load)
# 1495|             getQualifier(): [FunctionCall] call to returnValue
# 1495|                 Type = [Struct] POD_Derived
# 1495|                 ValueCategory = prvalue
#-----|             getQualifier().getFullyConverted(): [CStyleCast] (POD_Base)...
#-----|                 Conversion = [BaseClassConversion] base class conversion
#-----|                 Type = [Struct] POD_Base
#-----|                 ValueCategory = xvalue
#-----|               getExpr(): [CStyleCast] (POD_Middle)...
#-----|                   Conversion = [BaseClassConversion] base class conversion
#-----|                   Type = [Struct] POD_Middle
#-----|                   ValueCategory = xvalue
#-----|                 getExpr(): [TemporaryObjectExpr] temporary object
#-----|                     Type = [Struct] POD_Derived
#-----|                     ValueCategory = xvalue
# 1496|     getStmt(3): [DeclStmt] declaration
# 1496|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of f
# 1496|           Type = [FloatType] float
# 1496|         getVariable().getInitializer(): [Initializer] initializer for f
# 1496|           getExpr(): [FunctionCall] call to f
# 1496|               Type = [FloatType] float
# 1496|               ValueCategory = prvalue
# 1496|             getQualifier(): [FunctionCall] call to returnValue
# 1496|                 Type = [Struct] POD_Derived
# 1496|                 ValueCategory = prvalue
#-----|             getQualifier().getFullyConverted(): [CStyleCast] (const POD_Base)...
#-----|                 Conversion = [GlvalueConversion] glvalue conversion
#-----|                 Type = [SpecifiedType] const POD_Base
#-----|                 ValueCategory = xvalue
#-----|               getExpr(): [CStyleCast] (POD_Base)...
#-----|                   Conversion = [BaseClassConversion] base class conversion
#-----|                   Type = [Struct] POD_Base
#-----|                   ValueCategory = xvalue
#-----|                 getExpr(): [CStyleCast] (POD_Middle)...
#-----|                     Conversion = [BaseClassConversion] base class conversion
#-----|                     Type = [Struct] POD_Middle
#-----|                     ValueCategory = xvalue
#-----|                   getExpr(): [TemporaryObjectExpr] temporary object
#-----|                       Type = [Struct] POD_Derived
#-----|                       ValueCategory = xvalue
# 1496|                     getExpr(): [ParenthesisExpr] (...)
# 1496|                         Type = [Struct] POD_Derived
# 1496|                         ValueCategory = prvalue
# 1497|     getStmt(4): [ReturnStmt] return ...
# 1499| [CopyAssignmentOperator] Inheritance_Test_B& Inheritance_Test_B::operator=(Inheritance_Test_B const&)
# 1499|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Inheritance_Test_B &
# 1499| [Constructor] void Inheritance_Test_B::Inheritance_Test_B()
# 1499|   <params>: 
# 1500| [Destructor] void Inheritance_Test_B::~Inheritance_Test_B()
# 1500|   <params>: 
# 1500|   getEntryPoint(): [BlockStmt] { ... }
# 1500|     getStmt(0): [ReturnStmt] return ...
# 1500|   <destructions>: 
# 1503| [CopyAssignmentOperator] Inheritance_Test_A& Inheritance_Test_A::operator=(Inheritance_Test_A const&)
# 1503|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Inheritance_Test_A &
# 1503| [MoveAssignmentOperator] Inheritance_Test_A& Inheritance_Test_A::operator=(Inheritance_Test_A&&)
# 1503|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] Inheritance_Test_A &&
# 1503| [CopyConstructor] void Inheritance_Test_A::Inheritance_Test_A(Inheritance_Test_A const&)
# 1503|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Inheritance_Test_A &
# 1503| [MoveConstructor] void Inheritance_Test_A::Inheritance_Test_A(Inheritance_Test_A&&)
# 1503|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] Inheritance_Test_A &&
# 1503| [Destructor] void Inheritance_Test_A::~Inheritance_Test_A()
# 1503|   <params>: 
# 1506| [Constructor] void Inheritance_Test_A::Inheritance_Test_A()
# 1506|   <params>: 
# 1506|   <initializations>: 
# 1506|     getInitializer(0): (no string representation)
# 1506|         Type = [Struct] Inheritance_Test_B
# 1506|         ValueCategory = prvalue
# 1506|     getInitializer(1): [ConstructorFieldInit] constructor init of field x
# 1506|         Type = [IntType] int
# 1506|         ValueCategory = prvalue
# 1506|       getExpr(): [Literal] 42
# 1506|           Type = [IntType] int
# 1506|           Value = [Literal] 42
# 1506|           ValueCategory = prvalue
# 1506|   getEntryPoint(): [BlockStmt] { ... }
# 1507|     getStmt(0): [ExprStmt] ExprStmt
# 1507|       getExpr(): [AssignExpr] ... = ...
# 1507|           Type = [IntType] int
# 1507|           ValueCategory = lvalue
# 1507|         getLValue(): [ImplicitThisFieldAccess,PointerFieldAccess] y
# 1507|             Type = [IntType] int
# 1507|             ValueCategory = lvalue
# 1507|           getQualifier(): [ThisExpr] this
# 1507|               Type = [PointerType] Inheritance_Test_A *
# 1507|               ValueCategory = prvalue(load)
# 1507|         getRValue(): [Literal] 3
# 1507|             Type = [IntType] int
# 1507|             Value = [Literal] 3
# 1507|             ValueCategory = prvalue
# 1508|     getStmt(1): [ReturnStmt] return ...
# 1511| [TopLevelFunction] void array_structured_binding()
# 1511|   <params>: 
# 1511|   getEntryPoint(): [BlockStmt] { ... }
# 1512|     getStmt(0): [DeclStmt] declaration
# 1512|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of xs
# 1512|           Type = [ArrayType] int[2]
# 1512|         getVariable().getInitializer(): [Initializer] initializer for xs
# 1512|           getExpr(): [ArrayAggregateLiteral] {...}
# 1512|               Type = [ArrayType] int[2]
# 1512|               ValueCategory = prvalue
# 1512|             getAnElementExpr(0): [Literal] 1
# 1512|                 Type = [IntType] int
# 1512|                 Value = [Literal] 1
# 1512|                 ValueCategory = prvalue
# 1512|             getAnElementExpr(1): [Literal] 2
# 1512|                 Type = [IntType] int
# 1512|                 Value = [Literal] 2
# 1512|                 ValueCategory = prvalue
# 1514|     getStmt(1): [BlockStmt] { ... }
# 1515|       getStmt(0): [DeclStmt] declaration
# 1515|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of (unnamed local variable)
# 1515|             Type = [LValueReferenceType] int(&)[2]
# 1515|           getVariable().getInitializer(): [Initializer] initializer for (unnamed local variable)
# 1515|             getExpr(): [VariableAccess] xs
# 1515|                 Type = [ArrayType] int[2]
# 1515|                 ValueCategory = lvalue
# 1515|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1515|                 Type = [LValueReferenceType] int(&)[2]
# 1515|                 ValueCategory = prvalue
# 1515|         getDeclarationEntry(1): [VariableDeclarationEntry] definition of x0
# 1515|             Type = [IntType] int
#-----|           getVariable().getInitializer(): [Initializer] initializer for x0
#-----|             getExpr(): [ArrayExpr] access to array
#-----|                 Type = [IntType] int
#-----|                 ValueCategory = lvalue
#-----|               getArrayBase(): [VariableAccess] (unnamed local variable)
#-----|                   Type = [LValueReferenceType] int(&)[2]
#-----|                   ValueCategory = prvalue(load)
#-----|               getArrayOffset(): [Literal] 0
#-----|                   Type = [LongType] unsigned long
#-----|                   Value = [Literal] 0
#-----|                   ValueCategory = prvalue
#-----|               getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#-----|                   Type = [IntPointerType] int *
#-----|                   ValueCategory = prvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ArrayType] int[2]
#-----|                     ValueCategory = lvalue
# 1515|         getDeclarationEntry(2): [VariableDeclarationEntry] definition of x1
# 1515|             Type = [IntType] int
#-----|           getVariable().getInitializer(): [Initializer] initializer for x1
#-----|             getExpr(): [ArrayExpr] access to array
#-----|                 Type = [IntType] int
#-----|                 ValueCategory = lvalue
#-----|               getArrayBase(): [VariableAccess] (unnamed local variable)
#-----|                   Type = [LValueReferenceType] int(&)[2]
#-----|                   ValueCategory = prvalue(load)
#-----|               getArrayOffset(): [Literal] 1
#-----|                   Type = [LongType] unsigned long
#-----|                   Value = [Literal] 1
#-----|                   ValueCategory = prvalue
#-----|               getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#-----|                   Type = [IntPointerType] int *
#-----|                   ValueCategory = prvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ArrayType] int[2]
#-----|                     ValueCategory = lvalue
# 1516|       getStmt(1): [ExprStmt] ExprStmt
# 1516|         getExpr(): [AssignExpr] ... = ...
# 1516|             Type = [IntType] int
# 1516|             ValueCategory = lvalue
# 1516|           getLValue(): [VariableAccess] x1
# 1516|               Type = [IntType] int
# 1516|               ValueCategory = lvalue
# 1516|           getRValue(): [Literal] 3
# 1516|               Type = [IntType] int
# 1516|               Value = [Literal] 3
# 1516|               ValueCategory = prvalue
# 1517|       getStmt(2): [DeclStmt] declaration
# 1517|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rx1
# 1517|             Type = [LValueReferenceType] int &
# 1517|           getVariable().getInitializer(): [Initializer] initializer for rx1
# 1517|             getExpr(): [VariableAccess] x1
# 1517|                 Type = [IntType] int
# 1517|                 ValueCategory = lvalue
# 1517|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1517|                 Type = [LValueReferenceType] int &
# 1517|                 ValueCategory = prvalue
# 1518|       getStmt(3): [DeclStmt] declaration
# 1518|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 1518|             Type = [IntType] int
# 1518|           getVariable().getInitializer(): [Initializer] initializer for x
# 1518|             getExpr(): [VariableAccess] x1
# 1518|                 Type = [IntType] int
# 1518|                 ValueCategory = prvalue(load)
# 1521|     getStmt(2): [BlockStmt] { ... }
# 1522|       getStmt(0): [DeclStmt] declaration
# 1522|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of unnamed_local_variable
# 1522|             Type = [LValueReferenceType] int(&)[2]
# 1522|           getVariable().getInitializer(): [Initializer] initializer for unnamed_local_variable
# 1522|             getExpr(): [VariableAccess] xs
# 1522|                 Type = [ArrayType] int[2]
# 1522|                 ValueCategory = lvalue
# 1522|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1522|                 Type = [LValueReferenceType] int(&)[2]
# 1522|                 ValueCategory = prvalue
# 1523|       getStmt(1): [DeclStmt] declaration
# 1523|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of x0
# 1523|             Type = [LValueReferenceType] int &
# 1523|           getVariable().getInitializer(): [Initializer] initializer for x0
# 1523|             getExpr(): [ArrayExpr] access to array
# 1523|                 Type = [IntType] int
# 1523|                 ValueCategory = lvalue
# 1523|               getArrayBase(): [VariableAccess] unnamed_local_variable
# 1523|                   Type = [LValueReferenceType] int(&)[2]
# 1523|                   ValueCategory = prvalue(load)
# 1523|               getArrayOffset(): [Literal] 0
# 1523|                   Type = [IntType] int
# 1523|                   Value = [Literal] 0
# 1523|                   ValueCategory = prvalue
# 1523|               getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1523|                   Type = [IntPointerType] int *
# 1523|                   ValueCategory = prvalue
# 1523|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1523|                     Type = [ArrayType] int[2]
# 1523|                     ValueCategory = lvalue
# 1523|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1523|                 Type = [LValueReferenceType] int &
# 1523|                 ValueCategory = prvalue
# 1524|       getStmt(2): [DeclStmt] declaration
# 1524|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1
# 1524|             Type = [LValueReferenceType] int &
# 1524|           getVariable().getInitializer(): [Initializer] initializer for x1
# 1524|             getExpr(): [ArrayExpr] access to array
# 1524|                 Type = [IntType] int
# 1524|                 ValueCategory = lvalue
# 1524|               getArrayBase(): [VariableAccess] unnamed_local_variable
# 1524|                   Type = [LValueReferenceType] int(&)[2]
# 1524|                   ValueCategory = prvalue(load)
# 1524|               getArrayOffset(): [Literal] 1
# 1524|                   Type = [IntType] int
# 1524|                   Value = [Literal] 1
# 1524|                   ValueCategory = prvalue
# 1524|               getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1524|                   Type = [IntPointerType] int *
# 1524|                   ValueCategory = prvalue
# 1524|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1524|                     Type = [ArrayType] int[2]
# 1524|                     ValueCategory = lvalue
# 1524|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1524|                 Type = [LValueReferenceType] int &
# 1524|                 ValueCategory = prvalue
# 1525|       getStmt(3): [ExprStmt] ExprStmt
# 1525|         getExpr(): [AssignExpr] ... = ...
# 1525|             Type = [IntType] int
# 1525|             ValueCategory = lvalue
# 1525|           getLValue(): [VariableAccess] x1
# 1525|               Type = [LValueReferenceType] int &
# 1525|               ValueCategory = prvalue(load)
# 1525|           getRValue(): [Literal] 3
# 1525|               Type = [IntType] int
# 1525|               Value = [Literal] 3
# 1525|               ValueCategory = prvalue
# 1525|           getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1525|               Type = [IntType] int
# 1525|               ValueCategory = lvalue
# 1526|       getStmt(4): [DeclStmt] declaration
# 1526|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rx1
# 1526|             Type = [LValueReferenceType] int &
# 1526|           getVariable().getInitializer(): [Initializer] initializer for rx1
# 1526|             getExpr(): [VariableAccess] x1
# 1526|                 Type = [LValueReferenceType] int &
# 1526|                 ValueCategory = prvalue(load)
# 1526|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1526|                 Type = [LValueReferenceType] int &
# 1526|                 ValueCategory = prvalue
# 1526|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1526|                   Type = [IntType] int
# 1526|                   ValueCategory = lvalue
# 1527|       getStmt(5): [DeclStmt] declaration
# 1527|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 1527|             Type = [IntType] int
# 1527|           getVariable().getInitializer(): [Initializer] initializer for x
# 1527|             getExpr(): [VariableAccess] x1
# 1527|                 Type = [LValueReferenceType] int &
# 1527|                 ValueCategory = prvalue(load)
# 1527|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1527|                 Type = [IntType] int
# 1527|                 ValueCategory = prvalue(load)
# 1529|     getStmt(3): [ReturnStmt] return ...
# 1531| [CopyAssignmentOperator] StructuredBindingDataMemberMemberStruct& StructuredBindingDataMemberMemberStruct::operator=(StructuredBindingDataMemberMemberStruct const&)
# 1531|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const StructuredBindingDataMemberMemberStruct &
# 1531| [MoveAssignmentOperator] StructuredBindingDataMemberMemberStruct& StructuredBindingDataMemberMemberStruct::operator=(StructuredBindingDataMemberMemberStruct&&)
# 1531|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] StructuredBindingDataMemberMemberStruct &&
# 1531| [Constructor] void StructuredBindingDataMemberMemberStruct::StructuredBindingDataMemberMemberStruct()
# 1531|   <params>: 
# 1531|   <initializations>: 
# 1531|     getInitializer(0): [ConstructorFieldInit] constructor init of field x
# 1531|         Type = [IntType] int
# 1531|         ValueCategory = prvalue
# 1531|   getEntryPoint(): [BlockStmt] { ... }
# 1531|     getStmt(0): [ReturnStmt] return ...
# 1531| [CopyConstructor] void StructuredBindingDataMemberMemberStruct::StructuredBindingDataMemberMemberStruct(StructuredBindingDataMemberMemberStruct const&)
# 1531|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const StructuredBindingDataMemberMemberStruct &
# 1531| [MoveConstructor] void StructuredBindingDataMemberMemberStruct::StructuredBindingDataMemberMemberStruct(StructuredBindingDataMemberMemberStruct&&)
# 1531|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] StructuredBindingDataMemberMemberStruct &&
# 1535| [CopyAssignmentOperator] StructuredBindingDataMemberStruct& StructuredBindingDataMemberStruct::operator=(StructuredBindingDataMemberStruct const&)
# 1535|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const StructuredBindingDataMemberStruct &
# 1535| [Constructor] void StructuredBindingDataMemberStruct::StructuredBindingDataMemberStruct()
# 1535|   <params>: 
# 1535|   <initializations>: 
# 1535|     getInitializer(0): [ConstructorFieldInit] constructor init of field i
# 1535|         Type = [IntType] int
# 1535|         ValueCategory = prvalue
# 1535|     getInitializer(1): [ConstructorFieldInit] constructor init of field d
# 1535|         Type = [DoubleType] double
# 1535|         ValueCategory = prvalue
# 1535|     getInitializer(2): [ConstructorFieldInit] constructor init of field r
# 1535|         Type = [LValueReferenceType] int &
# 1535|         ValueCategory = prvalue
# 1535|     getInitializer(3): [ConstructorFieldInit] constructor init of field p
# 1535|         Type = [IntPointerType] int *
# 1535|         ValueCategory = prvalue
# 1535|     getInitializer(4): [ConstructorFieldInit] constructor init of field xs
# 1535|         Type = [CTypedefType,NestedTypedefType] ArrayType
# 1535|         ValueCategory = prvalue
# 1535|     getInitializer(5): [ConstructorFieldInit] constructor init of field r_alt
# 1535|         Type = [CTypedefType,NestedTypedefType] RefType
# 1535|         ValueCategory = prvalue
# 1535|     getInitializer(6): [ConstructorFieldInit] constructor init of field m
# 1535|         Type = [Struct] StructuredBindingDataMemberMemberStruct
# 1535|         ValueCategory = prvalue
# 1535|       getExpr(): [ConstructorCall] call to StructuredBindingDataMemberMemberStruct
# 1535|           Type = [VoidType] void
# 1535|           ValueCategory = prvalue
# 1535|   getEntryPoint(): [BlockStmt] { ... }
# 1535|     getStmt(0): [ReturnStmt] return ...
# 1535| [CopyConstructor] void StructuredBindingDataMemberStruct::StructuredBindingDataMemberStruct(StructuredBindingDataMemberStruct const&)
# 1535|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const StructuredBindingDataMemberStruct &
# 1535|   <initializations>: 
# 1535|     getInitializer(0): [ConstructorFieldInit] constructor init of field i
# 1535|         Type = [IntType] int
# 1535|         ValueCategory = prvalue
# 1535|       getExpr(): [ReferenceFieldAccess] i
# 1535|           Type = [IntType] int
# 1535|           ValueCategory = prvalue(load)
# 1535|         getQualifier(): [VariableAccess] (unnamed parameter 0)
# 1535|             Type = [LValueReferenceType] const StructuredBindingDataMemberStruct &
# 1535|             ValueCategory = prvalue(load)
# 1535|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1535|             Type = [SpecifiedType] const StructuredBindingDataMemberStruct
# 1535|             ValueCategory = lvalue
# 1535|     getInitializer(1): [ConstructorFieldInit] constructor init of field d
# 1535|         Type = [DoubleType] double
# 1535|         ValueCategory = prvalue
# 1535|       getExpr(): [ReferenceFieldAccess] d
# 1535|           Type = [DoubleType] double
# 1535|           ValueCategory = prvalue(load)
# 1535|         getQualifier(): [VariableAccess] (unnamed parameter 0)
# 1535|             Type = [LValueReferenceType] const StructuredBindingDataMemberStruct &
# 1535|             ValueCategory = prvalue(load)
# 1535|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1535|             Type = [SpecifiedType] const StructuredBindingDataMemberStruct
# 1535|             ValueCategory = lvalue
# 1535|     getInitializer(2): [ConstructorFieldInit] constructor init of field b
# 1535|         Type = [IntType] unsigned int
# 1535|         ValueCategory = prvalue
# 1535|       getExpr(): [ReferenceFieldAccess] b
# 1535|           Type = [IntType] unsigned int
# 1535|           ValueCategory = prvalue(load)
# 1535|         getQualifier(): [VariableAccess] (unnamed parameter 0)
# 1535|             Type = [LValueReferenceType] const StructuredBindingDataMemberStruct &
# 1535|             ValueCategory = prvalue(load)
# 1535|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1535|             Type = [SpecifiedType] const StructuredBindingDataMemberStruct
# 1535|             ValueCategory = lvalue
# 1535|     getInitializer(3): [ConstructorFieldInit] constructor init of field r
# 1535|         Type = [LValueReferenceType] int &
# 1535|         ValueCategory = prvalue
# 1535|       getExpr(): [ReferenceFieldAccess] r
# 1535|           Type = [LValueReferenceType] int &
# 1535|           ValueCategory = prvalue(load)
# 1535|         getQualifier(): [VariableAccess] (unnamed parameter 0)
# 1535|             Type = [LValueReferenceType] const StructuredBindingDataMemberStruct &
# 1535|             ValueCategory = prvalue(load)
# 1535|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1535|             Type = [SpecifiedType] const StructuredBindingDataMemberStruct
# 1535|             ValueCategory = lvalue
# 1535|     getInitializer(4): [ConstructorFieldInit] constructor init of field p
# 1535|         Type = [IntPointerType] int *
# 1535|         ValueCategory = prvalue
# 1535|       getExpr(): [ReferenceFieldAccess] p
# 1535|           Type = [IntPointerType] int *
# 1535|           ValueCategory = prvalue(load)
# 1535|         getQualifier(): [VariableAccess] (unnamed parameter 0)
# 1535|             Type = [LValueReferenceType] const StructuredBindingDataMemberStruct &
# 1535|             ValueCategory = prvalue(load)
# 1535|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1535|             Type = [SpecifiedType] const StructuredBindingDataMemberStruct
# 1535|             ValueCategory = lvalue
# 1535|     getInitializer(5): [ConstructorFieldInit] constructor init of field xs
# 1535|         Type = [CTypedefType,NestedTypedefType] ArrayType
# 1535|         ValueCategory = prvalue
# 1535|       getExpr(): [ReferenceFieldAccess] xs
# 1535|           Type = [CTypedefType,NestedTypedefType] ArrayType
# 1535|           ValueCategory = prvalue(load)
# 1535|         getQualifier(): [VariableAccess] (unnamed parameter 0)
# 1535|             Type = [LValueReferenceType] const StructuredBindingDataMemberStruct &
# 1535|             ValueCategory = prvalue(load)
# 1535|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1535|             Type = [SpecifiedType] const StructuredBindingDataMemberStruct
# 1535|             ValueCategory = lvalue
# 1535|     getInitializer(6): [ConstructorFieldInit] constructor init of field r_alt
# 1535|         Type = [CTypedefType,NestedTypedefType] RefType
# 1535|         ValueCategory = prvalue
# 1535|       getExpr(): [ReferenceFieldAccess] r_alt
# 1535|           Type = [CTypedefType,NestedTypedefType] RefType
# 1535|           ValueCategory = prvalue(load)
# 1535|         getQualifier(): [VariableAccess] (unnamed parameter 0)
# 1535|             Type = [LValueReferenceType] const StructuredBindingDataMemberStruct &
# 1535|             ValueCategory = prvalue(load)
# 1535|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1535|             Type = [SpecifiedType] const StructuredBindingDataMemberStruct
# 1535|             ValueCategory = lvalue
# 1535|     getInitializer(7): [ConstructorFieldInit] constructor init of field m
# 1535|         Type = [Struct] StructuredBindingDataMemberMemberStruct
# 1535|         ValueCategory = prvalue
# 1535|       getExpr(): [ReferenceFieldAccess] m
# 1535|           Type = [Struct] StructuredBindingDataMemberMemberStruct
# 1535|           ValueCategory = prvalue(load)
# 1535|         getQualifier(): [VariableAccess] (unnamed parameter 0)
# 1535|             Type = [LValueReferenceType] const StructuredBindingDataMemberStruct &
# 1535|             ValueCategory = prvalue(load)
# 1535|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1535|             Type = [SpecifiedType] const StructuredBindingDataMemberStruct
# 1535|             ValueCategory = lvalue
# 1535|   getEntryPoint(): [BlockStmt] { ... }
# 1535|     getStmt(0): [ReturnStmt] return ...
# 1535| [MoveConstructor] void StructuredBindingDataMemberStruct::StructuredBindingDataMemberStruct(StructuredBindingDataMemberStruct&&)
# 1535|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] StructuredBindingDataMemberStruct &&
# 1548| [TopLevelFunction] void data_member_structured_binding()
# 1548|   <params>: 
# 1548|   getEntryPoint(): [BlockStmt] { ... }
# 1549|     getStmt(0): [DeclStmt] declaration
# 1549|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 1549|           Type = [Struct] StructuredBindingDataMemberStruct
# 1549|         getVariable().getInitializer(): [Initializer] initializer for s
# 1549|           getExpr(): [ConstructorCall] call to StructuredBindingDataMemberStruct
# 1549|               Type = [VoidType] void
# 1549|               ValueCategory = prvalue
# 1551|     getStmt(1): [BlockStmt] { ... }
# 1552|       getStmt(0): [DeclStmt] declaration
# 1552|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of (unnamed local variable)
# 1552|             Type = [Struct] StructuredBindingDataMemberStruct
# 1552|           getVariable().getInitializer(): [Initializer] initializer for (unnamed local variable)
# 1552|             getExpr(): [VariableAccess] s
# 1552|                 Type = [Struct] StructuredBindingDataMemberStruct
# 1552|                 ValueCategory = prvalue(load)
# 1552|         getDeclarationEntry(1): [VariableDeclarationEntry] definition of i
# 1552|             Type = [IntType] int
#-----|           getVariable().getInitializer(): [Initializer] initializer for i
# 1552|             getExpr(): [ValueFieldAccess] i
# 1552|                 Type = [IntType] int
# 1552|                 ValueCategory = lvalue
# 1552|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1552|                   Type = [Struct] StructuredBindingDataMemberStruct
# 1552|                   ValueCategory = lvalue
# 1552|         getDeclarationEntry(2): [VariableDeclarationEntry] definition of d
# 1552|             Type = [DoubleType] double
#-----|           getVariable().getInitializer(): [Initializer] initializer for d
# 1552|             getExpr(): [ValueFieldAccess] d
# 1552|                 Type = [DoubleType] double
# 1552|                 ValueCategory = lvalue
# 1552|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1552|                   Type = [Struct] StructuredBindingDataMemberStruct
# 1552|                   ValueCategory = lvalue
# 1552|         getDeclarationEntry(3): [VariableDeclarationEntry] definition of b
# 1552|             Type = [IntType] unsigned int
#-----|           getVariable().getInitializer(): [Initializer] initializer for b
# 1552|             getExpr(): [ValueFieldAccess] b
# 1552|                 Type = [IntType] unsigned int
# 1552|                 ValueCategory = lvalue
# 1552|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1552|                   Type = [Struct] StructuredBindingDataMemberStruct
# 1552|                   ValueCategory = lvalue
# 1552|         getDeclarationEntry(4): [VariableDeclarationEntry] definition of r
# 1552|             Type = [IntType] int
#-----|           getVariable().getInitializer(): [Initializer] initializer for r
# 1552|             getExpr(): [ValueFieldAccess] r
# 1552|                 Type = [LValueReferenceType] int &
# 1552|                 ValueCategory = prvalue(load)
# 1552|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1552|                   Type = [Struct] StructuredBindingDataMemberStruct
# 1552|                   ValueCategory = lvalue
# 1552|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1552|                 Type = [IntType] int
# 1552|                 ValueCategory = lvalue
# 1552|         getDeclarationEntry(5): [VariableDeclarationEntry] definition of p
# 1552|             Type = [IntPointerType] int *
#-----|           getVariable().getInitializer(): [Initializer] initializer for p
# 1552|             getExpr(): [ValueFieldAccess] p
# 1552|                 Type = [IntPointerType] int *
# 1552|                 ValueCategory = lvalue
# 1552|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1552|                   Type = [Struct] StructuredBindingDataMemberStruct
# 1552|                   ValueCategory = lvalue
# 1552|         getDeclarationEntry(6): [VariableDeclarationEntry] definition of xs
# 1552|             Type = [CTypedefType,NestedTypedefType] ArrayType
#-----|           getVariable().getInitializer(): [Initializer] initializer for xs
# 1552|             getExpr(): [ValueFieldAccess] xs
# 1552|                 Type = [CTypedefType,NestedTypedefType] ArrayType
# 1552|                 ValueCategory = lvalue
# 1552|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1552|                   Type = [Struct] StructuredBindingDataMemberStruct
# 1552|                   ValueCategory = lvalue
# 1552|         getDeclarationEntry(7): [VariableDeclarationEntry] definition of r_alt
# 1552|             Type = [IntType] int
#-----|           getVariable().getInitializer(): [Initializer] initializer for r_alt
# 1552|             getExpr(): [ValueFieldAccess] r_alt
# 1552|                 Type = [CTypedefType,NestedTypedefType] RefType
# 1552|                 ValueCategory = prvalue(load)
# 1552|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1552|                   Type = [Struct] StructuredBindingDataMemberStruct
# 1552|                   ValueCategory = lvalue
# 1552|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1552|                 Type = [IntType] int
# 1552|                 ValueCategory = lvalue
# 1552|         getDeclarationEntry(8): [VariableDeclarationEntry] definition of m
# 1552|             Type = [Struct] StructuredBindingDataMemberMemberStruct
#-----|           getVariable().getInitializer(): [Initializer] initializer for m
# 1552|             getExpr(): [ValueFieldAccess] m
# 1552|                 Type = [Struct] StructuredBindingDataMemberMemberStruct
# 1552|                 ValueCategory = lvalue
# 1552|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1552|                   Type = [Struct] StructuredBindingDataMemberStruct
# 1552|                   ValueCategory = lvalue
# 1553|       getStmt(1): [ExprStmt] ExprStmt
# 1553|         getExpr(): [AssignExpr] ... = ...
# 1553|             Type = [DoubleType] double
# 1553|             ValueCategory = lvalue
# 1553|           getLValue(): [VariableAccess] d
# 1553|               Type = [DoubleType] double
# 1553|               ValueCategory = lvalue
# 1553|           getRValue(): [Literal] 4.0
# 1553|               Type = [DoubleType] double
# 1553|               Value = [Literal] 4.0
# 1553|               ValueCategory = prvalue
# 1554|       getStmt(2): [DeclStmt] declaration
# 1554|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rd
# 1554|             Type = [LValueReferenceType] double &
# 1554|           getVariable().getInitializer(): [Initializer] initializer for rd
# 1554|             getExpr(): [VariableAccess] d
# 1554|                 Type = [DoubleType] double
# 1554|                 ValueCategory = lvalue
# 1554|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1554|                 Type = [LValueReferenceType] double &
# 1554|                 ValueCategory = prvalue
# 1555|       getStmt(3): [DeclStmt] declaration
# 1555|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of v
# 1555|             Type = [IntType] int
# 1555|           getVariable().getInitializer(): [Initializer] initializer for v
# 1555|             getExpr(): [VariableAccess] i
# 1555|                 Type = [IntType] int
# 1555|                 ValueCategory = prvalue(load)
# 1556|       getStmt(4): [ExprStmt] ExprStmt
# 1556|         getExpr(): [AssignExpr] ... = ...
# 1556|             Type = [IntType] int
# 1556|             ValueCategory = lvalue
# 1556|           getLValue(): [VariableAccess] r
# 1556|               Type = [IntType] int
# 1556|               ValueCategory = lvalue
# 1556|           getRValue(): [Literal] 5
# 1556|               Type = [IntType] int
# 1556|               Value = [Literal] 5
# 1556|               ValueCategory = prvalue
# 1557|       getStmt(5): [ExprStmt] ExprStmt
# 1557|         getExpr(): [AssignExpr] ... = ...
# 1557|             Type = [IntType] int
# 1557|             ValueCategory = lvalue
# 1557|           getLValue(): [PointerDereferenceExpr] * ...
# 1557|               Type = [IntType] int
# 1557|               ValueCategory = lvalue
# 1557|             getOperand(): [VariableAccess] p
# 1557|                 Type = [IntPointerType] int *
# 1557|                 ValueCategory = prvalue(load)
# 1557|           getRValue(): [Literal] 6
# 1557|               Type = [IntType] int
# 1557|               Value = [Literal] 6
# 1557|               ValueCategory = prvalue
# 1558|       getStmt(6): [DeclStmt] declaration
# 1558|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rr
# 1558|             Type = [LValueReferenceType] int &
# 1558|           getVariable().getInitializer(): [Initializer] initializer for rr
# 1558|             getExpr(): [VariableAccess] r
# 1558|                 Type = [IntType] int
# 1558|                 ValueCategory = lvalue
# 1558|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1558|                 Type = [LValueReferenceType] int &
# 1558|                 ValueCategory = prvalue
# 1559|       getStmt(7): [DeclStmt] declaration
# 1559|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of pr
# 1559|             Type = [IntPointerType] int *
# 1559|           getVariable().getInitializer(): [Initializer] initializer for pr
# 1559|             getExpr(): [AddressOfExpr] & ...
# 1559|                 Type = [IntPointerType] int *
# 1559|                 ValueCategory = prvalue
# 1559|               getOperand(): [VariableAccess] r
# 1559|                   Type = [IntType] int
# 1559|                   ValueCategory = lvalue
# 1560|       getStmt(8): [DeclStmt] declaration
# 1560|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of w
# 1560|             Type = [IntType] int
# 1560|           getVariable().getInitializer(): [Initializer] initializer for w
# 1560|             getExpr(): [VariableAccess] r
# 1560|                 Type = [IntType] int
# 1560|                 ValueCategory = prvalue(load)
# 1563|     getStmt(2): [BlockStmt] { ... }
# 1564|       getStmt(0): [DeclStmt] declaration
# 1564|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of unnamed_local_variable
# 1564|             Type = [Struct] StructuredBindingDataMemberStruct
# 1564|           getVariable().getInitializer(): [Initializer] initializer for unnamed_local_variable
# 1564|             getExpr(): [VariableAccess] s
# 1564|                 Type = [Struct] StructuredBindingDataMemberStruct
# 1564|                 ValueCategory = prvalue(load)
# 1565|       getStmt(1): [DeclStmt] declaration
# 1565|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
# 1565|             Type = [LValueReferenceType] int &
# 1565|           getVariable().getInitializer(): [Initializer] initializer for i
# 1565|             getExpr(): [ValueFieldAccess] i
# 1565|                 Type = [IntType] int
# 1565|                 ValueCategory = lvalue
# 1565|               getQualifier(): [VariableAccess] unnamed_local_variable
# 1565|                   Type = [Struct] StructuredBindingDataMemberStruct
# 1565|                   ValueCategory = lvalue
# 1565|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1565|                 Type = [LValueReferenceType] int &
# 1565|                 ValueCategory = prvalue
# 1566|       getStmt(2): [DeclStmt] declaration
# 1566|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
# 1566|             Type = [LValueReferenceType] double &
# 1566|           getVariable().getInitializer(): [Initializer] initializer for d
# 1566|             getExpr(): [ValueFieldAccess] d
# 1566|                 Type = [DoubleType] double
# 1566|                 ValueCategory = lvalue
# 1566|               getQualifier(): [VariableAccess] unnamed_local_variable
# 1566|                   Type = [Struct] StructuredBindingDataMemberStruct
# 1566|                   ValueCategory = lvalue
# 1566|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1566|                 Type = [LValueReferenceType] double &
# 1566|                 ValueCategory = prvalue
# 1568|       getStmt(3): [DeclStmt] declaration
# 1568|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of r
# 1568|             Type = [LValueReferenceType] int &
# 1568|           getVariable().getInitializer(): [Initializer] initializer for r
# 1568|             getExpr(): [ValueFieldAccess] r
# 1568|                 Type = [LValueReferenceType] int &
# 1568|                 ValueCategory = prvalue(load)
# 1568|               getQualifier(): [VariableAccess] unnamed_local_variable
# 1568|                   Type = [Struct] StructuredBindingDataMemberStruct
# 1568|                   ValueCategory = lvalue
# 1568|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1568|                 Type = [LValueReferenceType] int &
# 1568|                 ValueCategory = prvalue
# 1568|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1568|                   Type = [IntType] int
# 1568|                   ValueCategory = lvalue
# 1569|       getStmt(4): [DeclStmt] declaration
# 1569|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of p
# 1569|             Type = [LValueReferenceType] int *&
# 1569|           getVariable().getInitializer(): [Initializer] initializer for p
# 1569|             getExpr(): [ValueFieldAccess] p
# 1569|                 Type = [IntPointerType] int *
# 1569|                 ValueCategory = lvalue
# 1569|               getQualifier(): [VariableAccess] unnamed_local_variable
# 1569|                   Type = [Struct] StructuredBindingDataMemberStruct
# 1569|                   ValueCategory = lvalue
# 1569|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1569|                 Type = [LValueReferenceType] int *&
# 1569|                 ValueCategory = prvalue
# 1570|       getStmt(5): [ExprStmt] ExprStmt
# 1570|         getExpr(): [AssignExpr] ... = ...
# 1570|             Type = [DoubleType] double
# 1570|             ValueCategory = lvalue
# 1570|           getLValue(): [VariableAccess] d
# 1570|               Type = [LValueReferenceType] double &
# 1570|               ValueCategory = prvalue(load)
# 1570|           getRValue(): [Literal] 4.0
# 1570|               Type = [DoubleType] double
# 1570|               Value = [Literal] 4.0
# 1570|               ValueCategory = prvalue
# 1570|           getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1570|               Type = [DoubleType] double
# 1570|               ValueCategory = lvalue
# 1571|       getStmt(6): [DeclStmt] declaration
# 1571|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rd
# 1571|             Type = [LValueReferenceType] double &
# 1571|           getVariable().getInitializer(): [Initializer] initializer for rd
# 1571|             getExpr(): [VariableAccess] d
# 1571|                 Type = [LValueReferenceType] double &
# 1571|                 ValueCategory = prvalue(load)
# 1571|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1571|                 Type = [LValueReferenceType] double &
# 1571|                 ValueCategory = prvalue
# 1571|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1571|                   Type = [DoubleType] double
# 1571|                   ValueCategory = lvalue
# 1572|       getStmt(7): [DeclStmt] declaration
# 1572|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of v
# 1572|             Type = [IntType] int
# 1572|           getVariable().getInitializer(): [Initializer] initializer for v
# 1572|             getExpr(): [VariableAccess] i
# 1572|                 Type = [LValueReferenceType] int &
# 1572|                 ValueCategory = prvalue(load)
# 1572|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1572|                 Type = [IntType] int
# 1572|                 ValueCategory = prvalue(load)
# 1573|       getStmt(8): [ExprStmt] ExprStmt
# 1573|         getExpr(): [AssignExpr] ... = ...
# 1573|             Type = [IntType] int
# 1573|             ValueCategory = lvalue
# 1573|           getLValue(): [VariableAccess] r
# 1573|               Type = [LValueReferenceType] int &
# 1573|               ValueCategory = prvalue(load)
# 1573|           getRValue(): [Literal] 5
# 1573|               Type = [IntType] int
# 1573|               Value = [Literal] 5
# 1573|               ValueCategory = prvalue
# 1573|           getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1573|               Type = [IntType] int
# 1573|               ValueCategory = lvalue
# 1574|       getStmt(9): [ExprStmt] ExprStmt
# 1574|         getExpr(): [AssignExpr] ... = ...
# 1574|             Type = [IntType] int
# 1574|             ValueCategory = lvalue
# 1574|           getLValue(): [PointerDereferenceExpr] * ...
# 1574|               Type = [IntType] int
# 1574|               ValueCategory = lvalue
# 1574|             getOperand(): [VariableAccess] p
# 1574|                 Type = [LValueReferenceType] int *&
# 1574|                 ValueCategory = prvalue(load)
# 1574|             getOperand().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1574|                 Type = [IntPointerType] int *
# 1574|                 ValueCategory = prvalue(load)
# 1574|           getRValue(): [Literal] 6
# 1574|               Type = [IntType] int
# 1574|               Value = [Literal] 6
# 1574|               ValueCategory = prvalue
# 1575|       getStmt(10): [DeclStmt] declaration
# 1575|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rr
# 1575|             Type = [LValueReferenceType] int &
# 1575|           getVariable().getInitializer(): [Initializer] initializer for rr
# 1575|             getExpr(): [VariableAccess] r
# 1575|                 Type = [LValueReferenceType] int &
# 1575|                 ValueCategory = prvalue(load)
# 1575|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1575|                 Type = [LValueReferenceType] int &
# 1575|                 ValueCategory = prvalue
# 1575|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1575|                   Type = [IntType] int
# 1575|                   ValueCategory = lvalue
# 1576|       getStmt(11): [DeclStmt] declaration
# 1576|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of pr
# 1576|             Type = [IntPointerType] int *
# 1576|           getVariable().getInitializer(): [Initializer] initializer for pr
# 1576|             getExpr(): [AddressOfExpr] & ...
# 1576|                 Type = [IntPointerType] int *
# 1576|                 ValueCategory = prvalue
# 1576|               getOperand(): [VariableAccess] r
# 1576|                   Type = [LValueReferenceType] int &
# 1576|                   ValueCategory = prvalue(load)
# 1576|               getOperand().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1576|                   Type = [IntType] int
# 1576|                   ValueCategory = lvalue
# 1577|       getStmt(12): [DeclStmt] declaration
# 1577|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of w
# 1577|             Type = [IntType] int
# 1577|           getVariable().getInitializer(): [Initializer] initializer for w
# 1577|             getExpr(): [VariableAccess] r
# 1577|                 Type = [LValueReferenceType] int &
# 1577|                 ValueCategory = prvalue(load)
# 1577|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1577|                 Type = [IntType] int
# 1577|                 ValueCategory = prvalue(load)
# 1579|     getStmt(3): [ReturnStmt] return ...
# 1588| [CopyAssignmentOperator] StructuredBindingTupleRefGet& StructuredBindingTupleRefGet::operator=(StructuredBindingTupleRefGet const&)
# 1588|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const StructuredBindingTupleRefGet &
# 1588| [Constructor] void StructuredBindingTupleRefGet::StructuredBindingTupleRefGet()
# 1588|   <params>: 
# 1588|   <initializations>: 
# 1588|     getInitializer(0): [ConstructorFieldInit] constructor init of field i
# 1588|         Type = [IntType] int
# 1588|         ValueCategory = prvalue
# 1588|     getInitializer(1): [ConstructorFieldInit] constructor init of field d
# 1588|         Type = [DoubleType] double
# 1588|         ValueCategory = prvalue
# 1588|     getInitializer(2): [ConstructorFieldInit] constructor init of field r
# 1588|         Type = [LValueReferenceType] int &
# 1588|         ValueCategory = prvalue
# 1588|   getEntryPoint(): [BlockStmt] { ... }
# 1588|     getStmt(0): [ReturnStmt] return ...
# 1588| [CopyConstructor] void StructuredBindingTupleRefGet::StructuredBindingTupleRefGet(StructuredBindingTupleRefGet const&)
# 1588|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const StructuredBindingTupleRefGet &
# 1588|   <initializations>: 
# 1588|     getInitializer(0): [ConstructorFieldInit] constructor init of field i
# 1588|         Type = [IntType] int
# 1588|         ValueCategory = prvalue
# 1588|       getExpr(): [ReferenceFieldAccess] i
# 1588|           Type = [IntType] int
# 1588|           ValueCategory = prvalue(load)
# 1588|         getQualifier(): [VariableAccess] (unnamed parameter 0)
# 1588|             Type = [LValueReferenceType] const StructuredBindingTupleRefGet &
# 1588|             ValueCategory = prvalue(load)
# 1588|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1588|             Type = [SpecifiedType] const StructuredBindingTupleRefGet
# 1588|             ValueCategory = lvalue
# 1588|     getInitializer(1): [ConstructorFieldInit] constructor init of field d
# 1588|         Type = [DoubleType] double
# 1588|         ValueCategory = prvalue
# 1588|       getExpr(): [ReferenceFieldAccess] d
# 1588|           Type = [DoubleType] double
# 1588|           ValueCategory = prvalue(load)
# 1588|         getQualifier(): [VariableAccess] (unnamed parameter 0)
# 1588|             Type = [LValueReferenceType] const StructuredBindingTupleRefGet &
# 1588|             ValueCategory = prvalue(load)
# 1588|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1588|             Type = [SpecifiedType] const StructuredBindingTupleRefGet
# 1588|             ValueCategory = lvalue
# 1588|     getInitializer(2): [ConstructorFieldInit] constructor init of field r
# 1588|         Type = [LValueReferenceType] int &
# 1588|         ValueCategory = prvalue
# 1588|       getExpr(): [ReferenceFieldAccess] r
# 1588|           Type = [LValueReferenceType] int &
# 1588|           ValueCategory = prvalue(load)
# 1588|         getQualifier(): [VariableAccess] (unnamed parameter 0)
# 1588|             Type = [LValueReferenceType] const StructuredBindingTupleRefGet &
# 1588|             ValueCategory = prvalue(load)
# 1588|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1588|             Type = [SpecifiedType] const StructuredBindingTupleRefGet
# 1588|             ValueCategory = lvalue
# 1588|   getEntryPoint(): [BlockStmt] { ... }
# 1588|     getStmt(0): [ReturnStmt] return ...
# 1588| [MoveConstructor] void StructuredBindingTupleRefGet::StructuredBindingTupleRefGet(StructuredBindingTupleRefGet&&)
# 1588|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] StructuredBindingTupleRefGet &&
# 1594| [MemberFunction,TemplateFunction] type& StructuredBindingTupleRefGet::get<int i>()
# 1594|   <params>: 
# 1598| [CopyAssignmentOperator] std::tuple_size<StructuredBindingTupleRefGet>& std::tuple_size<StructuredBindingTupleRefGet>::operator=(std::tuple_size<StructuredBindingTupleRefGet> const&)
# 1598|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const tuple_size<StructuredBindingTupleRefGet> &
# 1598| [MoveAssignmentOperator] std::tuple_size<StructuredBindingTupleRefGet>& std::tuple_size<StructuredBindingTupleRefGet>::operator=(std::tuple_size<StructuredBindingTupleRefGet>&&)
# 1598|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] tuple_size<StructuredBindingTupleRefGet> &&
# 1603| [CopyAssignmentOperator] std::tuple_element<int 0, StructuredBindingTupleRefGet>& std::tuple_element<int 0, StructuredBindingTupleRefGet>::operator=(std::tuple_element<int 0, StructuredBindingTupleRefGet> const&)
# 1603|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const tuple_element<0, StructuredBindingTupleRefGet> &
# 1603| [MoveAssignmentOperator] std::tuple_element<int 0, StructuredBindingTupleRefGet>& std::tuple_element<int 0, StructuredBindingTupleRefGet>::operator=(std::tuple_element<int 0, StructuredBindingTupleRefGet>&&)
# 1603|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] tuple_element<0, StructuredBindingTupleRefGet> &&
# 1607| [CopyAssignmentOperator] std::tuple_element<int 1, StructuredBindingTupleRefGet>& std::tuple_element<int 1, StructuredBindingTupleRefGet>::operator=(std::tuple_element<int 1, StructuredBindingTupleRefGet> const&)
# 1607|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const tuple_element<1, StructuredBindingTupleRefGet> &
# 1607| [MoveAssignmentOperator] std::tuple_element<int 1, StructuredBindingTupleRefGet>& std::tuple_element<int 1, StructuredBindingTupleRefGet>::operator=(std::tuple_element<int 1, StructuredBindingTupleRefGet>&&)
# 1607|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] tuple_element<1, StructuredBindingTupleRefGet> &&
# 1611| [CopyAssignmentOperator] std::tuple_element<int 2, StructuredBindingTupleRefGet>& std::tuple_element<int 2, StructuredBindingTupleRefGet>::operator=(std::tuple_element<int 2, StructuredBindingTupleRefGet> const&)
# 1611|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const tuple_element<2, StructuredBindingTupleRefGet> &
# 1611| [MoveAssignmentOperator] std::tuple_element<int 2, StructuredBindingTupleRefGet>& std::tuple_element<int 2, StructuredBindingTupleRefGet>::operator=(std::tuple_element<int 2, StructuredBindingTupleRefGet>&&)
# 1611|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] tuple_element<2, StructuredBindingTupleRefGet> &&
# 1616| [FunctionTemplateSpecialization,MemberFunction] std::tuple_element<int 0, StructuredBindingTupleRefGet>::type& StructuredBindingTupleRefGet::get<int 0>()
# 1616|   <params>: 
# 1616|   getEntryPoint(): [BlockStmt] { ... }
# 1617|     getStmt(0): [ReturnStmt] return ...
# 1617|       getExpr(): [ImplicitThisFieldAccess,PointerFieldAccess] i
# 1617|           Type = [IntType] int
# 1617|           ValueCategory = lvalue
# 1617|         getQualifier(): [ThisExpr] this
# 1617|             Type = [PointerType] StructuredBindingTupleRefGet *
# 1617|             ValueCategory = prvalue(load)
#-----|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|           Type = [LValueReferenceType] int &
#-----|           ValueCategory = prvalue
# 1620| [FunctionTemplateSpecialization,MemberFunction] std::tuple_element<int 1, StructuredBindingTupleRefGet>::type& StructuredBindingTupleRefGet::get<int 1>()
# 1620|   <params>: 
# 1620|   getEntryPoint(): [BlockStmt] { ... }
# 1621|     getStmt(0): [ReturnStmt] return ...
# 1621|       getExpr(): [ImplicitThisFieldAccess,PointerFieldAccess] d
# 1621|           Type = [DoubleType] double
# 1621|           ValueCategory = lvalue
# 1621|         getQualifier(): [ThisExpr] this
# 1621|             Type = [PointerType] StructuredBindingTupleRefGet *
# 1621|             ValueCategory = prvalue(load)
#-----|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|           Type = [LValueReferenceType] double &
#-----|           ValueCategory = prvalue
# 1624| [FunctionTemplateSpecialization,MemberFunction] std::tuple_element<int 2, StructuredBindingTupleRefGet>::type StructuredBindingTupleRefGet::get<int 2>()
# 1624|   <params>: 
# 1624|   getEntryPoint(): [BlockStmt] { ... }
# 1625|     getStmt(0): [ReturnStmt] return ...
# 1625|       getExpr(): [ImplicitThisFieldAccess,PointerFieldAccess] r
# 1625|           Type = [LValueReferenceType] int &
# 1625|           ValueCategory = prvalue(load)
# 1625|         getQualifier(): [ThisExpr] this
# 1625|             Type = [PointerType] StructuredBindingTupleRefGet *
# 1625|             ValueCategory = prvalue(load)
# 1625|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1625|           Type = [LValueReferenceType] int &
# 1625|           ValueCategory = prvalue
# 1625|         getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1625|             Type = [IntType] int
# 1625|             ValueCategory = lvalue
# 1628| [TopLevelFunction] void tuple_structured_binding_ref_get()
# 1628|   <params>: 
# 1628|   getEntryPoint(): [BlockStmt] { ... }
# 1629|     getStmt(0): [DeclStmt] declaration
# 1629|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of t
# 1629|           Type = [Struct] StructuredBindingTupleRefGet
# 1629|         getVariable().getInitializer(): [Initializer] initializer for t
# 1629|           getExpr(): [ConstructorCall] call to StructuredBindingTupleRefGet
# 1629|               Type = [VoidType] void
# 1629|               ValueCategory = prvalue
# 1631|     getStmt(1): [BlockStmt] { ... }
# 1632|       getStmt(0): [DeclStmt] declaration
# 1632|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of (unnamed local variable)
# 1632|             Type = [Struct] StructuredBindingTupleRefGet
# 1632|           getVariable().getInitializer(): [Initializer] initializer for (unnamed local variable)
# 1632|             getExpr(): [VariableAccess] t
# 1632|                 Type = [Struct] StructuredBindingTupleRefGet
# 1632|                 ValueCategory = prvalue(load)
# 1632|         getDeclarationEntry(1): [VariableDeclarationEntry] definition of i
# 1632|             Type = [LValueReferenceType] type &
#-----|           getVariable().getInitializer(): [Initializer] initializer for i
# 1632|             getExpr(): [FunctionCall] call to get
# 1632|                 Type = [LValueReferenceType] type &
# 1632|                 ValueCategory = prvalue
# 1632|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1632|                   Type = [Struct] StructuredBindingTupleRefGet
# 1632|                   ValueCategory = xvalue
# 1632|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1632|                 Type = [LValueReferenceType] type &
# 1632|                 ValueCategory = prvalue
# 1632|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1632|                   Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1632|                   ValueCategory = lvalue
# 1632|         getDeclarationEntry(2): [VariableDeclarationEntry] definition of d
# 1632|             Type = [LValueReferenceType] type &
#-----|           getVariable().getInitializer(): [Initializer] initializer for d
# 1632|             getExpr(): [FunctionCall] call to get
# 1632|                 Type = [LValueReferenceType] type &
# 1632|                 ValueCategory = prvalue
# 1632|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1632|                   Type = [Struct] StructuredBindingTupleRefGet
# 1632|                   ValueCategory = xvalue
# 1632|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1632|                 Type = [LValueReferenceType] type &
# 1632|                 ValueCategory = prvalue
# 1632|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1632|                   Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1632|                   ValueCategory = lvalue
# 1632|         getDeclarationEntry(3): [VariableDeclarationEntry] definition of r
# 1632|             Type = [NestedTypedefType,UsingAliasTypedefType] type
#-----|           getVariable().getInitializer(): [Initializer] initializer for r
# 1632|             getExpr(): [FunctionCall] call to get
# 1632|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1632|                 ValueCategory = prvalue
# 1632|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1632|                   Type = [Struct] StructuredBindingTupleRefGet
# 1632|                   ValueCategory = xvalue
# 1632|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1632|                 Type = [LValueReferenceType] int &
# 1632|                 ValueCategory = prvalue
# 1632|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1632|                   Type = [IntType] int
# 1632|                   ValueCategory = lvalue
# 1633|       getStmt(1): [ExprStmt] ExprStmt
# 1633|         getExpr(): [AssignExpr] ... = ...
# 1633|             Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1633|             ValueCategory = lvalue
# 1633|           getLValue(): [VariableAccess] d
# 1633|               Type = [LValueReferenceType] type &
# 1633|               ValueCategory = prvalue(load)
# 1633|           getRValue(): [Literal] 4.0
# 1633|               Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1633|               Value = [Literal] 4.0
# 1633|               ValueCategory = prvalue
# 1633|           getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1633|               Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1633|               ValueCategory = lvalue
# 1634|       getStmt(2): [DeclStmt] declaration
# 1634|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rd
# 1634|             Type = [LValueReferenceType] double &
# 1634|           getVariable().getInitializer(): [Initializer] initializer for rd
# 1634|             getExpr(): [VariableAccess] d
# 1634|                 Type = [LValueReferenceType] type &
# 1634|                 ValueCategory = prvalue(load)
# 1634|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1634|                 Type = [LValueReferenceType] type &
# 1634|                 ValueCategory = prvalue
# 1634|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1634|                   Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1634|                   ValueCategory = lvalue
# 1635|       getStmt(3): [DeclStmt] declaration
# 1635|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of v
# 1635|             Type = [IntType] int
# 1635|           getVariable().getInitializer(): [Initializer] initializer for v
# 1635|             getExpr(): [VariableAccess] i
# 1635|                 Type = [LValueReferenceType] type &
# 1635|                 ValueCategory = prvalue(load)
# 1635|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1635|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1635|                 ValueCategory = prvalue(load)
# 1636|       getStmt(4): [ExprStmt] ExprStmt
# 1636|         getExpr(): [AssignExpr] ... = ...
# 1636|             Type = [IntType] int
# 1636|             ValueCategory = lvalue
# 1636|           getLValue(): [VariableAccess] r
# 1636|               Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1636|               ValueCategory = prvalue(load)
# 1636|           getRValue(): [Literal] 5
# 1636|               Type = [IntType] int
# 1636|               Value = [Literal] 5
# 1636|               ValueCategory = prvalue
# 1636|           getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1636|               Type = [IntType] int
# 1636|               ValueCategory = lvalue
# 1637|       getStmt(5): [DeclStmt] declaration
# 1637|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rr
# 1637|             Type = [LValueReferenceType] int &
# 1637|           getVariable().getInitializer(): [Initializer] initializer for rr
# 1637|             getExpr(): [VariableAccess] r
# 1637|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1637|                 ValueCategory = prvalue(load)
# 1637|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1637|                 Type = [LValueReferenceType] int &
# 1637|                 ValueCategory = prvalue
# 1637|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1637|                   Type = [IntType] int
# 1637|                   ValueCategory = lvalue
# 1638|       getStmt(6): [DeclStmt] declaration
# 1638|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of w
# 1638|             Type = [IntType] int
# 1638|           getVariable().getInitializer(): [Initializer] initializer for w
# 1638|             getExpr(): [VariableAccess] r
# 1638|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1638|                 ValueCategory = prvalue(load)
# 1638|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1638|                 Type = [IntType] int
# 1638|                 ValueCategory = prvalue(load)
# 1641|     getStmt(2): [BlockStmt] { ... }
# 1642|       getStmt(0): [DeclStmt] declaration
# 1642|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of unnamed_local_variable
# 1642|             Type = [Struct] StructuredBindingTupleRefGet
# 1642|           getVariable().getInitializer(): [Initializer] initializer for unnamed_local_variable
# 1642|             getExpr(): [VariableAccess] t
# 1642|                 Type = [Struct] StructuredBindingTupleRefGet
# 1642|                 ValueCategory = prvalue(load)
# 1643|       getStmt(1): [DeclStmt] declaration
# 1643|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
# 1643|             Type = [LValueReferenceType] type &
# 1643|           getVariable().getInitializer(): [Initializer] initializer for i
# 1643|             getExpr(): [FunctionCall] call to get
# 1643|                 Type = [LValueReferenceType] type &
# 1643|                 ValueCategory = prvalue
# 1643|               getQualifier(): [VariableAccess] unnamed_local_variable
# 1643|                   Type = [Struct] StructuredBindingTupleRefGet
# 1643|                   ValueCategory = lvalue
# 1643|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1643|                 Type = [LValueReferenceType] type &
# 1643|                 ValueCategory = prvalue
# 1643|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1643|                   Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1643|                   ValueCategory = lvalue
# 1644|       getStmt(2): [DeclStmt] declaration
# 1644|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
# 1644|             Type = [LValueReferenceType] type &
# 1644|           getVariable().getInitializer(): [Initializer] initializer for d
# 1644|             getExpr(): [FunctionCall] call to get
# 1644|                 Type = [LValueReferenceType] type &
# 1644|                 ValueCategory = prvalue
# 1644|               getQualifier(): [VariableAccess] unnamed_local_variable
# 1644|                   Type = [Struct] StructuredBindingTupleRefGet
# 1644|                   ValueCategory = lvalue
# 1644|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1644|                 Type = [LValueReferenceType] type &
# 1644|                 ValueCategory = prvalue
# 1644|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1644|                   Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1644|                   ValueCategory = lvalue
# 1645|       getStmt(3): [DeclStmt] declaration
# 1645|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of r
# 1645|             Type = [LValueReferenceType] int &
# 1645|           getVariable().getInitializer(): [Initializer] initializer for r
# 1645|             getExpr(): [FunctionCall] call to get
# 1645|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1645|                 ValueCategory = prvalue
# 1645|               getQualifier(): [VariableAccess] unnamed_local_variable
# 1645|                   Type = [Struct] StructuredBindingTupleRefGet
# 1645|                   ValueCategory = lvalue
# 1645|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1645|                 Type = [LValueReferenceType] int &
# 1645|                 ValueCategory = prvalue
# 1645|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1645|                   Type = [IntType] int
# 1645|                   ValueCategory = lvalue
# 1646|       getStmt(4): [ExprStmt] ExprStmt
# 1646|         getExpr(): [AssignExpr] ... = ...
# 1646|             Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1646|             ValueCategory = lvalue
# 1646|           getLValue(): [VariableAccess] d
# 1646|               Type = [LValueReferenceType] type &
# 1646|               ValueCategory = prvalue(load)
# 1646|           getRValue(): [Literal] 4.0
# 1646|               Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1646|               Value = [Literal] 4.0
# 1646|               ValueCategory = prvalue
# 1646|           getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1646|               Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1646|               ValueCategory = lvalue
# 1647|       getStmt(5): [DeclStmt] declaration
# 1647|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rd
# 1647|             Type = [LValueReferenceType] double &
# 1647|           getVariable().getInitializer(): [Initializer] initializer for rd
# 1647|             getExpr(): [VariableAccess] d
# 1647|                 Type = [LValueReferenceType] type &
# 1647|                 ValueCategory = prvalue(load)
# 1647|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1647|                 Type = [LValueReferenceType] type &
# 1647|                 ValueCategory = prvalue
# 1647|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1647|                   Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1647|                   ValueCategory = lvalue
# 1648|       getStmt(6): [DeclStmt] declaration
# 1648|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of v
# 1648|             Type = [IntType] int
# 1648|           getVariable().getInitializer(): [Initializer] initializer for v
# 1648|             getExpr(): [VariableAccess] i
# 1648|                 Type = [LValueReferenceType] type &
# 1648|                 ValueCategory = prvalue(load)
# 1648|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1648|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1648|                 ValueCategory = prvalue(load)
# 1649|       getStmt(7): [ExprStmt] ExprStmt
# 1649|         getExpr(): [AssignExpr] ... = ...
# 1649|             Type = [IntType] int
# 1649|             ValueCategory = lvalue
# 1649|           getLValue(): [VariableAccess] r
# 1649|               Type = [LValueReferenceType] int &
# 1649|               ValueCategory = prvalue(load)
# 1649|           getRValue(): [Literal] 5
# 1649|               Type = [IntType] int
# 1649|               Value = [Literal] 5
# 1649|               ValueCategory = prvalue
# 1649|           getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1649|               Type = [IntType] int
# 1649|               ValueCategory = lvalue
# 1650|       getStmt(8): [DeclStmt] declaration
# 1650|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rr
# 1650|             Type = [LValueReferenceType] int &
# 1650|           getVariable().getInitializer(): [Initializer] initializer for rr
# 1650|             getExpr(): [VariableAccess] r
# 1650|                 Type = [LValueReferenceType] int &
# 1650|                 ValueCategory = prvalue(load)
# 1650|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1650|                 Type = [LValueReferenceType] int &
# 1650|                 ValueCategory = prvalue
# 1650|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1650|                   Type = [IntType] int
# 1650|                   ValueCategory = lvalue
# 1651|       getStmt(9): [DeclStmt] declaration
# 1651|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of w
# 1651|             Type = [IntType] int
# 1651|           getVariable().getInitializer(): [Initializer] initializer for w
# 1651|             getExpr(): [VariableAccess] r
# 1651|                 Type = [LValueReferenceType] int &
# 1651|                 ValueCategory = prvalue(load)
# 1651|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1651|                 Type = [IntType] int
# 1651|                 ValueCategory = prvalue(load)
# 1653|     getStmt(3): [ReturnStmt] return ...
# 1655| [CopyAssignmentOperator] StructuredBindingTupleNoRefGet& StructuredBindingTupleNoRefGet::operator=(StructuredBindingTupleNoRefGet const&)
# 1655|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const StructuredBindingTupleNoRefGet &
# 1655| [Constructor] void StructuredBindingTupleNoRefGet::StructuredBindingTupleNoRefGet()
# 1655|   <params>: 
# 1655|   <initializations>: 
# 1655|     getInitializer(0): [ConstructorFieldInit] constructor init of field i
# 1655|         Type = [IntType] int
# 1655|         ValueCategory = prvalue
# 1655|     getInitializer(1): [ConstructorFieldInit] constructor init of field r
# 1655|         Type = [LValueReferenceType] int &
# 1655|         ValueCategory = prvalue
# 1655|   getEntryPoint(): [BlockStmt] { ... }
# 1655|     getStmt(0): [ReturnStmt] return ...
# 1655| [CopyConstructor] void StructuredBindingTupleNoRefGet::StructuredBindingTupleNoRefGet(StructuredBindingTupleNoRefGet const&)
# 1655|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const StructuredBindingTupleNoRefGet &
# 1655| [MoveConstructor] void StructuredBindingTupleNoRefGet::StructuredBindingTupleNoRefGet(StructuredBindingTupleNoRefGet&&)
# 1655|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] StructuredBindingTupleNoRefGet &&
# 1660| [MemberFunction,TemplateFunction] type StructuredBindingTupleNoRefGet::get<int i>()
# 1660|   <params>: 
# 1664| [CopyAssignmentOperator] std::tuple_size<StructuredBindingTupleNoRefGet>& std::tuple_size<StructuredBindingTupleNoRefGet>::operator=(std::tuple_size<StructuredBindingTupleNoRefGet> const&)
# 1664|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const tuple_size<StructuredBindingTupleNoRefGet> &
# 1664| [MoveAssignmentOperator] std::tuple_size<StructuredBindingTupleNoRefGet>& std::tuple_size<StructuredBindingTupleNoRefGet>::operator=(std::tuple_size<StructuredBindingTupleNoRefGet>&&)
# 1664|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] tuple_size<StructuredBindingTupleNoRefGet> &&
# 1669| [CopyAssignmentOperator] std::tuple_element<int 0, StructuredBindingTupleNoRefGet>& std::tuple_element<int 0, StructuredBindingTupleNoRefGet>::operator=(std::tuple_element<int 0, StructuredBindingTupleNoRefGet> const&)
# 1669|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const tuple_element<0, StructuredBindingTupleNoRefGet> &
# 1669| [MoveAssignmentOperator] std::tuple_element<int 0, StructuredBindingTupleNoRefGet>& std::tuple_element<int 0, StructuredBindingTupleNoRefGet>::operator=(std::tuple_element<int 0, StructuredBindingTupleNoRefGet>&&)
# 1669|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] tuple_element<0, StructuredBindingTupleNoRefGet> &&
# 1673| [CopyAssignmentOperator] std::tuple_element<int 1, StructuredBindingTupleNoRefGet>& std::tuple_element<int 1, StructuredBindingTupleNoRefGet>::operator=(std::tuple_element<int 1, StructuredBindingTupleNoRefGet> const&)
# 1673|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const tuple_element<1, StructuredBindingTupleNoRefGet> &
# 1673| [MoveAssignmentOperator] std::tuple_element<int 1, StructuredBindingTupleNoRefGet>& std::tuple_element<int 1, StructuredBindingTupleNoRefGet>::operator=(std::tuple_element<int 1, StructuredBindingTupleNoRefGet>&&)
# 1673|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] tuple_element<1, StructuredBindingTupleNoRefGet> &&
# 1677| [CopyAssignmentOperator] std::tuple_element<int 2, StructuredBindingTupleNoRefGet>& std::tuple_element<int 2, StructuredBindingTupleNoRefGet>::operator=(std::tuple_element<int 2, StructuredBindingTupleNoRefGet> const&)
# 1677|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const tuple_element<2, StructuredBindingTupleNoRefGet> &
# 1677| [MoveAssignmentOperator] std::tuple_element<int 2, StructuredBindingTupleNoRefGet>& std::tuple_element<int 2, StructuredBindingTupleNoRefGet>::operator=(std::tuple_element<int 2, StructuredBindingTupleNoRefGet>&&)
# 1677|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] tuple_element<2, StructuredBindingTupleNoRefGet> &&
# 1682| [FunctionTemplateSpecialization,MemberFunction] std::tuple_element<int 0, StructuredBindingTupleNoRefGet>::type StructuredBindingTupleNoRefGet::get<int 0>()
# 1682|   <params>: 
# 1682|   getEntryPoint(): [BlockStmt] { ... }
# 1683|     getStmt(0): [ReturnStmt] return ...
# 1683|       getExpr(): [ImplicitThisFieldAccess,PointerFieldAccess] i
# 1683|           Type = [IntType] int
# 1683|           ValueCategory = prvalue(load)
# 1683|         getQualifier(): [ThisExpr] this
# 1683|             Type = [PointerType] StructuredBindingTupleNoRefGet *
# 1683|             ValueCategory = prvalue(load)
# 1686| [FunctionTemplateSpecialization,MemberFunction] std::tuple_element<int 1, StructuredBindingTupleNoRefGet>::type StructuredBindingTupleNoRefGet::get<int 1>()
# 1686|   <params>: 
# 1686|   getEntryPoint(): [BlockStmt] { ... }
# 1687|     getStmt(0): [ReturnStmt] return ...
# 1687|       getExpr(): [ImplicitThisFieldAccess,PointerFieldAccess] r
# 1687|           Type = [LValueReferenceType] int &
# 1687|           ValueCategory = prvalue(load)
# 1687|         getQualifier(): [ThisExpr] this
# 1687|             Type = [PointerType] StructuredBindingTupleNoRefGet *
# 1687|             ValueCategory = prvalue(load)
# 1687|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1687|           Type = [LValueReferenceType] int &
# 1687|           ValueCategory = prvalue
# 1687|         getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1687|             Type = [IntType] int
# 1687|             ValueCategory = lvalue
# 1690| [FunctionTemplateSpecialization,MemberFunction] std::tuple_element<int 2, StructuredBindingTupleNoRefGet>::type StructuredBindingTupleNoRefGet::get<int 2>()
# 1690|   <params>: 
# 1690|   getEntryPoint(): [BlockStmt] { ... }
# 1691|     getStmt(0): [ReturnStmt] return ...
# 1691|       getExpr(): [Literal] 5
# 1691|           Type = [IntType] int
# 1691|           Value = [Literal] 5
# 1691|           ValueCategory = prvalue
# 1691|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1691|           Type = [LValueReferenceType] int &
# 1691|           ValueCategory = prvalue
# 1691|         getExpr(): [TemporaryObjectExpr] temporary object
# 1691|             Type = [IntType] int
# 1691|             ValueCategory = lvalue
# 1694| [TopLevelFunction] void tuple_structured_binding_no_ref_get()
# 1694|   <params>: 
# 1694|   getEntryPoint(): [BlockStmt] { ... }
# 1695|     getStmt(0): [DeclStmt] declaration
# 1695|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of t
# 1695|           Type = [Struct] StructuredBindingTupleNoRefGet
# 1695|         getVariable().getInitializer(): [Initializer] initializer for t
# 1695|           getExpr(): [ConstructorCall] call to StructuredBindingTupleNoRefGet
# 1695|               Type = [VoidType] void
# 1695|               ValueCategory = prvalue
# 1697|     getStmt(1): [BlockStmt] { ... }
# 1698|       getStmt(0): [DeclStmt] declaration
# 1698|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of (unnamed local variable)
# 1698|             Type = [LValueReferenceType] StructuredBindingTupleNoRefGet &
# 1698|           getVariable().getInitializer(): [Initializer] initializer for (unnamed local variable)
# 1698|             getExpr(): [VariableAccess] t
# 1698|                 Type = [Struct] StructuredBindingTupleNoRefGet
# 1698|                 ValueCategory = lvalue
# 1698|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1698|                 Type = [LValueReferenceType] StructuredBindingTupleNoRefGet &
# 1698|                 ValueCategory = prvalue
# 1698|         getDeclarationEntry(1): [VariableDeclarationEntry] definition of i
# 1698|             Type = [RValueReferenceType] type &&
#-----|           getVariable().getInitializer(): [Initializer] initializer for i
# 1698|             getExpr(): [FunctionCall] call to get
# 1698|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1698|                 ValueCategory = prvalue
# 1698|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1698|                   Type = [LValueReferenceType] StructuredBindingTupleNoRefGet &
# 1698|                   ValueCategory = prvalue(load)
# 1698|               getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1698|                   Type = [Struct] StructuredBindingTupleNoRefGet
# 1698|                   ValueCategory = lvalue
# 1698|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1698|                 Type = [LValueReferenceType] type &
# 1698|                 ValueCategory = prvalue
# 1698|               getExpr(): [TemporaryObjectExpr] temporary object
# 1698|                   Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1698|                   ValueCategory = lvalue
# 1698|         getDeclarationEntry(2): [VariableDeclarationEntry] definition of r
# 1698|             Type = [NestedTypedefType,UsingAliasTypedefType] type
#-----|           getVariable().getInitializer(): [Initializer] initializer for r
# 1698|             getExpr(): [FunctionCall] call to get
# 1698|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1698|                 ValueCategory = prvalue
# 1698|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1698|                   Type = [LValueReferenceType] StructuredBindingTupleNoRefGet &
# 1698|                   ValueCategory = prvalue(load)
# 1698|               getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1698|                   Type = [Struct] StructuredBindingTupleNoRefGet
# 1698|                   ValueCategory = lvalue
# 1698|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1698|                 Type = [LValueReferenceType] int &
# 1698|                 ValueCategory = prvalue
# 1698|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1698|                   Type = [IntType] int
# 1698|                   ValueCategory = lvalue
# 1698|         getDeclarationEntry(3): [VariableDeclarationEntry] definition of rv
# 1698|             Type = [NestedTypedefType,UsingAliasTypedefType] type
#-----|           getVariable().getInitializer(): [Initializer] initializer for rv
# 1698|             getExpr(): [FunctionCall] call to get
# 1698|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1698|                 ValueCategory = prvalue
# 1698|               getQualifier(): [VariableAccess] (unnamed local variable)
# 1698|                   Type = [LValueReferenceType] StructuredBindingTupleNoRefGet &
# 1698|                   ValueCategory = prvalue(load)
# 1698|               getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1698|                   Type = [Struct] StructuredBindingTupleNoRefGet
# 1698|                   ValueCategory = lvalue
# 1698|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1698|                 Type = [LValueReferenceType] int &
# 1698|                 ValueCategory = prvalue
# 1698|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1698|                   Type = [IntType] int
# 1698|                   ValueCategory = xvalue
# 1699|       getStmt(1): [ExprStmt] ExprStmt
# 1699|         getExpr(): [AssignExpr] ... = ...
# 1699|             Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1699|             ValueCategory = lvalue
# 1699|           getLValue(): [VariableAccess] i
# 1699|               Type = [RValueReferenceType] type &&
# 1699|               ValueCategory = prvalue(load)
# 1699|           getRValue(): [Literal] 4
# 1699|               Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1699|               Value = [Literal] 4
# 1699|               ValueCategory = prvalue
# 1699|           getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1699|               Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1699|               ValueCategory = lvalue
# 1700|       getStmt(2): [DeclStmt] declaration
# 1700|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of ri
# 1700|             Type = [LValueReferenceType] int &
# 1700|           getVariable().getInitializer(): [Initializer] initializer for ri
# 1700|             getExpr(): [VariableAccess] i
# 1700|                 Type = [RValueReferenceType] type &&
# 1700|                 ValueCategory = prvalue(load)
# 1700|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1700|                 Type = [LValueReferenceType] type &
# 1700|                 ValueCategory = prvalue
# 1700|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1700|                   Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1700|                   ValueCategory = lvalue
# 1701|       getStmt(3): [DeclStmt] declaration
# 1701|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of v
# 1701|             Type = [IntType] int
# 1701|           getVariable().getInitializer(): [Initializer] initializer for v
# 1701|             getExpr(): [VariableAccess] i
# 1701|                 Type = [RValueReferenceType] type &&
# 1701|                 ValueCategory = prvalue(load)
# 1701|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1701|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1701|                 ValueCategory = prvalue(load)
# 1702|       getStmt(4): [ExprStmt] ExprStmt
# 1702|         getExpr(): [AssignExpr] ... = ...
# 1702|             Type = [IntType] int
# 1702|             ValueCategory = lvalue
# 1702|           getLValue(): [VariableAccess] r
# 1702|               Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1702|               ValueCategory = prvalue(load)
# 1702|           getRValue(): [Literal] 5
# 1702|               Type = [IntType] int
# 1702|               Value = [Literal] 5
# 1702|               ValueCategory = prvalue
# 1702|           getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1702|               Type = [IntType] int
# 1702|               ValueCategory = lvalue
# 1703|       getStmt(5): [DeclStmt] declaration
# 1703|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rr
# 1703|             Type = [LValueReferenceType] int &
# 1703|           getVariable().getInitializer(): [Initializer] initializer for rr
# 1703|             getExpr(): [VariableAccess] r
# 1703|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1703|                 ValueCategory = prvalue(load)
# 1703|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1703|                 Type = [LValueReferenceType] int &
# 1703|                 ValueCategory = prvalue
# 1703|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1703|                   Type = [IntType] int
# 1703|                   ValueCategory = lvalue
# 1704|       getStmt(6): [DeclStmt] declaration
# 1704|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of w
# 1704|             Type = [IntType] int
# 1704|           getVariable().getInitializer(): [Initializer] initializer for w
# 1704|             getExpr(): [VariableAccess] r
# 1704|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1704|                 ValueCategory = prvalue(load)
# 1704|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1704|                 Type = [IntType] int
# 1704|                 ValueCategory = prvalue(load)
# 1707|     getStmt(2): [BlockStmt] { ... }
# 1708|       getStmt(0): [DeclStmt] declaration
# 1708|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of unnamed_local_variable
# 1708|             Type = [LValueReferenceType] StructuredBindingTupleNoRefGet &
# 1708|           getVariable().getInitializer(): [Initializer] initializer for unnamed_local_variable
# 1708|             getExpr(): [VariableAccess] t
# 1708|                 Type = [Struct] StructuredBindingTupleNoRefGet
# 1708|                 ValueCategory = lvalue
# 1708|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1708|                 Type = [LValueReferenceType] StructuredBindingTupleNoRefGet &
# 1708|                 ValueCategory = prvalue
# 1709|       getStmt(1): [DeclStmt] declaration
# 1709|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
# 1709|             Type = [RValueReferenceType] type &&
# 1709|           getVariable().getInitializer(): [Initializer] initializer for i
# 1709|             getExpr(): [FunctionCall] call to get
# 1709|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1709|                 ValueCategory = prvalue
# 1709|               getQualifier(): [VariableAccess] unnamed_local_variable
# 1709|                   Type = [LValueReferenceType] StructuredBindingTupleNoRefGet &
# 1709|                   ValueCategory = prvalue(load)
# 1709|               getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1709|                   Type = [Struct] StructuredBindingTupleNoRefGet
# 1709|                   ValueCategory = lvalue
# 1709|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1709|                 Type = [LValueReferenceType] type &
# 1709|                 ValueCategory = prvalue
# 1709|               getExpr(): [TemporaryObjectExpr] temporary object
# 1709|                   Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1709|                   ValueCategory = lvalue
# 1710|       getStmt(2): [DeclStmt] declaration
# 1710|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of r
# 1710|             Type = [LValueReferenceType] int &
# 1710|           getVariable().getInitializer(): [Initializer] initializer for r
# 1710|             getExpr(): [FunctionCall] call to get
# 1710|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1710|                 ValueCategory = prvalue
# 1710|               getQualifier(): [VariableAccess] unnamed_local_variable
# 1710|                   Type = [LValueReferenceType] StructuredBindingTupleNoRefGet &
# 1710|                   ValueCategory = prvalue(load)
# 1710|               getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1710|                   Type = [Struct] StructuredBindingTupleNoRefGet
# 1710|                   ValueCategory = lvalue
# 1710|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1710|                 Type = [LValueReferenceType] int &
# 1710|                 ValueCategory = prvalue
# 1710|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1710|                   Type = [IntType] int
# 1710|                   ValueCategory = lvalue
# 1711|       getStmt(3): [DeclStmt] declaration
# 1711|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rv
# 1711|             Type = [RValueReferenceType] int &&
# 1711|           getVariable().getInitializer(): [Initializer] initializer for rv
# 1711|             getExpr(): [FunctionCall] call to get
# 1711|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1711|                 ValueCategory = prvalue
# 1711|               getQualifier(): [VariableAccess] unnamed_local_variable
# 1711|                   Type = [LValueReferenceType] StructuredBindingTupleNoRefGet &
# 1711|                   ValueCategory = prvalue(load)
# 1711|               getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1711|                   Type = [Struct] StructuredBindingTupleNoRefGet
# 1711|                   ValueCategory = lvalue
# 1711|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1711|                 Type = [LValueReferenceType] int &
# 1711|                 ValueCategory = prvalue
# 1711|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1711|                   Type = [IntType] int
# 1711|                   ValueCategory = xvalue
# 1712|       getStmt(4): [ExprStmt] ExprStmt
# 1712|         getExpr(): [AssignExpr] ... = ...
# 1712|             Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1712|             ValueCategory = lvalue
# 1712|           getLValue(): [VariableAccess] i
# 1712|               Type = [RValueReferenceType] type &&
# 1712|               ValueCategory = prvalue(load)
# 1712|           getRValue(): [Literal] 4
# 1712|               Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1712|               Value = [Literal] 4
# 1712|               ValueCategory = prvalue
# 1712|           getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1712|               Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1712|               ValueCategory = lvalue
# 1713|       getStmt(5): [DeclStmt] declaration
# 1713|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of ri
# 1713|             Type = [LValueReferenceType] int &
# 1713|           getVariable().getInitializer(): [Initializer] initializer for ri
# 1713|             getExpr(): [VariableAccess] i
# 1713|                 Type = [RValueReferenceType] type &&
# 1713|                 ValueCategory = prvalue(load)
# 1713|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1713|                 Type = [LValueReferenceType] type &
# 1713|                 ValueCategory = prvalue
# 1713|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1713|                   Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1713|                   ValueCategory = lvalue
# 1714|       getStmt(6): [DeclStmt] declaration
# 1714|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of v
# 1714|             Type = [IntType] int
# 1714|           getVariable().getInitializer(): [Initializer] initializer for v
# 1714|             getExpr(): [VariableAccess] i
# 1714|                 Type = [RValueReferenceType] type &&
# 1714|                 ValueCategory = prvalue(load)
# 1714|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1714|                 Type = [NestedTypedefType,UsingAliasTypedefType] type
# 1714|                 ValueCategory = prvalue(load)
# 1715|       getStmt(7): [ExprStmt] ExprStmt
# 1715|         getExpr(): [AssignExpr] ... = ...
# 1715|             Type = [IntType] int
# 1715|             ValueCategory = lvalue
# 1715|           getLValue(): [VariableAccess] r
# 1715|               Type = [LValueReferenceType] int &
# 1715|               ValueCategory = prvalue(load)
# 1715|           getRValue(): [Literal] 5
# 1715|               Type = [IntType] int
# 1715|               Value = [Literal] 5
# 1715|               ValueCategory = prvalue
# 1715|           getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1715|               Type = [IntType] int
# 1715|               ValueCategory = lvalue
# 1716|       getStmt(8): [DeclStmt] declaration
# 1716|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of rr
# 1716|             Type = [LValueReferenceType] int &
# 1716|           getVariable().getInitializer(): [Initializer] initializer for rr
# 1716|             getExpr(): [VariableAccess] r
# 1716|                 Type = [LValueReferenceType] int &
# 1716|                 ValueCategory = prvalue(load)
# 1716|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1716|                 Type = [LValueReferenceType] int &
# 1716|                 ValueCategory = prvalue
# 1716|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1716|                   Type = [IntType] int
# 1716|                   ValueCategory = lvalue
# 1717|       getStmt(9): [DeclStmt] declaration
# 1717|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of w
# 1717|             Type = [IntType] int
# 1717|           getVariable().getInitializer(): [Initializer] initializer for w
# 1717|             getExpr(): [VariableAccess] r
# 1717|                 Type = [LValueReferenceType] int &
# 1717|                 ValueCategory = prvalue(load)
# 1717|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1717|                 Type = [IntType] int
# 1717|                 ValueCategory = prvalue(load)
# 1719|     getStmt(3): [ReturnStmt] return ...
# 1721| [TopLevelFunction] void array_structured_binding_non_ref_init()
# 1721|   <params>: 
# 1721|   getEntryPoint(): [BlockStmt] { ... }
# 1722|     getStmt(0): [DeclStmt] declaration
# 1722|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of xs
# 1722|           Type = [ArrayType] int[2]
# 1722|         getVariable().getInitializer(): [Initializer] initializer for xs
# 1722|           getExpr(): [ArrayAggregateLiteral] {...}
# 1722|               Type = [ArrayType] int[2]
# 1722|               ValueCategory = prvalue
# 1722|             getAnElementExpr(0): [Literal] 1
# 1722|                 Type = [IntType] int
# 1722|                 Value = [Literal] 1
# 1722|                 ValueCategory = prvalue
# 1722|             getAnElementExpr(1): [Literal] 2
# 1722|                 Type = [IntType] int
# 1722|                 Value = [Literal] 2
# 1722|                 ValueCategory = prvalue
# 1723|     getStmt(1): [DeclStmt] declaration
# 1723|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of (unnamed local variable)
# 1723|           Type = [ArrayType] int[2]
# 1723|         getVariable().getInitializer(): [Initializer] initializer for (unnamed local variable)
# 1723|           getExpr(): [VariableAccess] xs
# 1723|               Type = [ArrayType] int[2]
# 1723|               ValueCategory = prvalue(load)
# 1723|       getDeclarationEntry(1): [VariableDeclarationEntry] definition of x0
# 1723|           Type = [IntType] int
#-----|         getVariable().getInitializer(): [Initializer] initializer for x0
#-----|           getExpr(): [ArrayExpr] access to array
#-----|               Type = [IntType] int
#-----|               ValueCategory = lvalue
#-----|             getArrayBase(): [VariableAccess] (unnamed local variable)
#-----|                 Type = [ArrayType] int[2]
#-----|                 ValueCategory = lvalue
#-----|             getArrayOffset(): [Literal] 0
#-----|                 Type = [LongType] unsigned long
#-----|                 Value = [Literal] 0
#-----|                 ValueCategory = prvalue
#-----|             getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#-----|                 Type = [IntPointerType] int *
#-----|                 ValueCategory = prvalue
# 1723|       getDeclarationEntry(2): [VariableDeclarationEntry] definition of x1
# 1723|           Type = [IntType] int
#-----|         getVariable().getInitializer(): [Initializer] initializer for x1
#-----|           getExpr(): [ArrayExpr] access to array
#-----|               Type = [IntType] int
#-----|               ValueCategory = lvalue
#-----|             getArrayBase(): [VariableAccess] (unnamed local variable)
#-----|                 Type = [ArrayType] int[2]
#-----|                 ValueCategory = lvalue
#-----|             getArrayOffset(): [Literal] 1
#-----|                 Type = [LongType] unsigned long
#-----|                 Value = [Literal] 1
#-----|                 ValueCategory = prvalue
#-----|             getArrayBase().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#-----|                 Type = [IntPointerType] int *
#-----|                 ValueCategory = prvalue
# 1724|     getStmt(2): [ReturnStmt] return ...
# 1726| [CopyAssignmentOperator] CapturedLambdaMyObj& CapturedLambdaMyObj::operator=(CapturedLambdaMyObj const&)
# 1726|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const CapturedLambdaMyObj &
# 1726| [MoveAssignmentOperator] CapturedLambdaMyObj& CapturedLambdaMyObj::operator=(CapturedLambdaMyObj&&)
# 1726|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] CapturedLambdaMyObj &&
# 1726| [CopyConstructor] void CapturedLambdaMyObj::CapturedLambdaMyObj(CapturedLambdaMyObj const&)
# 1726|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const CapturedLambdaMyObj &
# 1726| [MoveConstructor] void CapturedLambdaMyObj::CapturedLambdaMyObj(CapturedLambdaMyObj&&)
# 1726|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] CapturedLambdaMyObj &&
# 1729| [Constructor] void CapturedLambdaMyObj::CapturedLambdaMyObj()
# 1729|   <params>: 
# 1729|   <initializations>: 
# 1729|   getEntryPoint(): [BlockStmt] { ... }
# 1729|     getStmt(0): [ReturnStmt] return ...
# 1732| [TopLevelFunction] void captured_lambda(int, int&, int&&)
# 1732|   <params>: 
# 1732|     getParameter(0): [Parameter] x
# 1732|         Type = [IntType] int
# 1732|     getParameter(1): [Parameter] y
# 1732|         Type = [LValueReferenceType] int &
# 1732|     getParameter(2): [Parameter] z
# 1732|         Type = [RValueReferenceType] int &&
# 1733|   getEntryPoint(): [BlockStmt] { ... }
# 1734|     getStmt(0): [DeclStmt] declaration
# 1734|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of obj1
# 1734|           Type = [LValueReferenceType] const CapturedLambdaMyObj &
# 1734|         getVariable().getInitializer(): [Initializer] initializer for obj1
# 1734|           getExpr(): [ConstructorCall] call to CapturedLambdaMyObj
# 1734|               Type = [VoidType] void
# 1734|               ValueCategory = prvalue
# 1734|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1734|               Type = [LValueReferenceType] const CapturedLambdaMyObj &
# 1734|               ValueCategory = prvalue
# 1734|             getExpr(): [CStyleCast] (const CapturedLambdaMyObj)...
# 1734|                 Conversion = [GlvalueConversion] glvalue conversion
# 1734|                 Type = [SpecifiedType] const CapturedLambdaMyObj
# 1734|                 ValueCategory = lvalue
# 1734|               getExpr(): [TemporaryObjectExpr] temporary object
# 1734|                   Type = [Class] CapturedLambdaMyObj
# 1734|                   ValueCategory = lvalue
# 1735|     getStmt(1): [DeclStmt] declaration
# 1735|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of obj2
# 1735|           Type = [Class] CapturedLambdaMyObj
# 1735|         getVariable().getInitializer(): [Initializer] initializer for obj2
# 1735|           getExpr(): [ConstructorCall] call to CapturedLambdaMyObj
# 1735|               Type = [VoidType] void
# 1735|               ValueCategory = prvalue
# 1737|     getStmt(2): [DeclStmt] declaration
# 1737|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of lambda_outer
# 1737|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1737|         getVariable().getInitializer(): [Initializer] initializer for lambda_outer
# 1737|           getExpr(): [LambdaExpression] [...](...){...}
# 1737|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1737|               ValueCategory = prvalue
# 1737|             getInitializer(): [ClassAggregateLiteral] {...}
# 1737|                 Type = [Closure,LocalClass] decltype([...](...){...})
# 1737|                 ValueCategory = prvalue
# 1737|               getAFieldExpr(obj1): [VariableAccess] obj1
# 1737|                   Type = [LValueReferenceType] const CapturedLambdaMyObj &
# 1737|                   ValueCategory = prvalue(load)
# 1737|               getAFieldExpr(obj2): [VariableAccess] obj2
# 1737|                   Type = [Class] CapturedLambdaMyObj
# 1737|                   ValueCategory = prvalue(load)
# 1737|               getAFieldExpr(x): [VariableAccess] x
# 1737|                   Type = [IntType] int
# 1737|                   ValueCategory = prvalue(load)
# 1737|               getAFieldExpr(y): [VariableAccess] y
# 1737|                   Type = [LValueReferenceType] int &
# 1737|                   ValueCategory = prvalue(load)
# 1737|               getAFieldExpr(z): [VariableAccess] z
# 1737|                   Type = [RValueReferenceType] int &&
# 1737|                   ValueCategory = prvalue(load)
#-----|               getAFieldExpr(obj1).getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                   Type = [SpecifiedType] const CapturedLambdaMyObj
#-----|                   ValueCategory = prvalue(load)
# 1739|               getAFieldExpr(y).getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1739|                   Type = [IntType] int
# 1739|                   ValueCategory = prvalue(load)
# 1739|               getAFieldExpr(z).getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1739|                   Type = [IntType] int
# 1739|                   ValueCategory = prvalue(load)
# 1740|     getStmt(3): [ReturnStmt] return ...
# 1737| [CopyAssignmentOperator] (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)& (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator=((void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25) const&)
# 1737|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1737, col. 25 &
# 1737| [CopyConstructor] void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::(unnamed constructor)((void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25) const&)
# 1737|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1737, col. 25 &
# 1737| [MoveConstructor] void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::(unnamed constructor)((void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)&&)
# 1737|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1737, col. 25 &&
# 1737| [Constructor] void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::(unnamed constructor)()
# 1737|   <params>: 
# 1737| [ConstMemberFunction] void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator()() const
# 1737|   <params>: 
# 1737|   getEntryPoint(): [BlockStmt] { ... }
# 1738|     getStmt(0): [DeclStmt] declaration
# 1738|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of lambda_inner
# 1738|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1738|         getVariable().getInitializer(): [Initializer] initializer for lambda_inner
# 1738|           getExpr(): [LambdaExpression] [...](...){...}
# 1738|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1738|               ValueCategory = prvalue
# 1738|             getInitializer(): [ClassAggregateLiteral] {...}
# 1738|                 Type = [Closure,LocalClass] decltype([...](...){...})
# 1738|                 ValueCategory = prvalue
# 1738|               getAFieldExpr(obj1): [PointerFieldAccess] obj1
# 1738|                   Type = [SpecifiedType] const CapturedLambdaMyObj
# 1738|                   ValueCategory = prvalue(load)
# 1738|                 getQualifier(): [ThisExpr] this
# 1738|                     Type = [PointerType] lambda [] type at line 1738, col. 29 *
# 1738|                     ValueCategory = prvalue(load)
# 1738|               getAFieldExpr(obj2): [PointerFieldAccess] obj2
# 1738|                   Type = [Class] CapturedLambdaMyObj
# 1738|                   ValueCategory = prvalue(load)
# 1738|                 getQualifier(): [ThisExpr] this
# 1738|                     Type = [PointerType] lambda [] type at line 1738, col. 29 *
# 1738|                     ValueCategory = prvalue(load)
# 1738|               getAFieldExpr(x): [PointerFieldAccess] x
# 1738|                   Type = [IntType] int
# 1738|                   ValueCategory = prvalue(load)
# 1738|                 getQualifier(): [ThisExpr] this
# 1738|                     Type = [PointerType] const lambda [] type at line 1737, col. 25 *
# 1738|                     ValueCategory = prvalue(load)
# 1738|               getAFieldExpr(y): [PointerFieldAccess] y
# 1738|                   Type = [IntType] int
# 1738|                   ValueCategory = prvalue(load)
# 1738|                 getQualifier(): [ThisExpr] this
# 1738|                     Type = [PointerType] const lambda [] type at line 1737, col. 25 *
# 1738|                     ValueCategory = prvalue(load)
# 1738|               getAFieldExpr(z): [PointerFieldAccess] z
# 1738|                   Type = [IntType] int
# 1738|                   ValueCategory = prvalue(load)
# 1738|                 getQualifier(): [ThisExpr] this
# 1738|                     Type = [PointerType] const lambda [] type at line 1737, col. 25 *
# 1738|                     ValueCategory = prvalue(load)
# 1739|     getStmt(1): [ReturnStmt] return ...
# 1738| [CopyAssignmentOperator] (void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator()() const)::(lambda [] type at line 1738, col. 29)& (void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator()() const)::(lambda [] type at line 1738, col. 29)::operator=((void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator()() const)::(lambda [] type at line 1738, col. 29) const&)
# 1738|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1738, col. 29 &
# 1738| [CopyConstructor] void (void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator()() const)::(lambda [] type at line 1738, col. 29)::(unnamed constructor)((void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator()() const)::(lambda [] type at line 1738, col. 29) const&)
# 1738|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1738, col. 29 &
# 1738| [MoveConstructor] void (void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator()() const)::(lambda [] type at line 1738, col. 29)::(unnamed constructor)((void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator()() const)::(lambda [] type at line 1738, col. 29)&&)
# 1738|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1738, col. 29 &&
# 1738| [Constructor] void (void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator()() const)::(lambda [] type at line 1738, col. 29)::(unnamed constructor)()
# 1738|   <params>: 
# 1738| [ConstMemberFunction] void (void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator()() const)::(lambda [] type at line 1738, col. 29)::operator()() const
# 1738|   <params>: 
# 1738|   getEntryPoint(): [BlockStmt] { ... }
# 1738|     getStmt(0): [EmptyStmt] ;
# 1738|     getStmt(1): [ReturnStmt] return ...
# 1742| [TopLevelFunction] int goto_on_same_line()
# 1742|   <params>: 
# 1742|   getEntryPoint(): [BlockStmt] { ... }
# 1743|     getStmt(0): [DeclStmt] declaration
# 1743|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 1743|           Type = [IntType] int
# 1743|         getVariable().getInitializer(): [Initializer] initializer for x
# 1743|           getExpr(): [Literal] 42
# 1743|               Type = [IntType] int
# 1743|               Value = [Literal] 42
# 1743|               ValueCategory = prvalue
# 1744|     getStmt(1): [GotoStmt] goto ...
# 1744|     getStmt(2): [LabelStmt] label ...:
# 1745|     getStmt(3): [ReturnStmt] return ...
# 1745|       getExpr(): [VariableAccess] x
# 1745|           Type = [IntType] int
# 1745|           ValueCategory = prvalue(load)
# 1748| [CopyAssignmentOperator] TrivialLambdaClass& TrivialLambdaClass::operator=(TrivialLambdaClass const&)
# 1748|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const TrivialLambdaClass &
# 1748| [MoveAssignmentOperator] TrivialLambdaClass& TrivialLambdaClass::operator=(TrivialLambdaClass&&)
# 1748|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] TrivialLambdaClass &&
# 1750| [ConstMemberFunction] void TrivialLambdaClass::m() const
# 1750|   <params>: 
# 1750|   getEntryPoint(): [BlockStmt] { ... }
# 1751|     getStmt(0): [DeclStmt] declaration
# 1751|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of l_m_outer
# 1751|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1751|         getVariable().getInitializer(): [Initializer] initializer for l_m_outer
# 1751|           getExpr(): [LambdaExpression] [...](...){...}
# 1751|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1751|               ValueCategory = prvalue
# 1751|             getInitializer(): [ClassAggregateLiteral] {...}
# 1751|                 Type = [Closure,LocalClass] decltype([...](...){...})
# 1751|                 ValueCategory = prvalue
# 1751|               getAFieldExpr((captured this)): [PointerDereferenceExpr] * ...
# 1751|                   Type = [SpecifiedType] const TrivialLambdaClass
# 1751|                   ValueCategory = prvalue(load)
# 1751|                 getOperand(): [ThisExpr] this
# 1751|                     Type = [SpecifiedType] const TrivialLambdaClass *const
# 1751|                     ValueCategory = prvalue(load)
# 1758|     getStmt(1): [ReturnStmt] return ...
# 1751| [CopyAssignmentOperator] (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)& (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator=((void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26) const&)
# 1751|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1751, col. 26 &
# 1751| [CopyConstructor] void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::(unnamed constructor)((void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26) const&)
# 1751|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1751, col. 26 &
# 1751| [MoveConstructor] void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::(unnamed constructor)((void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)&&)
# 1751|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1751, col. 26 &&
# 1751| [Constructor] void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::(unnamed constructor)()
# 1751|   <params>: 
# 1751| [ConstMemberFunction] void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator()() const
# 1751|   <params>: 
# 1751|   getEntryPoint(): [BlockStmt] { ... }
# 1752|     getStmt(0): [ExprStmt] ExprStmt
# 1752|       getExpr(): [FunctionCall] call to m
# 1752|           Type = [VoidType] void
# 1752|           ValueCategory = prvalue
# 1752|         getQualifier(): [AddressOfExpr] & ...
# 1752|             Type = [PointerType] const TrivialLambdaClass *
# 1752|             ValueCategory = prvalue
# 1752|           getOperand(): [ImplicitThisFieldAccess,PointerFieldAccess] (captured this)
# 1752|               Type = [SpecifiedType] const TrivialLambdaClass
# 1752|               ValueCategory = lvalue
# 1752|             getQualifier(): [ThisExpr] this
# 1752|                 Type = [PointerType] const lambda [] type at line 1751, col. 26 *
# 1752|                 ValueCategory = prvalue(load)
# 1754|     getStmt(1): [DeclStmt] declaration
# 1754|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of l_m_inner
# 1754|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1754|         getVariable().getInitializer(): [Initializer] initializer for l_m_inner
# 1754|           getExpr(): [LambdaExpression] [...](...){...}
# 1754|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1754|               ValueCategory = prvalue
# 1754|             getInitializer(): [ClassAggregateLiteral] {...}
# 1754|                 Type = [Closure,LocalClass] decltype([...](...){...})
# 1754|                 ValueCategory = prvalue
# 1754|               getAFieldExpr((captured this)): [PointerFieldAccess] (captured this)
# 1754|                   Type = [SpecifiedType] const TrivialLambdaClass
# 1754|                   ValueCategory = prvalue(load)
# 1754|                 getQualifier(): [ThisExpr] this
# 1754|                     Type = [PointerType] lambda [] type at line 1754, col. 30 *
# 1754|                     ValueCategory = prvalue(load)
# 1757|     getStmt(2): [ReturnStmt] return ...
# 1754| [CopyAssignmentOperator] (void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator()() const)::(lambda [] type at line 1754, col. 30)& (void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator()() const)::(lambda [] type at line 1754, col. 30)::operator=((void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator()() const)::(lambda [] type at line 1754, col. 30) const&)
# 1754|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1754, col. 30 &
# 1754| [CopyConstructor] void (void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator()() const)::(lambda [] type at line 1754, col. 30)::(unnamed constructor)((void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator()() const)::(lambda [] type at line 1754, col. 30) const&)
# 1754|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1754, col. 30 &
# 1754| [MoveConstructor] void (void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator()() const)::(lambda [] type at line 1754, col. 30)::(unnamed constructor)((void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator()() const)::(lambda [] type at line 1754, col. 30)&&)
# 1754|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1754, col. 30 &&
# 1754| [Constructor] void (void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator()() const)::(lambda [] type at line 1754, col. 30)::(unnamed constructor)()
# 1754|   <params>: 
# 1754| [ConstMemberFunction] void (void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator()() const)::(lambda [] type at line 1754, col. 30)::operator()() const
# 1754|   <params>: 
# 1754|   getEntryPoint(): [BlockStmt] { ... }
# 1755|     getStmt(0): [ExprStmt] ExprStmt
# 1755|       getExpr(): [FunctionCall] call to m
# 1755|           Type = [VoidType] void
# 1755|           ValueCategory = prvalue
# 1755|         getQualifier(): [AddressOfExpr] & ...
# 1755|             Type = [PointerType] const TrivialLambdaClass *
# 1755|             ValueCategory = prvalue
# 1755|           getOperand(): [ImplicitThisFieldAccess,PointerFieldAccess] (captured this)
# 1755|               Type = [SpecifiedType] const TrivialLambdaClass
# 1755|               ValueCategory = lvalue
# 1755|             getQualifier(): [ThisExpr] this
# 1755|                 Type = [PointerType] const lambda [] type at line 1754, col. 30 *
# 1755|                 ValueCategory = prvalue(load)
# 1756|     getStmt(1): [ReturnStmt] return ...
# 1761| [TopLevelFunction] void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&)
# 1761|   <params>: 
# 1761|     getParameter(0): [Parameter] p1
# 1761|         Type = [Class] TrivialLambdaClass
# 1761|     getParameter(1): [Parameter] p2
# 1761|         Type = [LValueReferenceType] TrivialLambdaClass &
# 1761|     getParameter(2): [Parameter] p3
# 1761|         Type = [RValueReferenceType] TrivialLambdaClass &&
# 1761|   getEntryPoint(): [BlockStmt] { ... }
# 1762|     getStmt(0): [DeclStmt] declaration
# 1762|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of l1
# 1762|           Type = [SpecifiedType] const TrivialLambdaClass
# 1763|     getStmt(1): [DeclStmt] declaration
# 1763|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of l2
# 1763|           Type = [LValueReferenceType] const TrivialLambdaClass &
# 1763|         getVariable().getInitializer(): [Initializer] initializer for l2
# 1763|           getExpr(): [Literal] 0
# 1763|               Type = [Class] TrivialLambdaClass
# 1763|               Value = [Literal] 0
# 1763|               ValueCategory = prvalue
# 1763|           getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 1763|               Type = [LValueReferenceType] const TrivialLambdaClass &
# 1763|               ValueCategory = prvalue
# 1763|             getExpr(): [CStyleCast] (const TrivialLambdaClass)...
# 1763|                 Conversion = [GlvalueConversion] glvalue conversion
# 1763|                 Type = [SpecifiedType] const TrivialLambdaClass
# 1763|                 ValueCategory = lvalue
# 1763|               getExpr(): [TemporaryObjectExpr] temporary object
# 1763|                   Type = [Class] TrivialLambdaClass
# 1763|                   ValueCategory = lvalue
# 1765|     getStmt(2): [DeclStmt] declaration
# 1765|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of l_outer1
# 1765|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1765|         getVariable().getInitializer(): [Initializer] initializer for l_outer1
# 1765|           getExpr(): [LambdaExpression] [...](...){...}
# 1765|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1765|               ValueCategory = prvalue
# 1765|             getInitializer(): [ClassAggregateLiteral] {...}
# 1765|                 Type = [Closure,LocalClass] decltype([...](...){...})
# 1765|                 ValueCategory = prvalue
# 1765|               getAFieldExpr(p1): [VariableAccess] p1
# 1765|                   Type = [Class] TrivialLambdaClass
# 1765|                   ValueCategory = prvalue(load)
# 1765|               getAFieldExpr(p2): [VariableAccess] p2
# 1765|                   Type = [LValueReferenceType] TrivialLambdaClass &
# 1765|                   ValueCategory = prvalue(load)
# 1765|               getAFieldExpr(p3): [VariableAccess] p3
# 1765|                   Type = [RValueReferenceType] TrivialLambdaClass &&
# 1765|                   ValueCategory = prvalue(load)
# 1765|               getAFieldExpr(l1): [VariableAccess] l1
# 1765|                   Type = [SpecifiedType] const TrivialLambdaClass
# 1765|                   ValueCategory = prvalue(load)
# 1765|               getAFieldExpr(l2): [VariableAccess] l2
# 1765|                   Type = [LValueReferenceType] const TrivialLambdaClass &
# 1765|                   ValueCategory = prvalue(load)
#-----|               getAFieldExpr(p2).getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                   Type = [Class] TrivialLambdaClass
#-----|                   ValueCategory = prvalue(load)
#-----|               getAFieldExpr(p3).getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                   Type = [Class] TrivialLambdaClass
#-----|                   ValueCategory = prvalue(load)
#-----|               getAFieldExpr(l2).getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                   Type = [SpecifiedType] const TrivialLambdaClass
#-----|                   ValueCategory = prvalue(load)
# 1768|     getStmt(3): [ReturnStmt] return ...
# 1765| [CopyAssignmentOperator] (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)& (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator=((void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21) const&)
# 1765|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1765, col. 21 &
# 1765| [CopyConstructor] void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::(unnamed constructor)((void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21) const&)
# 1765|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1765, col. 21 &
# 1765| [MoveConstructor] void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::(unnamed constructor)((void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)&&)
# 1765|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1765, col. 21 &&
# 1765| [Constructor] void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::(unnamed constructor)()
# 1765|   <params>: 
# 1765| [ConstMemberFunction] void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator()() const
# 1765|   <params>: 
# 1765|   getEntryPoint(): [BlockStmt] { ... }
# 1766|     getStmt(0): [DeclStmt] declaration
# 1766|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of l_inner1
# 1766|           Type = [Closure,LocalClass] decltype([...](...){...})
# 1766|         getVariable().getInitializer(): [Initializer] initializer for l_inner1
# 1766|           getExpr(): [LambdaExpression] [...](...){...}
# 1766|               Type = [Closure,LocalClass] decltype([...](...){...})
# 1766|               ValueCategory = prvalue
# 1766|             getInitializer(): [ClassAggregateLiteral] {...}
# 1766|                 Type = [Closure,LocalClass] decltype([...](...){...})
# 1766|                 ValueCategory = prvalue
# 1766|               getAFieldExpr(p1): [PointerFieldAccess] p1
# 1766|                   Type = [Class] TrivialLambdaClass
# 1766|                   ValueCategory = prvalue(load)
# 1766|                 getQualifier(): [ThisExpr] this
# 1766|                     Type = [PointerType] lambda [] type at line 1766, col. 25 *
# 1766|                     ValueCategory = prvalue(load)
# 1767|     getStmt(1): [ReturnStmt] return ...
# 1766| [CopyAssignmentOperator] (void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator()() const)::(lambda [] type at line 1766, col. 25)& (void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator()() const)::(lambda [] type at line 1766, col. 25)::operator=((void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator()() const)::(lambda [] type at line 1766, col. 25) const&)
# 1766|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1766, col. 25 &
# 1766| [CopyConstructor] void (void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator()() const)::(lambda [] type at line 1766, col. 25)::(unnamed constructor)((void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator()() const)::(lambda [] type at line 1766, col. 25) const&)
# 1766|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const lambda [] type at line 1766, col. 25 &
# 1766| [MoveConstructor] void (void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator()() const)::(lambda [] type at line 1766, col. 25)::(unnamed constructor)((void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator()() const)::(lambda [] type at line 1766, col. 25)&&)
# 1766|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] lambda [] type at line 1766, col. 25 &&
# 1766| [Constructor] void (void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator()() const)::(lambda [] type at line 1766, col. 25)::(unnamed constructor)()
# 1766|   <params>: 
# 1766| [ConstMemberFunction] void (void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator()() const)::(lambda [] type at line 1766, col. 25)::operator()() const
# 1766|   <params>: 
# 1766|   getEntryPoint(): [BlockStmt] { ... }
# 1766|     getStmt(0): [ReturnStmt] return ...
# 1770| [CopyAssignmentOperator] CopyConstructorWithImplicitArgumentClass& CopyConstructorWithImplicitArgumentClass::operator=(CopyConstructorWithImplicitArgumentClass const&)
# 1770|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const CopyConstructorWithImplicitArgumentClass &
# 1773| [Constructor] void CopyConstructorWithImplicitArgumentClass::CopyConstructorWithImplicitArgumentClass()
# 1773|   <params>: 
# 1773|   <initializations>: 
# 1773|   getEntryPoint(): [BlockStmt] { ... }
# 1773|     getStmt(0): [ReturnStmt] return ...
# 1774| [CopyConstructor] void CopyConstructorWithImplicitArgumentClass::CopyConstructorWithImplicitArgumentClass(CopyConstructorWithImplicitArgumentClass const&)
# 1774|   <params>: 
# 1774|     getParameter(0): [Parameter] c
# 1774|         Type = [LValueReferenceType] const CopyConstructorWithImplicitArgumentClass &
# 1774|   <initializations>: 
# 1774|   getEntryPoint(): [BlockStmt] { ... }
# 1775|     getStmt(0): [ExprStmt] ExprStmt
# 1775|       getExpr(): [AssignExpr] ... = ...
# 1775|           Type = [IntType] int
# 1775|           ValueCategory = lvalue
# 1775|         getLValue(): [ImplicitThisFieldAccess,PointerFieldAccess] x
# 1775|             Type = [IntType] int
# 1775|             ValueCategory = lvalue
# 1775|           getQualifier(): [ThisExpr] this
# 1775|               Type = [PointerType] CopyConstructorWithImplicitArgumentClass *
# 1775|               ValueCategory = prvalue(load)
# 1775|         getRValue(): [ReferenceFieldAccess] x
# 1775|             Type = [IntType] int
# 1775|             ValueCategory = prvalue(load)
# 1775|           getQualifier(): [VariableAccess] c
# 1775|               Type = [LValueReferenceType] const CopyConstructorWithImplicitArgumentClass &
# 1775|               ValueCategory = prvalue(load)
# 1775|           getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1775|               Type = [SpecifiedType] const CopyConstructorWithImplicitArgumentClass
# 1775|               ValueCategory = lvalue
# 1776|     getStmt(1): [ReturnStmt] return ...
# 1779| [CopyAssignmentOperator] CopyConstructorWithBitwiseCopyClass& CopyConstructorWithBitwiseCopyClass::operator=(CopyConstructorWithBitwiseCopyClass const&)
# 1779|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const CopyConstructorWithBitwiseCopyClass &
# 1779| [MoveAssignmentOperator] CopyConstructorWithBitwiseCopyClass& CopyConstructorWithBitwiseCopyClass::operator=(CopyConstructorWithBitwiseCopyClass&&)
# 1779|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] CopyConstructorWithBitwiseCopyClass &&
# 1779| [CopyConstructor] void CopyConstructorWithBitwiseCopyClass::CopyConstructorWithBitwiseCopyClass(CopyConstructorWithBitwiseCopyClass const&)
# 1779|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const CopyConstructorWithBitwiseCopyClass &
# 1779| [MoveConstructor] void CopyConstructorWithBitwiseCopyClass::CopyConstructorWithBitwiseCopyClass(CopyConstructorWithBitwiseCopyClass&&)
# 1779|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] CopyConstructorWithBitwiseCopyClass &&
# 1782| [Constructor] void CopyConstructorWithBitwiseCopyClass::CopyConstructorWithBitwiseCopyClass()
# 1782|   <params>: 
# 1782|   <initializations>: 
# 1782|   getEntryPoint(): [BlockStmt] { ... }
# 1782|     getStmt(0): [ReturnStmt] return ...
# 1785| [CopyAssignmentOperator] CopyConstructorTestNonVirtualClass& CopyConstructorTestNonVirtualClass::operator=(CopyConstructorTestNonVirtualClass const&)
# 1785|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const CopyConstructorTestNonVirtualClass &
# 1785| [MoveAssignmentOperator] CopyConstructorTestNonVirtualClass& CopyConstructorTestNonVirtualClass::operator=(CopyConstructorTestNonVirtualClass&&)
# 1785|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] CopyConstructorTestNonVirtualClass &&
# 1785| [CopyConstructor] void CopyConstructorTestNonVirtualClass::CopyConstructorTestNonVirtualClass(CopyConstructorTestNonVirtualClass const&)
# 1785|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const CopyConstructorTestNonVirtualClass &
# 1785|   <initializations>: 
# 1785|     getInitializer(0): [ConstructorDirectInit] call to CopyConstructorWithImplicitArgumentClass
# 1785|         Type = [VoidType] void
# 1785|         ValueCategory = prvalue
# 1785|       getArgument(0): [VariableAccess] (unnamed parameter 0)
# 1785|           Type = [LValueReferenceType] const CopyConstructorTestNonVirtualClass &
# 1785|           ValueCategory = prvalue(load)
# 1785|       getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1785|           Type = [LValueReferenceType] const CopyConstructorWithImplicitArgumentClass &
# 1785|           ValueCategory = prvalue
# 1785|         getExpr(): [CStyleCast] (const CopyConstructorWithImplicitArgumentClass)...
# 1785|             Conversion = [BaseClassConversion] base class conversion
# 1785|             Type = [SpecifiedType] const CopyConstructorWithImplicitArgumentClass
# 1785|             ValueCategory = lvalue
# 1785|           getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1785|               Type = [SpecifiedType] const CopyConstructorTestNonVirtualClass
# 1785|               ValueCategory = lvalue
# 1785|     getInitializer(1): (no string representation)
# 1785|         Type = [VirtualBaseClass] CopyConstructorWithBitwiseCopyClass
# 1785|         ValueCategory = prvalue
# 1785|   getEntryPoint(): [BlockStmt] { ... }
# 1785|     getStmt(0): [ReturnStmt] return ...
# 1785| [MoveConstructor] void CopyConstructorTestNonVirtualClass::CopyConstructorTestNonVirtualClass(CopyConstructorTestNonVirtualClass&&)
# 1785|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] CopyConstructorTestNonVirtualClass &&
# 1789| [Constructor] void CopyConstructorTestNonVirtualClass::CopyConstructorTestNonVirtualClass()
# 1789|   <params>: 
# 1789|   <initializations>: 
# 1789|     getInitializer(0): [ConstructorDirectInit] call to CopyConstructorWithImplicitArgumentClass
# 1789|         Type = [VoidType] void
# 1789|         ValueCategory = prvalue
# 1789|     getInitializer(1): [ConstructorDirectInit] call to CopyConstructorWithBitwiseCopyClass
# 1789|         Type = [VoidType] void
# 1789|         ValueCategory = prvalue
# 1789|   getEntryPoint(): [BlockStmt] { ... }
# 1789|     getStmt(0): [ReturnStmt] return ...
# 1792| [CopyAssignmentOperator] CopyConstructorTestVirtualClass& CopyConstructorTestVirtualClass::operator=(CopyConstructorTestVirtualClass const&)
# 1792|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const CopyConstructorTestVirtualClass &
# 1792| [MoveAssignmentOperator] CopyConstructorTestVirtualClass& CopyConstructorTestVirtualClass::operator=(CopyConstructorTestVirtualClass&&)
# 1792|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] CopyConstructorTestVirtualClass &&
# 1792| [CopyConstructor] void CopyConstructorTestVirtualClass::CopyConstructorTestVirtualClass(CopyConstructorTestVirtualClass const&)
# 1792|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const CopyConstructorTestVirtualClass &
# 1792|   <initializations>: 
# 1792|     getInitializer(0): [ConstructorVirtualInit] call to CopyConstructorWithImplicitArgumentClass
# 1792|         Type = [VoidType] void
# 1792|         ValueCategory = prvalue
# 1792|       getArgument(0): [VariableAccess] (unnamed parameter 0)
# 1792|           Type = [LValueReferenceType] const CopyConstructorTestVirtualClass &
# 1792|           ValueCategory = prvalue(load)
# 1792|       getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1792|           Type = [LValueReferenceType] const CopyConstructorWithImplicitArgumentClass &
# 1792|           ValueCategory = prvalue
# 1792|         getExpr(): [CStyleCast] (const CopyConstructorWithImplicitArgumentClass)...
# 1792|             Conversion = [BaseClassConversion] base class conversion
# 1792|             Type = [SpecifiedType] const CopyConstructorWithImplicitArgumentClass
# 1792|             ValueCategory = lvalue
# 1792|           getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1792|               Type = [SpecifiedType] const CopyConstructorTestVirtualClass
# 1792|               ValueCategory = lvalue
# 1792|     getInitializer(1): (no string representation)
# 1792|         Type = [VirtualBaseClass] CopyConstructorWithBitwiseCopyClass
# 1792|         ValueCategory = prvalue
# 1792|   getEntryPoint(): [BlockStmt] { ... }
# 1792|     getStmt(0): [ReturnStmt] return ...
# 1792| [MoveConstructor] void CopyConstructorTestVirtualClass::CopyConstructorTestVirtualClass(CopyConstructorTestVirtualClass&&)
# 1792|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] CopyConstructorTestVirtualClass &&
# 1796| [Constructor] void CopyConstructorTestVirtualClass::CopyConstructorTestVirtualClass()
# 1796|   <params>: 
# 1796|   <initializations>: 
# 1796|     getInitializer(0): [ConstructorVirtualInit] call to CopyConstructorWithImplicitArgumentClass
# 1796|         Type = [VoidType] void
# 1796|         ValueCategory = prvalue
# 1796|     getInitializer(1): [ConstructorVirtualInit] call to CopyConstructorWithBitwiseCopyClass
# 1796|         Type = [VoidType] void
# 1796|         ValueCategory = prvalue
# 1796|   getEntryPoint(): [BlockStmt] { ... }
# 1796|     getStmt(0): [ReturnStmt] return ...
# 1799| [TopLevelFunction] int implicit_copy_constructor_test(CopyConstructorTestNonVirtualClass const&, CopyConstructorTestVirtualClass const&)
# 1799|   <params>: 
# 1800|     getParameter(0): [Parameter] x
# 1800|         Type = [LValueReferenceType] const CopyConstructorTestNonVirtualClass &
# 1801|     getParameter(1): [Parameter] y
# 1801|         Type = [LValueReferenceType] const CopyConstructorTestVirtualClass &
# 1801|   getEntryPoint(): [BlockStmt] { ... }
# 1802|     getStmt(0): [DeclStmt] declaration
# 1802|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of cx
# 1802|           Type = [Class] CopyConstructorTestNonVirtualClass
# 1802|         getVariable().getInitializer(): [Initializer] initializer for cx
# 1802|           getExpr(): [ConstructorCall] call to CopyConstructorTestNonVirtualClass
# 1802|               Type = [VoidType] void
# 1802|               ValueCategory = prvalue
# 1802|             getArgument(0): [VariableAccess] x
# 1802|                 Type = [LValueReferenceType] const CopyConstructorTestNonVirtualClass &
# 1802|                 ValueCategory = prvalue(load)
# 1802|             getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1802|                 Type = [LValueReferenceType] const CopyConstructorTestNonVirtualClass &
# 1802|                 ValueCategory = prvalue
# 1802|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1802|                   Type = [SpecifiedType] const CopyConstructorTestNonVirtualClass
# 1802|                   ValueCategory = lvalue
# 1803|     getStmt(1): [DeclStmt] declaration
# 1803|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of cy
# 1803|           Type = [Class] CopyConstructorTestVirtualClass
# 1803|         getVariable().getInitializer(): [Initializer] initializer for cy
# 1803|           getExpr(): [ConstructorCall] call to CopyConstructorTestVirtualClass
# 1803|               Type = [VoidType] void
# 1803|               ValueCategory = prvalue
# 1803|             getArgument(0): [VariableAccess] y
# 1803|                 Type = [LValueReferenceType] const CopyConstructorTestVirtualClass &
# 1803|                 ValueCategory = prvalue(load)
# 1803|             getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1803|                 Type = [LValueReferenceType] const CopyConstructorTestVirtualClass &
# 1803|                 ValueCategory = prvalue
# 1803|               getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 1803|                   Type = [SpecifiedType] const CopyConstructorTestVirtualClass
# 1803|                   ValueCategory = lvalue
# 1804|     getStmt(2): [ReturnStmt] return ...
# 1806| [TopLevelFunction] void if_initialization(int)
# 1806|   <params>: 
# 1806|     getParameter(0): [Parameter] x
# 1806|         Type = [IntType] int
# 1806|   getEntryPoint(): [BlockStmt] { ... }
# 1807|     getStmt(0): [IfStmt] if (...) ... 
# 1807|       getInitialization(): [DeclStmt] declaration
# 1807|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 1807|             Type = [IntType] int
# 1807|           getVariable().getInitializer(): [Initializer] initializer for y
# 1807|             getExpr(): [VariableAccess] x
# 1807|                 Type = [IntType] int
# 1807|                 ValueCategory = prvalue(load)
# 1807|       getCondition(): [AddExpr] ... + ...
# 1807|           Type = [IntType] int
# 1807|           ValueCategory = prvalue
# 1807|         getLeftOperand(): [VariableAccess] x
# 1807|             Type = [IntType] int
# 1807|             ValueCategory = prvalue(load)
# 1807|         getRightOperand(): [Literal] 1
# 1807|             Type = [IntType] int
# 1807|             Value = [Literal] 1
# 1807|             ValueCategory = prvalue
# 1807|       getThen(): [BlockStmt] { ... }
# 1808|         getStmt(0): [ExprStmt] ExprStmt
# 1808|           getExpr(): [AssignExpr] ... = ...
# 1808|               Type = [IntType] int
# 1808|               ValueCategory = lvalue
# 1808|             getLValue(): [VariableAccess] x
# 1808|                 Type = [IntType] int
# 1808|                 ValueCategory = lvalue
# 1808|             getRValue(): [AddExpr] ... + ...
# 1808|                 Type = [IntType] int
# 1808|                 ValueCategory = prvalue
# 1808|               getLeftOperand(): [VariableAccess] x
# 1808|                   Type = [IntType] int
# 1808|                   ValueCategory = prvalue(load)
# 1808|               getRightOperand(): [VariableAccess] y
# 1808|                   Type = [IntType] int
# 1808|                   ValueCategory = prvalue(load)
# 1807|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 1807|           Conversion = [BoolConversion] conversion to bool
# 1807|           Type = [BoolType] bool
# 1807|           ValueCategory = prvalue
# 1811|     getStmt(1): [DeclStmt] declaration
# 1811|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of w
# 1811|           Type = [IntType] int
# 1812|     getStmt(2): [IfStmt] if (...) ... 
# 1812|       getInitialization(): [ExprStmt] ExprStmt
# 1812|         getExpr(): [AssignExpr] ... = ...
# 1812|             Type = [IntType] int
# 1812|             ValueCategory = lvalue
# 1812|           getLValue(): [VariableAccess] w
# 1812|               Type = [IntType] int
# 1812|               ValueCategory = lvalue
# 1812|           getRValue(): [VariableAccess] x
# 1812|               Type = [IntType] int
# 1812|               ValueCategory = prvalue(load)
# 1812|       getCondition(): [AddExpr] ... + ...
# 1812|           Type = [IntType] int
# 1812|           ValueCategory = prvalue
# 1812|         getLeftOperand(): [VariableAccess] x
# 1812|             Type = [IntType] int
# 1812|             ValueCategory = prvalue(load)
# 1812|         getRightOperand(): [Literal] 1
# 1812|             Type = [IntType] int
# 1812|             Value = [Literal] 1
# 1812|             ValueCategory = prvalue
# 1812|       getThen(): [BlockStmt] { ... }
# 1813|         getStmt(0): [ExprStmt] ExprStmt
# 1813|           getExpr(): [AssignExpr] ... = ...
# 1813|               Type = [IntType] int
# 1813|               ValueCategory = lvalue
# 1813|             getLValue(): [VariableAccess] x
# 1813|                 Type = [IntType] int
# 1813|                 ValueCategory = lvalue
# 1813|             getRValue(): [AddExpr] ... + ...
# 1813|                 Type = [IntType] int
# 1813|                 ValueCategory = prvalue
# 1813|               getLeftOperand(): [VariableAccess] x
# 1813|                   Type = [IntType] int
# 1813|                   ValueCategory = prvalue(load)
# 1813|               getRightOperand(): [VariableAccess] w
# 1813|                   Type = [IntType] int
# 1813|                   ValueCategory = prvalue(load)
# 1812|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 1812|           Conversion = [BoolConversion] conversion to bool
# 1812|           Type = [BoolType] bool
# 1812|           ValueCategory = prvalue
# 1816|     getStmt(3): [IfStmt] if (...) ... 
# 1816|       getInitialization(): [ExprStmt] ExprStmt
# 1816|         getExpr(): [AssignExpr] ... = ...
# 1816|             Type = [IntType] int
# 1816|             ValueCategory = lvalue
# 1816|           getLValue(): [VariableAccess] w
# 1816|               Type = [IntType] int
# 1816|               ValueCategory = lvalue
# 1816|           getRValue(): [VariableAccess] x
# 1816|               Type = [IntType] int
# 1816|               ValueCategory = prvalue(load)
# 1816|       getCondition(): [ConditionDeclExpr] (condition decl)
# 1816|           Type = [BoolType] bool
# 1816|           ValueCategory = prvalue
# 1816|         getVariableAccess(): [VariableAccess] w2
# 1816|             Type = [IntType] int
# 1816|             ValueCategory = prvalue(load)
# 1816|         getInitializingExpr(): [VariableAccess] w
# 1816|             Type = [IntType] int
# 1816|             ValueCategory = prvalue(load)
# 1816|         getVariableAccess().getFullyConverted(): [CStyleCast] (bool)...
# 1816|             Conversion = [BoolConversion] conversion to bool
# 1816|             Type = [BoolType] bool
# 1816|             ValueCategory = prvalue
# 1816|       getThen(): [BlockStmt] { ... }
# 1817|         getStmt(0): [ExprStmt] ExprStmt
# 1817|           getExpr(): [AssignExpr] ... = ...
# 1817|               Type = [IntType] int
# 1817|               ValueCategory = lvalue
# 1817|             getLValue(): [VariableAccess] x
# 1817|                 Type = [IntType] int
# 1817|                 ValueCategory = lvalue
# 1817|             getRValue(): [AddExpr] ... + ...
# 1817|                 Type = [IntType] int
# 1817|                 ValueCategory = prvalue
# 1817|               getLeftOperand(): [VariableAccess] x
# 1817|                   Type = [IntType] int
# 1817|                   ValueCategory = prvalue(load)
# 1817|               getRightOperand(): [VariableAccess] w
# 1817|                   Type = [IntType] int
# 1817|                   ValueCategory = prvalue(load)
# 1820|     getStmt(4): [IfStmt] if (...) ... 
# 1820|       getInitialization(): [DeclStmt] declaration
# 1820|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of v
# 1820|             Type = [IntType] int
# 1820|           getVariable().getInitializer(): [Initializer] initializer for v
# 1820|             getExpr(): [VariableAccess] x
# 1820|                 Type = [IntType] int
# 1820|                 ValueCategory = prvalue(load)
# 1820|       getCondition(): [ConditionDeclExpr] (condition decl)
# 1820|           Type = [BoolType] bool
# 1820|           ValueCategory = prvalue
# 1820|         getVariableAccess(): [VariableAccess] v2
# 1820|             Type = [IntType] int
# 1820|             ValueCategory = prvalue(load)
# 1820|         getInitializingExpr(): [VariableAccess] v
# 1820|             Type = [IntType] int
# 1820|             ValueCategory = prvalue(load)
# 1820|         getVariableAccess().getFullyConverted(): [CStyleCast] (bool)...
# 1820|             Conversion = [BoolConversion] conversion to bool
# 1820|             Type = [BoolType] bool
# 1820|             ValueCategory = prvalue
# 1820|       getThen(): [BlockStmt] { ... }
# 1821|         getStmt(0): [ExprStmt] ExprStmt
# 1821|           getExpr(): [AssignExpr] ... = ...
# 1821|               Type = [IntType] int
# 1821|               ValueCategory = lvalue
# 1821|             getLValue(): [VariableAccess] x
# 1821|                 Type = [IntType] int
# 1821|                 ValueCategory = lvalue
# 1821|             getRValue(): [AddExpr] ... + ...
# 1821|                 Type = [IntType] int
# 1821|                 ValueCategory = prvalue
# 1821|               getLeftOperand(): [VariableAccess] x
# 1821|                   Type = [IntType] int
# 1821|                   ValueCategory = prvalue(load)
# 1821|               getRightOperand(): [VariableAccess] v
# 1821|                   Type = [IntType] int
# 1821|                   ValueCategory = prvalue(load)
# 1824|     getStmt(5): [DeclStmt] declaration
# 1824|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
# 1824|           Type = [IntType] int
# 1824|         getVariable().getInitializer(): [Initializer] initializer for z
# 1824|           getExpr(): [VariableAccess] x
# 1824|               Type = [IntType] int
# 1824|               ValueCategory = prvalue(load)
# 1825|     getStmt(6): [IfStmt] if (...) ... 
# 1825|       getCondition(): [VariableAccess] z
# 1825|           Type = [IntType] int
# 1825|           ValueCategory = prvalue(load)
# 1825|       getThen(): [BlockStmt] { ... }
# 1826|         getStmt(0): [ExprStmt] ExprStmt
# 1826|           getExpr(): [AssignExpr] ... = ...
# 1826|               Type = [IntType] int
# 1826|               ValueCategory = lvalue
# 1826|             getLValue(): [VariableAccess] x
# 1826|                 Type = [IntType] int
# 1826|                 ValueCategory = lvalue
# 1826|             getRValue(): [AddExpr] ... + ...
# 1826|                 Type = [IntType] int
# 1826|                 ValueCategory = prvalue
# 1826|               getLeftOperand(): [VariableAccess] x
# 1826|                   Type = [IntType] int
# 1826|                   ValueCategory = prvalue(load)
# 1826|               getRightOperand(): [VariableAccess] z
# 1826|                   Type = [IntType] int
# 1826|                   ValueCategory = prvalue(load)
# 1825|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 1825|           Conversion = [BoolConversion] conversion to bool
# 1825|           Type = [BoolType] bool
# 1825|           ValueCategory = prvalue
# 1829|     getStmt(7): [IfStmt] if (...) ... 
# 1829|       getCondition(): [ConditionDeclExpr] (condition decl)
# 1829|           Type = [BoolType] bool
# 1829|           ValueCategory = prvalue
# 1829|         getVariableAccess(): [VariableAccess] z2
# 1829|             Type = [IntType] int
# 1829|             ValueCategory = prvalue(load)
# 1829|         getInitializingExpr(): [VariableAccess] z
# 1829|             Type = [IntType] int
# 1829|             ValueCategory = prvalue(load)
# 1829|         getVariableAccess().getFullyConverted(): [CStyleCast] (bool)...
# 1829|             Conversion = [BoolConversion] conversion to bool
# 1829|             Type = [BoolType] bool
# 1829|             ValueCategory = prvalue
# 1829|       getThen(): [BlockStmt] { ... }
# 1830|         getStmt(0): [ExprStmt] ExprStmt
# 1830|           getExpr(): [AssignAddExpr] ... += ...
# 1830|               Type = [IntType] int
# 1830|               ValueCategory = lvalue
# 1830|             getLValue(): [VariableAccess] x
# 1830|                 Type = [IntType] int
# 1830|                 ValueCategory = lvalue
# 1830|             getRValue(): [VariableAccess] z2
# 1830|                 Type = [IntType] int
# 1830|                 ValueCategory = prvalue(load)
# 1832|     getStmt(8): [ReturnStmt] return ...
# 1834| [TopLevelFunction] void switch_initialization(int)
# 1834|   <params>: 
# 1834|     getParameter(0): [Parameter] x
# 1834|         Type = [IntType] int
# 1834|   getEntryPoint(): [BlockStmt] { ... }
# 1835|     getStmt(0): [SwitchStmt] switch (...) ... 
# 1835|       getInitialization(): [DeclStmt] declaration
# 1835|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 1835|             Type = [IntType] int
# 1835|           getVariable().getInitializer(): [Initializer] initializer for y
# 1835|             getExpr(): [VariableAccess] x
# 1835|                 Type = [IntType] int
# 1835|                 ValueCategory = prvalue(load)
# 1835|       getExpr(): [AddExpr] ... + ...
# 1835|           Type = [IntType] int
# 1835|           ValueCategory = prvalue
# 1835|         getLeftOperand(): [VariableAccess] x
# 1835|             Type = [IntType] int
# 1835|             ValueCategory = prvalue(load)
# 1835|         getRightOperand(): [Literal] 1
# 1835|             Type = [IntType] int
# 1835|             Value = [Literal] 1
# 1835|             ValueCategory = prvalue
# 1835|       getStmt(): [BlockStmt] { ... }
# 1836|         getStmt(0): [SwitchCase] default: 
# 1837|         getStmt(1): [ExprStmt] ExprStmt
# 1837|           getExpr(): [AssignExpr] ... = ...
# 1837|               Type = [IntType] int
# 1837|               ValueCategory = lvalue
# 1837|             getLValue(): [VariableAccess] x
# 1837|                 Type = [IntType] int
# 1837|                 ValueCategory = lvalue
# 1837|             getRValue(): [AddExpr] ... + ...
# 1837|                 Type = [IntType] int
# 1837|                 ValueCategory = prvalue
# 1837|               getLeftOperand(): [VariableAccess] x
# 1837|                   Type = [IntType] int
# 1837|                   ValueCategory = prvalue(load)
# 1837|               getRightOperand(): [VariableAccess] y
# 1837|                   Type = [IntType] int
# 1837|                   ValueCategory = prvalue(load)
# 1840|     getStmt(1): [DeclStmt] declaration
# 1840|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of w
# 1840|           Type = [IntType] int
# 1841|     getStmt(2): [SwitchStmt] switch (...) ... 
# 1841|       getInitialization(): [ExprStmt] ExprStmt
# 1841|         getExpr(): [AssignExpr] ... = ...
# 1841|             Type = [IntType] int
# 1841|             ValueCategory = lvalue
# 1841|           getLValue(): [VariableAccess] w
# 1841|               Type = [IntType] int
# 1841|               ValueCategory = lvalue
# 1841|           getRValue(): [VariableAccess] x
# 1841|               Type = [IntType] int
# 1841|               ValueCategory = prvalue(load)
# 1841|       getExpr(): [AddExpr] ... + ...
# 1841|           Type = [IntType] int
# 1841|           ValueCategory = prvalue
# 1841|         getLeftOperand(): [VariableAccess] x
# 1841|             Type = [IntType] int
# 1841|             ValueCategory = prvalue(load)
# 1841|         getRightOperand(): [Literal] 1
# 1841|             Type = [IntType] int
# 1841|             Value = [Literal] 1
# 1841|             ValueCategory = prvalue
# 1841|       getStmt(): [BlockStmt] { ... }
# 1842|         getStmt(0): [SwitchCase] default: 
# 1843|         getStmt(1): [ExprStmt] ExprStmt
# 1843|           getExpr(): [AssignExpr] ... = ...
# 1843|               Type = [IntType] int
# 1843|               ValueCategory = lvalue
# 1843|             getLValue(): [VariableAccess] x
# 1843|                 Type = [IntType] int
# 1843|                 ValueCategory = lvalue
# 1843|             getRValue(): [AddExpr] ... + ...
# 1843|                 Type = [IntType] int
# 1843|                 ValueCategory = prvalue
# 1843|               getLeftOperand(): [VariableAccess] x
# 1843|                   Type = [IntType] int
# 1843|                   ValueCategory = prvalue(load)
# 1843|               getRightOperand(): [VariableAccess] w
# 1843|                   Type = [IntType] int
# 1843|                   ValueCategory = prvalue(load)
# 1846|     getStmt(3): [SwitchStmt] switch (...) ... 
# 1846|       getInitialization(): [ExprStmt] ExprStmt
# 1846|         getExpr(): [AssignExpr] ... = ...
# 1846|             Type = [IntType] int
# 1846|             ValueCategory = lvalue
# 1846|           getLValue(): [VariableAccess] w
# 1846|               Type = [IntType] int
# 1846|               ValueCategory = lvalue
# 1846|           getRValue(): [VariableAccess] x
# 1846|               Type = [IntType] int
# 1846|               ValueCategory = prvalue(load)
# 1846|       getExpr(): [ConditionDeclExpr] (condition decl)
# 1846|           Type = [IntType] int
# 1846|           ValueCategory = prvalue
# 1846|         getVariableAccess(): [VariableAccess] w2
# 1846|             Type = [IntType] int
# 1846|             ValueCategory = prvalue(load)
# 1846|         getInitializingExpr(): [VariableAccess] w
# 1846|             Type = [IntType] int
# 1846|             ValueCategory = prvalue(load)
# 1846|       getStmt(): [BlockStmt] { ... }
# 1847|         getStmt(0): [SwitchCase] default: 
# 1848|         getStmt(1): [ExprStmt] ExprStmt
# 1848|           getExpr(): [AssignExpr] ... = ...
# 1848|               Type = [IntType] int
# 1848|               ValueCategory = lvalue
# 1848|             getLValue(): [VariableAccess] x
# 1848|                 Type = [IntType] int
# 1848|                 ValueCategory = lvalue
# 1848|             getRValue(): [AddExpr] ... + ...
# 1848|                 Type = [IntType] int
# 1848|                 ValueCategory = prvalue
# 1848|               getLeftOperand(): [VariableAccess] x
# 1848|                   Type = [IntType] int
# 1848|                   ValueCategory = prvalue(load)
# 1848|               getRightOperand(): [VariableAccess] w
# 1848|                   Type = [IntType] int
# 1848|                   ValueCategory = prvalue(load)
# 1851|     getStmt(4): [SwitchStmt] switch (...) ... 
# 1851|       getInitialization(): [DeclStmt] declaration
# 1851|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of v
# 1851|             Type = [IntType] int
# 1851|           getVariable().getInitializer(): [Initializer] initializer for v
# 1851|             getExpr(): [VariableAccess] x
# 1851|                 Type = [IntType] int
# 1851|                 ValueCategory = prvalue(load)
# 1851|       getExpr(): [ConditionDeclExpr] (condition decl)
# 1851|           Type = [IntType] int
# 1851|           ValueCategory = prvalue
# 1851|         getVariableAccess(): [VariableAccess] v2
# 1851|             Type = [IntType] int
# 1851|             ValueCategory = prvalue(load)
# 1851|         getInitializingExpr(): [VariableAccess] v
# 1851|             Type = [IntType] int
# 1851|             ValueCategory = prvalue(load)
# 1851|       getStmt(): [BlockStmt] { ... }
# 1852|         getStmt(0): [SwitchCase] default: 
# 1853|         getStmt(1): [ExprStmt] ExprStmt
# 1853|           getExpr(): [AssignExpr] ... = ...
# 1853|               Type = [IntType] int
# 1853|               ValueCategory = lvalue
# 1853|             getLValue(): [VariableAccess] x
# 1853|                 Type = [IntType] int
# 1853|                 ValueCategory = lvalue
# 1853|             getRValue(): [AddExpr] ... + ...
# 1853|                 Type = [IntType] int
# 1853|                 ValueCategory = prvalue
# 1853|               getLeftOperand(): [VariableAccess] x
# 1853|                   Type = [IntType] int
# 1853|                   ValueCategory = prvalue(load)
# 1853|               getRightOperand(): [VariableAccess] v
# 1853|                   Type = [IntType] int
# 1853|                   ValueCategory = prvalue(load)
# 1856|     getStmt(5): [DeclStmt] declaration
# 1856|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
# 1856|           Type = [IntType] int
# 1856|         getVariable().getInitializer(): [Initializer] initializer for z
# 1856|           getExpr(): [VariableAccess] x
# 1856|               Type = [IntType] int
# 1856|               ValueCategory = prvalue(load)
# 1857|     getStmt(6): [SwitchStmt] switch (...) ... 
# 1857|       getExpr(): [VariableAccess] z
# 1857|           Type = [IntType] int
# 1857|           ValueCategory = prvalue(load)
# 1857|       getStmt(): [BlockStmt] { ... }
# 1858|         getStmt(0): [SwitchCase] default: 
# 1859|         getStmt(1): [ExprStmt] ExprStmt
# 1859|           getExpr(): [AssignExpr] ... = ...
# 1859|               Type = [IntType] int
# 1859|               ValueCategory = lvalue
# 1859|             getLValue(): [VariableAccess] x
# 1859|                 Type = [IntType] int
# 1859|                 ValueCategory = lvalue
# 1859|             getRValue(): [AddExpr] ... + ...
# 1859|                 Type = [IntType] int
# 1859|                 ValueCategory = prvalue
# 1859|               getLeftOperand(): [VariableAccess] x
# 1859|                   Type = [IntType] int
# 1859|                   ValueCategory = prvalue(load)
# 1859|               getRightOperand(): [VariableAccess] z
# 1859|                   Type = [IntType] int
# 1859|                   ValueCategory = prvalue(load)
# 1862|     getStmt(7): [SwitchStmt] switch (...) ... 
# 1862|       getExpr(): [ConditionDeclExpr] (condition decl)
# 1862|           Type = [IntType] int
# 1862|           ValueCategory = prvalue
# 1862|         getVariableAccess(): [VariableAccess] z2
# 1862|             Type = [IntType] int
# 1862|             ValueCategory = prvalue(load)
# 1862|         getInitializingExpr(): [VariableAccess] z
# 1862|             Type = [IntType] int
# 1862|             ValueCategory = prvalue(load)
# 1862|       getStmt(): [BlockStmt] { ... }
# 1863|         getStmt(0): [SwitchCase] default: 
# 1864|         getStmt(1): [ExprStmt] ExprStmt
# 1864|           getExpr(): [AssignAddExpr] ... += ...
# 1864|               Type = [IntType] int
# 1864|               ValueCategory = lvalue
# 1864|             getLValue(): [VariableAccess] x
# 1864|                 Type = [IntType] int
# 1864|                 ValueCategory = lvalue
# 1864|             getRValue(): [VariableAccess] z2
# 1864|                 Type = [IntType] int
# 1864|                 ValueCategory = prvalue(load)
# 1866|     getStmt(8): [ReturnStmt] return ...
# 1870| [GlobalVariable] int global_2
# 1870|   getInitializer(): [Initializer] initializer for global_2
# 1870|     getExpr(): [Literal] 1
# 1870|         Type = [IntType] int
# 1870|         Value = [Literal] 1
# 1870|         ValueCategory = prvalue
# 1872| [GlobalVariable] int const global_3
# 1872|   getInitializer(): [Initializer] initializer for global_3
# 1872|     getExpr(): [Literal] 2
# 1872|         Type = [IntType] int
# 1872|         Value = [Literal] 2
# 1872|         ValueCategory = prvalue
# 1874| [GlobalVariable] constructor_only global_4
# 1874|   getInitializer(): [Initializer] initializer for global_4
# 1874|     getExpr(): [ConstructorCall] call to constructor_only
# 1874|         Type = [VoidType] void
# 1874|         ValueCategory = prvalue
# 1874|       getArgument(0): [Literal] 1
# 1874|           Type = [IntType] int
# 1874|           Value = [Literal] 1
# 1874|           ValueCategory = prvalue
# 1876| [GlobalVariable] constructor_only global_5
# 1876|   getInitializer(): [Initializer] initializer for global_5
# 1876|     getExpr(): [ConstructorCall] call to constructor_only
# 1876|         Type = [VoidType] void
# 1876|         ValueCategory = prvalue
# 1876|       getArgument(0): [Literal] 2
# 1876|           Type = [IntType] int
# 1876|           Value = [Literal] 2
# 1876|           ValueCategory = prvalue
# 1878| [GlobalVariable] char* global_string
# 1878|   getInitializer(): [Initializer] initializer for global_string
# 1878|     getExpr(): global string
# 1878|         Type = [ArrayType] const char[14]
# 1878|         Value = [StringLiteral] "global string"
# 1878|         ValueCategory = lvalue
# 1878|     getExpr().getFullyConverted(): [CStyleCast] (char *)...
# 1878|         Conversion = [PointerConversion] pointer conversion
# 1878|         Type = [CharPointerType] char *
# 1878|         ValueCategory = prvalue
# 1878|       getExpr(): [ArrayToPointerConversion] array to pointer conversion
# 1878|           Type = [PointerType] const char *
# 1878|           ValueCategory = prvalue
# 1880| [GlobalVariable] int global_6
# 1880|   getInitializer(): [Initializer] initializer for global_6
# 1880|     getExpr(): [VariableAccess] global_2
# 1880|         Type = [IntType] int
# 1880|         ValueCategory = prvalue(load)
# 1883| [CopyAssignmentOperator] block_assignment::A& block_assignment::A::operator=(block_assignment::A const&)
# 1883|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const A &
# 1883| [MoveAssignmentOperator] block_assignment::A& block_assignment::A::operator=(block_assignment::A&&)
# 1883|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] A &&
#-----|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [ExprStmt] ExprStmt
#-----|       getExpr(): [BlockAssignExpr] ... = ...
#-----|           Type = [VoidType] void
#-----|           ValueCategory = prvalue
#-----|         getLValue(): [PointerFieldAccess] e
#-----|             Type = [ArrayType] enum <unnamed>[1]
#-----|             ValueCategory = lvalue
#-----|           getQualifier(): [ThisExpr] this
#-----|               Type = [PointerType] A *
#-----|               ValueCategory = prvalue(load)
#-----|         getRValue(): [ReferenceFieldAccess] e
#-----|             Type = [ArrayType] enum <unnamed>[1]
#-----|             ValueCategory = lvalue
#-----|           getQualifier(): [VariableAccess] (unnamed parameter 0)
#-----|               Type = [RValueReferenceType] A &&
#-----|               ValueCategory = prvalue(load)
#-----|           getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|               Type = [Class] A
#-----|               ValueCategory = lvalue
#-----|     getStmt(1): [ReturnStmt] return ...
#-----|       getExpr(): [PointerDereferenceExpr] * ...
#-----|           Type = [Class] A
#-----|           ValueCategory = lvalue
#-----|         getOperand(): [ThisExpr] this
#-----|             Type = [PointerType] A *
#-----|             ValueCategory = prvalue(load)
#-----|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|           Type = [LValueReferenceType] A &
#-----|           ValueCategory = prvalue
# 1883| [Constructor] void block_assignment::A::A()
# 1883|   <params>: 
# 1883| [CopyConstructor] void block_assignment::A::A(block_assignment::A const&)
# 1883|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const A &
# 1883| [MoveConstructor] void block_assignment::A::A(block_assignment::A&&)
# 1883|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] A &&
# 1885| [VirtualFunction] void block_assignment::A::f()
# 1885|   <params>: 
# 1888| [CopyAssignmentOperator] block_assignment::B& block_assignment::B::operator=(block_assignment::B const&)
# 1888|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const B &
# 1888| [MoveAssignmentOperator] block_assignment::B& block_assignment::B::operator=(block_assignment::B&&)
# 1888|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] B &&
#-----|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [ExprStmt] ExprStmt
# 1888|       getExpr(): [FunctionCall] call to operator=
# 1888|           Type = [LValueReferenceType] A &
# 1888|           ValueCategory = prvalue
# 1888|         getQualifier(): [ThisExpr] this
# 1888|             Type = [PointerType] B *
# 1888|             ValueCategory = prvalue(load)
# 1888|         getArgument(0): [PointerDereferenceExpr] * ...
# 1888|             Type = [Class] A
# 1888|             ValueCategory = xvalue
# 1888|           getOperand(): [AddressOfExpr] & ...
# 1888|               Type = [PointerType] B *
# 1888|               ValueCategory = prvalue
# 1888|             getOperand(): [VariableAccess] (unnamed parameter 0)
# 1888|                 Type = [RValueReferenceType] B &&
# 1888|                 ValueCategory = prvalue(load)
#-----|             getOperand().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                 Type = [Struct] B
#-----|                 ValueCategory = lvalue
#-----|           getOperand().getFullyConverted(): [CStyleCast] (A *)...
#-----|               Conversion = [BaseClassConversion] base class conversion
#-----|               Type = [PointerType] A *
#-----|               ValueCategory = prvalue
#-----|         getQualifier().getFullyConverted(): [CStyleCast] (A *)...
#-----|             Conversion = [BaseClassConversion] base class conversion
#-----|             Type = [PointerType] A *
#-----|             ValueCategory = prvalue
#-----|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|             Type = [LValueReferenceType] A &
#-----|             ValueCategory = prvalue
#-----|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
#-----|           Type = [Class] A
#-----|           ValueCategory = lvalue
#-----|     getStmt(1): [ReturnStmt] return ...
#-----|       getExpr(): [PointerDereferenceExpr] * ...
#-----|           Type = [Struct] B
#-----|           ValueCategory = lvalue
#-----|         getOperand(): [ThisExpr] this
#-----|             Type = [PointerType] B *
#-----|             ValueCategory = prvalue(load)
#-----|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|           Type = [LValueReferenceType] B &
#-----|           ValueCategory = prvalue
# 1888| [CopyConstructor] void block_assignment::B::B(block_assignment::B const&)
# 1888|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const B &
# 1888| [MoveConstructor] void block_assignment::B::B(block_assignment::B&&)
# 1888|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] B &&
# 1889| [Constructor] void block_assignment::B::B(block_assignment::A*)
# 1889|   <params>: 
# 1889|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1889|         Type = [PointerType] A *
# 1892| [TopLevelFunction] void block_assignment::foo()
# 1892|   <params>: 
# 1892|   getEntryPoint(): [BlockStmt] { ... }
# 1893|     getStmt(0): [DeclStmt] declaration
# 1893|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of v
# 1893|           Type = [Struct] B
# 1893|         getVariable().getInitializer(): [Initializer] initializer for v
# 1893|           getExpr(): [ConstructorCall] call to B
# 1893|               Type = [VoidType] void
# 1893|               ValueCategory = prvalue
# 1893|             getArgument(0): [Literal] 0
# 1893|                 Type = [IntType] int
# 1893|                 Value = [Literal] 0
# 1893|                 ValueCategory = prvalue
# 1893|             getArgument(0).getFullyConverted(): [CStyleCast] (A *)...
# 1893|                 Conversion = [IntegralToPointerConversion] integral to pointer conversion
# 1893|                 Type = [PointerType] A *
# 1893|                 Value = [CStyleCast] 0
# 1893|                 ValueCategory = prvalue
# 1894|     getStmt(1): [ExprStmt] ExprStmt
# 1894|       getExpr(): [FunctionCall] call to operator=
# 1894|           Type = [LValueReferenceType] B &
# 1894|           ValueCategory = prvalue
# 1894|         getQualifier(): [VariableAccess] v
# 1894|             Type = [Struct] B
# 1894|             ValueCategory = lvalue
# 1894|         getArgument(0): [ConstructorCall] call to B
# 1894|             Type = [VoidType] void
# 1894|             ValueCategory = prvalue
# 1894|           getArgument(0): [Literal] 0
# 1894|               Type = [IntType] int
# 1894|               Value = [Literal] 0
# 1894|               ValueCategory = prvalue
# 1894|           getArgument(0).getFullyConverted(): [CStyleCast] (A *)...
# 1894|               Conversion = [IntegralToPointerConversion] integral to pointer conversion
# 1894|               Type = [PointerType] A *
# 1894|               Value = [CStyleCast] 0
# 1894|               ValueCategory = prvalue
# 1894|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 1894|             Type = [LValueReferenceType] B &
# 1894|             ValueCategory = prvalue
# 1894|           getExpr(): [TemporaryObjectExpr] temporary object
# 1894|               Type = [Struct] B
# 1894|               ValueCategory = lvalue
# 1894|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 1894|           Type = [Struct] B
# 1894|           ValueCategory = lvalue
# 1895|     getStmt(2): [ReturnStmt] return ...
# 1898| [TopLevelFunction] void magicvars()
# 1898|   <params>: 
# 1898|   getEntryPoint(): [BlockStmt] { ... }
# 1899|     getStmt(0): [DeclStmt] declaration
# 1899|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pf
# 1899|           Type = [PointerType] const char *
# 1899|         getVariable().getInitializer(): [Initializer] initializer for pf
# 1899|           getExpr(): [VariableAccess] __PRETTY_FUNCTION__
# 1899|               Type = [ArrayType] const char[17]
# 1899|               ValueCategory = lvalue
# 1899|           getExpr().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1899|               Type = [PointerType] const char *
# 1899|               ValueCategory = prvalue
# 1900|     getStmt(1): [DeclStmt] declaration
# 1900|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of strfunc
# 1900|           Type = [PointerType] const char *
# 1900|         getVariable().getInitializer(): [Initializer] initializer for strfunc
# 1900|           getExpr(): [VariableAccess] __func__
# 1900|               Type = [ArrayType] const char[10]
# 1900|               ValueCategory = lvalue
# 1900|           getExpr().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1900|               Type = [PointerType] const char *
# 1900|               ValueCategory = prvalue
# 1901|     getStmt(2): [ReturnStmt] return ...
# 1904| [CopyAssignmentOperator] missing_declaration_entries::S& missing_declaration_entries::S::operator=(missing_declaration_entries::S const&)
# 1904|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const S &
# 1904| [MoveAssignmentOperator] missing_declaration_entries::S& missing_declaration_entries::S::operator=(missing_declaration_entries::S&&)
# 1904|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] S &&
# 1911| [MemberFunction] void* missing_declaration_entries::Bar1<T>::missing_type_decl_entry(missing_declaration_entries::Bar1<T>::pointer)
# 1911|   <params>: 
# 1911|     getParameter(0): [Parameter] p
# 1911|         Type = [CTypedefType,NestedTypedefType] pointer
# 1911|   getEntryPoint(): [BlockStmt] { ... }
# 1912|     getStmt(0): [DeclStmt] declaration
# 1912|       getDeclarationEntry(0): [TypeDeclarationEntry] declaration of _Res
# 1912|           Type = [CTypedefType,LocalTypedefType] _Res
# 1913|     getStmt(1): [ReturnStmt] return ...
# 1913|       getExpr(): [VariableAccess] p
# 1913|           Type = [CTypedefType,NestedTypedefType] pointer
# 1913|           ValueCategory = prvalue(load)
# 1913|       getExpr().getFullyConverted(): [CStyleCast] (void *)...
# 1913|           Conversion = [PointerConversion] pointer conversion
# 1913|           Type = [VoidPointerType] void *
# 1913|           ValueCategory = prvalue
# 1911| [MemberFunction] void* missing_declaration_entries::Bar1<int>::missing_type_decl_entry(missing_declaration_entries::Bar1<int>::pointer)
# 1911|   <params>: 
# 1911|     getParameter(0): [Parameter] p
# 1911|         Type = [CTypedefType,NestedTypedefType] pointer
# 1911|   getEntryPoint(): [BlockStmt] { ... }
# 1912|     getStmt(0): [DeclStmt] declaration
# 1912|       getDeclarationEntry(0): [TypeDeclarationEntry] declaration of _Res
# 1912|           Type = [CTypedefType,LocalTypedefType] _Res
# 1913|     getStmt(1): [ReturnStmt] return ...
# 1913|       getExpr(): [VariableAccess] p
# 1913|           Type = [CTypedefType,NestedTypedefType] pointer
# 1913|           ValueCategory = prvalue(load)
# 1913|       getExpr().getFullyConverted(): [CStyleCast] (void *)...
# 1913|           Conversion = [PointerConversion] pointer conversion
# 1913|           Type = [VoidPointerType] void *
# 1913|           ValueCategory = prvalue
# 1917| [TopLevelFunction] void missing_declaration_entries::test1()
# 1917|   <params>: 
# 1917|   getEntryPoint(): [BlockStmt] { ... }
# 1918|     getStmt(0): [DeclStmt] declaration
# 1918|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
# 1918|           Type = [ClassTemplateInstantiation,Struct] Bar1<int>
# 1919|     getStmt(1): [ExprStmt] ExprStmt
# 1919|       getExpr(): [FunctionCall] call to missing_type_decl_entry
# 1919|           Type = [VoidPointerType] void *
# 1919|           ValueCategory = prvalue
# 1919|         getQualifier(): [VariableAccess] b
# 1919|             Type = [ClassTemplateInstantiation,Struct] Bar1<int>
# 1919|             ValueCategory = lvalue
# 1919|         getArgument(0): [Literal] 0
# 1919|             Type = [NullPointerType] decltype(nullptr)
# 1919|             Value = [Literal] 0
# 1919|             ValueCategory = prvalue
# 1919|         getArgument(0).getFullyConverted(): [CStyleCast] (pointer)...
# 1919|             Conversion = [PointerConversion] pointer conversion
# 1919|             Type = [CTypedefType,NestedTypedefType] pointer
# 1919|             Value = [CStyleCast] 0
# 1919|             ValueCategory = prvalue
# 1920|     getStmt(2): [ReturnStmt] return ...
# 1924| [MemberFunction] int missing_declaration_entries::Bar2<T>::two_missing_variable_declaration_entries()
# 1924|   <params>: 
# 1924|   getEntryPoint(): [BlockStmt] { ... }
# 1925|     getStmt(0): [DeclStmt] declaration
# 1925|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 1925|           Type = [ArrayType] int[10]
# 1925|       getDeclarationEntry(1): [VariableDeclarationEntry] definition of y
# 1925|           Type = [ArrayType] int[10]
# 1926|     getStmt(1): [ExprStmt] ExprStmt
# 1926|       getExpr(): [AssignExpr] ... = ...
# 1926|           Type = [IntType] int
# 1926|           ValueCategory = lvalue
# 1926|         getLValue(): [PointerDereferenceExpr] * ...
# 1926|             Type = [IntType] int
# 1926|             ValueCategory = lvalue
# 1926|           getOperand(): [VariableAccess] x
# 1926|               Type = [ArrayType] int[10]
# 1926|               ValueCategory = lvalue
# 1926|           getOperand().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1926|               Type = [IntPointerType] int *
# 1926|               ValueCategory = prvalue
# 1926|         getRValue(): [Literal] 10
# 1926|             Type = [IntType] int
# 1926|             Value = [Literal] 10
# 1926|             ValueCategory = prvalue
# 1927|     getStmt(2): [ExprStmt] ExprStmt
# 1927|       getExpr(): [AssignExpr] ... = ...
# 1927|           Type = [IntType] int
# 1927|           ValueCategory = lvalue
# 1927|         getLValue(): [PointerDereferenceExpr] * ...
# 1927|             Type = [IntType] int
# 1927|             ValueCategory = lvalue
# 1927|           getOperand(): [VariableAccess] y
# 1927|               Type = [ArrayType] int[10]
# 1927|               ValueCategory = lvalue
# 1927|           getOperand().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1927|               Type = [IntPointerType] int *
# 1927|               ValueCategory = prvalue
# 1927|         getRValue(): [Literal] 10
# 1927|             Type = [IntType] int
# 1927|             Value = [Literal] 10
# 1927|             ValueCategory = prvalue
# 1928|     getStmt(3): [ReturnStmt] return ...
# 1928|       getExpr(): [AddExpr] ... + ...
# 1928|           Type = [IntType] int
# 1928|           ValueCategory = prvalue
# 1928|         getLeftOperand(): [PointerDereferenceExpr] * ...
# 1928|             Type = [IntType] int
# 1928|             ValueCategory = prvalue(load)
# 1928|           getOperand(): [VariableAccess] x
# 1928|               Type = [ArrayType] int[10]
# 1928|               ValueCategory = lvalue
# 1928|           getOperand().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1928|               Type = [IntPointerType] int *
# 1928|               ValueCategory = prvalue
# 1928|         getRightOperand(): [PointerDereferenceExpr] * ...
# 1928|             Type = [IntType] int
# 1928|             ValueCategory = prvalue(load)
# 1928|           getOperand(): [VariableAccess] y
# 1928|               Type = [ArrayType] int[10]
# 1928|               ValueCategory = lvalue
# 1928|           getOperand().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1928|               Type = [IntPointerType] int *
# 1928|               ValueCategory = prvalue
# 1924| [MemberFunction] int missing_declaration_entries::Bar2<int>::two_missing_variable_declaration_entries()
# 1924|   <params>: 
# 1924|   getEntryPoint(): [BlockStmt] { ... }
# 1925|     getStmt(0): [DeclStmt] declaration
# 1925|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 1925|           Type = [ArrayType] int[10]
# 1925|       getDeclarationEntry(1): [VariableDeclarationEntry] definition of y
# 1925|           Type = [ArrayType] int[10]
# 1926|     getStmt(1): [ExprStmt] ExprStmt
# 1926|       getExpr(): [AssignExpr] ... = ...
# 1926|           Type = [IntType] int
# 1926|           ValueCategory = lvalue
# 1926|         getLValue(): [PointerDereferenceExpr] * ...
# 1926|             Type = [IntType] int
# 1926|             ValueCategory = lvalue
# 1926|           getOperand(): [VariableAccess] x
# 1926|               Type = [ArrayType] int[10]
# 1926|               ValueCategory = lvalue
# 1926|           getOperand().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1926|               Type = [IntPointerType] int *
# 1926|               ValueCategory = prvalue
# 1926|         getRValue(): [Literal] 10
# 1926|             Type = [IntType] int
# 1926|             Value = [Literal] 10
# 1926|             ValueCategory = prvalue
# 1927|     getStmt(2): [ExprStmt] ExprStmt
# 1927|       getExpr(): [AssignExpr] ... = ...
# 1927|           Type = [IntType] int
# 1927|           ValueCategory = lvalue
# 1927|         getLValue(): [PointerDereferenceExpr] * ...
# 1927|             Type = [IntType] int
# 1927|             ValueCategory = lvalue
# 1927|           getOperand(): [VariableAccess] y
# 1927|               Type = [ArrayType] int[10]
# 1927|               ValueCategory = lvalue
# 1927|           getOperand().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1927|               Type = [IntPointerType] int *
# 1927|               ValueCategory = prvalue
# 1927|         getRValue(): [Literal] 10
# 1927|             Type = [IntType] int
# 1927|             Value = [Literal] 10
# 1927|             ValueCategory = prvalue
# 1928|     getStmt(3): [ReturnStmt] return ...
# 1928|       getExpr(): [AddExpr] ... + ...
# 1928|           Type = [IntType] int
# 1928|           ValueCategory = prvalue
# 1928|         getLeftOperand(): [PointerDereferenceExpr] * ...
# 1928|             Type = [IntType] int
# 1928|             ValueCategory = prvalue(load)
# 1928|           getOperand(): [VariableAccess] x
# 1928|               Type = [ArrayType] int[10]
# 1928|               ValueCategory = lvalue
# 1928|           getOperand().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1928|               Type = [IntPointerType] int *
# 1928|               ValueCategory = prvalue
# 1928|         getRightOperand(): [PointerDereferenceExpr] * ...
# 1928|             Type = [IntType] int
# 1928|             ValueCategory = prvalue(load)
# 1928|           getOperand(): [VariableAccess] y
# 1928|               Type = [ArrayType] int[10]
# 1928|               ValueCategory = lvalue
# 1928|           getOperand().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 1928|               Type = [IntPointerType] int *
# 1928|               ValueCategory = prvalue
# 1932| [TopLevelFunction] void missing_declaration_entries::test2()
# 1932|   <params>: 
# 1932|   getEntryPoint(): [BlockStmt] { ... }
# 1933|     getStmt(0): [DeclStmt] declaration
# 1933|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
# 1933|           Type = [ClassTemplateInstantiation,Struct] Bar2<int>
# 1934|     getStmt(1): [ExprStmt] ExprStmt
# 1934|       getExpr(): [FunctionCall] call to two_missing_variable_declaration_entries
# 1934|           Type = [IntType] int
# 1934|           ValueCategory = prvalue
# 1934|         getQualifier(): [VariableAccess] b
# 1934|             Type = [ClassTemplateInstantiation,Struct] Bar2<int>
# 1934|             ValueCategory = lvalue
# 1935|     getStmt(2): [ReturnStmt] return ...
# 1939| [MemberFunction] int missing_declaration_entries::Bar3<T>::two_more_missing_variable_declaration_entries()
# 1939|   <params>: 
# 1939|   getEntryPoint(): [BlockStmt] { ... }
# 1940|     getStmt(0): [DeclStmt] declaration
# 1940|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of g
# 1940|           Type = [IntType] int
# 1941|     getStmt(1): [DeclStmt] declaration
# 1941|       getDeclarationEntry(0): [FunctionDeclarationEntry] declaration of z
# 1941|           Type = [IntType] int
# 1942|     getStmt(2): [ReturnStmt] return ...
# 1942|       getExpr(): [VariableAccess] g
# 1942|           Type = [IntType] int
# 1942|           ValueCategory = prvalue(load)
# 1939| [MemberFunction] int missing_declaration_entries::Bar3<int>::two_more_missing_variable_declaration_entries()
# 1939|   <params>: 
# 1939|   getEntryPoint(): [BlockStmt] { ... }
# 1940|     getStmt(0): [DeclStmt] declaration
# 1940|       getDeclarationEntry(0): [VariableDeclarationEntry] declaration of g
# 1940|           Type = [IntType] int
# 1941|     getStmt(1): [DeclStmt] declaration
# 1941|       getDeclarationEntry(0): [FunctionDeclarationEntry] declaration of z
# 1941|           Type = [IntType] int
# 1942|     getStmt(2): [ReturnStmt] return ...
# 1942|       getExpr(): [VariableAccess] g
# 1942|           Type = [IntType] int
# 1942|           ValueCategory = prvalue(load)
# 1941| [TopLevelFunction] int missing_declaration_entries::z(float)
# 1941|   <params>: 
# 1941|     getParameter(0): [Parameter] (unnamed parameter 0)
# 1941|         Type = [FloatType] float
# 1946| [TopLevelFunction] void missing_declaration_entries::test3()
# 1946|   <params>: 
# 1946|   getEntryPoint(): [BlockStmt] { ... }
# 1947|     getStmt(0): [DeclStmt] declaration
# 1947|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
# 1947|           Type = [ClassTemplateInstantiation,Struct] Bar3<int>
# 1948|     getStmt(1): [ExprStmt] ExprStmt
# 1948|       getExpr(): [FunctionCall] call to two_more_missing_variable_declaration_entries
# 1948|           Type = [IntType] int
# 1948|           ValueCategory = prvalue
# 1948|         getQualifier(): [VariableAccess] b
# 1948|             Type = [ClassTemplateInstantiation,Struct] Bar3<int>
# 1948|             ValueCategory = lvalue
# 1949|     getStmt(2): [ReturnStmt] return ...
# 1952| [GlobalVariable,VariableTemplateInstantiation] char global_template<char>
# 1952|   getInitializer(): [Initializer] initializer for global_template
# 1952|     getExpr(): [Literal] 42
# 1952|         Type = [IntType] int
# 1952|         Value = [Literal] 42
# 1952|         ValueCategory = prvalue
# 1952|     getExpr().getFullyConverted(): [CStyleCast] (char)...
# 1952|         Conversion = [IntegralConversion] integral conversion
# 1952|         Type = [PlainCharType] char
# 1952|         Value = [CStyleCast] 42
# 1952|         ValueCategory = prvalue
# 1952| [GlobalVariable,VariableTemplateInstantiation] int global_template<int>
# 1952|   getInitializer(): [Initializer] initializer for global_template
# 1952|     getExpr(): [Literal] 42
# 1952|         Type = [IntType] int
# 1952|         Value = [Literal] 42
# 1952|         ValueCategory = prvalue
# 1954| [TopLevelFunction] int test_global_template_int()
# 1954|   <params>: 
# 1954|   getEntryPoint(): [BlockStmt] { ... }
# 1955|     getStmt(0): [DeclStmt] declaration
# 1955|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of local_int
# 1955|           Type = [IntType] int
# 1955|         getVariable().getInitializer(): [Initializer] initializer for local_int
# 1955|           getExpr(): [VariableAccess] global_template
# 1955|               Type = [IntType] int
# 1955|               ValueCategory = prvalue(load)
# 1956|     getStmt(1): [DeclStmt] declaration
# 1956|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of local_char
# 1956|           Type = [PlainCharType] char
# 1956|         getVariable().getInitializer(): [Initializer] initializer for local_char
# 1956|           getExpr(): [VariableAccess] global_template
# 1956|               Type = [PlainCharType] char
# 1956|               ValueCategory = prvalue(load)
# 1957|     getStmt(2): [ReturnStmt] return ...
# 1957|       getExpr(): [AddExpr] ... + ...
# 1957|           Type = [IntType] int
# 1957|           ValueCategory = prvalue
# 1957|         getLeftOperand(): [VariableAccess] local_int
# 1957|             Type = [IntType] int
# 1957|             ValueCategory = prvalue(load)
# 1957|         getRightOperand(): [VariableAccess] local_char
# 1957|             Type = [PlainCharType] char
# 1957|             ValueCategory = prvalue(load)
# 1957|         getRightOperand().getFullyConverted(): [CStyleCast] (int)...
# 1957|             Conversion = [IntegralConversion] integral conversion
# 1957|             Type = [IntType] int
# 1957|             ValueCategory = prvalue
# 1960| [TopLevelFunction] void noreturnFunc()
# 1960|   <params>: 
# 1962| [TopLevelFunction] int noreturnTest(int)
# 1962|   <params>: 
# 1962|     getParameter(0): [Parameter] x
# 1962|         Type = [IntType] int
# 1962|   getEntryPoint(): [BlockStmt] { ... }
# 1963|     getStmt(0): [IfStmt] if (...) ... 
# 1963|       getCondition(): [LTExpr] ... < ...
# 1963|           Type = [BoolType] bool
# 1963|           ValueCategory = prvalue
# 1963|         getLesserOperand(): [VariableAccess] x
# 1963|             Type = [IntType] int
# 1963|             ValueCategory = prvalue(load)
# 1963|         getGreaterOperand(): [Literal] 10
# 1963|             Type = [IntType] int
# 1963|             Value = [Literal] 10
# 1963|             ValueCategory = prvalue
# 1963|       getThen(): [BlockStmt] { ... }
# 1964|         getStmt(0): [ReturnStmt] return ...
# 1964|           getExpr(): [VariableAccess] x
# 1964|               Type = [IntType] int
# 1964|               ValueCategory = prvalue(load)
# 1965|       getElse(): [BlockStmt] { ... }
# 1966|         getStmt(0): [ExprStmt] ExprStmt
# 1966|           getExpr(): [FunctionCall] call to noreturnFunc
# 1966|               Type = [VoidType] void
# 1966|               ValueCategory = prvalue
# 1968|     getStmt(1): [ReturnStmt] return ...
# 1970| [TopLevelFunction] int noreturnTest2(int)
# 1970|   <params>: 
# 1970|     getParameter(0): [Parameter] x
# 1970|         Type = [IntType] int
# 1970|   getEntryPoint(): [BlockStmt] { ... }
# 1971|     getStmt(0): [IfStmt] if (...) ... 
# 1971|       getCondition(): [LTExpr] ... < ...
# 1971|           Type = [BoolType] bool
# 1971|           ValueCategory = prvalue
# 1971|         getLesserOperand(): [VariableAccess] x
# 1971|             Type = [IntType] int
# 1971|             ValueCategory = prvalue(load)
# 1971|         getGreaterOperand(): [Literal] 10
# 1971|             Type = [IntType] int
# 1971|             Value = [Literal] 10
# 1971|             ValueCategory = prvalue
# 1971|       getThen(): [BlockStmt] { ... }
# 1972|         getStmt(0): [ExprStmt] ExprStmt
# 1972|           getExpr(): [FunctionCall] call to noreturnFunc
# 1972|               Type = [VoidType] void
# 1972|               ValueCategory = prvalue
# 1974|     getStmt(1): [ReturnStmt] return ...
# 1974|       getExpr(): [VariableAccess] x
# 1974|           Type = [IntType] int
# 1974|           ValueCategory = prvalue(load)
# 1977| [TopLevelFunction] int static_function(int)
# 1977|   <params>: 
# 1977|     getParameter(0): [Parameter] x
# 1977|         Type = [IntType] int
# 1977|   getEntryPoint(): [BlockStmt] { ... }
# 1978|     getStmt(0): [ReturnStmt] return ...
# 1978|       getExpr(): [VariableAccess] x
# 1978|           Type = [IntType] int
# 1978|           ValueCategory = prvalue(load)
# 1981| [TopLevelFunction] void test_static_functions_with_assignments()
# 1981|   <params>: 
# 1981|   getEntryPoint(): [BlockStmt] { ... }
# 1982|     getStmt(0): [DeclStmt] declaration
# 1982|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
# 1982|           Type = [Class] C
# 1982|         getVariable().getInitializer(): [Initializer] initializer for c
# 1982|           getExpr(): [ConstructorCall] call to C
# 1982|               Type = [VoidType] void
# 1982|               ValueCategory = prvalue
# 1983|     getStmt(1): [DeclStmt] declaration
# 1983|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 1983|           Type = [IntType] int
# 1984|     getStmt(2): [ExprStmt] ExprStmt
# 1984|       getExpr(): [AssignExpr] ... = ...
# 1984|           Type = [IntType] int
# 1984|           ValueCategory = lvalue
# 1984|         getLValue(): [VariableAccess] x
# 1984|             Type = [IntType] int
# 1984|             ValueCategory = lvalue
# 1984|         getRValue(): [FunctionCall] call to StaticMemberFunction
# 1984|             Type = [IntType] int
# 1984|             ValueCategory = prvalue
# 1984|           getQualifier(): [VariableAccess] c
# 1984|               Type = [Class] C
# 1984|               ValueCategory = lvalue
# 1984|           getArgument(0): [Literal] 10
# 1984|               Type = [IntType] int
# 1984|               Value = [Literal] 10
# 1984|               ValueCategory = prvalue
# 1985|     getStmt(3): [DeclStmt] declaration
# 1985|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 1985|           Type = [IntType] int
# 1986|     getStmt(4): [ExprStmt] ExprStmt
# 1986|       getExpr(): [AssignExpr] ... = ...
# 1986|           Type = [IntType] int
# 1986|           ValueCategory = lvalue
# 1986|         getLValue(): [VariableAccess] y
# 1986|             Type = [IntType] int
# 1986|             ValueCategory = lvalue
# 1986|         getRValue(): [FunctionCall] call to StaticMemberFunction
# 1986|             Type = [IntType] int
# 1986|             ValueCategory = prvalue
# 1986|           getArgument(0): [Literal] 10
# 1986|               Type = [IntType] int
# 1986|               Value = [Literal] 10
# 1986|               ValueCategory = prvalue
# 1987|     getStmt(5): [DeclStmt] declaration
# 1987|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
# 1987|           Type = [IntType] int
# 1988|     getStmt(6): [ExprStmt] ExprStmt
# 1988|       getExpr(): [AssignExpr] ... = ...
# 1988|           Type = [IntType] int
# 1988|           ValueCategory = lvalue
# 1988|         getLValue(): [VariableAccess] z
# 1988|             Type = [IntType] int
# 1988|             ValueCategory = lvalue
# 1988|         getRValue(): [FunctionCall] call to static_function
# 1988|             Type = [IntType] int
# 1988|             ValueCategory = prvalue
# 1988|           getArgument(0): [Literal] 10
# 1988|               Type = [IntType] int
# 1988|               Value = [Literal] 10
# 1988|               ValueCategory = prvalue
# 1989|     getStmt(7): [ReturnStmt] return ...
# 1989|       getImplicitDestructorCall(0): [DestructorCall] call to ~C
# 1989|           Type = [VoidType] void
# 1989|           ValueCategory = prvalue
# 1989|         getQualifier(): [VariableAccess] c
# 1989|             Type = [Class] C
# 1989|             ValueCategory = lvalue
# 1991| [TopLevelFunction] void test_double_assign()
# 1991|   <params>: 
# 1991|   getEntryPoint(): [BlockStmt] { ... }
# 1992|     getStmt(0): [DeclStmt] declaration
# 1992|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
# 1992|           Type = [IntType] int
# 1992|       getDeclarationEntry(1): [VariableDeclarationEntry] definition of j
# 1992|           Type = [IntType] int
# 1993|     getStmt(1): [ExprStmt] ExprStmt
# 1993|       getExpr(): [AssignExpr] ... = ...
# 1993|           Type = [IntType] int
# 1993|           ValueCategory = lvalue
# 1993|         getLValue(): [VariableAccess] i
# 1993|             Type = [IntType] int
# 1993|             ValueCategory = lvalue
# 1993|         getRValue(): [AssignExpr] ... = ...
# 1993|             Type = [IntType] int
# 1993|             ValueCategory = prvalue(load)
# 1993|           getLValue(): [VariableAccess] j
# 1993|               Type = [IntType] int
# 1993|               ValueCategory = lvalue
# 1993|           getRValue(): [Literal] 40
# 1993|               Type = [IntType] int
# 1993|               Value = [Literal] 40
# 1993|               ValueCategory = prvalue
# 1994|     getStmt(2): [ReturnStmt] return ...
# 1996| [TopLevelFunction] void test_assign_with_assign_operation()
# 1996|   <params>: 
# 1996|   getEntryPoint(): [BlockStmt] { ... }
# 1997|     getStmt(0): [DeclStmt] declaration
# 1997|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
# 1997|           Type = [IntType] int
# 1997|       getDeclarationEntry(1): [VariableDeclarationEntry] definition of j
# 1997|           Type = [IntType] int
# 1997|         getVariable().getInitializer(): [Initializer] initializer for j
# 1997|           getExpr(): [Literal] 0
# 1997|               Type = [IntType] int
# 1997|               Value = [Literal] 0
# 1997|               ValueCategory = prvalue
# 1998|     getStmt(1): [ExprStmt] ExprStmt
# 1998|       getExpr(): [AssignExpr] ... = ...
# 1998|           Type = [IntType] int
# 1998|           ValueCategory = lvalue
# 1998|         getLValue(): [VariableAccess] i
# 1998|             Type = [IntType] int
# 1998|             ValueCategory = lvalue
# 1998|         getRValue(): [AssignAddExpr] ... += ...
# 1998|             Type = [IntType] int
# 1998|             ValueCategory = prvalue(load)
# 1998|           getLValue(): [VariableAccess] j
# 1998|               Type = [IntType] int
# 1998|               ValueCategory = lvalue
# 1998|           getRValue(): [Literal] 40
# 1998|               Type = [IntType] int
# 1998|               Value = [Literal] 40
# 1998|               ValueCategory = prvalue
# 1998|         getRValue().getFullyConverted(): [ParenthesisExpr] (...)
# 1998|             Type = [IntType] int
# 1998|             ValueCategory = prvalue(load)
# 1999|     getStmt(2): [ReturnStmt] return ...
# 2001| [CopyAssignmentOperator] D& D::operator=(D const&)
# 2001|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const D &
# 2001| [MoveAssignmentOperator] D& D::operator=(D&&)
# 2001|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] D &&
# 2005| [MemberFunction] D& D::ReferenceStaticMemberFunction()
# 2005|   <params>: 
# 2005|   getEntryPoint(): [BlockStmt] { ... }
# 2006|     getStmt(0): [ReturnStmt] return ...
# 2006|       getExpr(): [VariableAccess] x
# 2006|           Type = [Class] D
# 2006|           ValueCategory = lvalue
# 2006|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 2006|           Type = [LValueReferenceType] D &
# 2006|           ValueCategory = prvalue
# 2008| [MemberFunction] D D::ObjectStaticMemberFunction()
# 2008|   <params>: 
# 2008|   getEntryPoint(): [BlockStmt] { ... }
# 2009|     getStmt(0): [ReturnStmt] return ...
# 2009|       getExpr(): [VariableAccess] x
# 2009|           Type = [Class] D
# 2009|           ValueCategory = prvalue(load)
# 2013| [TopLevelFunction] void test_static_member_functions_with_reference_return()
# 2013|   <params>: 
# 2013|   getEntryPoint(): [BlockStmt] { ... }
# 2014|     getStmt(0): [DeclStmt] declaration
# 2014|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
# 2014|           Type = [Class] D
# 2016|     getStmt(1): [ExprStmt] ExprStmt
# 2016|       getExpr(): [FunctionCall] call to ReferenceStaticMemberFunction
# 2016|           Type = [LValueReferenceType] D &
# 2016|           ValueCategory = prvalue
# 2016|         getQualifier(): [VariableAccess] d
# 2016|             Type = [Class] D
# 2016|             ValueCategory = lvalue
# 2016|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2016|           Type = [Class] D
# 2016|           ValueCategory = lvalue
# 2017|     getStmt(2): [ExprStmt] ExprStmt
# 2017|       getExpr(): [FunctionCall] call to ReferenceStaticMemberFunction
# 2017|           Type = [LValueReferenceType] D &
# 2017|           ValueCategory = prvalue
# 2017|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2017|           Type = [Class] D
# 2017|           ValueCategory = lvalue
# 2018|     getStmt(3): [ExprStmt] ExprStmt
# 2018|       getExpr(): [FunctionCall] call to ObjectStaticMemberFunction
# 2018|           Type = [Class] D
# 2018|           ValueCategory = prvalue
# 2018|         getQualifier(): [VariableAccess] d
# 2018|             Type = [Class] D
# 2018|             ValueCategory = lvalue
# 2019|     getStmt(4): [ExprStmt] ExprStmt
# 2019|       getExpr(): [FunctionCall] call to ObjectStaticMemberFunction
# 2019|           Type = [Class] D
# 2019|           ValueCategory = prvalue
# 2021|     getStmt(5): [DeclStmt] declaration
# 2021|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2021|           Type = [Class] D
# 2022|     getStmt(6): [ExprStmt] ExprStmt
# 2022|       getExpr(): [AssignExpr] ... = ...
# 2022|           Type = [Class] D
# 2022|           ValueCategory = lvalue
# 2022|         getLValue(): [VariableAccess] x
# 2022|             Type = [Class] D
# 2022|             ValueCategory = lvalue
# 2022|         getRValue(): [FunctionCall] call to ReferenceStaticMemberFunction
# 2022|             Type = [LValueReferenceType] D &
# 2022|             ValueCategory = prvalue
# 2022|           getQualifier(): [VariableAccess] d
# 2022|               Type = [Class] D
# 2022|               ValueCategory = lvalue
# 2022|         getRValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2022|             Type = [Class] D
# 2022|             ValueCategory = prvalue(load)
# 2023|     getStmt(7): [DeclStmt] declaration
# 2023|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 2023|           Type = [Class] D
# 2024|     getStmt(8): [ExprStmt] ExprStmt
# 2024|       getExpr(): [AssignExpr] ... = ...
# 2024|           Type = [Class] D
# 2024|           ValueCategory = lvalue
# 2024|         getLValue(): [VariableAccess] y
# 2024|             Type = [Class] D
# 2024|             ValueCategory = lvalue
# 2024|         getRValue(): [FunctionCall] call to ReferenceStaticMemberFunction
# 2024|             Type = [LValueReferenceType] D &
# 2024|             ValueCategory = prvalue
# 2024|         getRValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2024|             Type = [Class] D
# 2024|             ValueCategory = prvalue(load)
# 2025|     getStmt(9): [DeclStmt] declaration
# 2025|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of j
# 2025|           Type = [Class] D
# 2026|     getStmt(10): [ExprStmt] ExprStmt
# 2026|       getExpr(): [AssignExpr] ... = ...
# 2026|           Type = [Class] D
# 2026|           ValueCategory = lvalue
# 2026|         getLValue(): [VariableAccess] j
# 2026|             Type = [Class] D
# 2026|             ValueCategory = lvalue
# 2026|         getRValue(): [FunctionCall] call to ObjectStaticMemberFunction
# 2026|             Type = [Class] D
# 2026|             ValueCategory = prvalue
# 2026|           getQualifier(): [VariableAccess] d
# 2026|               Type = [Class] D
# 2026|               ValueCategory = lvalue
# 2027|     getStmt(11): [DeclStmt] declaration
# 2027|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of k
# 2027|           Type = [Class] D
# 2028|     getStmt(12): [ExprStmt] ExprStmt
# 2028|       getExpr(): [AssignExpr] ... = ...
# 2028|           Type = [Class] D
# 2028|           ValueCategory = lvalue
# 2028|         getLValue(): [VariableAccess] k
# 2028|             Type = [Class] D
# 2028|             ValueCategory = lvalue
# 2028|         getRValue(): [FunctionCall] call to ObjectStaticMemberFunction
# 2028|             Type = [Class] D
# 2028|             ValueCategory = prvalue
# 2029|     getStmt(13): [ReturnStmt] return ...
# 2031| [TopLevelFunction] void test_volatile()
# 2031|   <params>: 
# 2031|   getEntryPoint(): [BlockStmt] { ... }
# 2032|     getStmt(0): [DeclStmt] declaration
# 2032|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2032|           Type = [SpecifiedType] volatile int
# 2033|     getStmt(1): [ExprStmt] ExprStmt
# 2033|       getExpr(): [VariableAccess] x
# 2033|           Type = [IntType] int
# 2033|           ValueCategory = prvalue(load)
# 2034|     getStmt(2): [ReturnStmt] return ...
# 2036| [CopyAssignmentOperator] ValCat& ValCat::operator=(ValCat const&)
# 2036|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const ValCat &
# 2036| [MoveAssignmentOperator] ValCat& ValCat::operator=(ValCat&&)
# 2036|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] ValCat &&
# 2037| [MemberFunction] ValCat& ValCat::lvalue()
# 2037|   <params>: 
# 2038| [MemberFunction] ValCat&& ValCat::xvalue()
# 2038|   <params>: 
# 2039| [MemberFunction] ValCat ValCat::prvalue()
# 2039|   <params>: 
# 2042| [TopLevelFunction] void value_category_test()
# 2042|   <params>: 
# 2042|   getEntryPoint(): [BlockStmt] { ... }
# 2043|     getStmt(0): [DeclStmt] declaration
# 2043|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
# 2043|           Type = [Struct] ValCat
# 2045|     getStmt(1): [ExprStmt] ExprStmt
# 2045|       getExpr(): [AssignExpr] ... = ...
# 2045|           Type = [Struct] ValCat
# 2045|           ValueCategory = lvalue
# 2045|         getLValue(): [FunctionCall] call to lvalue
# 2045|             Type = [LValueReferenceType] ValCat &
# 2045|             ValueCategory = prvalue
# 2045|           getQualifier(): [VariableAccess] c
# 2045|               Type = [Struct] ValCat
# 2045|               ValueCategory = lvalue
# 2045|         getRValue(): [ClassAggregateLiteral] {...}
# 2045|             Type = [Struct] ValCat
# 2045|             ValueCategory = prvalue
# 2045|         getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2045|             Type = [Struct] ValCat
# 2045|             ValueCategory = lvalue
#-----|         getRValue().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [Struct] ValCat
#-----|             ValueCategory = prvalue(load)
# 2046|     getStmt(2): [ExprStmt] ExprStmt
# 2046|       getExpr(): [AssignExpr] ... = ...
# 2046|           Type = [Struct] ValCat
# 2046|           ValueCategory = lvalue
# 2046|         getLValue(): [FunctionCall] call to xvalue
# 2046|             Type = [RValueReferenceType] ValCat &&
# 2046|             ValueCategory = prvalue
# 2046|           getQualifier(): [VariableAccess] c
# 2046|               Type = [Struct] ValCat
# 2046|               ValueCategory = lvalue
# 2046|         getRValue(): [ClassAggregateLiteral] {...}
# 2046|             Type = [Struct] ValCat
# 2046|             ValueCategory = prvalue
# 2046|         getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2046|             Type = [Struct] ValCat
# 2046|             ValueCategory = lvalue
#-----|         getRValue().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [Struct] ValCat
#-----|             ValueCategory = prvalue(load)
# 2047|     getStmt(3): [ExprStmt] ExprStmt
# 2047|       getExpr(): [AssignExpr] ... = ...
# 2047|           Type = [Struct] ValCat
# 2047|           ValueCategory = lvalue
# 2047|         getLValue(): [FunctionCall] call to prvalue
# 2047|             Type = [Struct] ValCat
# 2047|             ValueCategory = prvalue
# 2047|           getQualifier(): [VariableAccess] c
# 2047|               Type = [Struct] ValCat
# 2047|               ValueCategory = lvalue
# 2047|         getRValue(): [ClassAggregateLiteral] {...}
# 2047|             Type = [Struct] ValCat
# 2047|             ValueCategory = prvalue
# 2047|         getLValue().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2047|             Type = [Struct] ValCat
# 2047|             ValueCategory = lvalue
#-----|         getRValue().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [Struct] ValCat
#-----|             ValueCategory = prvalue(load)
# 2048|     getStmt(4): [ExprStmt] ExprStmt
# 2048|       getExpr(): [AssignExpr] ... = ...
# 2048|           Type = [Struct] ValCat
# 2048|           ValueCategory = lvalue
# 2048|         getLValue(): [FunctionCall] call to lvalue
# 2048|             Type = [LValueReferenceType] ValCat &
# 2048|             ValueCategory = prvalue
# 2048|         getRValue(): [ClassAggregateLiteral] {...}
# 2048|             Type = [Struct] ValCat
# 2048|             ValueCategory = prvalue
# 2048|         getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2048|             Type = [Struct] ValCat
# 2048|             ValueCategory = lvalue
#-----|         getRValue().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [Struct] ValCat
#-----|             ValueCategory = prvalue(load)
# 2049|     getStmt(5): [ExprStmt] ExprStmt
# 2049|       getExpr(): [AssignExpr] ... = ...
# 2049|           Type = [Struct] ValCat
# 2049|           ValueCategory = lvalue
# 2049|         getLValue(): [FunctionCall] call to xvalue
# 2049|             Type = [RValueReferenceType] ValCat &&
# 2049|             ValueCategory = prvalue
# 2049|         getRValue(): [ClassAggregateLiteral] {...}
# 2049|             Type = [Struct] ValCat
# 2049|             ValueCategory = prvalue
# 2049|         getLValue().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2049|             Type = [Struct] ValCat
# 2049|             ValueCategory = lvalue
#-----|         getRValue().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [Struct] ValCat
#-----|             ValueCategory = prvalue(load)
# 2050|     getStmt(6): [ExprStmt] ExprStmt
# 2050|       getExpr(): [AssignExpr] ... = ...
# 2050|           Type = [Struct] ValCat
# 2050|           ValueCategory = lvalue
# 2050|         getLValue(): [FunctionCall] call to prvalue
# 2050|             Type = [Struct] ValCat
# 2050|             ValueCategory = prvalue
# 2050|         getRValue(): [ClassAggregateLiteral] {...}
# 2050|             Type = [Struct] ValCat
# 2050|             ValueCategory = prvalue
# 2050|         getLValue().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2050|             Type = [Struct] ValCat
# 2050|             ValueCategory = lvalue
#-----|         getRValue().getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [Struct] ValCat
#-----|             ValueCategory = prvalue(load)
# 2051|     getStmt(7): [ReturnStmt] return ...
# 2053| [TopLevelFunction] void SetStaticFuncPtr()
# 2053|   <params>: 
# 2053|   getEntryPoint(): [BlockStmt] { ... }
# 2054|     getStmt(0): [DeclStmt] declaration
# 2054|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
# 2054|           Type = [Class] C
# 2054|         getVariable().getInitializer(): [Initializer] initializer for c
# 2054|           getExpr(): [ConstructorCall] call to C
# 2054|               Type = [VoidType] void
# 2054|               ValueCategory = prvalue
# 2055|     getStmt(1): [DeclStmt] declaration
# 2055|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of pfn
# 2055|           Type = [FunctionPointerType] ..(*)(..)
# 2055|         getVariable().getInitializer(): [Initializer] initializer for pfn
# 2055|           getExpr(): [FunctionAccess] StaticMemberFunction
# 2055|               Type = [FunctionPointerType] ..(*)(..)
# 2055|               ValueCategory = prvalue(load)
# 2056|     getStmt(2): [ExprStmt] ExprStmt
# 2056|       getExpr(): [AssignExpr] ... = ...
# 2056|           Type = [FunctionPointerType] ..(*)(..)
# 2056|           ValueCategory = lvalue
# 2056|         getLValue(): [VariableAccess] pfn
# 2056|             Type = [FunctionPointerType] ..(*)(..)
# 2056|             ValueCategory = lvalue
# 2056|         getRValue(): [FunctionAccess] StaticMemberFunction
# 2056|             Type = [FunctionPointerType] ..(*)(..)
# 2056|             ValueCategory = prvalue(load)
# 2056|           getQualifier(): [VariableAccess] c
# 2056|               Type = [Class] C
# 2056|               ValueCategory = lvalue
# 2057|     getStmt(3): [ReturnStmt] return ...
# 2057|       getImplicitDestructorCall(0): [DestructorCall] call to ~C
# 2057|           Type = [VoidType] void
# 2057|           ValueCategory = prvalue
# 2057|         getQualifier(): [VariableAccess] c
# 2057|             Type = [Class] C
# 2057|             ValueCategory = lvalue
# 2059| [TopLevelFunction] void TernaryTestInt(bool, int, int, int)
# 2059|   <params>: 
# 2059|     getParameter(0): [Parameter] a
# 2059|         Type = [BoolType] bool
# 2059|     getParameter(1): [Parameter] x
# 2059|         Type = [IntType] int
# 2059|     getParameter(2): [Parameter] y
# 2059|         Type = [IntType] int
# 2059|     getParameter(3): [Parameter] z
# 2059|         Type = [IntType] int
# 2059|   getEntryPoint(): [BlockStmt] { ... }
# 2060|     getStmt(0): [ExprStmt] ExprStmt
# 2060|       getExpr(): [AssignExpr] ... = ...
# 2060|           Type = [IntType] int
# 2060|           ValueCategory = lvalue
# 2060|         getLValue(): [VariableAccess] z
# 2060|             Type = [IntType] int
# 2060|             ValueCategory = lvalue
# 2060|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 2060|             Type = [IntType] int
# 2060|             ValueCategory = prvalue(load)
# 2060|           getCondition(): [VariableAccess] a
# 2060|               Type = [BoolType] bool
# 2060|               ValueCategory = prvalue(load)
# 2060|           getThen(): [VariableAccess] x
# 2060|               Type = [IntType] int
# 2060|               ValueCategory = prvalue(load)
# 2060|           getElse(): [VariableAccess] y
# 2060|               Type = [IntType] int
# 2060|               ValueCategory = prvalue(load)
# 2061|     getStmt(1): [ExprStmt] ExprStmt
# 2061|       getExpr(): [AssignExpr] ... = ...
# 2061|           Type = [IntType] int
# 2061|           ValueCategory = lvalue
# 2061|         getLValue(): [VariableAccess] z
# 2061|             Type = [IntType] int
# 2061|             ValueCategory = lvalue
# 2061|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 2061|             Type = [IntType] int
# 2061|             ValueCategory = prvalue(load)
# 2061|           getCondition(): [VariableAccess] a
# 2061|               Type = [BoolType] bool
# 2061|               ValueCategory = prvalue(load)
# 2061|           getThen(): [VariableAccess] x
# 2061|               Type = [IntType] int
# 2061|               ValueCategory = prvalue(load)
# 2061|           getElse(): [Literal] 5
# 2061|               Type = [IntType] int
# 2061|               Value = [Literal] 5
# 2061|               ValueCategory = prvalue
# 2062|     getStmt(2): [ExprStmt] ExprStmt
# 2062|       getExpr(): [AssignExpr] ... = ...
# 2062|           Type = [IntType] int
# 2062|           ValueCategory = lvalue
# 2062|         getLValue(): [VariableAccess] z
# 2062|             Type = [IntType] int
# 2062|             ValueCategory = lvalue
# 2062|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 2062|             Type = [IntType] int
# 2062|             ValueCategory = prvalue
# 2062|           getCondition(): [VariableAccess] a
# 2062|               Type = [BoolType] bool
# 2062|               ValueCategory = prvalue(load)
# 2062|           getThen(): [Literal] 3
# 2062|               Type = [IntType] int
# 2062|               Value = [Literal] 3
# 2062|               ValueCategory = prvalue
# 2062|           getElse(): [Literal] 5
# 2062|               Type = [IntType] int
# 2062|               Value = [Literal] 5
# 2062|               ValueCategory = prvalue
# 2063|     getStmt(3): [ExprStmt] ExprStmt
# 2063|       getExpr(): [AssignExpr] ... = ...
# 2063|           Type = [IntType] int
# 2063|           ValueCategory = lvalue
# 2063|         getLValue(): [ConditionalExpr] ... ? ... : ...
# 2063|             Type = [IntType] int
# 2063|             ValueCategory = lvalue
# 2063|           getCondition(): [VariableAccess] a
# 2063|               Type = [BoolType] bool
# 2063|               ValueCategory = prvalue(load)
# 2063|           getThen(): [VariableAccess] x
# 2063|               Type = [IntType] int
# 2063|               ValueCategory = lvalue
# 2063|           getElse(): [VariableAccess] y
# 2063|               Type = [IntType] int
# 2063|               ValueCategory = lvalue
# 2063|         getRValue(): [Literal] 7
# 2063|             Type = [IntType] int
# 2063|             Value = [Literal] 7
# 2063|             ValueCategory = prvalue
# 2063|         getLValue().getFullyConverted(): [ParenthesisExpr] (...)
# 2063|             Type = [IntType] int
# 2063|             ValueCategory = lvalue
# 2064|     getStmt(4): [ReturnStmt] return ...
# 2066| [CopyAssignmentOperator] TernaryPodObj& TernaryPodObj::operator=(TernaryPodObj const&)
# 2066|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const TernaryPodObj &
# 2066| [MoveAssignmentOperator] TernaryPodObj& TernaryPodObj::operator=(TernaryPodObj&&)
# 2066|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] TernaryPodObj &&
# 2069| [TopLevelFunction] void TernaryTestPodObj(bool, TernaryPodObj, TernaryPodObj, TernaryPodObj)
# 2069|   <params>: 
# 2069|     getParameter(0): [Parameter] a
# 2069|         Type = [BoolType] bool
# 2069|     getParameter(1): [Parameter] x
# 2069|         Type = [Struct] TernaryPodObj
# 2069|     getParameter(2): [Parameter] y
# 2069|         Type = [Struct] TernaryPodObj
# 2069|     getParameter(3): [Parameter] z
# 2069|         Type = [Struct] TernaryPodObj
# 2069|   getEntryPoint(): [BlockStmt] { ... }
# 2070|     getStmt(0): [ExprStmt] ExprStmt
# 2070|       getExpr(): [AssignExpr] ... = ...
# 2070|           Type = [Struct] TernaryPodObj
# 2070|           ValueCategory = lvalue
# 2070|         getLValue(): [VariableAccess] z
# 2070|             Type = [Struct] TernaryPodObj
# 2070|             ValueCategory = lvalue
# 2070|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 2070|             Type = [Struct] TernaryPodObj
# 2070|             ValueCategory = prvalue(load)
# 2070|           getCondition(): [VariableAccess] a
# 2070|               Type = [BoolType] bool
# 2070|               ValueCategory = prvalue(load)
# 2070|           getThen(): [VariableAccess] x
# 2070|               Type = [Struct] TernaryPodObj
# 2070|               ValueCategory = prvalue(load)
# 2070|           getElse(): [VariableAccess] y
# 2070|               Type = [Struct] TernaryPodObj
# 2070|               ValueCategory = prvalue(load)
# 2071|     getStmt(1): [ExprStmt] ExprStmt
# 2071|       getExpr(): [AssignExpr] ... = ...
# 2071|           Type = [Struct] TernaryPodObj
# 2071|           ValueCategory = lvalue
# 2071|         getLValue(): [VariableAccess] z
# 2071|             Type = [Struct] TernaryPodObj
# 2071|             ValueCategory = lvalue
# 2071|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 2071|             Type = [Struct] TernaryPodObj
# 2071|             ValueCategory = prvalue
# 2071|           getCondition(): [VariableAccess] a
# 2071|               Type = [BoolType] bool
# 2071|               ValueCategory = prvalue(load)
# 2071|           getThen(): [VariableAccess] x
# 2071|               Type = [Struct] TernaryPodObj
# 2071|               ValueCategory = prvalue(load)
# 2071|           getElse(): [Literal] 0
# 2071|               Type = [Struct] TernaryPodObj
# 2071|               Value = [Literal] 0
# 2071|               ValueCategory = prvalue
# 2071|           getThen().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2071|               Type = [Struct] TernaryPodObj
# 2071|               ValueCategory = prvalue(load)
# 2071|           getElse().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2071|               Type = [Struct] TernaryPodObj
# 2071|               ValueCategory = prvalue(load)
# 2071|         getRValue().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2071|             Type = [Struct] TernaryPodObj
# 2071|             ValueCategory = prvalue(load)
# 2072|     getStmt(2): [ExprStmt] ExprStmt
# 2072|       getExpr(): [AssignExpr] ... = ...
# 2072|           Type = [Struct] TernaryPodObj
# 2072|           ValueCategory = lvalue
# 2072|         getLValue(): [VariableAccess] z
# 2072|             Type = [Struct] TernaryPodObj
# 2072|             ValueCategory = lvalue
# 2072|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 2072|             Type = [Struct] TernaryPodObj
# 2072|             ValueCategory = prvalue
# 2072|           getCondition(): [VariableAccess] a
# 2072|               Type = [BoolType] bool
# 2072|               ValueCategory = prvalue(load)
# 2072|           getThen(): [Literal] 0
# 2072|               Type = [Struct] TernaryPodObj
# 2072|               Value = [Literal] 0
# 2072|               ValueCategory = prvalue
# 2072|           getElse(): [Literal] 0
# 2072|               Type = [Struct] TernaryPodObj
# 2072|               Value = [Literal] 0
# 2072|               ValueCategory = prvalue
# 2072|           getThen().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2072|               Type = [Struct] TernaryPodObj
# 2072|               ValueCategory = prvalue(load)
# 2072|           getElse().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2072|               Type = [Struct] TernaryPodObj
# 2072|               ValueCategory = prvalue(load)
# 2072|         getRValue().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2072|             Type = [Struct] TernaryPodObj
# 2072|             ValueCategory = prvalue(load)
# 2073|     getStmt(3): [ExprStmt] ExprStmt
# 2073|       getExpr(): [AssignExpr] ... = ...
# 2073|           Type = [Struct] TernaryPodObj
# 2073|           ValueCategory = lvalue
# 2073|         getLValue(): [AssignExpr] ... = ...
# 2073|             Type = [Struct] TernaryPodObj
# 2073|             ValueCategory = lvalue
# 2073|           getLValue(): [VariableAccess] z
# 2073|               Type = [Struct] TernaryPodObj
# 2073|               ValueCategory = lvalue
# 2073|           getRValue(): [ConditionalExpr] ... ? ... : ...
# 2073|               Type = [Struct] TernaryPodObj
# 2073|               ValueCategory = prvalue(load)
# 2073|             getCondition(): [VariableAccess] a
# 2073|                 Type = [BoolType] bool
# 2073|                 ValueCategory = prvalue(load)
# 2073|             getThen(): [VariableAccess] x
# 2073|                 Type = [Struct] TernaryPodObj
# 2073|                 ValueCategory = prvalue(load)
# 2073|             getElse(): [VariableAccess] y
# 2073|                 Type = [Struct] TernaryPodObj
# 2073|                 ValueCategory = prvalue(load)
# 2073|         getRValue(): [Literal] 0
# 2073|             Type = [Struct] TernaryPodObj
# 2073|             Value = [Literal] 0
# 2073|             ValueCategory = prvalue
# 2073|         getLValue().getFullyConverted(): [ParenthesisExpr] (...)
# 2073|             Type = [Struct] TernaryPodObj
# 2073|             ValueCategory = lvalue
# 2073|         getRValue().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2073|             Type = [Struct] TernaryPodObj
# 2073|             ValueCategory = prvalue(load)
# 2074|     getStmt(4): [ReturnStmt] return ...
# 2076| [CopyAssignmentOperator] TernaryNonPodObj& TernaryNonPodObj::operator=(TernaryNonPodObj const&)
# 2076|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const TernaryNonPodObj &
#-----|   getEntryPoint(): [BlockStmt] { ... }
#-----|     getStmt(0): [ReturnStmt] return ...
#-----|       getExpr(): [PointerDereferenceExpr] * ...
#-----|           Type = [Struct] TernaryNonPodObj
#-----|           ValueCategory = lvalue
#-----|         getOperand(): [ThisExpr] this
#-----|             Type = [PointerType] TernaryNonPodObj *
#-----|             ValueCategory = prvalue(load)
#-----|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|           Type = [LValueReferenceType] TernaryNonPodObj &
#-----|           ValueCategory = prvalue
# 2076| [Constructor] void TernaryNonPodObj::TernaryNonPodObj()
# 2076|   <params>: 
# 2076|   <initializations>: 
# 2076|   getEntryPoint(): [BlockStmt] { ... }
# 2076|     getStmt(0): [ReturnStmt] return ...
# 2076| [CopyConstructor] void TernaryNonPodObj::TernaryNonPodObj(TernaryNonPodObj const&)
# 2076|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const TernaryNonPodObj &
# 2076|   <initializations>: 
# 2076|   getEntryPoint(): [BlockStmt] { ... }
# 2076|     getStmt(0): [ReturnStmt] return ...
# 2077| [Destructor,VirtualFunction] void TernaryNonPodObj::~TernaryNonPodObj()
# 2077|   <params>: 
# 2077|   getEntryPoint(): [BlockStmt] { ... }
# 2077|     getStmt(0): [ReturnStmt] return ...
# 2077|   <destructions>: 
# 2080| [TopLevelFunction] void TernaryTestNonPodObj(bool, TernaryNonPodObj, TernaryNonPodObj, TernaryNonPodObj)
# 2080|   <params>: 
# 2080|     getParameter(0): [Parameter] a
# 2080|         Type = [BoolType] bool
# 2080|     getParameter(1): [Parameter] x
# 2080|         Type = [Struct] TernaryNonPodObj
# 2080|     getParameter(2): [Parameter] y
# 2080|         Type = [Struct] TernaryNonPodObj
# 2080|     getParameter(3): [Parameter] z
# 2080|         Type = [Struct] TernaryNonPodObj
# 2080|   getEntryPoint(): [BlockStmt] { ... }
# 2081|     getStmt(0): [ExprStmt] ExprStmt
# 2081|       getExpr(): [FunctionCall] call to operator=
# 2081|           Type = [LValueReferenceType] TernaryNonPodObj &
# 2081|           ValueCategory = prvalue
# 2081|         getQualifier(): [VariableAccess] z
# 2081|             Type = [Struct] TernaryNonPodObj
# 2081|             ValueCategory = lvalue
# 2081|         getArgument(0): [ConditionalExpr] ... ? ... : ...
# 2081|             Type = [Struct] TernaryNonPodObj
# 2081|             ValueCategory = lvalue
# 2081|           getCondition(): [VariableAccess] a
# 2081|               Type = [BoolType] bool
# 2081|               ValueCategory = prvalue(load)
# 2081|           getThen(): [VariableAccess] x
# 2081|               Type = [Struct] TernaryNonPodObj
# 2081|               ValueCategory = lvalue
# 2081|           getElse(): [VariableAccess] y
# 2081|               Type = [Struct] TernaryNonPodObj
# 2081|               ValueCategory = lvalue
# 2081|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 2081|             Type = [LValueReferenceType] const TernaryNonPodObj &
# 2081|             ValueCategory = prvalue
# 2081|           getExpr(): [CStyleCast] (const TernaryNonPodObj)...
# 2081|               Conversion = [GlvalueConversion] glvalue conversion
# 2081|               Type = [SpecifiedType] const TernaryNonPodObj
# 2081|               ValueCategory = lvalue
# 2081|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2081|           Type = [Struct] TernaryNonPodObj
# 2081|           ValueCategory = lvalue
# 2082|     getStmt(1): [ExprStmt] ExprStmt
# 2082|       getExpr(): [FunctionCall] call to operator=
# 2082|           Type = [LValueReferenceType] TernaryNonPodObj &
# 2082|           ValueCategory = prvalue
# 2082|         getQualifier(): [VariableAccess] z
# 2082|             Type = [Struct] TernaryNonPodObj
# 2082|             ValueCategory = lvalue
# 2082|         getArgument(0): [ConditionalExpr] ... ? ... : ...
# 2082|             Type = [Struct] TernaryNonPodObj
# 2082|             ValueCategory = prvalue
# 2082|           getCondition(): [VariableAccess] a
# 2082|               Type = [BoolType] bool
# 2082|               ValueCategory = prvalue(load)
# 2082|           getThen(): [ConstructorCall] call to TernaryNonPodObj
# 2082|               Type = [VoidType] void
# 2082|               ValueCategory = prvalue
# 2082|             getArgument(0): [VariableAccess] x
# 2082|                 Type = [Struct] TernaryNonPodObj
# 2082|                 ValueCategory = lvalue
# 2082|             getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 2082|                 Type = [LValueReferenceType] const TernaryNonPodObj &
# 2082|                 ValueCategory = prvalue
# 2082|               getExpr(): [CStyleCast] (const TernaryNonPodObj)...
# 2082|                   Conversion = [GlvalueConversion] glvalue conversion
# 2082|                   Type = [SpecifiedType] const TernaryNonPodObj
# 2082|                   ValueCategory = lvalue
# 2082|           getElse(): [ConstructorCall] call to TernaryNonPodObj
# 2082|               Type = [VoidType] void
# 2082|               ValueCategory = prvalue
# 2082|           getThen().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2082|               Type = [Struct] TernaryNonPodObj
# 2082|               ValueCategory = prvalue(load)
# 2082|           getElse().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2082|               Type = [Struct] TernaryNonPodObj
# 2082|               ValueCategory = prvalue(load)
# 2082|         getImplicitDestructorCall(0): [DestructorCall] call to ~TernaryNonPodObj
# 2082|             Type = [VoidType] void
# 2082|             ValueCategory = prvalue
# 2082|           getQualifier(): [ReuseExpr] reuse of temporary object
# 2082|               Type = [Struct] TernaryNonPodObj
# 2082|               ValueCategory = xvalue
# 2082|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 2082|             Type = [LValueReferenceType] const TernaryNonPodObj &
# 2082|             ValueCategory = prvalue
# 2082|           getExpr(): [CStyleCast] (const TernaryNonPodObj)...
# 2082|               Conversion = [GlvalueConversion] glvalue conversion
# 2082|               Type = [SpecifiedType] const TernaryNonPodObj
# 2082|               ValueCategory = lvalue
# 2082|             getExpr(): [TemporaryObjectExpr] temporary object
# 2082|                 Type = [Struct] TernaryNonPodObj
# 2082|                 ValueCategory = lvalue
# 2082|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2082|           Type = [Struct] TernaryNonPodObj
# 2082|           ValueCategory = lvalue
# 2083|     getStmt(2): [ExprStmt] ExprStmt
# 2083|       getExpr(): [FunctionCall] call to operator=
# 2083|           Type = [LValueReferenceType] TernaryNonPodObj &
# 2083|           ValueCategory = prvalue
# 2083|         getQualifier(): [VariableAccess] z
# 2083|             Type = [Struct] TernaryNonPodObj
# 2083|             ValueCategory = lvalue
# 2083|         getArgument(0): [ConditionalExpr] ... ? ... : ...
# 2083|             Type = [Struct] TernaryNonPodObj
# 2083|             ValueCategory = prvalue
# 2083|           getCondition(): [VariableAccess] a
# 2083|               Type = [BoolType] bool
# 2083|               ValueCategory = prvalue(load)
# 2083|           getThen(): [ConstructorCall] call to TernaryNonPodObj
# 2083|               Type = [VoidType] void
# 2083|               ValueCategory = prvalue
# 2083|           getElse(): [ConstructorCall] call to TernaryNonPodObj
# 2083|               Type = [VoidType] void
# 2083|               ValueCategory = prvalue
# 2083|           getThen().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2083|               Type = [Struct] TernaryNonPodObj
# 2083|               ValueCategory = prvalue(load)
# 2083|           getElse().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2083|               Type = [Struct] TernaryNonPodObj
# 2083|               ValueCategory = prvalue(load)
# 2083|         getImplicitDestructorCall(0): [DestructorCall] call to ~TernaryNonPodObj
# 2083|             Type = [VoidType] void
# 2083|             ValueCategory = prvalue
# 2083|           getQualifier(): [ReuseExpr] reuse of temporary object
# 2083|               Type = [Struct] TernaryNonPodObj
# 2083|               ValueCategory = xvalue
# 2083|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 2083|             Type = [LValueReferenceType] const TernaryNonPodObj &
# 2083|             ValueCategory = prvalue
# 2083|           getExpr(): [CStyleCast] (const TernaryNonPodObj)...
# 2083|               Conversion = [GlvalueConversion] glvalue conversion
# 2083|               Type = [SpecifiedType] const TernaryNonPodObj
# 2083|               ValueCategory = lvalue
# 2083|             getExpr(): [TemporaryObjectExpr] temporary object
# 2083|                 Type = [Struct] TernaryNonPodObj
# 2083|                 ValueCategory = lvalue
# 2083|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2083|           Type = [Struct] TernaryNonPodObj
# 2083|           ValueCategory = lvalue
# 2084|     getStmt(3): [ExprStmt] ExprStmt
# 2084|       getExpr(): [FunctionCall] call to operator=
# 2084|           Type = [LValueReferenceType] TernaryNonPodObj &
# 2084|           ValueCategory = prvalue
# 2084|         getQualifier(): [FunctionCall] call to operator=
# 2084|             Type = [LValueReferenceType] TernaryNonPodObj &
# 2084|             ValueCategory = prvalue
# 2084|           getQualifier(): [VariableAccess] z
# 2084|               Type = [Struct] TernaryNonPodObj
# 2084|               ValueCategory = lvalue
# 2084|           getArgument(0): [ConditionalExpr] ... ? ... : ...
# 2084|               Type = [Struct] TernaryNonPodObj
# 2084|               ValueCategory = lvalue
# 2084|             getCondition(): [VariableAccess] a
# 2084|                 Type = [BoolType] bool
# 2084|                 ValueCategory = prvalue(load)
# 2084|             getThen(): [VariableAccess] x
# 2084|                 Type = [Struct] TernaryNonPodObj
# 2084|                 ValueCategory = lvalue
# 2084|             getElse(): [VariableAccess] y
# 2084|                 Type = [Struct] TernaryNonPodObj
# 2084|                 ValueCategory = lvalue
# 2084|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 2084|               Type = [LValueReferenceType] const TernaryNonPodObj &
# 2084|               ValueCategory = prvalue
# 2084|             getExpr(): [CStyleCast] (const TernaryNonPodObj)...
# 2084|                 Conversion = [GlvalueConversion] glvalue conversion
# 2084|                 Type = [SpecifiedType] const TernaryNonPodObj
# 2084|                 ValueCategory = lvalue
# 2084|         getArgument(0): [ConstructorCall] call to TernaryNonPodObj
# 2084|             Type = [VoidType] void
# 2084|             ValueCategory = prvalue
# 2084|         getImplicitDestructorCall(0): [DestructorCall] call to ~TernaryNonPodObj
# 2084|             Type = [VoidType] void
# 2084|             ValueCategory = prvalue
# 2084|           getQualifier(): [ReuseExpr] reuse of temporary object
# 2084|               Type = [Struct] TernaryNonPodObj
# 2084|               ValueCategory = xvalue
# 2084|         getQualifier().getFullyConverted(): [ParenthesisExpr] (...)
# 2084|             Type = [Struct] TernaryNonPodObj
# 2084|             ValueCategory = lvalue
# 2084|           getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 2084|               Type = [Struct] TernaryNonPodObj
# 2084|               ValueCategory = lvalue
# 2084|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 2084|             Type = [LValueReferenceType] const TernaryNonPodObj &
# 2084|             ValueCategory = prvalue
# 2084|           getExpr(): [CStyleCast] (const TernaryNonPodObj)...
# 2084|               Conversion = [GlvalueConversion] glvalue conversion
# 2084|               Type = [SpecifiedType] const TernaryNonPodObj
# 2084|               ValueCategory = lvalue
# 2084|             getExpr(): [TemporaryObjectExpr] temporary object
# 2084|                 Type = [Struct] TernaryNonPodObj
# 2084|                 ValueCategory = lvalue
# 2084|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2084|           Type = [Struct] TernaryNonPodObj
# 2084|           ValueCategory = lvalue
# 2085|     getStmt(4): [ReturnStmt] return ...
# 2087| [TopLevelFunction] void CommaTestHelper(unsigned int)
# 2087|   <params>: 
# 2087|     getParameter(0): [Parameter] (unnamed parameter 0)
# 2087|         Type = [IntType] unsigned int
# 2089| [TopLevelFunction] unsigned int CommaTest(unsigned int)
# 2089|   <params>: 
# 2089|     getParameter(0): [Parameter] x
# 2089|         Type = [IntType] unsigned int
# 2089|   getEntryPoint(): [BlockStmt] { ... }
# 2090|     getStmt(0): [DeclStmt] declaration
# 2090|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 2090|           Type = [IntType] unsigned int
# 2091|     getStmt(1): [ExprStmt] ExprStmt
# 2091|       getExpr(): [AssignExpr] ... = ...
# 2091|           Type = [IntType] unsigned int
# 2091|           ValueCategory = lvalue
# 2091|         getLValue(): [VariableAccess] y
# 2091|             Type = [IntType] unsigned int
# 2091|             ValueCategory = lvalue
# 2091|         getRValue(): [ConditionalExpr] ... ? ... : ...
# 2091|             Type = [IntType] unsigned int
# 2091|             ValueCategory = prvalue(load)
# 2091|           getCondition(): [LTExpr] ... < ...
# 2091|               Type = [BoolType] bool
# 2091|               ValueCategory = prvalue
# 2091|             getLesserOperand(): [VariableAccess] x
# 2091|                 Type = [IntType] unsigned int
# 2091|                 ValueCategory = prvalue(load)
# 2091|             getGreaterOperand(): [Literal] 100
# 2091|                 Type = [IntType] int
# 2091|                 Value = [Literal] 100
# 2091|                 ValueCategory = prvalue
# 2091|             getGreaterOperand().getFullyConverted(): [CStyleCast] (unsigned int)...
# 2091|                 Conversion = [IntegralConversion] integral conversion
# 2091|                 Type = [IntType] unsigned int
# 2091|                 Value = [CStyleCast] 100
# 2091|                 ValueCategory = prvalue
# 2092|           getThen(): [CommaExpr] ... , ...
# 2092|               Type = [IntType] unsigned int
# 2092|               ValueCategory = prvalue(load)
# 2092|             getLeftOperand(): [FunctionCall] call to CommaTestHelper
# 2092|                 Type = [VoidType] void
# 2092|                 ValueCategory = prvalue
# 2092|               getArgument(0): [VariableAccess] x
# 2092|                   Type = [IntType] unsigned int
# 2092|                   ValueCategory = prvalue(load)
# 2092|             getRightOperand(): [VariableAccess] x
# 2092|                 Type = [IntType] unsigned int
# 2092|                 ValueCategory = prvalue(load)
# 2093|           getElse(): [CommaExpr] ... , ...
# 2093|               Type = [IntType] int
# 2093|               ValueCategory = prvalue
# 2093|             getLeftOperand(): [FunctionCall] call to CommaTestHelper
# 2093|                 Type = [VoidType] void
# 2093|                 ValueCategory = prvalue
# 2093|               getArgument(0): [VariableAccess] x
# 2093|                   Type = [IntType] unsigned int
# 2093|                   ValueCategory = prvalue(load)
# 2093|             getRightOperand(): [Literal] 10
# 2093|                 Type = [IntType] int
# 2093|                 Value = [Literal] 10
# 2093|                 ValueCategory = prvalue
# 2092|           getThen().getFullyConverted(): [ParenthesisExpr] (...)
# 2092|               Type = [IntType] unsigned int
# 2092|               ValueCategory = prvalue(load)
# 2093|           getElse().getFullyConverted(): [CStyleCast] (unsigned int)...
# 2093|               Conversion = [IntegralConversion] integral conversion
# 2093|               Type = [IntType] unsigned int
# 2093|               ValueCategory = prvalue
# 2093|             getExpr(): [ParenthesisExpr] (...)
# 2093|                 Type = [IntType] int
# 2093|                 ValueCategory = prvalue
# 2094|     getStmt(2): [ReturnStmt] return ...
# 2096| [TopLevelFunction] void NewDeleteMem()
# 2096|   <params>: 
# 2096|   getEntryPoint(): [BlockStmt] { ... }
# 2097|     getStmt(0): [DeclStmt] declaration
# 2097|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2097|           Type = [IntPointerType] int *
# 2097|         getVariable().getInitializer(): [Initializer] initializer for x
# 2097|           getExpr(): [NewExpr] new
# 2097|               Type = [IntPointerType] int *
# 2097|               ValueCategory = prvalue
# 2098|     getStmt(1): [ExprStmt] ExprStmt
# 2098|       getExpr(): [AssignExpr] ... = ...
# 2098|           Type = [IntType] int
# 2098|           ValueCategory = lvalue
# 2098|         getLValue(): [PointerDereferenceExpr] * ...
# 2098|             Type = [IntType] int
# 2098|             ValueCategory = lvalue
# 2098|           getOperand(): [VariableAccess] x
# 2098|               Type = [IntPointerType] int *
# 2098|               ValueCategory = prvalue(load)
# 2098|         getRValue(): [Literal] 6
# 2098|             Type = [IntType] int
# 2098|             Value = [Literal] 6
# 2098|             ValueCategory = prvalue
# 2099|     getStmt(2): [ExprStmt] ExprStmt
# 2099|       getExpr(): [DeleteExpr] delete
# 2099|           Type = [VoidType] void
# 2099|           ValueCategory = prvalue
# 2099|         getExprWithReuse(): [VariableAccess] x
# 2099|             Type = [IntPointerType] int *
# 2099|             ValueCategory = prvalue(load)
# 2100|     getStmt(3): [ReturnStmt] return ...
# 2102| [CopyAssignmentOperator] Base2& Base2::operator=(Base2 const&)
# 2102|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Base2 &
# 2102| [Constructor] void Base2::Base2()
# 2102|   <params>: 
# 2102|   <initializations>: 
# 2102|   getEntryPoint(): [BlockStmt] { ... }
# 2102|     getStmt(0): [ReturnStmt] return ...
# 2102| [CopyConstructor] void Base2::Base2(Base2 const&)
# 2102|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Base2 &
# 2104| [MemberFunction] void Base2::operator delete(void*)
# 2104|   <params>: 
# 2104|     getParameter(0): [Parameter] p
# 2104|         Type = [VoidPointerType] void *
# 2104|   getEntryPoint(): [BlockStmt] { ... }
# 2105|     getStmt(0): [ReturnStmt] return ...
# 2106| [Destructor,VirtualFunction] void Base2::~Base2()
# 2106|   <params>: 
# 2106|   getEntryPoint(): [BlockStmt] { ... }
# 2106|     getStmt(0): [ReturnStmt] return ...
# 2106|   <destructions>: 
# 2109| [CopyAssignmentOperator] Derived2& Derived2::operator=(Derived2 const&)
# 2109|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Derived2 &
# 2109| [Constructor] void Derived2::Derived2()
# 2109|   <params>: 
# 2109|   <initializations>: 
# 2109|     getInitializer(0): [ConstructorDirectInit] call to Base2
# 2109|         Type = [VoidType] void
# 2109|         ValueCategory = prvalue
# 2109|   getEntryPoint(): [BlockStmt] { ... }
# 2109|     getStmt(0): [ReturnStmt] return ...
# 2109| [CopyConstructor] void Derived2::Derived2(Derived2 const&)
# 2109|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Derived2 &
# 2112| [Destructor,VirtualFunction] void Derived2::~Derived2()
# 2112|   <params>: 
# 2112|   getEntryPoint(): [BlockStmt] { ... }
# 2112|     getStmt(0): [ReturnStmt] return ...
# 2112|   <destructions>: 
# 2112|     getDestruction(0): [DestructorDirectDestruction] call to ~Base2
# 2112|         Type = [VoidType] void
# 2112|         ValueCategory = prvalue
# 2114| [MemberFunction] void Derived2::operator delete(void*)
# 2114|   <params>: 
# 2114|     getParameter(0): [Parameter] p
# 2114|         Type = [VoidPointerType] void *
# 2114|   getEntryPoint(): [BlockStmt] { ... }
# 2115|     getStmt(0): [ReturnStmt] return ...
# 2119| [TopLevelFunction] int virtual_delete()
# 2119|   <params>: 
# 2120|   getEntryPoint(): [BlockStmt] { ... }
# 2121|     getStmt(0): [DeclStmt] declaration
# 2121|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b1
# 2121|           Type = [PointerType] Base2 *
# 2121|         getVariable().getInitializer(): [Initializer] initializer for b1
# 2121|           getExpr(): [NewExpr] new
# 2121|               Type = [PointerType] Base2 *
# 2121|               ValueCategory = prvalue
# 2121|             getInitializer(): [ConstructorCall] call to Base2
# 2121|                 Type = [VoidType] void
# 2121|                 ValueCategory = prvalue
# 2122|     getStmt(1): [ExprStmt] ExprStmt
# 2122|       getExpr(): [DeleteExpr] delete
# 2122|           Type = [VoidType] void
# 2122|           ValueCategory = prvalue
# 2122|         getDeallocatorCall(): [FunctionCall] call to operator delete
# 2122|             Type = [VoidType] void
# 2122|             ValueCategory = prvalue
# 2122|         getDestructorCall(): [DestructorCall] call to ~Base2
# 2122|             Type = [VoidType] void
# 2122|             ValueCategory = prvalue
# 2122|           getQualifier(): [VariableAccess] b1
# 2122|               Type = [PointerType] Base2 *
# 2122|               ValueCategory = prvalue(load)
# 2122|         getExprWithReuse(): [ReuseExpr] reuse of b1
# 2122|             Type = [PointerType] Base2 *
# 2122|             ValueCategory = prvalue
# 2124|     getStmt(2): [DeclStmt] declaration
# 2124|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b2
# 2124|           Type = [PointerType] Base2 *
# 2124|         getVariable().getInitializer(): [Initializer] initializer for b2
# 2124|           getExpr(): [NewExpr] new
# 2124|               Type = [PointerType] Derived2 *
# 2124|               ValueCategory = prvalue
# 2124|             getInitializer(): [ConstructorCall] call to Derived2
# 2124|                 Type = [VoidType] void
# 2124|                 ValueCategory = prvalue
# 2124|           getExpr().getFullyConverted(): [CStyleCast] (Base2 *)...
# 2124|               Conversion = [BaseClassConversion] base class conversion
# 2124|               Type = [PointerType] Base2 *
# 2124|               ValueCategory = prvalue
# 2125|     getStmt(3): [ExprStmt] ExprStmt
# 2125|       getExpr(): [DeleteExpr] delete
# 2125|           Type = [VoidType] void
# 2125|           ValueCategory = prvalue
# 2125|         getDeallocatorCall(): [FunctionCall] call to operator delete
# 2125|             Type = [VoidType] void
# 2125|             ValueCategory = prvalue
# 2125|         getDestructorCall(): [DestructorCall] call to ~Base2
# 2125|             Type = [VoidType] void
# 2125|             ValueCategory = prvalue
# 2125|           getQualifier(): [VariableAccess] b2
# 2125|               Type = [PointerType] Base2 *
# 2125|               ValueCategory = prvalue(load)
# 2125|         getExprWithReuse(): [ReuseExpr] reuse of b2
# 2125|             Type = [PointerType] Base2 *
# 2125|             ValueCategory = prvalue
# 2127|     getStmt(4): [DeclStmt] declaration
# 2127|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
# 2127|           Type = [PointerType] Derived2 *
# 2127|         getVariable().getInitializer(): [Initializer] initializer for d
# 2127|           getExpr(): [NewExpr] new
# 2127|               Type = [PointerType] Derived2 *
# 2127|               ValueCategory = prvalue
# 2127|             getInitializer(): [ConstructorCall] call to Derived2
# 2127|                 Type = [VoidType] void
# 2127|                 ValueCategory = prvalue
# 2128|     getStmt(5): [ExprStmt] ExprStmt
# 2128|       getExpr(): [DeleteExpr] delete
# 2128|           Type = [VoidType] void
# 2128|           ValueCategory = prvalue
# 2128|         getDeallocatorCall(): [FunctionCall] call to operator delete
# 2128|             Type = [VoidType] void
# 2128|             ValueCategory = prvalue
# 2128|         getDestructorCall(): [DestructorCall] call to ~Derived2
# 2128|             Type = [VoidType] void
# 2128|             ValueCategory = prvalue
# 2128|           getQualifier(): [VariableAccess] d
# 2128|               Type = [PointerType] Derived2 *
# 2128|               ValueCategory = prvalue(load)
# 2128|         getExprWithReuse(): [ReuseExpr] reuse of d
# 2128|             Type = [PointerType] Derived2 *
# 2128|             ValueCategory = prvalue
# 2129|     getStmt(6): [ReturnStmt] return ...
# 2131| [TopLevelFunction] void test_constant_folding_use(int)
# 2131|   <params>: 
# 2131|     getParameter(0): [Parameter] (unnamed parameter 0)
# 2131|         Type = [IntType] int
# 2133| [TopLevelFunction] void test_constant_folding()
# 2133|   <params>: 
# 2133|   getEntryPoint(): [BlockStmt] { ... }
# 2134|     getStmt(0): [DeclStmt] declaration
# 2134|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2134|           Type = [SpecifiedType] const int
# 2134|         getVariable().getInitializer(): [Initializer] initializer for x
# 2134|           getExpr(): [Literal] 116
# 2134|               Type = [IntType] int
# 2134|               Value = [Literal] 116
# 2134|               ValueCategory = prvalue
# 2135|     getStmt(1): [ExprStmt] ExprStmt
# 2135|       getExpr(): [FunctionCall] call to test_constant_folding_use
# 2135|           Type = [VoidType] void
# 2135|           ValueCategory = prvalue
# 2135|         getArgument(0): [VariableAccess] x
# 2135|             Type = [IntType] int
# 2135|             Value = [VariableAccess] 116
# 2135|             ValueCategory = prvalue(load)
# 2136|     getStmt(2): [ReturnStmt] return ...
# 2138| [TopLevelFunction] void exit(int)
# 2138|   <params>: 
# 2138|     getParameter(0): [Parameter] code
# 2138|         Type = [IntType] int
# 2140| [TopLevelFunction] int NonExit()
# 2140|   <params>: 
# 2140|   getEntryPoint(): [BlockStmt] { ... }
# 2141|     getStmt(0): [DeclStmt] declaration
# 2141|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2141|           Type = [IntType] int
# 2141|         getVariable().getInitializer(): [Initializer] initializer for x
# 2141|           getExpr(): [FunctionCall] call to Add
# 2141|               Type = [IntType] int
# 2141|               ValueCategory = prvalue
# 2141|             getArgument(0): [Literal] 3
# 2141|                 Type = [IntType] int
# 2141|                 Value = [Literal] 3
# 2141|                 ValueCategory = prvalue
# 2141|             getArgument(1): [Literal] 4
# 2141|                 Type = [IntType] int
# 2141|                 Value = [Literal] 4
# 2141|                 ValueCategory = prvalue
# 2142|     getStmt(1): [IfStmt] if (...) ... 
# 2142|       getCondition(): [EQExpr] ... == ...
# 2142|           Type = [BoolType] bool
# 2142|           ValueCategory = prvalue
# 2142|         getLeftOperand(): [VariableAccess] x
# 2142|             Type = [IntType] int
# 2142|             ValueCategory = prvalue(load)
# 2142|         getRightOperand(): [Literal] 7
# 2142|             Type = [IntType] int
# 2142|             Value = [Literal] 7
# 2142|             ValueCategory = prvalue
# 2143|       getThen(): [ExprStmt] ExprStmt
# 2143|         getExpr(): [FunctionCall] call to exit
# 2143|             Type = [VoidType] void
# 2143|             ValueCategory = prvalue
# 2143|           getArgument(0): [Literal] 3
# 2143|               Type = [IntType] int
# 2143|               Value = [Literal] 3
# 2143|               ValueCategory = prvalue
# 2144|     getStmt(2): [ExprStmt] ExprStmt
# 2144|       getExpr(): [FunctionCall] call to VoidFunc
# 2144|           Type = [VoidType] void
# 2144|           ValueCategory = prvalue
# 2145|     getStmt(3): [ReturnStmt] return ...
# 2145|       getExpr(): [VariableAccess] x
# 2145|           Type = [IntType] int
# 2145|           ValueCategory = prvalue(load)
# 2148| [TopLevelFunction] void CallsNonExit()
# 2148|   <params>: 
# 2148|   getEntryPoint(): [BlockStmt] { ... }
# 2149|     getStmt(0): [ExprStmt] ExprStmt
# 2149|       getExpr(): [FunctionCall] call to VoidFunc
# 2149|           Type = [VoidType] void
# 2149|           ValueCategory = prvalue
# 2150|     getStmt(1): [ExprStmt] ExprStmt
# 2150|       getExpr(): [FunctionCall] call to exit
# 2150|           Type = [VoidType] void
# 2150|           ValueCategory = prvalue
# 2150|         getArgument(0): [Literal] 3
# 2150|             Type = [IntType] int
# 2150|             Value = [Literal] 3
# 2150|             ValueCategory = prvalue
# 2151|     getStmt(2): [ReturnStmt] return ...
# 2153| [TopLevelFunction] int TransNonExit()
# 2153|   <params>: 
# 2153|   getEntryPoint(): [BlockStmt] { ... }
# 2154|     getStmt(0): [DeclStmt] declaration
# 2154|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2154|           Type = [IntType] int
# 2154|         getVariable().getInitializer(): [Initializer] initializer for x
# 2154|           getExpr(): [FunctionCall] call to Add
# 2154|               Type = [IntType] int
# 2154|               ValueCategory = prvalue
# 2154|             getArgument(0): [Literal] 3
# 2154|                 Type = [IntType] int
# 2154|                 Value = [Literal] 3
# 2154|                 ValueCategory = prvalue
# 2154|             getArgument(1): [Literal] 4
# 2154|                 Type = [IntType] int
# 2154|                 Value = [Literal] 4
# 2154|                 ValueCategory = prvalue
# 2155|     getStmt(1): [IfStmt] if (...) ... 
# 2155|       getCondition(): [EQExpr] ... == ...
# 2155|           Type = [BoolType] bool
# 2155|           ValueCategory = prvalue
# 2155|         getLeftOperand(): [VariableAccess] x
# 2155|             Type = [IntType] int
# 2155|             ValueCategory = prvalue(load)
# 2155|         getRightOperand(): [Literal] 7
# 2155|             Type = [IntType] int
# 2155|             Value = [Literal] 7
# 2155|             ValueCategory = prvalue
# 2156|       getThen(): [ExprStmt] ExprStmt
# 2156|         getExpr(): [FunctionCall] call to CallsNonExit
# 2156|             Type = [VoidType] void
# 2156|             ValueCategory = prvalue
# 2157|     getStmt(2): [ExprStmt] ExprStmt
# 2157|       getExpr(): [FunctionCall] call to VoidFunc
# 2157|           Type = [VoidType] void
# 2157|           ValueCategory = prvalue
# 2158|     getStmt(3): [ReturnStmt] return ...
# 2158|       getExpr(): [VariableAccess] x
# 2158|           Type = [IntType] int
# 2158|           ValueCategory = prvalue(load)
# 2161| [TopLevelFunction] void newArrayCorrectType(size_t)
# 2161|   <params>: 
# 2161|     getParameter(0): [Parameter] n
# 2161|         Type = [CTypedefType,Size_t] size_t
# 2161|   getEntryPoint(): [BlockStmt] { ... }
# 2162|     getStmt(0): [ExprStmt] ExprStmt
# 2162|       getExpr(): [NewArrayExpr] new[]
# 2162|           Type = [IntPointerType] int *
# 2162|           ValueCategory = prvalue
# 2162|         getExtent(): [VariableAccess] n
# 2162|             Type = [CTypedefType,Size_t] size_t
# 2162|             ValueCategory = prvalue(load)
# 2163|     getStmt(1): [ExprStmt] ExprStmt
# 2163|       getExpr(): [NewArrayExpr] new[]
# 2163|           Type = [IntPointerType] int *
# 2163|           ValueCategory = prvalue
# 2163|         getAllocatorCall(): [FunctionCall] call to operator new[]
# 2163|             Type = [VoidPointerType] void *
# 2163|             ValueCategory = prvalue
# 2163|           getArgument(0): [ErrorExpr] <error expr>
# 2163|               Type = [LongType] unsigned long
# 2163|               ValueCategory = prvalue
# 2163|           getArgument(1): [Literal] 1.0
# 2163|               Type = [FloatType] float
# 2163|               Value = [Literal] 1.0
# 2163|               ValueCategory = prvalue
# 2163|         getExtent(): [VariableAccess] n
# 2163|             Type = [CTypedefType,Size_t] size_t
# 2163|             ValueCategory = prvalue(load)
# 2164|     getStmt(2): [ExprStmt] ExprStmt
# 2164|       getExpr(): [NewArrayExpr] new[]
# 2164|           Type = [PointerType] String *
# 2164|           ValueCategory = prvalue
# 2164|         getInitializer(): [ArrayAggregateLiteral] {...}
# 2164|             Type = [ArrayType] String[]
# 2164|             ValueCategory = prvalue
# 2164|           getAnElementExpr(0): [ConstructorCall] call to String
# 2164|               Type = [VoidType] void
# 2164|               ValueCategory = prvalue
# 2164|         getExtent(): [VariableAccess] n
# 2164|             Type = [CTypedefType,Size_t] size_t
# 2164|             ValueCategory = prvalue(load)
# 2165|     getStmt(3): [ExprStmt] ExprStmt
# 2165|       getExpr(): [NewArrayExpr] new[]
# 2165|           Type = [PointerType] Overaligned *
# 2165|           ValueCategory = prvalue
# 2165|         getExtent(): [VariableAccess] n
# 2165|             Type = [CTypedefType,Size_t] size_t
# 2165|             ValueCategory = prvalue(load)
# 2165|         getAlignmentArgument(): [Literal] 128
# 2165|             Type = [ScopedEnum] align_val_t
# 2165|             Value = [Literal] 128
# 2165|             ValueCategory = prvalue
# 2166|     getStmt(4): [ExprStmt] ExprStmt
# 2166|       getExpr(): [NewArrayExpr] new[]
# 2166|           Type = [PointerType] DefaultCtorWithDefaultParam *
# 2166|           ValueCategory = prvalue
# 2166|         getInitializer(): [ArrayAggregateLiteral] {...}
# 2166|             Type = [ArrayType] DefaultCtorWithDefaultParam[]
# 2166|             ValueCategory = prvalue
# 2166|           getAnElementExpr(0): [ConstructorCall] call to DefaultCtorWithDefaultParam
# 2166|               Type = [VoidType] void
# 2166|               ValueCategory = prvalue
# 2166|         getExtent(): [VariableAccess] n
# 2166|             Type = [CTypedefType,Size_t] size_t
# 2166|             ValueCategory = prvalue(load)
# 2167|     getStmt(5): [ExprStmt] ExprStmt
# 2167|       getExpr(): [NewArrayExpr] new[]
# 2167|           Type = [IntPointerType] int *
# 2167|           ValueCategory = prvalue
# 2167|         getInitializer(): [ArrayAggregateLiteral] {...}
# 2167|             Type = [ArrayType] int[3]
# 2167|             ValueCategory = prvalue
# 2167|           getAnElementExpr(0): [Literal] 0
# 2167|               Type = [IntType] int
# 2167|               Value = [Literal] 0
# 2167|               ValueCategory = prvalue
# 2167|           getAnElementExpr(1): [Literal] 1
# 2167|               Type = [IntType] int
# 2167|               Value = [Literal] 1
# 2167|               ValueCategory = prvalue
# 2167|           getAnElementExpr(2): [Literal] 2
# 2167|               Type = [IntType] int
# 2167|               Value = [Literal] 2
# 2167|               ValueCategory = prvalue
# 2167|         getExtent(): [VariableAccess] n
# 2167|             Type = [CTypedefType,Size_t] size_t
# 2167|             ValueCategory = prvalue(load)
# 2168|     getStmt(6): [ReturnStmt] return ...
# 2170| [TopLevelFunction] double strtod(char const*, char**)
# 2170|   <params>: 
# 2170|     getParameter(0): [Parameter] str
# 2170|         Type = [PointerType] const char *
# 2170|     getParameter(1): [Parameter] endptr
# 2170|         Type = [PointerType] char **
# 2172| [TopLevelFunction] char* test_strtod(char*)
# 2172|   <params>: 
# 2172|     getParameter(0): [Parameter] s
# 2172|         Type = [CharPointerType] char *
# 2172|   getEntryPoint(): [BlockStmt] { ... }
# 2173|     getStmt(0): [DeclStmt] declaration
# 2173|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of end
# 2173|           Type = [CharPointerType] char *
# 2174|     getStmt(1): [DeclStmt] declaration
# 2174|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
# 2174|           Type = [DoubleType] double
# 2174|         getVariable().getInitializer(): [Initializer] initializer for d
# 2174|           getExpr(): [FunctionCall] call to strtod
# 2174|               Type = [DoubleType] double
# 2174|               ValueCategory = prvalue
# 2174|             getArgument(0): [VariableAccess] s
# 2174|                 Type = [CharPointerType] char *
# 2174|                 ValueCategory = prvalue(load)
# 2174|             getArgument(1): [AddressOfExpr] & ...
# 2174|                 Type = [PointerType] char **
# 2174|                 ValueCategory = prvalue
# 2174|               getOperand(): [VariableAccess] end
# 2174|                   Type = [CharPointerType] char *
# 2174|                   ValueCategory = lvalue
# 2174|             getArgument(0).getFullyConverted(): [CStyleCast] (const char *)...
# 2174|                 Conversion = [PointerConversion] pointer conversion
# 2174|                 Type = [PointerType] const char *
# 2174|                 ValueCategory = prvalue
# 2175|     getStmt(2): [ReturnStmt] return ...
# 2175|       getExpr(): [VariableAccess] end
# 2175|           Type = [CharPointerType] char *
# 2175|           ValueCategory = prvalue(load)
# 2178| [CopyAssignmentOperator] HasOperatorBool& HasOperatorBool::operator=(HasOperatorBool const&)
# 2178|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const HasOperatorBool &
# 2178| [MoveAssignmentOperator] HasOperatorBool& HasOperatorBool::operator=(HasOperatorBool&&)
# 2178|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] HasOperatorBool &&
# 2179| [ConversionOperator] bool HasOperatorBool::operator bool()
# 2179|   <params>: 
# 2182| [TopLevelFunction] void call_as_child_of_ConditionDeclExpr()
# 2182|   <params>: 
# 2182|   getEntryPoint(): [BlockStmt] { ... }
# 2183|     getStmt(0): [IfStmt] if (...) ... 
# 2183|       getCondition(): [ConditionDeclExpr] (condition decl)
# 2183|           Type = [BoolType] bool
# 2183|           ValueCategory = prvalue
# 2183|         getChild(0): [FunctionCall] call to operator bool
# 2183|             Type = [BoolType] bool
# 2183|             ValueCategory = prvalue
# 2183|           getQualifier(): [VariableAccess] b
# 2183|               Type = [Struct] HasOperatorBool
# 2183|               ValueCategory = prvalue(load)
# 2183|         getInitializingExpr(): [Literal] 0
# 2183|             Type = [Struct] HasOperatorBool
# 2183|             Value = [Literal] 0
# 2183|             ValueCategory = prvalue
# 2183|       getThen(): [BlockStmt] { ... }
# 2184|     getStmt(1): [ReturnStmt] return ...
# 2186| [CopyAssignmentOperator] ClassWithDestructor& ClassWithDestructor::operator=(ClassWithDestructor const&)
# 2186|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const ClassWithDestructor &
# 2186| [CopyConstructor] void ClassWithDestructor::ClassWithDestructor(ClassWithDestructor const&)
# 2186|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const ClassWithDestructor &
# 2186|   <initializations>: 
# 2186|     getInitializer(0): [ConstructorFieldInit] constructor init of field x
# 2186|         Type = [CharPointerType] char *
# 2186|         ValueCategory = prvalue
# 2186|       getExpr(): [ReferenceFieldAccess] x
# 2186|           Type = [CharPointerType] char *
# 2186|           ValueCategory = prvalue(load)
# 2186|         getQualifier(): [VariableAccess] (unnamed parameter 0)
# 2186|             Type = [LValueReferenceType] const ClassWithDestructor &
# 2186|             ValueCategory = prvalue(load)
# 2186|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2186|             Type = [SpecifiedType] const ClassWithDestructor
# 2186|             ValueCategory = lvalue
# 2186|   getEntryPoint(): [BlockStmt] { ... }
# 2186|     getStmt(0): [ReturnStmt] return ...
# 2189| [Constructor] void ClassWithDestructor::ClassWithDestructor()
# 2189|   <params>: 
# 2189|   <initializations>: 
# 2189|   getEntryPoint(): [BlockStmt] { ... }
# 2189|     getStmt(0): [ExprStmt] ExprStmt
# 2189|       getExpr(): [AssignExpr] ... = ...
# 2189|           Type = [CharPointerType] char *
# 2189|           ValueCategory = lvalue
# 2189|         getLValue(): [ImplicitThisFieldAccess,PointerFieldAccess] x
# 2189|             Type = [CharPointerType] char *
# 2189|             ValueCategory = lvalue
# 2189|           getQualifier(): [ThisExpr] this
# 2189|               Type = [PointerType] ClassWithDestructor *
# 2189|               ValueCategory = prvalue(load)
# 2189|         getRValue(): [NewExpr] new
# 2189|             Type = [CharPointerType] char *
# 2189|             ValueCategory = prvalue
# 2189|     getStmt(1): [ReturnStmt] return ...
# 2190| [Destructor] void ClassWithDestructor::~ClassWithDestructor()
# 2190|   <params>: 
# 2190|   getEntryPoint(): [BlockStmt] { ... }
# 2190|     getStmt(0): [ExprStmt] ExprStmt
# 2190|       getExpr(): [DeleteExpr] delete
# 2190|           Type = [VoidType] void
# 2190|           ValueCategory = prvalue
# 2190|         getExprWithReuse(): [ImplicitThisFieldAccess,PointerFieldAccess] x
# 2190|             Type = [CharPointerType] char *
# 2190|             ValueCategory = prvalue(load)
# 2190|           getQualifier(): [ThisExpr] this
# 2190|               Type = [PointerType] ClassWithDestructor *
# 2190|               ValueCategory = prvalue(load)
# 2190|     getStmt(1): [ReturnStmt] return ...
# 2190|   <destructions>: 
# 2192| [MemberFunction] void ClassWithDestructor::set_x(char)
# 2192|   <params>: 
# 2192|     getParameter(0): [Parameter] y
# 2192|         Type = [PlainCharType] char
# 2192|   getEntryPoint(): [BlockStmt] { ... }
# 2192|     getStmt(0): [ExprStmt] ExprStmt
# 2192|       getExpr(): [AssignExpr] ... = ...
# 2192|           Type = [PlainCharType] char
# 2192|           ValueCategory = lvalue
# 2192|         getLValue(): [PointerDereferenceExpr] * ...
# 2192|             Type = [PlainCharType] char
# 2192|             ValueCategory = lvalue
# 2192|           getOperand(): [ImplicitThisFieldAccess,PointerFieldAccess] x
# 2192|               Type = [CharPointerType] char *
# 2192|               ValueCategory = prvalue(load)
# 2192|             getQualifier(): [ThisExpr] this
# 2192|                 Type = [PointerType] ClassWithDestructor *
# 2192|                 ValueCategory = prvalue(load)
# 2192|         getRValue(): [VariableAccess] y
# 2192|             Type = [PlainCharType] char
# 2192|             ValueCategory = prvalue(load)
# 2192|     getStmt(1): [ReturnStmt] return ...
# 2193| [MemberFunction] char ClassWithDestructor::get_x()
# 2193|   <params>: 
# 2193|   getEntryPoint(): [BlockStmt] { ... }
# 2193|     getStmt(0): [ReturnStmt] return ...
# 2193|       getExpr(): [PointerDereferenceExpr] * ...
# 2193|           Type = [PlainCharType] char
# 2193|           ValueCategory = prvalue(load)
# 2193|         getOperand(): [ImplicitThisFieldAccess,PointerFieldAccess] x
# 2193|             Type = [CharPointerType] char *
# 2193|             ValueCategory = prvalue(load)
# 2193|           getQualifier(): [ThisExpr] this
# 2193|               Type = [PointerType] ClassWithDestructor *
# 2193|               ValueCategory = prvalue(load)
# 2194| [ConstMemberFunction,ConversionOperator] bool ClassWithDestructor::operator bool() const
# 2194|   <params>: 
# 2197| [GlobalVariable] bool initialization_with_destructor_bool
# 2197|   getInitializer(): [Initializer] initializer for initialization_with_destructor_bool
# 2197|     getExpr(): [Literal] 1
# 2197|         Type = [BoolType] bool
# 2197|         Value = [Literal] 1
# 2197|         ValueCategory = prvalue
# 2199| [TopLevelFunction] void initialization_with_destructor(bool, char)
# 2199|   <params>: 
# 2199|     getParameter(0): [Parameter] b
# 2199|         Type = [BoolType] bool
# 2199|     getParameter(1): [Parameter] c
# 2199|         Type = [PlainCharType] char
# 2199|   getEntryPoint(): [BlockStmt] { ... }
# 2200|     getStmt(0): [IfStmt] if (...) ... 
# 2200|       getInitialization(): [DeclStmt] declaration
# 2200|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2200|             Type = [Class] ClassWithDestructor
# 2200|           getVariable().getInitializer(): [Initializer] initializer for x
# 2200|             getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2200|                 Type = [VoidType] void
# 2200|                 ValueCategory = prvalue
# 2200|       getCondition(): [VariableAccess] b
# 2200|           Type = [BoolType] bool
# 2200|           ValueCategory = prvalue(load)
# 2201|       getThen(): [ExprStmt] ExprStmt
# 2201|         getExpr(): [FunctionCall] call to set_x
# 2201|             Type = [VoidType] void
# 2201|             ValueCategory = prvalue
# 2201|           getQualifier(): [VariableAccess] x
# 2201|               Type = [Class] ClassWithDestructor
# 2201|               ValueCategory = lvalue
# 2201|           getArgument(0): [CharLiteral] 97
# 2201|               Type = [PlainCharType] char
# 2201|               Value = [CharLiteral] 97
# 2201|               ValueCategory = prvalue
# 2201|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2201|           Type = [VoidType] void
# 2201|           ValueCategory = prvalue
# 2201|         getQualifier(): [VariableAccess] x
# 2201|             Type = [Class] ClassWithDestructor
# 2201|             ValueCategory = lvalue
# 2203|     getStmt(1): [ConstexprIfStmt] if constexpr (...) ... 
# 2203|       getInitialization(): [DeclStmt] declaration
# 2203|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2203|             Type = [Class] ClassWithDestructor
# 2203|           getVariable().getInitializer(): [Initializer] initializer for x
# 2203|             getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2203|                 Type = [VoidType] void
# 2203|                 ValueCategory = prvalue
# 2203|       getCondition(): [VariableAccess] initialization_with_destructor_bool
# 2203|           Type = [BoolType] bool
# 2203|           Value = [VariableAccess] 1
# 2203|           ValueCategory = prvalue(load)
# 2204|       getThen(): [ExprStmt] ExprStmt
# 2204|         getExpr(): [FunctionCall] call to set_x
# 2204|             Type = [VoidType] void
# 2204|             ValueCategory = prvalue
# 2204|           getQualifier(): [VariableAccess] x
# 2204|               Type = [Class] ClassWithDestructor
# 2204|               ValueCategory = lvalue
# 2204|           getArgument(0): [CharLiteral] 97
# 2204|               Type = [PlainCharType] char
# 2204|               Value = [CharLiteral] 97
# 2204|               ValueCategory = prvalue
# 2204|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2204|           Type = [VoidType] void
# 2204|           ValueCategory = prvalue
# 2204|         getQualifier(): [VariableAccess] x
# 2204|             Type = [Class] ClassWithDestructor
# 2204|             ValueCategory = lvalue
# 2206|     getStmt(2): [SwitchStmt] switch (...) ... 
# 2206|       getInitialization(): [DeclStmt] declaration
# 2206|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2206|             Type = [Class] ClassWithDestructor
# 2206|           getVariable().getInitializer(): [Initializer] initializer for x
# 2206|             getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2206|                 Type = [VoidType] void
# 2206|                 ValueCategory = prvalue
# 2206|       getExpr(): [VariableAccess] c
# 2206|           Type = [PlainCharType] char
# 2206|           ValueCategory = prvalue(load)
# 2206|       getStmt(): [BlockStmt] { ... }
# 2207|         getStmt(0): [SwitchCase] case ...:
# 2207|           getExpr(): [CharLiteral] 97
# 2207|               Type = [PlainCharType] char
# 2207|               Value = [CharLiteral] 97
# 2207|               ValueCategory = prvalue
# 2207|           getExpr().getFullyConverted(): [CStyleCast] (int)...
# 2207|               Conversion = [IntegralConversion] integral conversion
# 2207|               Type = [IntType] int
# 2207|               Value = [CStyleCast] 97
# 2207|               ValueCategory = prvalue
# 2208|         getStmt(1): [ExprStmt] ExprStmt
# 2208|           getExpr(): [FunctionCall] call to set_x
# 2208|               Type = [VoidType] void
# 2208|               ValueCategory = prvalue
# 2208|             getQualifier(): [VariableAccess] x
# 2208|                 Type = [Class] ClassWithDestructor
# 2208|                 ValueCategory = lvalue
# 2208|             getArgument(0): [CharLiteral] 97
# 2208|                 Type = [PlainCharType] char
# 2208|                 Value = [CharLiteral] 97
# 2208|                 ValueCategory = prvalue
# 2209|         getStmt(2): [BreakStmt] break;
# 2213|           getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2213|               Type = [VoidType] void
# 2213|               ValueCategory = prvalue
# 2213|             getQualifier(): [VariableAccess] x
# 2213|                 Type = [Class] ClassWithDestructor
# 2213|                 ValueCategory = lvalue
# 2210|         getStmt(3): [SwitchCase] default: 
# 2211|         getStmt(4): [ExprStmt] ExprStmt
# 2211|           getExpr(): [FunctionCall] call to set_x
# 2211|               Type = [VoidType] void
# 2211|               ValueCategory = prvalue
# 2211|             getQualifier(): [VariableAccess] x
# 2211|                 Type = [Class] ClassWithDestructor
# 2211|                 ValueCategory = lvalue
# 2211|             getArgument(0): [CharLiteral] 98
# 2211|                 Type = [PlainCharType] char
# 2211|                 Value = [CharLiteral] 98
# 2211|                 ValueCategory = prvalue
# 2212|         getStmt(5): [BreakStmt] break;
# 2213|           getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2213|               Type = [VoidType] void
# 2213|               ValueCategory = prvalue
# 2213|             getQualifier(): [VariableAccess] x
# 2213|                 Type = [Class] ClassWithDestructor
# 2213|                 ValueCategory = lvalue
# 2213|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2213|           Type = [VoidType] void
# 2213|           ValueCategory = prvalue
# 2213|         getQualifier(): [VariableAccess] x
# 2213|             Type = [Class] ClassWithDestructor
# 2213|             ValueCategory = lvalue
# 2206|       getExpr().getFullyConverted(): [CStyleCast] (int)...
# 2206|           Conversion = [IntegralConversion] integral conversion
# 2206|           Type = [IntType] int
# 2206|           ValueCategory = prvalue
# 2213|     getStmt(3): [LabelStmt] label ...:
# 2215|     getStmt(4): [DeclStmt] declaration
# 2215|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2215|           Type = [Class] ClassWithDestructor
# 2215|         getVariable().getInitializer(): [Initializer] initializer for x
# 2215|           getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2215|               Type = [VoidType] void
# 2215|               ValueCategory = prvalue
# 2216|     getStmt(5): [RangeBasedForStmt] for(...:...) ...
# 2216|       getInitialization(): [DeclStmt] declaration
# 2216|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of ys
# 2216|             Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
# 2216|           getVariable().getInitializer(): [Initializer] initializer for ys
# 2216|             getExpr(): [ConstructorCall] call to vector
# 2216|                 Type = [VoidType] void
# 2216|                 ValueCategory = prvalue
# 2216|               getArgument(0): [VariableAccess] x
# 2216|                   Type = [Class] ClassWithDestructor
# 2216|                   ValueCategory = prvalue(load)
# 2216|               getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2216|                   Type = [VoidType] void
# 2216|                   ValueCategory = prvalue
# 2216|                 getQualifier(): [ReuseExpr] reuse of temporary object
# 2216|                     Type = [Class] ClassWithDestructor
# 2216|                     ValueCategory = xvalue
# 2216|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2216|                   Type = [Class] ClassWithDestructor
# 2216|                   ValueCategory = lvalue
# 2216|       getChild(1): [DeclStmt] declaration
# 2216|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__range)
# 2216|             Type = [LValueReferenceType] vector<ClassWithDestructor> &
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__range)
# 2216|             getExpr(): [VariableAccess] ys
# 2216|                 Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
# 2216|                 ValueCategory = lvalue
# 2216|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 2216|                 Type = [LValueReferenceType] vector<ClassWithDestructor> &
# 2216|                 ValueCategory = prvalue
# 2216|       getBeginEndDeclaration(): [DeclStmt] declaration
# 2216|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__begin)
# 2216|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__begin)
# 2216|             getExpr(): [FunctionCall] call to begin
# 2216|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2216|                 ValueCategory = prvalue
# 2216|               getQualifier(): [VariableAccess] (__range)
# 2216|                   Type = [LValueReferenceType] vector<ClassWithDestructor> &
# 2216|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const vector<ClassWithDestructor>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const vector<ClassWithDestructor>
#-----|                   ValueCategory = lvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
#-----|                     ValueCategory = lvalue
# 2216|         getDeclarationEntry(1): [VariableDeclarationEntry] declaration of (__end)
# 2216|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__end)
# 2216|             getExpr(): [FunctionCall] call to end
# 2216|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2216|                 ValueCategory = prvalue
# 2216|               getQualifier(): [VariableAccess] (__range)
# 2216|                   Type = [LValueReferenceType] vector<ClassWithDestructor> &
# 2216|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const vector<ClassWithDestructor>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const vector<ClassWithDestructor>
#-----|                   ValueCategory = lvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
#-----|                     ValueCategory = lvalue
# 2216|       getCondition(): [FunctionCall] call to operator!=
# 2216|           Type = [BoolType] bool
# 2216|           ValueCategory = prvalue
# 2216|         getQualifier(): [VariableAccess] (__begin)
# 2216|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2216|             ValueCategory = lvalue
# 2216|         getArgument(0): [ConstructorCall] call to iterator
# 2216|             Type = [VoidType] void
# 2216|             ValueCategory = prvalue
# 2216|           getArgument(0): [VariableAccess] (__end)
# 2216|               Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2216|               ValueCategory = lvalue
#-----|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|               Type = [LValueReferenceType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &
#-----|               ValueCategory = prvalue
#-----|             getExpr(): [CStyleCast] (const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)...
#-----|                 Conversion = [GlvalueConversion] glvalue conversion
#-----|                 Type = [SpecifiedType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
#-----|                 ValueCategory = lvalue
#-----|         getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)...
#-----|             Conversion = [GlvalueConversion] glvalue conversion
#-----|             Type = [SpecifiedType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
#-----|             ValueCategory = lvalue
#-----|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
#-----|             ValueCategory = lvalue
# 2216|       getUpdate(): [FunctionCall] call to operator++
# 2216|           Type = [LValueReferenceType] iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &
# 2216|           ValueCategory = prvalue
# 2216|         getQualifier(): [VariableAccess] (__begin)
# 2216|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2216|             ValueCategory = lvalue
# 2216|       getChild(5): [DeclStmt] declaration
# 2216|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 2216|             Type = [Class] ClassWithDestructor
# 2216|           getVariable().getInitializer(): [Initializer] initializer for y
# 2216|             getExpr(): [OverloadedPointerDereferenceExpr] call to operator*
# 2216|                 Type = [LValueReferenceType] ClassWithDestructor &
# 2216|                 ValueCategory = prvalue
# 2216|               getQualifier(): [VariableAccess] (__begin)
# 2216|                   Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2216|                   ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
#-----|                   ValueCategory = lvalue
# 2216|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2216|                 Type = [Class] ClassWithDestructor
# 2216|                 ValueCategory = prvalue(load)
# 2217|       getStmt(): [ExprStmt] ExprStmt
# 2217|         getExpr(): [FunctionCall] call to set_x
# 2217|             Type = [VoidType] void
# 2217|             ValueCategory = prvalue
# 2217|           getQualifier(): [VariableAccess] y
# 2217|               Type = [Class] ClassWithDestructor
# 2217|               ValueCategory = lvalue
# 2217|           getArgument(0): [CharLiteral] 97
# 2217|               Type = [PlainCharType] char
# 2217|               Value = [CharLiteral] 97
# 2217|               ValueCategory = prvalue
# 2216|       getImplicitDestructorCall(0): [DestructorCall] call to ~vector
# 2216|           Type = [VoidType] void
# 2216|           ValueCategory = prvalue
# 2216|         getQualifier(): [VariableAccess] ys
# 2216|             Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
# 2216|             ValueCategory = lvalue
# 2216|       getUpdate().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2216|           Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
# 2216|           ValueCategory = lvalue
# 2216|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2216|             Type = [VoidType] void
# 2216|             ValueCategory = prvalue
# 2216|           getQualifier(): [VariableAccess] y
# 2216|               Type = [Class] ClassWithDestructor
# 2216|               ValueCategory = lvalue
# 2219|     getStmt(6): [RangeBasedForStmt] for(...:...) ...
# 2219|       getInitialization(): [DeclStmt] declaration
# 2219|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of ys
# 2219|             Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
# 2219|           getVariable().getInitializer(): [Initializer] initializer for ys
# 2219|             getExpr(): [ConstructorCall] call to vector
# 2219|                 Type = [VoidType] void
# 2219|                 ValueCategory = prvalue
# 2219|               getArgument(0): [VariableAccess] x
# 2219|                   Type = [Class] ClassWithDestructor
# 2219|                   ValueCategory = prvalue(load)
# 2219|               getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2219|                   Type = [VoidType] void
# 2219|                   ValueCategory = prvalue
# 2219|                 getQualifier(): [ReuseExpr] reuse of temporary object
# 2219|                     Type = [Class] ClassWithDestructor
# 2219|                     ValueCategory = xvalue
# 2219|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2219|                   Type = [Class] ClassWithDestructor
# 2219|                   ValueCategory = lvalue
# 2219|       getChild(1): [DeclStmt] declaration
# 2219|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__range)
# 2219|             Type = [LValueReferenceType] vector<ClassWithDestructor> &
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__range)
# 2219|             getExpr(): [VariableAccess] ys
# 2219|                 Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
# 2219|                 ValueCategory = lvalue
# 2219|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 2219|                 Type = [LValueReferenceType] vector<ClassWithDestructor> &
# 2219|                 ValueCategory = prvalue
# 2219|       getBeginEndDeclaration(): [DeclStmt] declaration
# 2219|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__begin)
# 2219|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__begin)
# 2219|             getExpr(): [FunctionCall] call to begin
# 2219|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2219|                 ValueCategory = prvalue
# 2219|               getQualifier(): [VariableAccess] (__range)
# 2219|                   Type = [LValueReferenceType] vector<ClassWithDestructor> &
# 2219|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const vector<ClassWithDestructor>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const vector<ClassWithDestructor>
#-----|                   ValueCategory = lvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
#-----|                     ValueCategory = lvalue
# 2219|         getDeclarationEntry(1): [VariableDeclarationEntry] declaration of (__end)
# 2219|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__end)
# 2219|             getExpr(): [FunctionCall] call to end
# 2219|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2219|                 ValueCategory = prvalue
# 2219|               getQualifier(): [VariableAccess] (__range)
# 2219|                   Type = [LValueReferenceType] vector<ClassWithDestructor> &
# 2219|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const vector<ClassWithDestructor>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const vector<ClassWithDestructor>
#-----|                   ValueCategory = lvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
#-----|                     ValueCategory = lvalue
# 2219|       getCondition(): [FunctionCall] call to operator!=
# 2219|           Type = [BoolType] bool
# 2219|           ValueCategory = prvalue
# 2219|         getQualifier(): [VariableAccess] (__begin)
# 2219|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2219|             ValueCategory = lvalue
# 2219|         getArgument(0): [ConstructorCall] call to iterator
# 2219|             Type = [VoidType] void
# 2219|             ValueCategory = prvalue
# 2219|           getArgument(0): [VariableAccess] (__end)
# 2219|               Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2219|               ValueCategory = lvalue
#-----|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|               Type = [LValueReferenceType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &
#-----|               ValueCategory = prvalue
#-----|             getExpr(): [CStyleCast] (const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)...
#-----|                 Conversion = [GlvalueConversion] glvalue conversion
#-----|                 Type = [SpecifiedType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
#-----|                 ValueCategory = lvalue
#-----|         getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)...
#-----|             Conversion = [GlvalueConversion] glvalue conversion
#-----|             Type = [SpecifiedType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
#-----|             ValueCategory = lvalue
#-----|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
#-----|             ValueCategory = lvalue
# 2219|       getUpdate(): [FunctionCall] call to operator++
# 2219|           Type = [LValueReferenceType] iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &
# 2219|           ValueCategory = prvalue
# 2219|         getQualifier(): [VariableAccess] (__begin)
# 2219|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2219|             ValueCategory = lvalue
# 2219|       getChild(5): [DeclStmt] declaration
# 2219|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 2219|             Type = [Class] ClassWithDestructor
# 2219|           getVariable().getInitializer(): [Initializer] initializer for y
# 2219|             getExpr(): [OverloadedPointerDereferenceExpr] call to operator*
# 2219|                 Type = [LValueReferenceType] ClassWithDestructor &
# 2219|                 ValueCategory = prvalue
# 2219|               getQualifier(): [VariableAccess] (__begin)
# 2219|                   Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2219|                   ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
#-----|                   ValueCategory = lvalue
# 2219|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2219|                 Type = [Class] ClassWithDestructor
# 2219|                 ValueCategory = prvalue(load)
# 2219|       getStmt(): [BlockStmt] { ... }
# 2220|         getStmt(0): [ExprStmt] ExprStmt
# 2220|           getExpr(): [FunctionCall] call to set_x
# 2220|               Type = [VoidType] void
# 2220|               ValueCategory = prvalue
# 2220|             getQualifier(): [VariableAccess] y
# 2220|                 Type = [Class] ClassWithDestructor
# 2220|                 ValueCategory = lvalue
# 2220|             getArgument(0): [CharLiteral] 97
# 2220|                 Type = [PlainCharType] char
# 2220|                 Value = [CharLiteral] 97
# 2220|                 ValueCategory = prvalue
# 2221|         getStmt(1): [IfStmt] if (...) ... 
# 2221|           getCondition(): [EQExpr] ... == ...
# 2221|               Type = [BoolType] bool
# 2221|               ValueCategory = prvalue
# 2221|             getLeftOperand(): [FunctionCall] call to get_x
# 2221|                 Type = [PlainCharType] char
# 2221|                 ValueCategory = prvalue
# 2221|               getQualifier(): [VariableAccess] y
# 2221|                   Type = [Class] ClassWithDestructor
# 2221|                   ValueCategory = lvalue
# 2221|             getRightOperand(): [CharLiteral] 98
# 2221|                 Type = [PlainCharType] char
# 2221|                 Value = [CharLiteral] 98
# 2221|                 ValueCategory = prvalue
# 2221|             getLeftOperand().getFullyConverted(): [CStyleCast] (int)...
# 2221|                 Conversion = [IntegralConversion] integral conversion
# 2221|                 Type = [IntType] int
# 2221|                 ValueCategory = prvalue
# 2221|             getRightOperand().getFullyConverted(): [CStyleCast] (int)...
# 2221|                 Conversion = [IntegralConversion] integral conversion
# 2221|                 Type = [IntType] int
# 2221|                 Value = [CStyleCast] 98
# 2221|                 ValueCategory = prvalue
# 2222|           getThen(): [ReturnStmt] return ...
# 2219|             getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2219|                 Type = [VoidType] void
# 2219|                 ValueCategory = prvalue
# 2219|               getQualifier(): [VariableAccess] y
# 2219|                   Type = [Class] ClassWithDestructor
# 2219|                   ValueCategory = lvalue
# 2219|             getImplicitDestructorCall(1): [DestructorCall] call to ~vector
# 2219|                 Type = [VoidType] void
# 2219|                 ValueCategory = prvalue
# 2219|               getQualifier(): [VariableAccess] ys
# 2219|                   Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
# 2219|                   ValueCategory = lvalue
# 2234|             getImplicitDestructorCall(2): [DestructorCall] call to ~ClassWithDestructor
# 2234|                 Type = [VoidType] void
# 2234|                 ValueCategory = prvalue
# 2234|               getQualifier(): [VariableAccess] x
# 2234|                   Type = [Class] ClassWithDestructor
# 2234|                   ValueCategory = lvalue
# 2219|       getImplicitDestructorCall(0): [DestructorCall] call to ~vector
# 2219|           Type = [VoidType] void
# 2219|           ValueCategory = prvalue
# 2219|         getQualifier(): [VariableAccess] ys
# 2219|             Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
# 2219|             ValueCategory = lvalue
# 2219|       getUpdate().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2219|           Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
# 2219|           ValueCategory = lvalue
# 2219|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2219|             Type = [VoidType] void
# 2219|             ValueCategory = prvalue
# 2219|           getQualifier(): [VariableAccess] y
# 2219|               Type = [Class] ClassWithDestructor
# 2219|               ValueCategory = lvalue
# 2225|     getStmt(7): [RangeBasedForStmt] for(...:...) ...
# 2225|       getInitialization(): [DeclStmt] declaration
# 2225|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of ys
# 2225|             Type = [ClassTemplateInstantiation,Struct] vector<int>
# 2225|           getVariable().getInitializer(): [Initializer] initializer for ys
# 2225|             getExpr(): [ConstructorCall] call to vector
# 2225|                 Type = [VoidType] void
# 2225|                 ValueCategory = prvalue
# 2225|               getArgument(0): [Literal] 1
# 2225|                   Type = [IntType] int
# 2225|                   Value = [Literal] 1
# 2225|                   ValueCategory = prvalue
# 2225|       getChild(1): [DeclStmt] declaration
# 2225|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__range)
# 2225|             Type = [LValueReferenceType] vector<int> &
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__range)
# 2225|             getExpr(): [VariableAccess] ys
# 2225|                 Type = [ClassTemplateInstantiation,Struct] vector<int>
# 2225|                 ValueCategory = lvalue
# 2225|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 2225|                 Type = [LValueReferenceType] vector<int> &
# 2225|                 ValueCategory = prvalue
# 2225|       getBeginEndDeclaration(): [DeclStmt] declaration
# 2225|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__begin)
# 2225|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__begin)
# 2225|             getExpr(): [FunctionCall] call to begin
# 2225|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2225|                 ValueCategory = prvalue
# 2225|               getQualifier(): [VariableAccess] (__range)
# 2225|                   Type = [LValueReferenceType] vector<int> &
# 2225|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const vector<int>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const vector<int>
#-----|                   ValueCategory = lvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ClassTemplateInstantiation,Struct] vector<int>
#-----|                     ValueCategory = lvalue
# 2225|         getDeclarationEntry(1): [VariableDeclarationEntry] declaration of (__end)
# 2225|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__end)
# 2225|             getExpr(): [FunctionCall] call to end
# 2225|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2225|                 ValueCategory = prvalue
# 2225|               getQualifier(): [VariableAccess] (__range)
# 2225|                   Type = [LValueReferenceType] vector<int> &
# 2225|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const vector<int>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const vector<int>
#-----|                   ValueCategory = lvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ClassTemplateInstantiation,Struct] vector<int>
#-----|                     ValueCategory = lvalue
# 2225|       getCondition(): [FunctionCall] call to operator!=
# 2225|           Type = [BoolType] bool
# 2225|           ValueCategory = prvalue
# 2225|         getQualifier(): [VariableAccess] (__begin)
# 2225|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2225|             ValueCategory = lvalue
# 2225|         getArgument(0): [ConstructorCall] call to iterator
# 2225|             Type = [VoidType] void
# 2225|             ValueCategory = prvalue
# 2225|           getArgument(0): [VariableAccess] (__end)
# 2225|               Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2225|               ValueCategory = lvalue
#-----|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|               Type = [LValueReferenceType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &
#-----|               ValueCategory = prvalue
#-----|             getExpr(): [CStyleCast] (const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)...
#-----|                 Conversion = [GlvalueConversion] glvalue conversion
#-----|                 Type = [SpecifiedType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
#-----|                 ValueCategory = lvalue
#-----|         getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)...
#-----|             Conversion = [GlvalueConversion] glvalue conversion
#-----|             Type = [SpecifiedType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
#-----|             ValueCategory = lvalue
#-----|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
#-----|             ValueCategory = lvalue
# 2225|       getUpdate(): [FunctionCall] call to operator++
# 2225|           Type = [LValueReferenceType] iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &
# 2225|           ValueCategory = prvalue
# 2225|         getQualifier(): [VariableAccess] (__begin)
# 2225|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2225|             ValueCategory = lvalue
# 2225|       getChild(5): [DeclStmt] declaration
# 2225|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 2225|             Type = [IntType] int
# 2225|           getVariable().getInitializer(): [Initializer] initializer for y
# 2225|             getExpr(): [OverloadedPointerDereferenceExpr] call to operator*
# 2225|                 Type = [LValueReferenceType] int &
# 2225|                 ValueCategory = prvalue
# 2225|               getQualifier(): [VariableAccess] (__begin)
# 2225|                   Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2225|                   ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
#-----|                   ValueCategory = lvalue
# 2225|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2225|                 Type = [IntType] int
# 2225|                 ValueCategory = prvalue(load)
# 2225|       getStmt(): [BlockStmt] { ... }
# 2226|         getStmt(0): [IfStmt] if (...) ... 
# 2226|           getCondition(): [EQExpr] ... == ...
# 2226|               Type = [BoolType] bool
# 2226|               ValueCategory = prvalue
# 2226|             getLeftOperand(): [VariableAccess] y
# 2226|                 Type = [IntType] int
# 2226|                 ValueCategory = prvalue(load)
# 2226|             getRightOperand(): [Literal] 1
# 2226|                 Type = [IntType] int
# 2226|                 Value = [Literal] 1
# 2226|                 ValueCategory = prvalue
# 2227|           getThen(): [ReturnStmt] return ...
# 2225|             getImplicitDestructorCall(0): [DestructorCall] call to ~vector
# 2225|                 Type = [VoidType] void
# 2225|                 ValueCategory = prvalue
# 2225|               getQualifier(): [VariableAccess] ys
# 2225|                   Type = [ClassTemplateInstantiation,Struct] vector<int>
# 2225|                   ValueCategory = lvalue
# 2234|             getImplicitDestructorCall(1): [DestructorCall] call to ~ClassWithDestructor
# 2234|                 Type = [VoidType] void
# 2234|                 ValueCategory = prvalue
# 2234|               getQualifier(): [VariableAccess] x
# 2234|                   Type = [Class] ClassWithDestructor
# 2234|                   ValueCategory = lvalue
# 2225|       getImplicitDestructorCall(0): [DestructorCall] call to ~vector
# 2225|           Type = [VoidType] void
# 2225|           ValueCategory = prvalue
# 2225|         getQualifier(): [VariableAccess] ys
# 2225|             Type = [ClassTemplateInstantiation,Struct] vector<int>
# 2225|             ValueCategory = lvalue
# 2225|       getUpdate().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2225|           Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>
# 2225|           ValueCategory = lvalue
# 2230|     getStmt(8): [RangeBasedForStmt] for(...:...) ...
# 2230|       getInitialization(): [DeclStmt] declaration
# 2230|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of ys
# 2230|             Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
# 2230|           getVariable().getInitializer(): [Initializer] initializer for ys
# 2230|             getExpr(): [ConstructorCall] call to vector
# 2230|                 Type = [VoidType] void
# 2230|                 ValueCategory = prvalue
# 2230|               getArgument(0): [VariableAccess] x
# 2230|                   Type = [Class] ClassWithDestructor
# 2230|                   ValueCategory = prvalue(load)
# 2230|               getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2230|                   Type = [VoidType] void
# 2230|                   ValueCategory = prvalue
# 2230|                 getQualifier(): [ReuseExpr] reuse of temporary object
# 2230|                     Type = [Class] ClassWithDestructor
# 2230|                     ValueCategory = xvalue
# 2230|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2230|                   Type = [Class] ClassWithDestructor
# 2230|                   ValueCategory = lvalue
# 2230|       getChild(1): [DeclStmt] declaration
# 2230|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__range)
# 2230|             Type = [LValueReferenceType] vector<ClassWithDestructor> &
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__range)
# 2230|             getExpr(): [VariableAccess] ys
# 2230|                 Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
# 2230|                 ValueCategory = lvalue
# 2230|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 2230|                 Type = [LValueReferenceType] vector<ClassWithDestructor> &
# 2230|                 ValueCategory = prvalue
# 2230|       getBeginEndDeclaration(): [DeclStmt] declaration
# 2230|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__begin)
# 2230|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__begin)
# 2230|             getExpr(): [FunctionCall] call to begin
# 2230|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2230|                 ValueCategory = prvalue
# 2230|               getQualifier(): [VariableAccess] (__range)
# 2230|                   Type = [LValueReferenceType] vector<ClassWithDestructor> &
# 2230|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const vector<ClassWithDestructor>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const vector<ClassWithDestructor>
#-----|                   ValueCategory = lvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
#-----|                     ValueCategory = lvalue
# 2230|         getDeclarationEntry(1): [VariableDeclarationEntry] declaration of (__end)
# 2230|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__end)
# 2230|             getExpr(): [FunctionCall] call to end
# 2230|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2230|                 ValueCategory = prvalue
# 2230|               getQualifier(): [VariableAccess] (__range)
# 2230|                   Type = [LValueReferenceType] vector<ClassWithDestructor> &
# 2230|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const vector<ClassWithDestructor>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const vector<ClassWithDestructor>
#-----|                   ValueCategory = lvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
#-----|                     ValueCategory = lvalue
# 2230|       getCondition(): [FunctionCall] call to operator!=
# 2230|           Type = [BoolType] bool
# 2230|           ValueCategory = prvalue
# 2230|         getQualifier(): [VariableAccess] (__begin)
# 2230|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2230|             ValueCategory = lvalue
# 2230|         getArgument(0): [ConstructorCall] call to iterator
# 2230|             Type = [VoidType] void
# 2230|             ValueCategory = prvalue
# 2230|           getArgument(0): [VariableAccess] (__end)
# 2230|               Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2230|               ValueCategory = lvalue
#-----|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|               Type = [LValueReferenceType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &
#-----|               ValueCategory = prvalue
#-----|             getExpr(): [CStyleCast] (const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)...
#-----|                 Conversion = [GlvalueConversion] glvalue conversion
#-----|                 Type = [SpecifiedType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
#-----|                 ValueCategory = lvalue
#-----|         getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)...
#-----|             Conversion = [GlvalueConversion] glvalue conversion
#-----|             Type = [SpecifiedType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
#-----|             ValueCategory = lvalue
#-----|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
#-----|             ValueCategory = lvalue
# 2230|       getUpdate(): [FunctionCall] call to operator++
# 2230|           Type = [LValueReferenceType] iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &
# 2230|           ValueCategory = prvalue
# 2230|         getQualifier(): [VariableAccess] (__begin)
# 2230|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2230|             ValueCategory = lvalue
# 2230|       getChild(5): [DeclStmt] declaration
# 2230|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 2230|             Type = [Class] ClassWithDestructor
# 2230|           getVariable().getInitializer(): [Initializer] initializer for y
# 2230|             getExpr(): [OverloadedPointerDereferenceExpr] call to operator*
# 2230|                 Type = [LValueReferenceType] ClassWithDestructor &
# 2230|                 ValueCategory = prvalue
# 2230|               getQualifier(): [VariableAccess] (__begin)
# 2230|                   Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2230|                   ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
#-----|                   ValueCategory = lvalue
# 2230|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2230|                 Type = [Class] ClassWithDestructor
# 2230|                 ValueCategory = prvalue(load)
# 2230|       getStmt(): [BlockStmt] { ... }
# 2231|         getStmt(0): [DeclStmt] declaration
# 2231|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of z1
# 2231|               Type = [Class] ClassWithDestructor
# 2231|             getVariable().getInitializer(): [Initializer] initializer for z1
# 2231|               getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2231|                   Type = [VoidType] void
# 2231|                   ValueCategory = prvalue
# 2232|         getStmt(1): [DeclStmt] declaration
# 2232|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of z2
# 2232|               Type = [Class] ClassWithDestructor
# 2232|             getVariable().getInitializer(): [Initializer] initializer for z2
# 2232|               getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2232|                   Type = [VoidType] void
# 2232|                   ValueCategory = prvalue
# 2233|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2233|             Type = [VoidType] void
# 2233|             ValueCategory = prvalue
# 2233|           getQualifier(): [VariableAccess] z2
# 2233|               Type = [Class] ClassWithDestructor
# 2233|               ValueCategory = lvalue
# 2233|         getImplicitDestructorCall(1): [DestructorCall] call to ~ClassWithDestructor
# 2233|             Type = [VoidType] void
# 2233|             ValueCategory = prvalue
# 2233|           getQualifier(): [VariableAccess] z1
# 2233|               Type = [Class] ClassWithDestructor
# 2233|               ValueCategory = lvalue
# 2230|       getImplicitDestructorCall(0): [DestructorCall] call to ~vector
# 2230|           Type = [VoidType] void
# 2230|           ValueCategory = prvalue
# 2230|         getQualifier(): [VariableAccess] ys
# 2230|             Type = [ClassTemplateInstantiation,Struct] vector<ClassWithDestructor>
# 2230|             ValueCategory = lvalue
# 2230|       getUpdate().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2230|           Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>
# 2230|           ValueCategory = lvalue
# 2230|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2230|             Type = [VoidType] void
# 2230|             ValueCategory = prvalue
# 2230|           getQualifier(): [VariableAccess] y
# 2230|               Type = [Class] ClassWithDestructor
# 2230|               ValueCategory = lvalue
# 2234|     getStmt(9): [ReturnStmt] return ...
# 2234|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2234|           Type = [VoidType] void
# 2234|           ValueCategory = prvalue
# 2234|         getQualifier(): [VariableAccess] x
# 2234|             Type = [Class] ClassWithDestructor
# 2234|             ValueCategory = lvalue
# 2236| [TopLevelFunction] void static_variable_with_destructor_1()
# 2236|   <params>: 
# 2236|   getEntryPoint(): [BlockStmt] { ... }
# 2237|     getStmt(0): [DeclStmt] declaration
# 2237|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a
# 2237|           Type = [Class] ClassWithDestructor
# 2237|         getVariable().getInitializer(): [Initializer] initializer for a
# 2237|           getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2237|               Type = [VoidType] void
# 2237|               ValueCategory = prvalue
# 2238|     getStmt(1): [DeclStmt] declaration
# 2238|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
# 2238|           Type = [Class] ClassWithDestructor
#-----|         getVariable().getInitializer(): [Initializer] initializer for b
#-----|           getExpr(): [ConstructorCall] call to ClassWithDestructor
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
# 2239|     getStmt(2): [ReturnStmt] return ...
# 2239|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2239|           Type = [VoidType] void
# 2239|           ValueCategory = prvalue
# 2239|         getQualifier(): [VariableAccess] a
# 2239|             Type = [Class] ClassWithDestructor
# 2239|             ValueCategory = lvalue
# 2241| [TopLevelFunction] void static_variable_with_destructor_2()
# 2241|   <params>: 
# 2241|   getEntryPoint(): [BlockStmt] { ... }
# 2242|     getStmt(0): [DeclStmt] declaration
# 2242|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a
# 2242|           Type = [Class] ClassWithDestructor
#-----|         getVariable().getInitializer(): [Initializer] initializer for a
#-----|           getExpr(): [ConstructorCall] call to ClassWithDestructor
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
# 2243|     getStmt(1): [DeclStmt] declaration
# 2243|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
# 2243|           Type = [Class] ClassWithDestructor
# 2243|         getVariable().getInitializer(): [Initializer] initializer for b
# 2243|           getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2243|               Type = [VoidType] void
# 2243|               ValueCategory = prvalue
# 2244|     getStmt(2): [ReturnStmt] return ...
# 2244|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2244|           Type = [VoidType] void
# 2244|           ValueCategory = prvalue
# 2244|         getQualifier(): [VariableAccess] b
# 2244|             Type = [Class] ClassWithDestructor
# 2244|             ValueCategory = lvalue
# 2246| [TopLevelFunction] void static_variable_with_destructor_3()
# 2246|   <params>: 
# 2246|   getEntryPoint(): [BlockStmt] { ... }
# 2247|     getStmt(0): [DeclStmt] declaration
# 2247|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a
# 2247|           Type = [Class] ClassWithDestructor
# 2247|         getVariable().getInitializer(): [Initializer] initializer for a
# 2247|           getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2247|               Type = [VoidType] void
# 2247|               ValueCategory = prvalue
# 2248|     getStmt(1): [DeclStmt] declaration
# 2248|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
# 2248|           Type = [Class] ClassWithDestructor
# 2248|         getVariable().getInitializer(): [Initializer] initializer for b
# 2248|           getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2248|               Type = [VoidType] void
# 2248|               ValueCategory = prvalue
# 2249|     getStmt(2): [DeclStmt] declaration
# 2249|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
# 2249|           Type = [Class] ClassWithDestructor
#-----|         getVariable().getInitializer(): [Initializer] initializer for c
#-----|           getExpr(): [ConstructorCall] call to ClassWithDestructor
#-----|               Type = [VoidType] void
#-----|               ValueCategory = prvalue
# 2250|     getStmt(3): [ReturnStmt] return ...
# 2250|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2250|           Type = [VoidType] void
# 2250|           ValueCategory = prvalue
# 2250|         getQualifier(): [VariableAccess] b
# 2250|             Type = [Class] ClassWithDestructor
# 2250|             ValueCategory = lvalue
# 2250|       getImplicitDestructorCall(1): [DestructorCall] call to ~ClassWithDestructor
# 2250|           Type = [VoidType] void
# 2250|           ValueCategory = prvalue
# 2250|         getQualifier(): [VariableAccess] a
# 2250|             Type = [Class] ClassWithDestructor
# 2250|             ValueCategory = lvalue
# 2252| [GlobalVariable] ClassWithDestructor global_class_with_destructor
# 2252|   getInitializer(): [Initializer] initializer for global_class_with_destructor
# 2252|     getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2252|         Type = [VoidType] void
# 2252|         ValueCategory = prvalue
# 2256| [FunctionTemplateInstantiation,TopLevelFunction] ClassWithDestructor& vacuous_destructor_call::get<ClassWithDestructor>(ClassWithDestructor&)
# 2256|   <params>: 
# 2256|     getParameter(0): [Parameter] t
# 2256|         Type = [LValueReferenceType] ClassWithDestructor &
# 2256|   getEntryPoint(): [BlockStmt] { ... }
# 2256|     getStmt(0): [ReturnStmt] return ...
# 2256|       getExpr(): [VariableAccess] t
# 2256|           Type = [LValueReferenceType] ClassWithDestructor &
# 2256|           ValueCategory = prvalue(load)
# 2256|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 2256|           Type = [LValueReferenceType] ClassWithDestructor &
# 2256|           ValueCategory = prvalue
# 2256|         getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 2256|             Type = [Class] ClassWithDestructor
# 2256|             ValueCategory = lvalue
# 2256| [TemplateFunction,TopLevelFunction] T& vacuous_destructor_call::get<T>(T&)
# 2256|   <params>: 
# 2256|     getParameter(0): [Parameter] t
# 2256|         Type = [LValueReferenceType] T &
# 2256|   getEntryPoint(): [BlockStmt] { ... }
# 2256|     getStmt(0): [ReturnStmt] return ...
# 2256|       getExpr(): [VariableAccess] t
# 2256|           Type = [LValueReferenceType] T &
# 2256|           ValueCategory = prvalue(load)
# 2256|       getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2256|           Type = [TemplateParameter] T
# 2256|           ValueCategory = lvalue
# 2256| [FunctionTemplateInstantiation,TopLevelFunction] int& vacuous_destructor_call::get<int>(int&)
# 2256|   <params>: 
# 2256|     getParameter(0): [Parameter] t
# 2256|         Type = [LValueReferenceType] int &
# 2256|   getEntryPoint(): [BlockStmt] { ... }
# 2256|     getStmt(0): [ReturnStmt] return ...
# 2256|       getExpr(): [VariableAccess] t
# 2256|           Type = [LValueReferenceType] int &
# 2256|           ValueCategory = prvalue(load)
# 2256|       getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 2256|           Type = [LValueReferenceType] int &
# 2256|           ValueCategory = prvalue
# 2256|         getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 2256|             Type = [IntType] int
# 2256|             ValueCategory = lvalue
# 2259| [FunctionTemplateInstantiation,TopLevelFunction] void vacuous_destructor_call::call_destructor<ClassWithDestructor>(ClassWithDestructor&)
# 2259|   <params>: 
# 2259|     getParameter(0): [Parameter] t
# 2259|         Type = [LValueReferenceType] ClassWithDestructor &
# 2259|   getEntryPoint(): [BlockStmt] { ... }
# 2260|     getStmt(0): [ExprStmt] ExprStmt
# 2260|       getExpr(): [DestructorCall] call to ~ClassWithDestructor
# 2260|           Type = [VoidType] void
# 2260|           ValueCategory = prvalue
# 2260|         getQualifier(): [FunctionCall] call to get
# 2260|             Type = [LValueReferenceType] ClassWithDestructor &
# 2260|             ValueCategory = prvalue
# 2260|           getArgument(0): [VariableAccess] t
# 2260|               Type = [LValueReferenceType] ClassWithDestructor &
# 2260|               ValueCategory = prvalue(load)
# 2260|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 2260|               Type = [LValueReferenceType] ClassWithDestructor &
# 2260|               ValueCategory = prvalue
# 2260|             getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 2260|                 Type = [Class] ClassWithDestructor
# 2260|                 ValueCategory = lvalue
# 2260|         getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2260|             Type = [Class] ClassWithDestructor
# 2260|             ValueCategory = lvalue
# 2261|     getStmt(1): [ReturnStmt] return ...
# 2259| [TemplateFunction,TopLevelFunction] void vacuous_destructor_call::call_destructor<T>(T&)
# 2259|   <params>: 
# 2259|     getParameter(0): [Parameter] t
# 2259|         Type = [LValueReferenceType] T &
# 2259|   getEntryPoint(): [BlockStmt] { ... }
# 2260|     getStmt(0): [ExprStmt] ExprStmt
# 2260|       getExpr(): [ExprCall] call to expression
# 2260|           Type = [UnknownType] unknown
# 2260|           ValueCategory = prvalue
# 2260|         getExpr(): [Literal] Unknown literal
# 2260|             Type = [UnknownType] unknown
# 2260|             ValueCategory = prvalue
# 2260|           getChild(-1): [ExprCall] call to expression
# 2260|               Type = [UnknownType] unknown
# 2260|               ValueCategory = prvalue
# 2260|             getExpr(): [Literal] Unknown literal
# 2260|                 Type = [UnknownType] unknown
# 2260|                 ValueCategory = prvalue
# 2260|             getArgument(0): [VariableAccess] t
# 2260|                 Type = [LValueReferenceType] T &
# 2260|                 ValueCategory = prvalue(load)
# 2260|             getArgument(0).getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2260|                 Type = [TemplateParameter] T
# 2260|                 ValueCategory = lvalue
# 2261|     getStmt(1): [ReturnStmt] return ...
# 2259| [FunctionTemplateInstantiation,TopLevelFunction] void vacuous_destructor_call::call_destructor<int>(int&)
# 2259|   <params>: 
# 2259|     getParameter(0): [Parameter] t
# 2259|         Type = [LValueReferenceType] int &
# 2259|   getEntryPoint(): [BlockStmt] { ... }
# 2260|     getStmt(0): [ExprStmt] ExprStmt
# 2260|       getExpr(): [VacuousDestructorCall] (vacuous destructor call)
# 2260|           Type = [VoidType] void
# 2260|           ValueCategory = prvalue
# 2260|         getChild(0): [FunctionCall] call to get
# 2260|             Type = [LValueReferenceType] int &
# 2260|             ValueCategory = prvalue
# 2260|           getArgument(0): [VariableAccess] t
# 2260|               Type = [LValueReferenceType] int &
# 2260|               ValueCategory = prvalue(load)
# 2260|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 2260|               Type = [LValueReferenceType] int &
# 2260|               ValueCategory = prvalue
# 2260|             getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 2260|                 Type = [IntType] int
# 2260|                 ValueCategory = lvalue
# 2260|         getChild(0).getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2260|             Type = [IntType] int
# 2260|             ValueCategory = lvalue
# 2261|     getStmt(1): [ReturnStmt] return ...
# 2263| [TopLevelFunction] void vacuous_destructor_call::non_vacuous_destructor_call()
# 2263|   <params>: 
# 2263|   getEntryPoint(): [BlockStmt] { ... }
# 2264|     getStmt(0): [DeclStmt] declaration
# 2264|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
# 2264|           Type = [Class] ClassWithDestructor
# 2264|         getVariable().getInitializer(): [Initializer] initializer for c
# 2264|           getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2264|               Type = [VoidType] void
# 2264|               ValueCategory = prvalue
# 2265|     getStmt(1): [ExprStmt] ExprStmt
# 2265|       getExpr(): [FunctionCall] call to call_destructor
# 2265|           Type = [VoidType] void
# 2265|           ValueCategory = prvalue
# 2265|         getArgument(0): [VariableAccess] c
# 2265|             Type = [Class] ClassWithDestructor
# 2265|             ValueCategory = lvalue
# 2265|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 2265|             Type = [LValueReferenceType] ClassWithDestructor &
# 2265|             ValueCategory = prvalue
# 2266|     getStmt(2): [ReturnStmt] return ...
# 2266|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2266|           Type = [VoidType] void
# 2266|           ValueCategory = prvalue
# 2266|         getQualifier(): [VariableAccess] c
# 2266|             Type = [Class] ClassWithDestructor
# 2266|             ValueCategory = lvalue
# 2268| [TopLevelFunction] void vacuous_destructor_call::vacuous_destructor_call()
# 2268|   <params>: 
# 2268|   getEntryPoint(): [BlockStmt] { ... }
# 2269|     getStmt(0): [DeclStmt] declaration
# 2269|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
# 2269|           Type = [IntType] int
# 2270|     getStmt(1): [ExprStmt] ExprStmt
# 2270|       getExpr(): [FunctionCall] call to call_destructor
# 2270|           Type = [VoidType] void
# 2270|           ValueCategory = prvalue
# 2270|         getArgument(0): [VariableAccess] i
# 2270|             Type = [IntType] int
# 2270|             ValueCategory = lvalue
# 2270|         getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 2270|             Type = [LValueReferenceType] int &
# 2270|             ValueCategory = prvalue
# 2271|     getStmt(2): [ReturnStmt] return ...
# 2274| [TopLevelFunction] void TryCatchDestructors(bool)
# 2274|   <params>: 
# 2274|     getParameter(0): [Parameter] b
# 2274|         Type = [BoolType] bool
# 2274|   getEntryPoint(): [BlockStmt] { ... }
# 2275|     getStmt(0): [TryStmt] try { ... }
# 2275|       getStmt(): [BlockStmt] { ... }
# 2276|         getStmt(0): [DeclStmt] declaration
# 2276|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 2276|               Type = [Struct] String
# 2276|             getVariable().getInitializer(): [Initializer] initializer for s
# 2276|               getExpr(): [ConstructorCall] call to String
# 2276|                   Type = [VoidType] void
# 2276|                   ValueCategory = prvalue
# 2277|         getStmt(1): [IfStmt] if (...) ... 
# 2277|           getCondition(): [VariableAccess] b
# 2277|               Type = [BoolType] bool
# 2277|               ValueCategory = prvalue(load)
# 2277|           getThen(): [BlockStmt] { ... }
# 2278|             getStmt(0): [ExprStmt] ExprStmt
# 2278|               getExpr(): [ThrowExpr] throw ...
# 2278|                   Type = [PointerType] const char *
# 2278|                   ValueCategory = prvalue
# 2278|                 getExpr(): string literal
# 2278|                     Type = [ArrayType] const char[15]
# 2278|                     Value = [StringLiteral] "string literal"
# 2278|                     ValueCategory = lvalue
# 2281|                 getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2281|                     Type = [VoidType] void
# 2281|                     ValueCategory = prvalue
# 2281|                   getQualifier(): [VariableAccess] s
# 2281|                       Type = [Struct] String
# 2281|                       ValueCategory = lvalue
# 2278|                 getExpr().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 2278|                     Type = [PointerType] const char *
# 2278|                     ValueCategory = prvalue
# 2280|         getStmt(2): [DeclStmt] declaration
# 2280|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of s2
# 2280|               Type = [Struct] String
# 2280|             getVariable().getInitializer(): [Initializer] initializer for s2
# 2280|               getExpr(): [ConstructorCall] call to String
# 2280|                   Type = [VoidType] void
# 2280|                   ValueCategory = prvalue
# 2281|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2281|             Type = [VoidType] void
# 2281|             ValueCategory = prvalue
# 2281|           getQualifier(): [VariableAccess] s2
# 2281|               Type = [Struct] String
# 2281|               ValueCategory = lvalue
# 2281|         getImplicitDestructorCall(1): [DestructorCall] call to ~String
# 2281|             Type = [VoidType] void
# 2281|             ValueCategory = prvalue
# 2281|           getQualifier(): [VariableAccess] s
# 2281|               Type = [Struct] String
# 2281|               ValueCategory = lvalue
# 2282|       getChild(1): [Handler] <handler>
# 2282|         getBlock(): [CatchBlock] { ... }
# 2283|           getStmt(0): [ExprStmt] ExprStmt
# 2283|             getExpr(): [ThrowExpr] throw ...
# 2283|                 Type = [Struct] String
# 2283|                 ValueCategory = prvalue
# 2283|               getExpr(): [ConstructorCall] call to String
# 2283|                   Type = [VoidType] void
# 2283|                   ValueCategory = prvalue
# 2283|                 getArgument(0): [VariableAccess] s
# 2283|                     Type = [PointerType] const char *
# 2283|                     ValueCategory = prvalue(load)
# 2285|       getChild(2): [Handler] <handler>
# 2285|         getBlock(): [CatchBlock] { ... }
# 2287|       getChild(3): [Handler] <handler>
# 2287|         getBlock(): [CatchAnyBlock] { ... }
# 2288|           getStmt(0): [ExprStmt] ExprStmt
# 2288|             getExpr(): [ReThrowExpr] re-throw exception 
# 2288|                 Type = [VoidType] void
# 2288|                 ValueCategory = prvalue
# 2290|     getStmt(1): [ReturnStmt] return ...
# 2292| [TopLevelFunction] void IfDestructors(bool)
# 2292|   <params>: 
# 2292|     getParameter(0): [Parameter] b
# 2292|         Type = [BoolType] bool
# 2292|   getEntryPoint(): [BlockStmt] { ... }
# 2293|     getStmt(0): [DeclStmt] declaration
# 2293|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s1
# 2293|           Type = [Struct] String
# 2293|         getVariable().getInitializer(): [Initializer] initializer for s1
# 2293|           getExpr(): [ConstructorCall] call to String
# 2293|               Type = [VoidType] void
# 2293|               ValueCategory = prvalue
# 2294|     getStmt(1): [IfStmt] if (...) ... 
# 2294|       getCondition(): [VariableAccess] b
# 2294|           Type = [BoolType] bool
# 2294|           ValueCategory = prvalue(load)
# 2294|       getThen(): [BlockStmt] { ... }
# 2295|         getStmt(0): [DeclStmt] declaration
# 2295|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of s2
# 2295|               Type = [Struct] String
# 2295|             getVariable().getInitializer(): [Initializer] initializer for s2
# 2295|               getExpr(): [ConstructorCall] call to String
# 2295|                   Type = [VoidType] void
# 2295|                   ValueCategory = prvalue
# 2296|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2296|             Type = [VoidType] void
# 2296|             ValueCategory = prvalue
# 2296|           getQualifier(): [VariableAccess] s2
# 2296|               Type = [Struct] String
# 2296|               ValueCategory = lvalue
# 2296|       getElse(): [BlockStmt] { ... }
# 2297|         getStmt(0): [DeclStmt] declaration
# 2297|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of s3
# 2297|               Type = [Struct] String
# 2297|             getVariable().getInitializer(): [Initializer] initializer for s3
# 2297|               getExpr(): [ConstructorCall] call to String
# 2297|                   Type = [VoidType] void
# 2297|                   ValueCategory = prvalue
# 2298|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2298|             Type = [VoidType] void
# 2298|             ValueCategory = prvalue
# 2298|           getQualifier(): [VariableAccess] s3
# 2298|               Type = [Struct] String
# 2298|               ValueCategory = lvalue
# 2299|     getStmt(2): [DeclStmt] declaration
# 2299|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s4
# 2299|           Type = [Struct] String
# 2299|         getVariable().getInitializer(): [Initializer] initializer for s4
# 2299|           getExpr(): [ConstructorCall] call to String
# 2299|               Type = [VoidType] void
# 2299|               ValueCategory = prvalue
# 2300|     getStmt(3): [ReturnStmt] return ...
# 2300|       getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2300|           Type = [VoidType] void
# 2300|           ValueCategory = prvalue
# 2300|         getQualifier(): [VariableAccess] s4
# 2300|             Type = [Struct] String
# 2300|             ValueCategory = lvalue
# 2300|       getImplicitDestructorCall(1): [DestructorCall] call to ~String
# 2300|           Type = [VoidType] void
# 2300|           ValueCategory = prvalue
# 2300|         getQualifier(): [VariableAccess] s1
# 2300|             Type = [Struct] String
# 2300|             ValueCategory = lvalue
# 2302| [TopLevelFunction] void ForDestructors()
# 2302|   <params>: 
# 2302|   getEntryPoint(): [BlockStmt] { ... }
# 2303|     getStmt(0): [DeclStmt] declaration
# 2303|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
# 2303|           Type = [PlainCharType] char
# 2303|         getVariable().getInitializer(): [Initializer] initializer for c
# 2303|           getExpr(): [CharLiteral] 97
# 2303|               Type = [PlainCharType] char
# 2303|               Value = [CharLiteral] 97
# 2303|               ValueCategory = prvalue
# 2304|     getStmt(1): [ForStmt] for(...;...;...) ...
# 2304|       getInitialization(): [DeclStmt] declaration
# 2304|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 2304|             Type = [Struct] String
# 2304|           getVariable().getInitializer(): [Initializer] initializer for s
# 2304|             getExpr(): [ConstructorCall] call to String
# 2304|                 Type = [VoidType] void
# 2304|                 ValueCategory = prvalue
# 2304|               getArgument(0): hello
# 2304|                   Type = [ArrayType] const char[6]
# 2304|                   Value = [StringLiteral] "hello"
# 2304|                   ValueCategory = lvalue
# 2304|               getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 2304|                   Type = [PointerType] const char *
# 2304|                   ValueCategory = prvalue
# 2304|       getCondition(): [NEExpr] ... != ...
# 2304|           Type = [BoolType] bool
# 2304|           ValueCategory = prvalue
# 2304|         getLeftOperand(): [VariableAccess] c
# 2304|             Type = [PlainCharType] char
# 2304|             ValueCategory = prvalue(load)
# 2304|         getRightOperand(): [Literal] 0
# 2304|             Type = [IntType] int
# 2304|             Value = [Literal] 0
# 2304|             ValueCategory = prvalue
# 2304|         getLeftOperand().getFullyConverted(): [CStyleCast] (int)...
# 2304|             Conversion = [IntegralConversion] integral conversion
# 2304|             Type = [IntType] int
# 2304|             ValueCategory = prvalue
# 2304|       getUpdate(): [AssignExpr] ... = ...
# 2304|           Type = [PlainCharType] char
# 2304|           ValueCategory = lvalue
# 2304|         getLValue(): [VariableAccess] c
# 2304|             Type = [PlainCharType] char
# 2304|             ValueCategory = lvalue
# 2304|         getRValue(): [FunctionCall] call to pop_back
# 2304|             Type = [PlainCharType] char
# 2304|             ValueCategory = prvalue
# 2304|           getQualifier(): [VariableAccess] s
# 2304|               Type = [Struct] String
# 2304|               ValueCategory = lvalue
# 2304|       getStmt(): [BlockStmt] { ... }
# 2305|         getStmt(0): [DeclStmt] declaration
# 2305|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of s2
# 2305|               Type = [Struct] String
# 2305|             getVariable().getInitializer(): [Initializer] initializer for s2
# 2305|               getExpr(): [ConstructorCall] call to String
# 2305|                   Type = [VoidType] void
# 2305|                   ValueCategory = prvalue
# 2306|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2306|             Type = [VoidType] void
# 2306|             ValueCategory = prvalue
# 2306|           getQualifier(): [VariableAccess] s2
# 2306|               Type = [Struct] String
# 2306|               ValueCategory = lvalue
# 2304|       getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2304|           Type = [VoidType] void
# 2304|           ValueCategory = prvalue
# 2304|         getQualifier(): [VariableAccess] s
# 2304|             Type = [Struct] String
# 2304|             ValueCategory = lvalue
# 2308|     getStmt(2): [RangeBasedForStmt] for(...:...) ...
# 2308|       getChild(1): [DeclStmt] declaration
# 2308|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__range)
# 2308|             Type = [RValueReferenceType] vector<String> &&
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__range)
# 2308|             getExpr(): [ConstructorCall] call to vector
# 2308|                 Type = [VoidType] void
# 2308|                 ValueCategory = prvalue
# 2308|               getArgument(0): [ConstructorCall] call to String
# 2308|                   Type = [VoidType] void
# 2308|                   ValueCategory = prvalue
# 2308|                 getArgument(0): hello
# 2308|                     Type = [ArrayType] const char[6]
# 2308|                     Value = [StringLiteral] "hello"
# 2308|                     ValueCategory = lvalue
# 2308|                 getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 2308|                     Type = [PointerType] const char *
# 2308|                     ValueCategory = prvalue
# 2308|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2308|                   Type = [Struct] String
# 2308|                   ValueCategory = lvalue
# 2308|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 2308|                 Type = [LValueReferenceType] vector<String> &
# 2308|                 ValueCategory = prvalue
# 2308|               getExpr(): [TemporaryObjectExpr] temporary object
# 2308|                   Type = [ClassTemplateInstantiation,Struct] vector<String>
# 2308|                   ValueCategory = xvalue
# 2308|                 getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2308|                     Type = [VoidType] void
# 2308|                     ValueCategory = prvalue
# 2308|                   getQualifier(): [ReuseExpr] reuse of temporary object
# 2308|                       Type = [Struct] String
# 2308|                       ValueCategory = xvalue
# 2308|       getBeginEndDeclaration(): [DeclStmt] declaration
# 2308|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__begin)
# 2308|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__begin)
# 2308|             getExpr(): [FunctionCall] call to begin
# 2308|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2308|                 ValueCategory = prvalue
# 2308|               getQualifier(): [VariableAccess] (__range)
# 2308|                   Type = [RValueReferenceType] vector<String> &&
# 2308|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const vector<String>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const vector<String>
#-----|                   ValueCategory = lvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ClassTemplateInstantiation,Struct] vector<String>
#-----|                     ValueCategory = lvalue
# 2308|         getDeclarationEntry(1): [VariableDeclarationEntry] declaration of (__end)
# 2308|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__end)
# 2308|             getExpr(): [FunctionCall] call to end
# 2308|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2308|                 ValueCategory = prvalue
# 2308|               getQualifier(): [VariableAccess] (__range)
# 2308|                   Type = [RValueReferenceType] vector<String> &&
# 2308|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const vector<String>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const vector<String>
#-----|                   ValueCategory = lvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ClassTemplateInstantiation,Struct] vector<String>
#-----|                     ValueCategory = lvalue
# 2308|       getCondition(): [FunctionCall] call to operator!=
# 2308|           Type = [BoolType] bool
# 2308|           ValueCategory = prvalue
# 2308|         getQualifier(): [VariableAccess] (__begin)
# 2308|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2308|             ValueCategory = lvalue
# 2308|         getArgument(0): [ConstructorCall] call to iterator
# 2308|             Type = [VoidType] void
# 2308|             ValueCategory = prvalue
# 2308|           getArgument(0): [VariableAccess] (__end)
# 2308|               Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2308|               ValueCategory = lvalue
#-----|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|               Type = [LValueReferenceType] const iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &> &
#-----|               ValueCategory = prvalue
#-----|             getExpr(): [CStyleCast] (const iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>)...
#-----|                 Conversion = [GlvalueConversion] glvalue conversion
#-----|                 Type = [SpecifiedType] const iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>
#-----|                 ValueCategory = lvalue
#-----|         getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>)...
#-----|             Conversion = [GlvalueConversion] glvalue conversion
#-----|             Type = [SpecifiedType] const iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>
#-----|             ValueCategory = lvalue
#-----|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>
#-----|             ValueCategory = lvalue
# 2308|       getUpdate(): [FunctionCall] call to operator++
# 2308|           Type = [LValueReferenceType] iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &> &
# 2308|           ValueCategory = prvalue
# 2308|         getQualifier(): [VariableAccess] (__begin)
# 2308|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2308|             ValueCategory = lvalue
# 2308|       getChild(5): [DeclStmt] declaration
# 2308|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 2308|             Type = [Struct] String
# 2308|           getVariable().getInitializer(): [Initializer] initializer for s
# 2308|             getExpr(): [ConstructorCall] call to String
# 2308|                 Type = [VoidType] void
# 2308|                 ValueCategory = prvalue
# 2308|               getArgument(0): [OverloadedPointerDereferenceExpr] call to operator*
# 2308|                   Type = [LValueReferenceType] String &
# 2308|                   ValueCategory = prvalue
# 2308|                 getQualifier(): [VariableAccess] (__begin)
# 2308|                     Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2308|                     ValueCategory = lvalue
#-----|                 getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>)...
#-----|                     Conversion = [GlvalueConversion] glvalue conversion
#-----|                     Type = [SpecifiedType] const iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>
#-----|                     ValueCategory = lvalue
# 2308|               getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
# 2308|                   Type = [LValueReferenceType] const String &
# 2308|                   ValueCategory = prvalue
# 2308|                 getExpr(): [CStyleCast] (const String)...
# 2308|                     Conversion = [GlvalueConversion] glvalue conversion
# 2308|                     Type = [SpecifiedType] const String
# 2308|                     ValueCategory = lvalue
# 2308|                   getExpr(): [ReferenceDereferenceExpr] (reference dereference)
# 2308|                       Type = [Struct] String
# 2308|                       ValueCategory = lvalue
# 2308|       getStmt(): [BlockStmt] { ... }
# 2309|         getStmt(0): [DeclStmt] declaration
# 2309|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of s2
# 2309|               Type = [Struct] String
# 2309|             getVariable().getInitializer(): [Initializer] initializer for s2
# 2309|               getExpr(): [ConstructorCall] call to String
# 2309|                   Type = [VoidType] void
# 2309|                   ValueCategory = prvalue
# 2310|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2310|             Type = [VoidType] void
# 2310|             ValueCategory = prvalue
# 2310|           getQualifier(): [VariableAccess] s2
# 2310|               Type = [Struct] String
# 2310|               ValueCategory = lvalue
# 2308|       getImplicitDestructorCall(0): [DestructorCall] call to ~vector
# 2308|           Type = [VoidType] void
# 2308|           ValueCategory = prvalue
# 2308|         getQualifier(): [ReuseExpr] reuse of temporary object
# 2308|             Type = [ClassTemplateInstantiation,Struct] vector<String>
# 2308|             ValueCategory = xvalue
# 2308|       getUpdate().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2308|           Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>
# 2308|           ValueCategory = lvalue
# 2308|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2308|             Type = [VoidType] void
# 2308|             ValueCategory = prvalue
# 2308|           getQualifier(): [VariableAccess] s
# 2308|               Type = [Struct] String
# 2308|               ValueCategory = lvalue
# 2312|     getStmt(3): [ForStmt] for(...;...;...) ...
# 2312|       getInitialization(): [DeclStmt] declaration
# 2312|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 2312|             Type = [Struct] String
# 2312|           getVariable().getInitializer(): [Initializer] initializer for s
# 2312|             getExpr(): [ConstructorCall] call to String
# 2312|                 Type = [VoidType] void
# 2312|                 ValueCategory = prvalue
# 2312|               getArgument(0): hello
# 2312|                   Type = [ArrayType] const char[6]
# 2312|                   Value = [StringLiteral] "hello"
# 2312|                   ValueCategory = lvalue
# 2312|               getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 2312|                   Type = [PointerType] const char *
# 2312|                   ValueCategory = prvalue
# 2312|         getDeclarationEntry(1): [VariableDeclarationEntry] definition of s2
# 2312|             Type = [Struct] String
# 2312|           getVariable().getInitializer(): [Initializer] initializer for s2
# 2312|             getExpr(): [ConstructorCall] call to String
# 2312|                 Type = [VoidType] void
# 2312|                 ValueCategory = prvalue
# 2312|               getArgument(0): world
# 2312|                   Type = [ArrayType] const char[6]
# 2312|                   Value = [StringLiteral] "world"
# 2312|                   ValueCategory = lvalue
# 2312|               getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 2312|                   Type = [PointerType] const char *
# 2312|                   ValueCategory = prvalue
# 2312|       getCondition(): [NEExpr] ... != ...
# 2312|           Type = [BoolType] bool
# 2312|           ValueCategory = prvalue
# 2312|         getLeftOperand(): [VariableAccess] c
# 2312|             Type = [PlainCharType] char
# 2312|             ValueCategory = prvalue(load)
# 2312|         getRightOperand(): [Literal] 0
# 2312|             Type = [IntType] int
# 2312|             Value = [Literal] 0
# 2312|             ValueCategory = prvalue
# 2312|         getLeftOperand().getFullyConverted(): [CStyleCast] (int)...
# 2312|             Conversion = [IntegralConversion] integral conversion
# 2312|             Type = [IntType] int
# 2312|             ValueCategory = prvalue
# 2312|       getUpdate(): [AssignExpr] ... = ...
# 2312|           Type = [PlainCharType] char
# 2312|           ValueCategory = lvalue
# 2312|         getLValue(): [VariableAccess] c
# 2312|             Type = [PlainCharType] char
# 2312|             ValueCategory = lvalue
# 2312|         getRValue(): [FunctionCall] call to pop_back
# 2312|             Type = [PlainCharType] char
# 2312|             ValueCategory = prvalue
# 2312|           getQualifier(): [VariableAccess] s
# 2312|               Type = [Struct] String
# 2312|               ValueCategory = lvalue
# 2312|       getStmt(): [BlockStmt] { ... }
# 2313|         getStmt(0): [ExprStmt] ExprStmt
# 2313|           getExpr(): [AssignExpr] ... = ...
# 2313|               Type = [PlainCharType] char
# 2313|               ValueCategory = lvalue
# 2313|             getLValue(): [VariableAccess] c
# 2313|                 Type = [PlainCharType] char
# 2313|                 ValueCategory = lvalue
# 2313|             getRValue(): [Literal] 0
# 2313|                 Type = [IntType] int
# 2313|                 Value = [Literal] 0
# 2313|                 ValueCategory = prvalue
# 2313|             getRValue().getFullyConverted(): [CStyleCast] (char)...
# 2313|                 Conversion = [IntegralConversion] integral conversion
# 2313|                 Type = [PlainCharType] char
# 2313|                 Value = [CStyleCast] 0
# 2313|                 ValueCategory = prvalue
# 2312|       getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2312|           Type = [VoidType] void
# 2312|           ValueCategory = prvalue
# 2312|         getQualifier(): [VariableAccess] s2
# 2312|             Type = [Struct] String
# 2312|             ValueCategory = lvalue
# 2312|       getImplicitDestructorCall(1): [DestructorCall] call to ~String
# 2312|           Type = [VoidType] void
# 2312|           ValueCategory = prvalue
# 2312|         getQualifier(): [VariableAccess] s
# 2312|             Type = [Struct] String
# 2312|             ValueCategory = lvalue
# 2315|     getStmt(4): [ReturnStmt] return ...
# 2317| [TopLevelFunction] void IfDestructors2(bool)
# 2317|   <params>: 
# 2317|     getParameter(0): [Parameter] b
# 2317|         Type = [BoolType] bool
# 2317|   getEntryPoint(): [BlockStmt] { ... }
# 2318|     getStmt(0): [IfStmt] if (...) ... 
# 2318|       getInitialization(): [DeclStmt] declaration
# 2318|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 2318|             Type = [Struct] String
# 2318|           getVariable().getInitializer(): [Initializer] initializer for s
# 2318|             getExpr(): [ConstructorCall] call to String
# 2318|                 Type = [VoidType] void
# 2318|                 ValueCategory = prvalue
# 2318|               getArgument(0): hello
# 2318|                   Type = [ArrayType] const char[6]
# 2318|                   Value = [StringLiteral] "hello"
# 2318|                   ValueCategory = lvalue
# 2318|               getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 2318|                   Type = [PointerType] const char *
# 2318|                   ValueCategory = prvalue
# 2318|       getCondition(): [VariableAccess] b
# 2318|           Type = [BoolType] bool
# 2318|           ValueCategory = prvalue(load)
# 2318|       getThen(): [BlockStmt] { ... }
# 2319|         getStmt(0): [DeclStmt] declaration
# 2319|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2319|               Type = [IntType] int
# 2319|             getVariable().getInitializer(): [Initializer] initializer for x
# 2319|               getExpr(): [Literal] 0
# 2319|                   Type = [IntType] int
# 2319|                   Value = [Literal] 0
# 2319|                   ValueCategory = prvalue
# 2320|       getElse(): [BlockStmt] { ... }
# 2321|         getStmt(0): [DeclStmt] declaration
# 2321|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 2321|               Type = [IntType] int
# 2321|             getVariable().getInitializer(): [Initializer] initializer for y
# 2321|               getExpr(): [Literal] 0
# 2321|                   Type = [IntType] int
# 2321|                   Value = [Literal] 0
# 2321|                   ValueCategory = prvalue
# 2322|       getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2322|           Type = [VoidType] void
# 2322|           ValueCategory = prvalue
# 2322|         getQualifier(): [VariableAccess] s
# 2322|             Type = [Struct] String
# 2322|             ValueCategory = lvalue
# 2323|     getStmt(1): [ReturnStmt] return ...
# 2325| [CopyAssignmentOperator] Bool& Bool::operator=(Bool const&)
# 2325|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Bool &
# 2325| [CopyConstructor] void Bool::Bool(Bool const&)
# 2325|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Bool &
# 2327| [Constructor] void Bool::Bool(bool)
# 2327|   <params>: 
# 2327|     getParameter(0): [Parameter] b_
# 2327|         Type = [BoolType] bool
# 2328| [ConversionOperator] bool Bool::operator bool()
# 2328|   <params>: 
# 2329| [Destructor] void Bool::~Bool()
# 2329|   <params>: 
# 2332| [TopLevelFunction] void IfDestructors3(bool)
# 2332|   <params>: 
# 2332|     getParameter(0): [Parameter] b
# 2332|         Type = [BoolType] bool
# 2332|   getEntryPoint(): [BlockStmt] { ... }
# 2333|     getStmt(0): [IfStmt] if (...) ... 
# 2333|       getCondition(): [ConditionDeclExpr] (condition decl)
# 2333|           Type = [BoolType] bool
# 2333|           ValueCategory = prvalue
# 2333|         getChild(0): [FunctionCall] call to operator bool
# 2333|             Type = [BoolType] bool
# 2333|             ValueCategory = prvalue
# 2333|           getQualifier(): [VariableAccess] B
# 2333|               Type = [Class] Bool
# 2333|               ValueCategory = prvalue(load)
# 2333|         getInitializingExpr(): [ConstructorCall] call to Bool
# 2333|             Type = [VoidType] void
# 2333|             ValueCategory = prvalue
# 2333|           getArgument(0): [VariableAccess] b
# 2333|               Type = [BoolType] bool
# 2333|               ValueCategory = prvalue(load)
# 2333|       getThen(): [BlockStmt] { ... }
# 2334|         getStmt(0): [DeclStmt] declaration
# 2334|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of s1
# 2334|               Type = [Struct] String
# 2334|             getVariable().getInitializer(): [Initializer] initializer for s1
# 2334|               getExpr(): [ConstructorCall] call to String
# 2334|                   Type = [VoidType] void
# 2334|                   ValueCategory = prvalue
# 2335|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2335|             Type = [VoidType] void
# 2335|             ValueCategory = prvalue
# 2335|           getQualifier(): [VariableAccess] s1
# 2335|               Type = [Struct] String
# 2335|               ValueCategory = lvalue
# 2335|       getElse(): [BlockStmt] { ... }
# 2336|         getStmt(0): [DeclStmt] declaration
# 2336|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of s2
# 2336|               Type = [Struct] String
# 2336|             getVariable().getInitializer(): [Initializer] initializer for s2
# 2336|               getExpr(): [ConstructorCall] call to String
# 2336|                   Type = [VoidType] void
# 2336|                   ValueCategory = prvalue
# 2337|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2337|             Type = [VoidType] void
# 2337|             ValueCategory = prvalue
# 2337|           getQualifier(): [VariableAccess] s2
# 2337|               Type = [Struct] String
# 2337|               ValueCategory = lvalue
# 2337|       getImplicitDestructorCall(0): [DestructorCall] call to ~Bool
# 2337|           Type = [VoidType] void
# 2337|           ValueCategory = prvalue
# 2337|         getQualifier(): [VariableAccess] B
# 2337|             Type = [Class] Bool
# 2337|             ValueCategory = lvalue
# 2338|     getStmt(1): [ReturnStmt] return ...
# 2340| [TopLevelFunction] void WhileLoopDestructors(bool)
# 2340|   <params>: 
# 2340|     getParameter(0): [Parameter] b
# 2340|         Type = [BoolType] bool
# 2340|   getEntryPoint(): [BlockStmt] { ... }
# 2341|     getStmt(0): [BlockStmt] { ... }
# 2342|       getStmt(0): [DeclStmt] declaration
# 2342|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 2342|             Type = [Struct] String
# 2342|           getVariable().getInitializer(): [Initializer] initializer for s
# 2342|             getExpr(): [ConstructorCall] call to String
# 2342|                 Type = [VoidType] void
# 2342|                 ValueCategory = prvalue
# 2343|       getStmt(1): [WhileStmt] while (...) ...
# 2343|         getCondition(): [VariableAccess] b
# 2343|             Type = [BoolType] bool
# 2343|             ValueCategory = prvalue(load)
# 2343|         getStmt(): [BlockStmt] { ... }
# 2344|           getStmt(0): [ExprStmt] ExprStmt
# 2344|             getExpr(): [AssignExpr] ... = ...
# 2344|                 Type = [BoolType] bool
# 2344|                 ValueCategory = lvalue
# 2344|               getLValue(): [VariableAccess] b
# 2344|                   Type = [BoolType] bool
# 2344|                   ValueCategory = lvalue
# 2344|               getRValue(): [Literal] 0
# 2344|                   Type = [BoolType] bool
# 2344|                   Value = [Literal] 0
# 2344|                   ValueCategory = prvalue
# 2346|       getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2346|           Type = [VoidType] void
# 2346|           ValueCategory = prvalue
# 2346|         getQualifier(): [VariableAccess] s
# 2346|             Type = [Struct] String
# 2346|             ValueCategory = lvalue
# 2348|     getStmt(1): [BlockStmt] { ... }
# 2349|       getStmt(0): [WhileStmt] while (...) ...
# 2349|         getCondition(): [ConditionDeclExpr] (condition decl)
# 2349|             Type = [BoolType] bool
# 2349|             ValueCategory = prvalue
# 2349|           getChild(0): [FunctionCall] call to operator bool
# 2349|               Type = [BoolType] bool
# 2349|               ValueCategory = prvalue
# 2349|             getQualifier(): [VariableAccess] B
# 2349|                 Type = [Class] Bool
# 2349|                 ValueCategory = prvalue(load)
# 2349|           getInitializingExpr(): [ConstructorCall] call to Bool
# 2349|               Type = [VoidType] void
# 2349|               ValueCategory = prvalue
# 2349|             getArgument(0): [VariableAccess] b
# 2349|                 Type = [BoolType] bool
# 2349|                 ValueCategory = prvalue(load)
# 2349|         getStmt(): [BlockStmt] { ... }
# 2350|           getStmt(0): [ExprStmt] ExprStmt
# 2350|             getExpr(): [AssignExpr] ... = ...
# 2350|                 Type = [BoolType] bool
# 2350|                 ValueCategory = lvalue
# 2350|               getLValue(): [VariableAccess] b
# 2350|                   Type = [BoolType] bool
# 2350|                   ValueCategory = lvalue
# 2350|               getRValue(): [Literal] 0
# 2350|                   Type = [BoolType] bool
# 2350|                   Value = [Literal] 0
# 2350|                   ValueCategory = prvalue
# 2351|           getImplicitDestructorCall(0): [DestructorCall] call to ~Bool
# 2351|               Type = [VoidType] void
# 2351|               ValueCategory = prvalue
# 2351|             getQualifier(): [VariableAccess] B
# 2351|                 Type = [Class] Bool
# 2351|                 ValueCategory = lvalue
# 2351|         getImplicitDestructorCall(0): [DestructorCall] call to ~Bool
# 2351|             Type = [VoidType] void
# 2351|             ValueCategory = prvalue
# 2351|           getQualifier(): [VariableAccess] B
# 2351|               Type = [Class] Bool
# 2351|               ValueCategory = lvalue
# 2353|     getStmt(2): [ReturnStmt] return ...
# 2355| [TopLevelFunction] void VoidFunc()
# 2355|   <params>: 
# 2355|   getEntryPoint(): [BlockStmt] { ... }
# 2355|     getStmt(0): [ReturnStmt] return ...
# 2357| [TopLevelFunction] void IfReturnDestructors(bool)
# 2357|   <params>: 
# 2357|     getParameter(0): [Parameter] b
# 2357|         Type = [BoolType] bool
# 2357|   getEntryPoint(): [BlockStmt] { ... }
# 2358|     getStmt(0): [DeclStmt] declaration
# 2358|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 2358|           Type = [Struct] String
# 2358|         getVariable().getInitializer(): [Initializer] initializer for s
# 2358|           getExpr(): [ConstructorCall] call to String
# 2358|               Type = [VoidType] void
# 2358|               ValueCategory = prvalue
# 2359|     getStmt(1): [IfStmt] if (...) ... 
# 2359|       getCondition(): [VariableAccess] b
# 2359|           Type = [BoolType] bool
# 2359|           ValueCategory = prvalue(load)
# 2359|       getThen(): [BlockStmt] { ... }
# 2360|         getStmt(0): [ReturnStmt] return ...
# 2366|           getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2366|               Type = [VoidType] void
# 2366|               ValueCategory = prvalue
# 2366|             getQualifier(): [VariableAccess] s
# 2366|                 Type = [Struct] String
# 2366|                 ValueCategory = lvalue
# 2362|     getStmt(2): [IfStmt] if (...) ... 
# 2362|       getCondition(): [VariableAccess] b
# 2362|           Type = [BoolType] bool
# 2362|           ValueCategory = prvalue(load)
# 2362|       getThen(): [BlockStmt] { ... }
# 2363|         getStmt(0): [ReturnStmt] return ...
# 2363|           getExpr(): [FunctionCall] call to VoidFunc
# 2363|               Type = [VoidType] void
# 2363|               ValueCategory = prvalue
# 2366|           getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2366|               Type = [VoidType] void
# 2366|               ValueCategory = prvalue
# 2366|             getQualifier(): [VariableAccess] s
# 2366|                 Type = [Struct] String
# 2366|                 ValueCategory = lvalue
# 2365|     getStmt(3): [ExprStmt] ExprStmt
# 2365|       getExpr(): [VariableAccess] s
# 2365|           Type = [Struct] String
# 2365|           ValueCategory = lvalue
# 2366|     getStmt(4): [ReturnStmt] return ...
# 2366|       getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2366|           Type = [VoidType] void
# 2366|           ValueCategory = prvalue
# 2366|         getQualifier(): [VariableAccess] s
# 2366|             Type = [Struct] String
# 2366|             ValueCategory = lvalue
# 2368| [TopLevelFunction] int IfReturnDestructors3(bool)
# 2368|   <params>: 
# 2368|     getParameter(0): [Parameter] b
# 2368|         Type = [BoolType] bool
# 2368|   getEntryPoint(): [BlockStmt] { ... }
# 2369|     getStmt(0): [DeclStmt] declaration
# 2369|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 2369|           Type = [Struct] String
# 2369|         getVariable().getInitializer(): [Initializer] initializer for s
# 2369|           getExpr(): [ConstructorCall] call to String
# 2369|               Type = [VoidType] void
# 2369|               ValueCategory = prvalue
# 2370|     getStmt(1): [IfStmt] if (...) ... 
# 2370|       getCondition(): [VariableAccess] b
# 2370|           Type = [BoolType] bool
# 2370|           ValueCategory = prvalue(load)
# 2370|       getThen(): [BlockStmt] { ... }
# 2371|         getStmt(0): [ReturnStmt] return ...
# 2371|           getExpr(): [Literal] 1
# 2371|               Type = [IntType] int
# 2371|               Value = [Literal] 1
# 2371|               ValueCategory = prvalue
# 2374|           getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2374|               Type = [VoidType] void
# 2374|               ValueCategory = prvalue
# 2374|             getQualifier(): [VariableAccess] s
# 2374|                 Type = [Struct] String
# 2374|                 ValueCategory = lvalue
# 2373|     getStmt(2): [ReturnStmt] return ...
# 2373|       getExpr(): [Literal] 0
# 2373|           Type = [IntType] int
# 2373|           Value = [Literal] 0
# 2373|           ValueCategory = prvalue
# 2374|       getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2374|           Type = [VoidType] void
# 2374|           ValueCategory = prvalue
# 2374|         getQualifier(): [VariableAccess] s
# 2374|             Type = [Struct] String
# 2374|             ValueCategory = lvalue
# 2376| [TopLevelFunction] void VoidReturnDestructors()
# 2376|   <params>: 
# 2376|   getEntryPoint(): [BlockStmt] { ... }
# 2377|     getStmt(0): [DeclStmt] declaration
# 2377|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 2377|           Type = [Struct] String
# 2377|         getVariable().getInitializer(): [Initializer] initializer for s
# 2377|           getExpr(): [ConstructorCall] call to String
# 2377|               Type = [VoidType] void
# 2377|               ValueCategory = prvalue
# 2378|     getStmt(1): [ReturnStmt] return ...
# 2378|       getExpr(): [FunctionCall] call to VoidFunc
# 2378|           Type = [VoidType] void
# 2378|           ValueCategory = prvalue
# 2379|       getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2379|           Type = [VoidType] void
# 2379|           ValueCategory = prvalue
# 2379|         getQualifier(): [VariableAccess] s
# 2379|             Type = [Struct] String
# 2379|             ValueCategory = lvalue
# 2382| [CopyAssignmentOperator] return_routine_type::HasVoidToIntFunc& return_routine_type::HasVoidToIntFunc::operator=(return_routine_type::HasVoidToIntFunc const&)
# 2382|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const HasVoidToIntFunc &
# 2382| [MoveAssignmentOperator] return_routine_type::HasVoidToIntFunc& return_routine_type::HasVoidToIntFunc::operator=(return_routine_type::HasVoidToIntFunc&&)
# 2382|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] HasVoidToIntFunc &&
# 2384| [MemberFunction] void return_routine_type::HasVoidToIntFunc::VoidToInt(int)
# 2384|   <params>: 
# 2384|     getParameter(0): [Parameter] (unnamed parameter 0)
# 2384|         Type = [IntType] int
# 2389| [TopLevelFunction] return_routine_type::VoidToIntMemberFunc return_routine_type::GetVoidToIntFunc()
# 2389|   <params>: 
# 2390|   getEntryPoint(): [BlockStmt] { ... }
# 2391|     getStmt(0): [ReturnStmt] return ...
# 2391|       getExpr(): [FunctionAccess] VoidToInt
# 2391|           Type = [RoutineType] ..()(..)
# 2391|           ValueCategory = prvalue
# 2396| [TopLevelFunction] int small_operation_should_not_be_constant_folded()
# 2396|   <params>: 
# 2396|   getEntryPoint(): [BlockStmt] { ... }
# 2397|     getStmt(0): [ReturnStmt] return ...
# 2397|       getExpr(): [BitwiseXorExpr] ... ^ ...
# 2397|           Type = [IntType] int
# 2397|           Value = [BitwiseXorExpr] 3
# 2397|           ValueCategory = prvalue
# 2397|         getLeftOperand(): [Literal] 1
# 2397|             Type = [IntType] int
# 2397|             Value = [Literal] 1
# 2397|             ValueCategory = prvalue
# 2397|         getRightOperand(): [Literal] 2
# 2397|             Type = [IntType] int
# 2397|             Value = [Literal] 2
# 2397|             ValueCategory = prvalue
# 2407| [TopLevelFunction] int large_operation_should_be_constant_folded()
# 2407|   <params>: 
# 2407|   getEntryPoint(): [BlockStmt] { ... }
# 2408|     getStmt(0): [ReturnStmt] return ...
# 2408|       getExpr(): [BitwiseXorExpr] ... ^ ...
# 2408|           Type = [IntType] int
# 2408|           Value = [BitwiseXorExpr] 0
# 2408|           ValueCategory = prvalue
# 2408|         getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|             Type = [IntType] int
# 2408|             Value = [BitwiseXorExpr] 0
# 2408|             ValueCategory = prvalue
# 2408|           getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|               Type = [IntType] int
# 2408|               Value = [BitwiseXorExpr] 0
# 2408|               ValueCategory = prvalue
# 2408|             getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                 Type = [IntType] int
# 2408|                 Value = [BitwiseXorExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|               getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|               getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|             getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                 Type = [IntType] int
# 2408|                 Value = [BitwiseXorExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|               getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|               getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|             getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                 Type = [IntType] int
# 2408|                 Value = [ParenthesisExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|             getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                 Type = [IntType] int
# 2408|                 Value = [ParenthesisExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|           getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|               Type = [IntType] int
# 2408|               Value = [BitwiseXorExpr] 0
# 2408|               ValueCategory = prvalue
# 2408|             getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                 Type = [IntType] int
# 2408|                 Value = [BitwiseXorExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|               getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|               getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|             getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                 Type = [IntType] int
# 2408|                 Value = [BitwiseXorExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|               getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|               getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|             getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                 Type = [IntType] int
# 2408|                 Value = [ParenthesisExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|             getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                 Type = [IntType] int
# 2408|                 Value = [ParenthesisExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|           getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|               Type = [IntType] int
# 2408|               Value = [ParenthesisExpr] 0
# 2408|               ValueCategory = prvalue
# 2408|           getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|               Type = [IntType] int
# 2408|               Value = [ParenthesisExpr] 0
# 2408|               ValueCategory = prvalue
# 2408|         getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|             Type = [IntType] int
# 2408|             Value = [BitwiseXorExpr] 0
# 2408|             ValueCategory = prvalue
# 2408|           getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|               Type = [IntType] int
# 2408|               Value = [BitwiseXorExpr] 0
# 2408|               ValueCategory = prvalue
# 2408|             getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                 Type = [IntType] int
# 2408|                 Value = [BitwiseXorExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|               getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|               getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|             getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                 Type = [IntType] int
# 2408|                 Value = [BitwiseXorExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|               getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|               getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|             getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                 Type = [IntType] int
# 2408|                 Value = [ParenthesisExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|             getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                 Type = [IntType] int
# 2408|                 Value = [ParenthesisExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|           getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|               Type = [IntType] int
# 2408|               Value = [BitwiseXorExpr] 0
# 2408|               ValueCategory = prvalue
# 2408|             getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                 Type = [IntType] int
# 2408|                 Value = [BitwiseXorExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|               getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|               getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|             getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                 Type = [IntType] int
# 2408|                 Value = [BitwiseXorExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|               getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                   Type = [IntType] int
# 2408|                   Value = [BitwiseXorExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|                 getLeftOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getRightOperand(): [BitwiseXorExpr] ... ^ ...
# 2408|                     Type = [IntType] int
# 2408|                     Value = [BitwiseXorExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                   getLeftOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                   getRightOperand(): [Literal] 1
# 2408|                       Type = [IntType] int
# 2408|                       Value = [Literal] 1
# 2408|                       ValueCategory = prvalue
# 2408|                 getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|                 getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                     Type = [IntType] int
# 2408|                     Value = [ParenthesisExpr] 0
# 2408|                     ValueCategory = prvalue
# 2408|               getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|               getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                   Type = [IntType] int
# 2408|                   Value = [ParenthesisExpr] 0
# 2408|                   ValueCategory = prvalue
# 2408|             getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                 Type = [IntType] int
# 2408|                 Value = [ParenthesisExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|             getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|                 Type = [IntType] int
# 2408|                 Value = [ParenthesisExpr] 0
# 2408|                 ValueCategory = prvalue
# 2408|           getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|               Type = [IntType] int
# 2408|               Value = [ParenthesisExpr] 0
# 2408|               ValueCategory = prvalue
# 2408|           getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|               Type = [IntType] int
# 2408|               Value = [ParenthesisExpr] 0
# 2408|               ValueCategory = prvalue
# 2408|         getLeftOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|             Type = [IntType] int
# 2408|             Value = [ParenthesisExpr] 0
# 2408|             ValueCategory = prvalue
# 2408|         getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|             Type = [IntType] int
# 2408|             Value = [ParenthesisExpr] 0
# 2408|             ValueCategory = prvalue
# 2408|       getExpr().getFullyConverted(): [ParenthesisExpr] (...)
# 2408|           Type = [IntType] int
# 2408|           Value = [ParenthesisExpr] 0
# 2408|           ValueCategory = prvalue
# 2411| [TopLevelFunction] void initialization_with_temp_destructor()
# 2411|   <params>: 
# 2411|   getEntryPoint(): [BlockStmt] { ... }
# 2412|     getStmt(0): [IfStmt] if (...) ... 
# 2412|       getCondition(): [ConditionDeclExpr] (condition decl)
# 2412|           Type = [BoolType] bool
# 2412|           ValueCategory = prvalue
# 2412|         getVariableAccess(): [VariableAccess] x
# 2412|             Type = [PlainCharType] char
# 2412|             ValueCategory = prvalue(load)
# 2412|         getInitializingExpr(): [FunctionCall] call to get_x
# 2412|             Type = [PlainCharType] char
# 2412|             ValueCategory = prvalue
# 2412|           getQualifier(): [ConstructorCall] call to ClassWithDestructor
# 2412|               Type = [VoidType] void
# 2412|               ValueCategory = prvalue
# 2412|           getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2412|               Type = [VoidType] void
# 2412|               ValueCategory = prvalue
# 2412|             getQualifier(): [ReuseExpr] reuse of temporary object
# 2412|                 Type = [Class] ClassWithDestructor
# 2412|                 ValueCategory = xvalue
# 2412|           getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2412|               Type = [Class] ClassWithDestructor
# 2412|               ValueCategory = prvalue(load)
# 2412|         getVariableAccess().getFullyConverted(): [CStyleCast] (bool)...
# 2412|             Conversion = [BoolConversion] conversion to bool
# 2412|             Type = [BoolType] bool
# 2412|             ValueCategory = prvalue
# 2413|       getThen(): [ExprStmt] ExprStmt
# 2413|         getExpr(): [PostfixIncrExpr] ... ++
# 2413|             Type = [PlainCharType] char
# 2413|             ValueCategory = prvalue
# 2413|           getOperand(): [VariableAccess] x
# 2413|               Type = [PlainCharType] char
# 2413|               ValueCategory = lvalue
# 2415|     getStmt(1): [IfStmt] if (...) ... 
# 2415|       getInitialization(): [DeclStmt] declaration
# 2415|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2415|             Type = [PlainCharType] char
# 2415|           getVariable().getInitializer(): [Initializer] initializer for x
# 2415|             getExpr(): [FunctionCall] call to get_x
# 2415|                 Type = [PlainCharType] char
# 2415|                 ValueCategory = prvalue
# 2415|               getQualifier(): [ConstructorCall] call to ClassWithDestructor
# 2415|                   Type = [VoidType] void
# 2415|                   ValueCategory = prvalue
# 2415|               getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2415|                   Type = [VoidType] void
# 2415|                   ValueCategory = prvalue
# 2415|                 getQualifier(): [ReuseExpr] reuse of temporary object
# 2415|                     Type = [Class] ClassWithDestructor
# 2415|                     ValueCategory = xvalue
# 2415|               getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2415|                   Type = [Class] ClassWithDestructor
# 2415|                   ValueCategory = prvalue(load)
# 2415|       getCondition(): [VariableAccess] x
# 2415|           Type = [PlainCharType] char
# 2415|           ValueCategory = prvalue(load)
# 2416|       getThen(): [ExprStmt] ExprStmt
# 2416|         getExpr(): [PostfixIncrExpr] ... ++
# 2416|             Type = [PlainCharType] char
# 2416|             ValueCategory = prvalue
# 2416|           getOperand(): [VariableAccess] x
# 2416|               Type = [PlainCharType] char
# 2416|               ValueCategory = lvalue
# 2415|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2415|           Conversion = [BoolConversion] conversion to bool
# 2415|           Type = [BoolType] bool
# 2415|           ValueCategory = prvalue
# 2418|     getStmt(2): [ConstexprIfStmt] if constexpr (...) ... 
# 2418|       getInitialization(): [DeclStmt] declaration
# 2418|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2418|             Type = [PlainCharType] char
# 2418|           getVariable().getInitializer(): [Initializer] initializer for x
# 2418|             getExpr(): [FunctionCall] call to get_x
# 2418|                 Type = [PlainCharType] char
# 2418|                 ValueCategory = prvalue
# 2418|               getQualifier(): [ConstructorCall] call to ClassWithDestructor
# 2418|                   Type = [VoidType] void
# 2418|                   ValueCategory = prvalue
# 2418|               getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2418|                   Type = [VoidType] void
# 2418|                   ValueCategory = prvalue
# 2418|                 getQualifier(): [ReuseExpr] reuse of temporary object
# 2418|                     Type = [Class] ClassWithDestructor
# 2418|                     ValueCategory = xvalue
# 2418|               getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2418|                   Type = [Class] ClassWithDestructor
# 2418|                   ValueCategory = prvalue(load)
# 2418|       getCondition(): [VariableAccess] initialization_with_destructor_bool
# 2418|           Type = [BoolType] bool
# 2418|           Value = [VariableAccess] 1
# 2418|           ValueCategory = prvalue(load)
# 2419|       getThen(): [ExprStmt] ExprStmt
# 2419|         getExpr(): [PostfixIncrExpr] ... ++
# 2419|             Type = [PlainCharType] char
# 2419|             ValueCategory = prvalue
# 2419|           getOperand(): [VariableAccess] x
# 2419|               Type = [PlainCharType] char
# 2419|               ValueCategory = lvalue
# 2421|     getStmt(3): [SwitchStmt] switch (...) ... 
# 2421|       getExpr(): [ConditionDeclExpr] (condition decl)
# 2421|           Type = [IntType] int
# 2421|           ValueCategory = prvalue
# 2421|         getVariableAccess(): [VariableAccess] x
# 2421|             Type = [PlainCharType] char
# 2421|             ValueCategory = prvalue(load)
# 2421|         getInitializingExpr(): [FunctionCall] call to get_x
# 2421|             Type = [PlainCharType] char
# 2421|             ValueCategory = prvalue
# 2421|           getQualifier(): [ConstructorCall] call to ClassWithDestructor
# 2421|               Type = [VoidType] void
# 2421|               ValueCategory = prvalue
# 2421|           getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2421|               Type = [VoidType] void
# 2421|               ValueCategory = prvalue
# 2421|             getQualifier(): [ReuseExpr] reuse of temporary object
# 2421|                 Type = [Class] ClassWithDestructor
# 2421|                 ValueCategory = xvalue
# 2421|           getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2421|               Type = [Class] ClassWithDestructor
# 2421|               ValueCategory = prvalue(load)
# 2421|         getVariableAccess().getFullyConverted(): [CStyleCast] (int)...
# 2421|             Conversion = [IntegralConversion] integral conversion
# 2421|             Type = [IntType] int
# 2421|             ValueCategory = prvalue
# 2421|       getStmt(): [BlockStmt] { ... }
# 2422|         getStmt(0): [SwitchCase] case ...:
# 2422|           getExpr(): [CharLiteral] 97
# 2422|               Type = [PlainCharType] char
# 2422|               Value = [CharLiteral] 97
# 2422|               ValueCategory = prvalue
# 2422|           getExpr().getFullyConverted(): [CStyleCast] (int)...
# 2422|               Conversion = [IntegralConversion] integral conversion
# 2422|               Type = [IntType] int
# 2422|               Value = [CStyleCast] 97
# 2422|               ValueCategory = prvalue
# 2423|         getStmt(1): [ExprStmt] ExprStmt
# 2423|           getExpr(): [PostfixIncrExpr] ... ++
# 2423|               Type = [PlainCharType] char
# 2423|               ValueCategory = prvalue
# 2423|             getOperand(): [VariableAccess] x
# 2423|                 Type = [PlainCharType] char
# 2423|                 ValueCategory = lvalue
# 2426|     getStmt(4): [SwitchStmt] switch (...) ... 
# 2426|       getInitialization(): [DeclStmt] declaration
# 2426|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2426|             Type = [PlainCharType] char
# 2426|           getVariable().getInitializer(): [Initializer] initializer for x
# 2426|             getExpr(): [FunctionCall] call to get_x
# 2426|                 Type = [PlainCharType] char
# 2426|                 ValueCategory = prvalue
# 2426|               getQualifier(): [ConstructorCall] call to ClassWithDestructor
# 2426|                   Type = [VoidType] void
# 2426|                   ValueCategory = prvalue
# 2426|               getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2426|                   Type = [VoidType] void
# 2426|                   ValueCategory = prvalue
# 2426|                 getQualifier(): [ReuseExpr] reuse of temporary object
# 2426|                     Type = [Class] ClassWithDestructor
# 2426|                     ValueCategory = xvalue
# 2426|               getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2426|                   Type = [Class] ClassWithDestructor
# 2426|                   ValueCategory = prvalue(load)
# 2426|       getExpr(): [VariableAccess] x
# 2426|           Type = [PlainCharType] char
# 2426|           ValueCategory = prvalue(load)
# 2426|       getStmt(): [BlockStmt] { ... }
# 2427|         getStmt(0): [SwitchCase] case ...:
# 2427|           getExpr(): [CharLiteral] 97
# 2427|               Type = [PlainCharType] char
# 2427|               Value = [CharLiteral] 97
# 2427|               ValueCategory = prvalue
# 2427|           getExpr().getFullyConverted(): [CStyleCast] (int)...
# 2427|               Conversion = [IntegralConversion] integral conversion
# 2427|               Type = [IntType] int
# 2427|               Value = [CStyleCast] 97
# 2427|               ValueCategory = prvalue
# 2428|         getStmt(1): [ExprStmt] ExprStmt
# 2428|           getExpr(): [PostfixIncrExpr] ... ++
# 2428|               Type = [PlainCharType] char
# 2428|               ValueCategory = prvalue
# 2428|             getOperand(): [VariableAccess] x
# 2428|                 Type = [PlainCharType] char
# 2428|                 ValueCategory = lvalue
# 2426|       getExpr().getFullyConverted(): [CStyleCast] (int)...
# 2426|           Conversion = [IntegralConversion] integral conversion
# 2426|           Type = [IntType] int
# 2426|           ValueCategory = prvalue
# 2431|     getStmt(5): [RangeBasedForStmt] for(...:...) ...
# 2431|       getInitialization(): [DeclStmt] declaration
# 2431|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2431|             Type = [PlainCharType] char
# 2431|           getVariable().getInitializer(): [Initializer] initializer for x
# 2431|             getExpr(): [FunctionCall] call to get_x
# 2431|                 Type = [PlainCharType] char
# 2431|                 ValueCategory = prvalue
# 2431|               getQualifier(): [ConstructorCall] call to ClassWithDestructor
# 2431|                   Type = [VoidType] void
# 2431|                   ValueCategory = prvalue
# 2431|               getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2431|                   Type = [VoidType] void
# 2431|                   ValueCategory = prvalue
# 2431|                 getQualifier(): [ReuseExpr] reuse of temporary object
# 2431|                     Type = [Class] ClassWithDestructor
# 2431|                     ValueCategory = xvalue
# 2431|               getQualifier().getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2431|                   Type = [Class] ClassWithDestructor
# 2431|                   ValueCategory = prvalue(load)
# 2431|       getChild(1): [DeclStmt] declaration
# 2431|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__range)
# 2431|             Type = [RValueReferenceType] vector<char> &&
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__range)
# 2431|             getExpr(): [ConstructorCall] call to vector
# 2431|                 Type = [VoidType] void
# 2431|                 ValueCategory = prvalue
# 2431|               getArgument(0): [VariableAccess] x
# 2431|                   Type = [PlainCharType] char
# 2431|                   ValueCategory = prvalue(load)
# 2431|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 2431|                 Type = [LValueReferenceType] vector<char> &
# 2431|                 ValueCategory = prvalue
# 2431|               getExpr(): [TemporaryObjectExpr] temporary object
# 2431|                   Type = [ClassTemplateInstantiation,Struct] vector<char>
# 2431|                   ValueCategory = xvalue
# 2431|       getBeginEndDeclaration(): [DeclStmt] declaration
# 2431|         getDeclarationEntry(0): [VariableDeclarationEntry] declaration of (__begin)
# 2431|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__begin)
# 2431|             getExpr(): [FunctionCall] call to begin
# 2431|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2431|                 ValueCategory = prvalue
# 2431|               getQualifier(): [VariableAccess] (__range)
# 2431|                   Type = [RValueReferenceType] vector<char> &&
# 2431|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const vector<char>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const vector<char>
#-----|                   ValueCategory = lvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ClassTemplateInstantiation,Struct] vector<char>
#-----|                     ValueCategory = lvalue
# 2431|         getDeclarationEntry(1): [VariableDeclarationEntry] declaration of (__end)
# 2431|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
#-----|           getVariable().getInitializer(): [Initializer] initializer for (__end)
# 2431|             getExpr(): [FunctionCall] call to end
# 2431|                 Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2431|                 ValueCategory = prvalue
# 2431|               getQualifier(): [VariableAccess] (__range)
# 2431|                   Type = [RValueReferenceType] vector<char> &&
# 2431|                   ValueCategory = prvalue(load)
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const vector<char>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const vector<char>
#-----|                   ValueCategory = lvalue
#-----|                 getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#-----|                     Type = [ClassTemplateInstantiation,Struct] vector<char>
#-----|                     ValueCategory = lvalue
# 2431|       getCondition(): [FunctionCall] call to operator!=
# 2431|           Type = [BoolType] bool
# 2431|           ValueCategory = prvalue
# 2431|         getQualifier(): [VariableAccess] (__begin)
# 2431|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2431|             ValueCategory = lvalue
# 2431|         getArgument(0): [ConstructorCall] call to iterator
# 2431|             Type = [VoidType] void
# 2431|             ValueCategory = prvalue
# 2431|           getArgument(0): [VariableAccess] (__end)
# 2431|               Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2431|               ValueCategory = lvalue
#-----|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#-----|               Type = [LValueReferenceType] const iterator<random_access_iterator_tag, char, ptrdiff_t, char *, char &> &
#-----|               ValueCategory = prvalue
#-----|             getExpr(): [CStyleCast] (const iterator<random_access_iterator_tag, char, ptrdiff_t, char *, char &>)...
#-----|                 Conversion = [GlvalueConversion] glvalue conversion
#-----|                 Type = [SpecifiedType] const iterator<random_access_iterator_tag, char, ptrdiff_t, char *, char &>
#-----|                 ValueCategory = lvalue
#-----|         getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, char, ptrdiff_t, char *, char &>)...
#-----|             Conversion = [GlvalueConversion] glvalue conversion
#-----|             Type = [SpecifiedType] const iterator<random_access_iterator_tag, char, ptrdiff_t, char *, char &>
#-----|             ValueCategory = lvalue
#-----|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#-----|             Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, char, ptrdiff_t, char *, char &>
#-----|             ValueCategory = lvalue
# 2431|       getUpdate(): [FunctionCall] call to operator++
# 2431|           Type = [LValueReferenceType] iterator<random_access_iterator_tag, char, ptrdiff_t, char *, char &> &
# 2431|           ValueCategory = prvalue
# 2431|         getQualifier(): [VariableAccess] (__begin)
# 2431|             Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2431|             ValueCategory = lvalue
# 2431|       getChild(5): [DeclStmt] declaration
# 2431|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 2431|             Type = [PlainCharType] char
# 2431|           getVariable().getInitializer(): [Initializer] initializer for y
# 2431|             getExpr(): [OverloadedPointerDereferenceExpr] call to operator*
# 2431|                 Type = [LValueReferenceType] char &
# 2431|                 ValueCategory = prvalue
# 2431|               getQualifier(): [VariableAccess] (__begin)
# 2431|                   Type = [NestedTypedefType,UsingAliasTypedefType] iterator
# 2431|                   ValueCategory = lvalue
#-----|               getQualifier().getFullyConverted(): [CStyleCast] (const iterator<random_access_iterator_tag, char, ptrdiff_t, char *, char &>)...
#-----|                   Conversion = [GlvalueConversion] glvalue conversion
#-----|                   Type = [SpecifiedType] const iterator<random_access_iterator_tag, char, ptrdiff_t, char *, char &>
#-----|                   ValueCategory = lvalue
# 2431|             getExpr().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2431|                 Type = [PlainCharType] char
# 2431|                 ValueCategory = prvalue(load)
# 2432|       getStmt(): [ExprStmt] ExprStmt
# 2432|         getExpr(): [AssignAddExpr] ... += ...
# 2432|             Type = [PlainCharType] char
# 2432|             ValueCategory = lvalue
# 2432|           getLValue(): [VariableAccess] y
# 2432|               Type = [PlainCharType] char
# 2432|               ValueCategory = lvalue
# 2432|           getRValue(): [VariableAccess] x
# 2432|               Type = [PlainCharType] char
# 2432|               ValueCategory = prvalue(load)
# 2432|           getRValue().getFullyConverted(): [CStyleCast] (int)...
# 2432|               Conversion = [IntegralConversion] integral conversion
# 2432|               Type = [IntType] int
# 2432|               ValueCategory = prvalue
# 2431|       getImplicitDestructorCall(0): [DestructorCall] call to ~vector
# 2431|           Type = [VoidType] void
# 2431|           ValueCategory = prvalue
# 2431|         getQualifier(): [ReuseExpr] reuse of temporary object
# 2431|             Type = [ClassTemplateInstantiation,Struct] vector<char>
# 2431|             ValueCategory = xvalue
# 2431|       getUpdate().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2431|           Type = [ClassTemplateInstantiation,Struct] iterator<random_access_iterator_tag, char, ptrdiff_t, char *, char &>
# 2431|           ValueCategory = lvalue
# 2433|     getStmt(6): [ReturnStmt] return ...
# 2435| [TopLevelFunction] void param_with_destructor_by_value(ClassWithDestructor)
# 2435|   <params>: 
# 2435|     getParameter(0): [Parameter] c
# 2435|         Type = [Class] ClassWithDestructor
# 2435|   getEntryPoint(): [BlockStmt] { ... }
# 2437|     getStmt(0): [ReturnStmt] return ...
# 2439| [TopLevelFunction] void param_with_destructor_by_pointer(ClassWithDestructor*)
# 2439|   <params>: 
# 2439|     getParameter(0): [Parameter] c
# 2439|         Type = [PointerType] ClassWithDestructor *
# 2439|   getEntryPoint(): [BlockStmt] { ... }
# 2441|     getStmt(0): [ReturnStmt] return ...
# 2443| [TopLevelFunction] void param_with_destructor_by_ref(ClassWithDestructor&)
# 2443|   <params>: 
# 2443|     getParameter(0): [Parameter] c
# 2443|         Type = [LValueReferenceType] ClassWithDestructor &
# 2443|   getEntryPoint(): [BlockStmt] { ... }
# 2445|     getStmt(0): [ReturnStmt] return ...
# 2447| [TopLevelFunction] void param_with_destructor_by_rref(ClassWithDestructor&&)
# 2447|   <params>: 
# 2447|     getParameter(0): [Parameter] c
# 2447|         Type = [RValueReferenceType] ClassWithDestructor &&
# 2447|   getEntryPoint(): [BlockStmt] { ... }
# 2449|     getStmt(0): [ReturnStmt] return ...
# 2451| [TopLevelFunction] void rethrow_with_destruction(int)
# 2451|   <params>: 
# 2451|     getParameter(0): [Parameter] x
# 2451|         Type = [IntType] int
# 2451|   getEntryPoint(): [BlockStmt] { ... }
# 2452|     getStmt(0): [DeclStmt] declaration
# 2452|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
# 2452|           Type = [Class] ClassWithDestructor
# 2452|         getVariable().getInitializer(): [Initializer] initializer for c
# 2452|           getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2452|               Type = [VoidType] void
# 2452|               ValueCategory = prvalue
# 2453|     getStmt(1): [ExprStmt] ExprStmt
# 2453|       getExpr(): [ReThrowExpr] re-throw exception 
# 2453|           Type = [VoidType] void
# 2453|           ValueCategory = prvalue
# 2454|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2454|             Type = [VoidType] void
# 2454|             ValueCategory = prvalue
# 2454|           getQualifier(): [VariableAccess] c
# 2454|               Type = [Class] ClassWithDestructor
# 2454|               ValueCategory = lvalue
# 2456| [CopyAssignmentOperator] ByValueConstructor& ByValueConstructor::operator=(ByValueConstructor const&)
# 2456|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const ByValueConstructor &
# 2456| [MoveAssignmentOperator] ByValueConstructor& ByValueConstructor::operator=(ByValueConstructor&&)
# 2456|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] ByValueConstructor &&
# 2456| [CopyConstructor] void ByValueConstructor::ByValueConstructor(ByValueConstructor const&)
# 2456|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const ByValueConstructor &
# 2456| [MoveConstructor] void ByValueConstructor::ByValueConstructor(ByValueConstructor&&)
# 2456|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] ByValueConstructor &&
# 2457| [Constructor] void ByValueConstructor::ByValueConstructor(ClassWithDestructor)
# 2457|   <params>: 
# 2457|     getParameter(0): [Parameter] (unnamed parameter 0)
# 2457|         Type = [Class] ClassWithDestructor
# 2460| [TopLevelFunction] void new_with_destructor(ClassWithDestructor)
# 2460|   <params>: 
# 2460|     getParameter(0): [Parameter] a
# 2460|         Type = [Class] ClassWithDestructor
# 2461|   getEntryPoint(): [BlockStmt] { ... }
# 2462|     getStmt(0): [DeclStmt] declaration
# 2462|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
# 2462|           Type = [PointerType] ByValueConstructor *
# 2462|         getVariable().getInitializer(): [Initializer] initializer for b
# 2462|           getExpr(): [NewExpr] new
# 2462|               Type = [PointerType] ByValueConstructor *
# 2462|               ValueCategory = prvalue
# 2462|             getInitializer(): [ConstructorCall] call to ByValueConstructor
# 2462|                 Type = [VoidType] void
# 2462|                 ValueCategory = prvalue
# 2462|               getArgument(0): [VariableAccess] a
# 2462|                   Type = [Class] ClassWithDestructor
# 2462|                   ValueCategory = prvalue(load)
# 2462|               getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
# 2462|                   Type = [Class] ClassWithDestructor
# 2462|                   ValueCategory = lvalue
# 2462|             getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2462|                 Type = [VoidType] void
# 2462|                 ValueCategory = prvalue
# 2462|               getQualifier(): [ReuseExpr] reuse of temporary object
# 2462|                   Type = [Class] ClassWithDestructor
# 2462|                   ValueCategory = xvalue
# 2463|     getStmt(1): [ReturnStmt] return ...
# 2466| [CopyAssignmentOperator] rvalue_conversion_with_destructor::A& rvalue_conversion_with_destructor::A::operator=(rvalue_conversion_with_destructor::A const&)
# 2466|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const A &
# 2466| [MoveAssignmentOperator] rvalue_conversion_with_destructor::A& rvalue_conversion_with_destructor::A::operator=(rvalue_conversion_with_destructor::A&&)
# 2466|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] A &&
# 2470| [CopyAssignmentOperator] rvalue_conversion_with_destructor::B& rvalue_conversion_with_destructor::B::operator=(rvalue_conversion_with_destructor::B const&)
# 2470|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const B &
# 2470| [Constructor] void rvalue_conversion_with_destructor::B::B()
# 2470|   <params>: 
# 2472| [Destructor] void rvalue_conversion_with_destructor::B::~B()
# 2472|   <params>: 
# 2474| [ConstMemberFunction] rvalue_conversion_with_destructor::A* rvalue_conversion_with_destructor::B::operator->() const
# 2474|   <params>: 
# 2477| [TopLevelFunction] rvalue_conversion_with_destructor::B rvalue_conversion_with_destructor::get()
# 2477|   <params>: 
# 2479| [TopLevelFunction] void rvalue_conversion_with_destructor::test()
# 2479|   <params>: 
# 2480|   getEntryPoint(): [BlockStmt] { ... }
# 2481|     getStmt(0): [DeclStmt] declaration
# 2481|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of a
# 2481|           Type = [IntType] unsigned int
# 2481|         getVariable().getInitializer(): [Initializer] initializer for a
# 2481|           getExpr(): [PointerFieldAccess] a
# 2481|               Type = [IntType] unsigned int
# 2481|               ValueCategory = prvalue(load)
# 2481|             getQualifier(): [FunctionCall] call to operator->
# 2481|                 Type = [PointerType] A *
# 2481|                 ValueCategory = prvalue
# 2481|               getQualifier(): [FunctionCall] call to get
# 2481|                   Type = [Struct] B
# 2481|                   ValueCategory = prvalue
# 2481|               getQualifier().getFullyConverted(): [CStyleCast] (const B)...
# 2481|                   Conversion = [PrvalueAdjustmentConversion] prvalue adjustment conversion
# 2481|                   Type = [SpecifiedType] const B
# 2481|                   ValueCategory = prvalue
# 2481|                 getExpr(): [TemporaryObjectExpr] temporary object
# 2481|                     Type = [Struct] B
# 2481|                     ValueCategory = prvalue(load)
# 2481|             getImplicitDestructorCall(0): [DestructorCall] call to ~B
# 2481|                 Type = [VoidType] void
# 2481|                 ValueCategory = prvalue
# 2481|               getQualifier(): [ReuseExpr] reuse of temporary object
# 2481|                   Type = [Struct] B
# 2481|                   ValueCategory = xvalue
# 2482|     getStmt(1): [ReturnStmt] return ...
# 2485| [TopLevelFunction] void destructor_without_block(bool)
# 2485|   <params>: 
# 2485|     getParameter(0): [Parameter] b
# 2485|         Type = [BoolType] bool
# 2486|   getEntryPoint(): [BlockStmt] { ... }
# 2487|     getStmt(0): [IfStmt] if (...) ... 
# 2487|       getCondition(): [VariableAccess] b
# 2487|           Type = [BoolType] bool
# 2487|           ValueCategory = prvalue(load)
# 2488|       getThen(): [DeclStmt] declaration
# 2488|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of c
# 2488|             Type = [Class] ClassWithDestructor
# 2488|           getVariable().getInitializer(): [Initializer] initializer for c
# 2488|             getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2488|                 Type = [VoidType] void
# 2488|                 ValueCategory = prvalue
#-----|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
#-----|             Type = [VoidType] void
#-----|             ValueCategory = prvalue
#-----|           getQualifier(): [VariableAccess] c
#-----|               Type = [Class] ClassWithDestructor
#-----|               ValueCategory = lvalue
# 2490|     getStmt(1): [IfStmt] if (...) ... 
# 2490|       getCondition(): [VariableAccess] b
# 2490|           Type = [BoolType] bool
# 2490|           ValueCategory = prvalue(load)
# 2491|       getThen(): [DeclStmt] declaration
# 2491|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
# 2491|             Type = [Class] ClassWithDestructor
# 2491|           getVariable().getInitializer(): [Initializer] initializer for d
# 2491|             getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2491|                 Type = [VoidType] void
# 2491|                 ValueCategory = prvalue
#-----|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
#-----|             Type = [VoidType] void
#-----|             ValueCategory = prvalue
#-----|           getQualifier(): [VariableAccess] d
#-----|               Type = [Class] ClassWithDestructor
#-----|               ValueCategory = lvalue
# 2493|       getElse(): [DeclStmt] declaration
# 2493|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of e
# 2493|             Type = [Class] ClassWithDestructor
# 2493|           getVariable().getInitializer(): [Initializer] initializer for e
# 2493|             getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2493|                 Type = [VoidType] void
# 2493|                 ValueCategory = prvalue
#-----|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
#-----|             Type = [VoidType] void
#-----|             ValueCategory = prvalue
#-----|           getQualifier(): [VariableAccess] e
#-----|               Type = [Class] ClassWithDestructor
#-----|               ValueCategory = lvalue
# 2495|     getStmt(2): [WhileStmt] while (...) ...
# 2495|       getCondition(): [VariableAccess] b
# 2495|           Type = [BoolType] bool
# 2495|           ValueCategory = prvalue(load)
# 2496|       getStmt(): [DeclStmt] declaration
# 2496|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of f
# 2496|             Type = [Class] ClassWithDestructor
# 2496|           getVariable().getInitializer(): [Initializer] initializer for f
# 2496|             getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2496|                 Type = [VoidType] void
# 2496|                 ValueCategory = prvalue
#-----|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
#-----|             Type = [VoidType] void
#-----|             ValueCategory = prvalue
#-----|           getQualifier(): [VariableAccess] f
#-----|               Type = [Class] ClassWithDestructor
#-----|               ValueCategory = lvalue
# 2498|     getStmt(3): [ForStmt] for(...;...;...) ...
# 2498|       getInitialization(): [DeclStmt] declaration
# 2498|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of i
# 2498|             Type = [IntType] int
# 2498|           getVariable().getInitializer(): [Initializer] initializer for i
# 2498|             getExpr(): [Literal] 0
# 2498|                 Type = [IntType] int
# 2498|                 Value = [Literal] 0
# 2498|                 ValueCategory = prvalue
# 2498|       getCondition(): [LTExpr] ... < ...
# 2498|           Type = [BoolType] bool
# 2498|           ValueCategory = prvalue
# 2498|         getLesserOperand(): [VariableAccess] i
# 2498|             Type = [IntType] int
# 2498|             ValueCategory = prvalue(load)
# 2498|         getGreaterOperand(): [Literal] 42
# 2498|             Type = [IntType] int
# 2498|             Value = [Literal] 42
# 2498|             ValueCategory = prvalue
# 2498|       getUpdate(): [PrefixIncrExpr] ++ ...
# 2498|           Type = [IntType] int
# 2498|           ValueCategory = lvalue
# 2498|         getOperand(): [VariableAccess] i
# 2498|             Type = [IntType] int
# 2498|             ValueCategory = lvalue
# 2499|       getStmt(): [DeclStmt] declaration
# 2499|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of g
# 2499|             Type = [Class] ClassWithDestructor
# 2499|           getVariable().getInitializer(): [Initializer] initializer for g
# 2499|             getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2499|                 Type = [VoidType] void
# 2499|                 ValueCategory = prvalue
#-----|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
#-----|             Type = [VoidType] void
#-----|             ValueCategory = prvalue
#-----|           getQualifier(): [VariableAccess] g
#-----|               Type = [Class] ClassWithDestructor
#-----|               ValueCategory = lvalue
# 2500|     getStmt(4): [ReturnStmt] return ...
# 2502| [TopLevelFunction] void destruction_in_switch_1(int)
# 2502|   <params>: 
# 2502|     getParameter(0): [Parameter] c
# 2502|         Type = [IntType] int
# 2502|   getEntryPoint(): [BlockStmt] { ... }
# 2503|     getStmt(0): [SwitchStmt] switch (...) ... 
# 2503|       getExpr(): [VariableAccess] c
# 2503|           Type = [IntType] int
# 2503|           ValueCategory = prvalue(load)
# 2503|       getStmt(): [BlockStmt] { ... }
# 2504|         getStmt(0): [SwitchCase] case ...:
# 2504|           getExpr(): [Literal] 0
# 2504|               Type = [IntType] int
# 2504|               Value = [Literal] 0
# 2504|               ValueCategory = prvalue
# 2504|         getStmt(1): [BlockStmt] { ... }
# 2505|           getStmt(0): [DeclStmt] declaration
# 2505|             getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2505|                 Type = [Class] ClassWithDestructor
# 2505|               getVariable().getInitializer(): [Initializer] initializer for x
# 2505|                 getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2505|                     Type = [VoidType] void
# 2505|                     ValueCategory = prvalue
# 2506|           getStmt(1): [BreakStmt] break;
# 2507|             getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2507|                 Type = [VoidType] void
# 2507|                 ValueCategory = prvalue
# 2507|               getQualifier(): [VariableAccess] x
# 2507|                   Type = [Class] ClassWithDestructor
# 2507|                   ValueCategory = lvalue
# 2507|           getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2507|               Type = [VoidType] void
# 2507|               ValueCategory = prvalue
# 2507|             getQualifier(): [VariableAccess] x
# 2507|                 Type = [Class] ClassWithDestructor
# 2507|                 ValueCategory = lvalue
# 2508|     getStmt(1): [LabelStmt] label ...:
# 2509|     getStmt(2): [ReturnStmt] return ...
# 2511| [TopLevelFunction] void destruction_in_switch_2(int)
# 2511|   <params>: 
# 2511|     getParameter(0): [Parameter] c
# 2511|         Type = [IntType] int
# 2511|   getEntryPoint(): [BlockStmt] { ... }
# 2512|     getStmt(0): [SwitchStmt] switch (...) ... 
# 2512|       getInitialization(): [DeclStmt] declaration
# 2512|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 2512|             Type = [Class] ClassWithDestructor
# 2512|           getVariable().getInitializer(): [Initializer] initializer for y
# 2512|             getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2512|                 Type = [VoidType] void
# 2512|                 ValueCategory = prvalue
# 2512|       getExpr(): [VariableAccess] c
# 2512|           Type = [IntType] int
# 2512|           ValueCategory = prvalue(load)
# 2512|       getStmt(): [BlockStmt] { ... }
# 2513|         getStmt(0): [SwitchCase] case ...:
# 2513|           getExpr(): [Literal] 0
# 2513|               Type = [IntType] int
# 2513|               Value = [Literal] 0
# 2513|               ValueCategory = prvalue
# 2513|         getStmt(1): [BlockStmt] { ... }
# 2514|           getStmt(0): [BreakStmt] break;
# 2519|             getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2519|                 Type = [VoidType] void
# 2519|                 ValueCategory = prvalue
# 2519|               getQualifier(): [VariableAccess] y
# 2519|                   Type = [Class] ClassWithDestructor
# 2519|                   ValueCategory = lvalue
# 2516|         getStmt(2): [SwitchCase] default: 
# 2516|         getStmt(3): [BlockStmt] { ... }
# 2517|           getStmt(0): [BreakStmt] break;
# 2519|             getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2519|                 Type = [VoidType] void
# 2519|                 ValueCategory = prvalue
# 2519|               getQualifier(): [VariableAccess] y
# 2519|                   Type = [Class] ClassWithDestructor
# 2519|                   ValueCategory = lvalue
# 2519|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2519|           Type = [VoidType] void
# 2519|           ValueCategory = prvalue
# 2519|         getQualifier(): [VariableAccess] y
# 2519|             Type = [Class] ClassWithDestructor
# 2519|             ValueCategory = lvalue
# 2519|     getStmt(1): [LabelStmt] label ...:
# 2520|     getStmt(2): [ReturnStmt] return ...
# 2522| [TopLevelFunction] void destruction_in_switch_3(int)
# 2522|   <params>: 
# 2522|     getParameter(0): [Parameter] c
# 2522|         Type = [IntType] int
# 2522|   getEntryPoint(): [BlockStmt] { ... }
# 2523|     getStmt(0): [SwitchStmt] switch (...) ... 
# 2523|       getInitialization(): [DeclStmt] declaration
# 2523|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 2523|             Type = [Class] ClassWithDestructor
# 2523|           getVariable().getInitializer(): [Initializer] initializer for y
# 2523|             getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2523|                 Type = [VoidType] void
# 2523|                 ValueCategory = prvalue
# 2523|       getExpr(): [VariableAccess] c
# 2523|           Type = [IntType] int
# 2523|           ValueCategory = prvalue(load)
# 2523|       getStmt(): [BlockStmt] { ... }
# 2524|         getStmt(0): [SwitchCase] case ...:
# 2524|           getExpr(): [Literal] 0
# 2524|               Type = [IntType] int
# 2524|               Value = [Literal] 0
# 2524|               ValueCategory = prvalue
# 2524|         getStmt(1): [BlockStmt] { ... }
# 2525|           getStmt(0): [DeclStmt] declaration
# 2525|             getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2525|                 Type = [Class] ClassWithDestructor
# 2525|               getVariable().getInitializer(): [Initializer] initializer for x
# 2525|                 getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2525|                     Type = [VoidType] void
# 2525|                     ValueCategory = prvalue
# 2526|           getStmt(1): [BreakStmt] break;
# 2527|             getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2527|                 Type = [VoidType] void
# 2527|                 ValueCategory = prvalue
# 2527|               getQualifier(): [VariableAccess] x
# 2527|                   Type = [Class] ClassWithDestructor
# 2527|                   ValueCategory = lvalue
# 2531|             getImplicitDestructorCall(1): [DestructorCall] call to ~ClassWithDestructor
# 2531|                 Type = [VoidType] void
# 2531|                 ValueCategory = prvalue
# 2531|               getQualifier(): [VariableAccess] y
# 2531|                   Type = [Class] ClassWithDestructor
# 2531|                   ValueCategory = lvalue
# 2527|           getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2527|               Type = [VoidType] void
# 2527|               ValueCategory = prvalue
# 2527|             getQualifier(): [VariableAccess] x
# 2527|                 Type = [Class] ClassWithDestructor
# 2527|                 ValueCategory = lvalue
# 2528|         getStmt(2): [SwitchCase] default: 
# 2528|         getStmt(3): [BlockStmt] { ... }
# 2529|           getStmt(0): [BreakStmt] break;
# 2531|             getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2531|                 Type = [VoidType] void
# 2531|                 ValueCategory = prvalue
# 2531|               getQualifier(): [VariableAccess] y
# 2531|                   Type = [Class] ClassWithDestructor
# 2531|                   ValueCategory = lvalue
# 2531|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2531|           Type = [VoidType] void
# 2531|           ValueCategory = prvalue
# 2531|         getQualifier(): [VariableAccess] y
# 2531|             Type = [Class] ClassWithDestructor
# 2531|             ValueCategory = lvalue
# 2531|     getStmt(1): [LabelStmt] label ...:
# 2532|     getStmt(2): [ReturnStmt] return ...
# 2534| [TopLevelFunction] void destructor_possibly_not_handled()
# 2534|   <params>: 
# 2534|   getEntryPoint(): [BlockStmt] { ... }
# 2535|     getStmt(0): [DeclStmt] declaration
# 2535|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2535|           Type = [Class] ClassWithDestructor
# 2535|         getVariable().getInitializer(): [Initializer] initializer for x
# 2535|           getExpr(): [ConstructorCall] call to ClassWithDestructor
# 2535|               Type = [VoidType] void
# 2535|               ValueCategory = prvalue
# 2536|     getStmt(1): [TryStmt] try { ... }
# 2536|       getStmt(): [BlockStmt] { ... }
# 2537|         getStmt(0): [ExprStmt] ExprStmt
# 2537|           getExpr(): [ThrowExpr] throw ...
# 2537|               Type = [IntType] int
# 2537|               ValueCategory = prvalue
# 2537|             getExpr(): [Literal] 42
# 2537|                 Type = [IntType] int
# 2537|                 Value = [Literal] 42
# 2537|                 ValueCategory = prvalue
# 2539|       getChild(1): [Handler] <handler>
# 2539|         getBlock(): [CatchBlock] { ... }
# 2541|         getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2541|             Type = [VoidType] void
# 2541|             ValueCategory = prvalue
# 2541|           getQualifier(): [VariableAccess] x
# 2541|               Type = [Class] ClassWithDestructor
# 2541|               ValueCategory = lvalue
# 2541|     getStmt(2): [ReturnStmt] return ...
# 2541|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2541|           Type = [VoidType] void
# 2541|           ValueCategory = prvalue
# 2541|         getQualifier(): [VariableAccess] x
# 2541|             Type = [Class] ClassWithDestructor
# 2541|             ValueCategory = lvalue
# 2543| [TopLevelFunction] ClassWithDestructor getClassWithDestructor()
# 2543|   <params>: 
# 2545| [TopLevelFunction] void this_inconsistency(bool)
# 2545|   <params>: 
# 2545|     getParameter(0): [Parameter] b
# 2545|         Type = [BoolType] bool
# 2545|   getEntryPoint(): [BlockStmt] { ... }
# 2546|     getStmt(0): [IfStmt] if (...) ... 
# 2546|       getCondition(): [ConditionDeclExpr] (condition decl)
# 2546|           Type = [BoolType] bool
# 2546|           ValueCategory = prvalue
# 2546|         getChild(0): [FunctionCall] call to operator bool
# 2546|             Type = [BoolType] bool
# 2546|             ValueCategory = prvalue
# 2546|           getQualifier(): [VariableAccess] a
# 2546|               Type = [LValueReferenceType] const ClassWithDestructor &
# 2546|               ValueCategory = prvalue(load)
# 2546|           getQualifier().getFullyConverted(): [ReferenceDereferenceExpr] (reference dereference)
# 2546|               Type = [SpecifiedType] const ClassWithDestructor
# 2546|               ValueCategory = prvalue(load)
# 2546|         getInitializingExpr(): [FunctionCall] call to getClassWithDestructor
# 2546|             Type = [Class] ClassWithDestructor
# 2546|             ValueCategory = prvalue
# 2546|         getInitializingExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 2546|             Type = [LValueReferenceType] const ClassWithDestructor &
# 2546|             ValueCategory = prvalue
# 2546|           getExpr(): [CStyleCast] (const ClassWithDestructor)...
# 2546|               Conversion = [GlvalueConversion] glvalue conversion
# 2546|               Type = [SpecifiedType] const ClassWithDestructor
# 2546|               ValueCategory = lvalue
# 2546|             getExpr(): [TemporaryObjectExpr] temporary object
# 2546|                 Type = [Class] ClassWithDestructor
# 2546|                 ValueCategory = lvalue
# 2547|       getThen(): [EmptyStmt] ;
# 2547|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2547|           Type = [VoidType] void
# 2547|           ValueCategory = prvalue
# 2547|         getQualifier(): [ReuseExpr] reuse of temporary object
# 2547|             Type = [Class] ClassWithDestructor
# 2547|             ValueCategory = xvalue
# 2548|     getStmt(1): [ReturnStmt] return ...
# 2550| [TopLevelFunction] void constexpr_inconsistency(bool)
# 2550|   <params>: 
# 2550|     getParameter(0): [Parameter] b
# 2550|         Type = [BoolType] bool
# 2550|   getEntryPoint(): [BlockStmt] { ... }
# 2551|     getStmt(0): [ConstexprIfStmt] if constexpr (...) ... 
# 2551|       getInitialization(): [DeclStmt] declaration
# 2551|         getDeclarationEntry(0): [VariableDeclarationEntry] definition of a
# 2551|             Type = [LValueReferenceType] const ClassWithDestructor &
# 2551|           getVariable().getInitializer(): [Initializer] initializer for a
# 2551|             getExpr(): [FunctionCall] call to getClassWithDestructor
# 2551|                 Type = [Class] ClassWithDestructor
# 2551|                 ValueCategory = prvalue
# 2551|             getExpr().getFullyConverted(): [ReferenceToExpr] (reference to)
# 2551|                 Type = [LValueReferenceType] const ClassWithDestructor &
# 2551|                 ValueCategory = prvalue
# 2551|               getExpr(): [CStyleCast] (const ClassWithDestructor)...
# 2551|                   Conversion = [GlvalueConversion] glvalue conversion
# 2551|                   Type = [SpecifiedType] const ClassWithDestructor
# 2551|                   ValueCategory = lvalue
# 2551|                 getExpr(): [TemporaryObjectExpr] temporary object
# 2551|                     Type = [Class] ClassWithDestructor
# 2551|                     ValueCategory = lvalue
# 2551|       getCondition(): [VariableAccess] initialization_with_destructor_bool
# 2551|           Type = [BoolType] bool
# 2551|           Value = [VariableAccess] 1
# 2551|           ValueCategory = prvalue(load)
# 2552|       getThen(): [EmptyStmt] ;
# 2552|       getImplicitDestructorCall(0): [DestructorCall] call to ~ClassWithDestructor
# 2552|           Type = [VoidType] void
# 2552|           ValueCategory = prvalue
# 2552|         getQualifier(): [ReuseExpr] reuse of temporary object
# 2552|             Type = [Class] ClassWithDestructor
# 2552|             ValueCategory = xvalue
# 2553|     getStmt(1): [ReturnStmt] return ...
# 2555| [TopLevelFunction] void builtin_bitcast(unsigned long)
# 2555|   <params>: 
# 2555|     getParameter(0): [Parameter] ul
# 2555|         Type = [LongType] unsigned long
# 2555|   getEntryPoint(): [BlockStmt] { ... }
# 2556|     getStmt(0): [DeclStmt] declaration
# 2556|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of d
# 2556|           Type = [DoubleType] double
# 2556|         getVariable().getInitializer(): [Initializer] initializer for d
# 2556|           getExpr(): [BuiltInBitCast] __builtin_bit_cast
# 2556|               Type = [DoubleType] double
# 2556|               ValueCategory = prvalue
# 2556|             getChild(0): [TypeName] double
# 2556|                 Type = [DoubleType] double
# 2556|                 ValueCategory = prvalue
# 2556|             getChild(1): [VariableAccess] ul
# 2556|                 Type = [LongType] unsigned long
# 2556|                 ValueCategory = prvalue(load)
# 2557|     getStmt(1): [ReturnStmt] return ...
# 2559| [TopLevelFunction] void p_points_to_x_or_y(int, int)
# 2559|   <params>: 
# 2559|     getParameter(0): [Parameter] a
# 2559|         Type = [IntType] int
# 2559|     getParameter(1): [Parameter] b
# 2559|         Type = [IntType] int
# 2559|   getEntryPoint(): [BlockStmt] { ... }
# 2560|     getStmt(0): [DeclStmt] declaration
# 2560|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
# 2560|           Type = [IntType] int
# 2561|     getStmt(1): [DeclStmt] declaration
# 2561|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of y
# 2561|           Type = [IntType] int
# 2562|     getStmt(2): [DeclStmt] declaration
# 2562|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of p
# 2562|           Type = [IntPointerType] int *
# 2563|     getStmt(3): [IfStmt] if (...) ... 
# 2563|       getCondition(): [LTExpr] ... < ...
# 2563|           Type = [BoolType] bool
# 2563|           ValueCategory = prvalue
# 2563|         getLesserOperand(): [VariableAccess] a
# 2563|             Type = [IntType] int
# 2563|             ValueCategory = prvalue(load)
# 2563|         getGreaterOperand(): [VariableAccess] b
# 2563|             Type = [IntType] int
# 2563|             ValueCategory = prvalue(load)
# 2563|       getThen(): [BlockStmt] { ... }
# 2564|         getStmt(0): [ExprStmt] ExprStmt
# 2564|           getExpr(): [AssignExpr] ... = ...
# 2564|               Type = [IntPointerType] int *
# 2564|               ValueCategory = lvalue
# 2564|             getLValue(): [VariableAccess] p
# 2564|                 Type = [IntPointerType] int *
# 2564|                 ValueCategory = lvalue
# 2564|             getRValue(): [AddressOfExpr] & ...
# 2564|                 Type = [IntPointerType] int *
# 2564|                 ValueCategory = prvalue
# 2564|               getOperand(): [VariableAccess] x
# 2564|                   Type = [IntType] int
# 2564|                   ValueCategory = lvalue
# 2565|       getElse(): [BlockStmt] { ... }
# 2566|         getStmt(0): [ExprStmt] ExprStmt
# 2566|           getExpr(): [AssignExpr] ... = ...
# 2566|               Type = [IntPointerType] int *
# 2566|               ValueCategory = lvalue
# 2566|             getLValue(): [VariableAccess] p
# 2566|                 Type = [IntPointerType] int *
# 2566|                 ValueCategory = lvalue
# 2566|             getRValue(): [AddressOfExpr] & ...
# 2566|                 Type = [IntPointerType] int *
# 2566|                 ValueCategory = prvalue
# 2566|               getOperand(): [VariableAccess] y
# 2566|                   Type = [IntType] int
# 2566|                   ValueCategory = lvalue
# 2568|     getStmt(4): [ExprStmt] ExprStmt
# 2568|       getExpr(): [AssignExpr] ... = ...
# 2568|           Type = [IntType] int
# 2568|           ValueCategory = lvalue
# 2568|         getLValue(): [PointerDereferenceExpr] * ...
# 2568|             Type = [IntType] int
# 2568|             ValueCategory = lvalue
# 2568|           getOperand(): [VariableAccess] p
# 2568|               Type = [IntPointerType] int *
# 2568|               ValueCategory = prvalue(load)
# 2568|         getRValue(): [Literal] 5
# 2568|             Type = [IntType] int
# 2568|             Value = [Literal] 5
# 2568|             ValueCategory = prvalue
# 2569|     getStmt(5): [DeclStmt] declaration
# 2569|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of z
# 2569|           Type = [IntType] int
# 2569|         getVariable().getInitializer(): [Initializer] initializer for z
# 2569|           getExpr(): [VariableAccess] x
# 2569|               Type = [IntType] int
# 2569|               ValueCategory = prvalue(load)
# 2570|     getStmt(6): [DeclStmt] declaration
# 2570|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of w
# 2570|           Type = [IntType] int
# 2570|         getVariable().getInitializer(): [Initializer] initializer for w
# 2570|           getExpr(): [VariableAccess] y
# 2570|               Type = [IntType] int
# 2570|               ValueCategory = prvalue(load)
# 2571|     getStmt(7): [ReturnStmt] return ...
# 2573| [TopLevelFunction] int phi_after_while()
# 2573|   <params>: 
# 2573|   getEntryPoint(): [BlockStmt] { ... }
# 2574|     getStmt(0): [DeclStmt] declaration
# 2574|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of r
# 2574|           Type = [IntType] int
# 2575|     getStmt(1): [DeclStmt] declaration
# 2575|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of rP
# 2575|           Type = [IntPointerType] int *
# 2575|         getVariable().getInitializer(): [Initializer] initializer for rP
# 2575|           getExpr(): [AddressOfExpr] & ...
# 2575|               Type = [IntPointerType] int *
# 2575|               ValueCategory = prvalue
# 2575|             getOperand(): [VariableAccess] r
# 2575|                 Type = [IntType] int
# 2575|                 ValueCategory = lvalue
# 2577|     getStmt(2): [WhileStmt] while (...) ...
# 2577|       getCondition(): [FunctionCall] call to predicateA
# 2577|           Type = [BoolType] bool
# 2577|           ValueCategory = prvalue
# 2577|       getStmt(): [BlockStmt] { ... }
# 2578|         getStmt(0): [DeclStmt] declaration
# 2578|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of s
# 2578|               Type = [IntType] int
# 2578|             getVariable().getInitializer(): [Initializer] initializer for s
# 2578|               getExpr(): [Literal] 0
# 2578|                   Type = [IntType] int
# 2578|                   Value = [Literal] 0
# 2578|                   ValueCategory = prvalue
# 2579|         getStmt(1): [ExprStmt] ExprStmt
# 2579|           getExpr(): [AssignExpr] ... = ...
# 2579|               Type = [IntType] int
# 2579|               ValueCategory = lvalue
# 2579|             getLValue(): [PointerDereferenceExpr] * ...
# 2579|                 Type = [IntType] int
# 2579|                 ValueCategory = lvalue
# 2579|               getOperand(): [VariableAccess] rP
# 2579|                   Type = [IntPointerType] int *
# 2579|                   ValueCategory = prvalue(load)
# 2579|             getRValue(): [VariableAccess] s
# 2579|                 Type = [IntType] int
# 2579|                 ValueCategory = prvalue(load)
# 2580|         getStmt(2): [ExprStmt] ExprStmt
# 2580|           getExpr(): [AssignExpr] ... = ...
# 2580|               Type = [IntPointerType] int *
# 2580|               ValueCategory = lvalue
# 2580|             getLValue(): [VariableAccess] rP
# 2580|                 Type = [IntPointerType] int *
# 2580|                 ValueCategory = lvalue
# 2580|             getRValue(): [AddressOfExpr] & ...
# 2580|                 Type = [IntPointerType] int *
# 2580|                 ValueCategory = prvalue
# 2580|               getOperand(): [VariableAccess] s
# 2580|                   Type = [IntType] int
# 2580|                   ValueCategory = lvalue
# 2583|     getStmt(3): [ReturnStmt] return ...
# 2583|       getExpr(): [VariableAccess] r
# 2583|           Type = [IntType] int
# 2583|           ValueCategory = prvalue(load)
# 2588| [TopLevelFunction] char* recursive_conditional_call_with_increment(char*, bool)
# 2588|   <params>: 
# 2588|     getParameter(0): [Parameter] d
# 2588|         Type = [CharPointerType] char *
# 2588|     getParameter(1): [Parameter] b
# 2588|         Type = [BoolType] bool
# 2589|   getEntryPoint(): [BlockStmt] { ... }
# 2590|     getStmt(0): [IfStmt] if (...) ... 
# 2590|       getCondition(): [VariableAccess] b
# 2590|           Type = [BoolType] bool
# 2590|           ValueCategory = prvalue(load)
# 2590|       getThen(): [BlockStmt] { ... }
# 2591|         getStmt(0): [ExprStmt] ExprStmt
# 2591|           getExpr(): [AssignExpr] ... = ...
# 2591|               Type = [CharPointerType] char *
# 2591|               ValueCategory = lvalue
# 2591|             getLValue(): [VariableAccess] d
# 2591|                 Type = [CharPointerType] char *
# 2591|                 ValueCategory = lvalue
# 2591|             getRValue(): [FunctionCall] call to recursive_conditional_call_with_increment
# 2591|                 Type = [CharPointerType] char *
# 2591|                 ValueCategory = prvalue
# 2591|               getArgument(0): [VariableAccess] d
# 2591|                   Type = [CharPointerType] char *
# 2591|                   ValueCategory = prvalue(load)
# 2591|               getArgument(1): [VariableAccess] b
# 2591|                   Type = [BoolType] bool
# 2591|                   ValueCategory = prvalue(load)
# 2593|     getStmt(1): [ExprStmt] ExprStmt
# 2593|       getExpr(): [PostfixIncrExpr] ... ++
# 2593|           Type = [CharPointerType] char *
# 2593|           ValueCategory = prvalue
# 2593|         getOperand(): [VariableAccess] d
# 2593|             Type = [CharPointerType] char *
# 2593|             ValueCategory = lvalue
# 2594|     getStmt(2): [ReturnStmt] return ...
# 2594|       getExpr(): [VariableAccess] d
# 2594|           Type = [CharPointerType] char *
# 2594|           ValueCategory = prvalue(load)
# 2597| [CopyAssignmentOperator] Recursive& Recursive::operator=(Recursive const&)
# 2597|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Recursive &
# 2597| [MoveAssignmentOperator] Recursive& Recursive::operator=(Recursive&&)
# 2597|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] Recursive &&
# 2602| [TopLevelFunction] Recursive* merge(Recursive*)
# 2602|   <params>: 
# 2602|     getParameter(0): [Parameter] a
# 2602|         Type = [PointerType] Recursive *
# 2603|   getEntryPoint(): [BlockStmt] { ... }
# 2604|     getStmt(0): [DeclStmt] declaration
# 2604|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of b
# 2604|           Type = [PointerType] Recursive *
# 2605|     getStmt(1): [DeclStmt] declaration
# 2605|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of p
# 2605|           Type = [PointerType] Recursive **
# 2605|         getVariable().getInitializer(): [Initializer] initializer for p
# 2605|           getExpr(): [AddressOfExpr] & ...
# 2605|               Type = [PointerType] Recursive **
# 2605|               ValueCategory = prvalue
# 2605|             getOperand(): [VariableAccess] b
# 2605|                 Type = [PointerType] Recursive *
# 2605|                 ValueCategory = lvalue
# 2607|     getStmt(2): [WhileStmt] while (...) ...
# 2607|       getCondition(): [FunctionCall] call to predicateA
# 2607|           Type = [BoolType] bool
# 2607|           ValueCategory = prvalue
# 2608|       getStmt(): [BlockStmt] { ... }
# 2609|         getStmt(0): [ExprStmt] ExprStmt
# 2609|           getExpr(): [AssignExpr] ... = ...
# 2609|               Type = [PointerType] Recursive *
# 2609|               ValueCategory = lvalue
# 2609|             getLValue(): [PointerDereferenceExpr] * ...
# 2609|                 Type = [PointerType] Recursive *
# 2609|                 ValueCategory = lvalue
# 2609|               getOperand(): [VariableAccess] p
# 2609|                   Type = [PointerType] Recursive **
# 2609|                   ValueCategory = prvalue(load)
# 2609|             getRValue(): [VariableAccess] a
# 2609|                 Type = [PointerType] Recursive *
# 2609|                 ValueCategory = prvalue(load)
# 2610|         getStmt(1): [ExprStmt] ExprStmt
# 2610|           getExpr(): [AssignExpr] ... = ...
# 2610|               Type = [PointerType] Recursive **
# 2610|               ValueCategory = lvalue
# 2610|             getLValue(): [VariableAccess] p
# 2610|                 Type = [PointerType] Recursive **
# 2610|                 ValueCategory = lvalue
# 2610|             getRValue(): [AddressOfExpr] & ...
# 2610|                 Type = [PointerType] Recursive **
# 2610|                 ValueCategory = prvalue
# 2610|               getOperand(): [PointerFieldAccess] next
# 2610|                   Type = [PointerType] Recursive *
# 2610|                   ValueCategory = lvalue
# 2610|                 getQualifier(): [VariableAccess] a
# 2610|                     Type = [PointerType] Recursive *
# 2610|                     ValueCategory = prvalue(load)
# 2613|     getStmt(3): [ReturnStmt] return ...
# 2613|       getExpr(): [VariableAccess] b
# 2613|           Type = [PointerType] Recursive *
# 2613|           ValueCategory = prvalue(load)
# 2616| [TopLevelFunction] void use_const_int(int const*)
# 2616|   <params>: 
# 2616|     getParameter(0): [Parameter] (unnamed parameter 0)
# 2616|         Type = [PointerType] const int *
# 2618| [TopLevelFunction] void escaping_pointer(bool)
# 2618|   <params>: 
# 2618|     getParameter(0): [Parameter] b
# 2618|         Type = [BoolType] bool
# 2619|   getEntryPoint(): [BlockStmt] { ... }
# 2620|     getStmt(0): [DeclStmt] declaration
# 2620|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of data
# 2620|           Type = [IntPointerType] int *
# 2621|     getStmt(1): [DeclStmt] declaration
# 2621|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of l1
# 2621|           Type = [IntType] int
# 2621|       getDeclarationEntry(1): [VariableDeclarationEntry] definition of l2
# 2621|           Type = [IntType] int
# 2622|     getStmt(2): [IfStmt] if (...) ... 
# 2622|       getCondition(): [VariableAccess] b
# 2622|           Type = [BoolType] bool
# 2622|           ValueCategory = prvalue(load)
# 2623|       getThen(): [BlockStmt] { ... }
# 2624|         getStmt(0): [ExprStmt] ExprStmt
# 2624|           getExpr(): [AssignExpr] ... = ...
# 2624|               Type = [IntPointerType] int *
# 2624|               ValueCategory = lvalue
# 2624|             getLValue(): [VariableAccess] data
# 2624|                 Type = [IntPointerType] int *
# 2624|                 ValueCategory = lvalue
# 2624|             getRValue(): [AddressOfExpr] & ...
# 2624|                 Type = [IntPointerType] int *
# 2624|                 ValueCategory = prvalue
# 2624|               getOperand(): [VariableAccess] l1
# 2624|                   Type = [IntType] int
# 2624|                   ValueCategory = lvalue
# 2627|       getElse(): [BlockStmt] { ... }
# 2628|         getStmt(0): [ExprStmt] ExprStmt
# 2628|           getExpr(): [AssignExpr] ... = ...
# 2628|               Type = [IntPointerType] int *
# 2628|               ValueCategory = lvalue
# 2628|             getLValue(): [VariableAccess] data
# 2628|                 Type = [IntPointerType] int *
# 2628|                 ValueCategory = lvalue
# 2628|             getRValue(): [AddressOfExpr] & ...
# 2628|                 Type = [IntPointerType] int *
# 2628|                 ValueCategory = prvalue
# 2628|               getOperand(): [VariableAccess] l2
# 2628|                   Type = [IntType] int
# 2628|                   ValueCategory = lvalue
# 2630|     getStmt(3): [ExprStmt] ExprStmt
# 2630|       getExpr(): [FunctionCall] call to use_const_int
# 2630|           Type = [VoidType] void
# 2630|           ValueCategory = prvalue
# 2630|         getArgument(0): [VariableAccess] data
# 2630|             Type = [IntPointerType] int *
# 2630|             ValueCategory = prvalue(load)
# 2630|         getArgument(0).getFullyConverted(): [CStyleCast] (const int *)...
# 2630|             Conversion = [PointerConversion] pointer conversion
# 2630|             Type = [PointerType] const int *
# 2630|             ValueCategory = prvalue
# 2631|     getStmt(4): [ReturnStmt] return ...
# 2636| [TopLevelFunction] void* malloc(unsigned long)
# 2636|   <params>: 
# 2636|     getParameter(0): [Parameter] (unnamed parameter 0)
# 2636|         Type = [LongType] unsigned long
# 2637| [TopLevelFunction] void use_const_void_pointer(void const*)
# 2637|   <params>: 
# 2637|     getParameter(0): [Parameter] (unnamed parameter 0)
# 2637|         Type = [PointerType] const void *
# 2639| [TopLevelFunction] void needs_chi_for_initialize_groups()
# 2639|   <params>: 
# 2640|   getEntryPoint(): [BlockStmt] { ... }
# 2641|     getStmt(0): [IfStmt] if (...) ... 
# 2641|       getCondition(): [FunctionCall] call to predicateA
# 2641|           Type = [BoolType] bool
# 2641|           ValueCategory = prvalue
# 2642|       getThen(): [BlockStmt] { ... }
# 2643|         getStmt(0): [DeclStmt] declaration
# 2643|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of data
# 2643|               Type = [PointerType] int64_t *
# 2643|             getVariable().getInitializer(): [Initializer] initializer for data
# 2643|               getExpr(): [FunctionCall] call to malloc
# 2643|                   Type = [VoidPointerType] void *
# 2643|                   ValueCategory = prvalue
# 2643|                 getArgument(0): [Literal] 100
# 2643|                     Type = [IntType] int
# 2643|                     Value = [Literal] 100
# 2643|                     ValueCategory = prvalue
# 2643|                 getArgument(0).getFullyConverted(): [CStyleCast] (unsigned long)...
# 2643|                     Conversion = [IntegralConversion] integral conversion
# 2643|                     Type = [LongType] unsigned long
# 2643|                     Value = [CStyleCast] 100
# 2643|                     ValueCategory = prvalue
# 2643|               getExpr().getFullyConverted(): [CStyleCast] (int64_t *)...
# 2643|                   Conversion = [PointerConversion] pointer conversion
# 2643|                   Type = [PointerType] int64_t *
# 2643|                   ValueCategory = prvalue
# 2644|         getStmt(1): [IfStmt] if (...) ... 
# 2644|           getCondition(): [NEExpr] ... != ...
# 2644|               Type = [BoolType] bool
# 2644|               ValueCategory = prvalue
# 2644|             getLeftOperand(): [VariableAccess] data
# 2644|                 Type = [PointerType] int64_t *
# 2644|                 ValueCategory = prvalue(load)
# 2644|             getRightOperand(): [Literal] 0
# 2644|                 Type = [IntType] int
# 2644|                 Value = [Literal] 0
# 2644|                 ValueCategory = prvalue
# 2644|             getLeftOperand().getFullyConverted(): [CStyleCast] (void *)...
# 2644|                 Conversion = [PointerConversion] pointer conversion
# 2644|                 Type = [VoidPointerType] void *
# 2644|                 ValueCategory = prvalue
# 2644|             getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2644|                 Type = [VoidPointerType] void *
# 2644|                 Value = [ParenthesisExpr] 0
# 2644|                 ValueCategory = prvalue
# 2644|               getExpr(): [CStyleCast] (void *)...
# 2644|                   Conversion = [IntegralToPointerConversion] integral to pointer conversion
# 2644|                   Type = [VoidPointerType] void *
# 2644|                   Value = [CStyleCast] 0
# 2644|                   ValueCategory = prvalue
# 2645|           getThen(): [BlockStmt] { ... }
# 2646|             getStmt(0): [ExprStmt] ExprStmt
# 2646|               getExpr(): [AssignExpr] ... = ...
# 2646|                   Type = [PointerType] int64_t *
# 2646|                   ValueCategory = lvalue
# 2646|                 getLValue(): [VariableAccess] data
# 2646|                     Type = [PointerType] int64_t *
# 2646|                     ValueCategory = lvalue
# 2646|                 getRValue(): [FunctionCall] call to malloc
# 2646|                     Type = [VoidPointerType] void *
# 2646|                     ValueCategory = prvalue
# 2646|                   getArgument(0): [Literal] 100
# 2646|                       Type = [IntType] int
# 2646|                       Value = [Literal] 100
# 2646|                       ValueCategory = prvalue
# 2646|                   getArgument(0).getFullyConverted(): [CStyleCast] (unsigned long)...
# 2646|                       Conversion = [IntegralConversion] integral conversion
# 2646|                       Type = [LongType] unsigned long
# 2646|                       Value = [CStyleCast] 100
# 2646|                       ValueCategory = prvalue
# 2646|                 getRValue().getFullyConverted(): [CStyleCast] (int64_t *)...
# 2646|                     Conversion = [PointerConversion] pointer conversion
# 2646|                     Type = [PointerType] int64_t *
# 2646|                     ValueCategory = prvalue
# 2648|         getStmt(2): [ExprStmt] ExprStmt
# 2648|           getExpr(): [FunctionCall] call to use_const_void_pointer
# 2648|               Type = [VoidType] void
# 2648|               ValueCategory = prvalue
# 2648|             getArgument(0): [VariableAccess] data
# 2648|                 Type = [PointerType] int64_t *
# 2648|                 ValueCategory = prvalue(load)
# 2648|             getArgument(0).getFullyConverted(): [CStyleCast] (const void *)...
# 2648|                 Conversion = [PointerConversion] pointer conversion
# 2648|                 Type = [PointerType] const void *
# 2648|                 ValueCategory = prvalue
# 2651|       getElse(): [BlockStmt] { ... }
# 2652|         getStmt(0): [DeclStmt] declaration
# 2652|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of data
# 2652|               Type = [PointerType] int64_t *
# 2652|             getVariable().getInitializer(): [Initializer] initializer for data
# 2652|               getExpr(): [FunctionCall] call to malloc
# 2652|                   Type = [VoidPointerType] void *
# 2652|                   ValueCategory = prvalue
# 2652|                 getArgument(0): [Literal] 100
# 2652|                     Type = [IntType] int
# 2652|                     Value = [Literal] 100
# 2652|                     ValueCategory = prvalue
# 2652|                 getArgument(0).getFullyConverted(): [CStyleCast] (unsigned long)...
# 2652|                     Conversion = [IntegralConversion] integral conversion
# 2652|                     Type = [LongType] unsigned long
# 2652|                     Value = [CStyleCast] 100
# 2652|                     ValueCategory = prvalue
# 2652|               getExpr().getFullyConverted(): [CStyleCast] (int64_t *)...
# 2652|                   Conversion = [PointerConversion] pointer conversion
# 2652|                   Type = [PointerType] int64_t *
# 2652|                   ValueCategory = prvalue
# 2653|         getStmt(1): [IfStmt] if (...) ... 
# 2653|           getCondition(): [NEExpr] ... != ...
# 2653|               Type = [BoolType] bool
# 2653|               ValueCategory = prvalue
# 2653|             getLeftOperand(): [VariableAccess] data
# 2653|                 Type = [PointerType] int64_t *
# 2653|                 ValueCategory = prvalue(load)
# 2653|             getRightOperand(): [Literal] 0
# 2653|                 Type = [IntType] int
# 2653|                 Value = [Literal] 0
# 2653|                 ValueCategory = prvalue
# 2653|             getLeftOperand().getFullyConverted(): [CStyleCast] (void *)...
# 2653|                 Conversion = [PointerConversion] pointer conversion
# 2653|                 Type = [VoidPointerType] void *
# 2653|                 ValueCategory = prvalue
# 2653|             getRightOperand().getFullyConverted(): [ParenthesisExpr] (...)
# 2653|                 Type = [VoidPointerType] void *
# 2653|                 Value = [ParenthesisExpr] 0
# 2653|                 ValueCategory = prvalue
# 2653|               getExpr(): [CStyleCast] (void *)...
# 2653|                   Conversion = [IntegralToPointerConversion] integral to pointer conversion
# 2653|                   Type = [VoidPointerType] void *
# 2653|                   Value = [CStyleCast] 0
# 2653|                   ValueCategory = prvalue
# 2654|           getThen(): [BlockStmt] { ... }
# 2655|             getStmt(0): [ExprStmt] ExprStmt
# 2655|               getExpr(): [AssignExpr] ... = ...
# 2655|                   Type = [PointerType] int64_t *
# 2655|                   ValueCategory = lvalue
# 2655|                 getLValue(): [VariableAccess] data
# 2655|                     Type = [PointerType] int64_t *
# 2655|                     ValueCategory = lvalue
# 2655|                 getRValue(): [FunctionCall] call to malloc
# 2655|                     Type = [VoidPointerType] void *
# 2655|                     ValueCategory = prvalue
# 2655|                   getArgument(0): [Literal] 200
# 2655|                       Type = [IntType] int
# 2655|                       Value = [Literal] 200
# 2655|                       ValueCategory = prvalue
# 2655|                   getArgument(0).getFullyConverted(): [CStyleCast] (unsigned long)...
# 2655|                       Conversion = [IntegralConversion] integral conversion
# 2655|                       Type = [LongType] unsigned long
# 2655|                       Value = [CStyleCast] 200
# 2655|                       ValueCategory = prvalue
# 2655|                 getRValue().getFullyConverted(): [CStyleCast] (int64_t *)...
# 2655|                     Conversion = [PointerConversion] pointer conversion
# 2655|                     Type = [PointerType] int64_t *
# 2655|                     ValueCategory = prvalue
# 2657|         getStmt(2): [ExprStmt] ExprStmt
# 2657|           getExpr(): [FunctionCall] call to use_const_void_pointer
# 2657|               Type = [VoidType] void
# 2657|               ValueCategory = prvalue
# 2657|             getArgument(0): [VariableAccess] data
# 2657|                 Type = [PointerType] int64_t *
# 2657|                 ValueCategory = prvalue(load)
# 2657|             getArgument(0).getFullyConverted(): [CStyleCast] (const void *)...
# 2657|                 Conversion = [PointerConversion] pointer conversion
# 2657|                 Type = [PointerType] const void *
# 2657|                 ValueCategory = prvalue
# 2659|     getStmt(1): [ReturnStmt] return ...
# 2661| [TopLevelFunction] void use_int(int)
# 2661|   <params>: 
# 2661|     getParameter(0): [Parameter] (unnamed parameter 0)
# 2661|         Type = [IntType] int
# 2663| [TopLevelFunction] void phi_with_single_input_at_merge(bool)
# 2663|   <params>: 
# 2663|     getParameter(0): [Parameter] b
# 2663|         Type = [BoolType] bool
# 2664|   getEntryPoint(): [BlockStmt] { ... }
# 2665|     getStmt(0): [DeclStmt] declaration
# 2665|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of data
# 2665|           Type = [IntPointerType] int *
# 2665|         getVariable().getInitializer(): [Initializer] initializer for data
# 2665|           getExpr(): [Literal] 0
# 2665|               Type = [NullPointerType] decltype(nullptr)
# 2665|               Value = [Literal] 0
# 2665|               ValueCategory = prvalue
# 2665|           getExpr().getFullyConverted(): [CStyleCast] (int *)...
# 2665|               Conversion = [PointerConversion] pointer conversion
# 2665|               Type = [IntPointerType] int *
# 2665|               Value = [CStyleCast] 0
# 2665|               ValueCategory = prvalue
# 2666|     getStmt(1): [IfStmt] if (...) ... 
# 2666|       getCondition(): [VariableAccess] b
# 2666|           Type = [BoolType] bool
# 2666|           ValueCategory = prvalue(load)
# 2666|       getThen(): [BlockStmt] { ... }
# 2667|         getStmt(0): [DeclStmt] declaration
# 2667|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of intBuffer
# 2667|               Type = [IntType] int
# 2667|             getVariable().getInitializer(): [Initializer] initializer for intBuffer
# 2667|               getExpr(): [Literal] 8
# 2667|                   Type = [IntType] int
# 2667|                   Value = [Literal] 8
# 2667|                   ValueCategory = prvalue
# 2668|         getStmt(1): [ExprStmt] ExprStmt
# 2668|           getExpr(): [AssignExpr] ... = ...
# 2668|               Type = [IntPointerType] int *
# 2668|               ValueCategory = lvalue
# 2668|             getLValue(): [VariableAccess] data
# 2668|                 Type = [IntPointerType] int *
# 2668|                 ValueCategory = lvalue
# 2668|             getRValue(): [AddressOfExpr] & ...
# 2668|                 Type = [IntPointerType] int *
# 2668|                 ValueCategory = prvalue
# 2668|               getOperand(): [VariableAccess] intBuffer
# 2668|                   Type = [IntType] int
# 2668|                   ValueCategory = lvalue
# 2670|     getStmt(2): [ExprStmt] ExprStmt
# 2670|       getExpr(): [FunctionCall] call to use_int
# 2670|           Type = [VoidType] void
# 2670|           ValueCategory = prvalue
# 2670|         getArgument(0): [PointerDereferenceExpr] * ...
# 2670|             Type = [IntType] int
# 2670|             ValueCategory = prvalue(load)
# 2670|           getOperand(): [VariableAccess] data
# 2670|               Type = [IntPointerType] int *
# 2670|               ValueCategory = prvalue(load)
# 2671|     getStmt(3): [ReturnStmt] return ...
# 2673| [TopLevelFunction] void use(char const*)
# 2673|   <params>: 
# 2673|     getParameter(0): [Parameter] fmt
# 2673|         Type = [PointerType] const char *
# 2684| [TopLevelFunction] void test(bool)
# 2684|   <params>: 
# 2684|     getParameter(0): [Parameter] b
# 2684|         Type = [BoolType] bool
# 2685|   getEntryPoint(): [BlockStmt] { ... }
# 2686|     getStmt(0): [DoStmt] do (...) ...
# 2686|       getCondition(): [Literal] 0
# 2686|           Type = [IntType] int
# 2686|           Value = [Literal] 0
# 2686|           ValueCategory = prvalue
# 2686|       getStmt(): [BlockStmt] { ... }
# 2686|         getStmt(0): [ExprStmt] ExprStmt
# 2686|           getExpr(): [FunctionCall] call to use
# 2686|               Type = [VoidType] void
# 2686|               ValueCategory = prvalue
# 2686|             getArgument(0): [ConditionalExpr] ... ? ... : ...
# 2686|                 Type = [PointerType] const char *
# 2686|                 ValueCategory = prvalue
# 2686|               getCondition(): [VariableAccess] b
# 2686|                   Type = [BoolType] bool
# 2686|                   ValueCategory = prvalue(load)
# 2686|               getThen(): 
# 2686|                   Type = [ArrayType] const char[1]
# 2686|                   Value = [StringLiteral] ""
# 2686|                   ValueCategory = lvalue
# 2686|               getElse(): 
# 2686|                   Type = [ArrayType] const char[1]
# 2686|                   Value = [StringLiteral] ""
# 2686|                   ValueCategory = lvalue
# 2686|               getThen().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 2686|                   Type = [PointerType] const char *
# 2686|                   ValueCategory = prvalue
# 2686|               getElse().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 2686|                   Type = [PointerType] const char *
# 2686|                   ValueCategory = prvalue
# 2686|         getStmt(1): [ExprStmt] ExprStmt
# 2686|           getExpr(): [FunctionCall] call to use
# 2686|               Type = [VoidType] void
# 2686|               ValueCategory = prvalue
# 2686|             getArgument(0): [ConditionalExpr] ... ? ... : ...
# 2686|                 Type = [PointerType] const char *
# 2686|                 ValueCategory = prvalue
# 2686|               getCondition(): [VariableAccess] b
# 2686|                   Type = [BoolType] bool
# 2686|                   ValueCategory = prvalue(load)
# 2686|               getThen(): 
# 2686|                   Type = [ArrayType] const char[1]
# 2686|                   Value = [StringLiteral] ""
# 2686|                   ValueCategory = lvalue
# 2686|               getElse(): 
# 2686|                   Type = [ArrayType] const char[1]
# 2686|                   Value = [StringLiteral] ""
# 2686|                   ValueCategory = lvalue
# 2686|               getThen().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 2686|                   Type = [PointerType] const char *
# 2686|                   ValueCategory = prvalue
# 2686|               getElse().getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
# 2686|                   Type = [PointerType] const char *
# 2686|                   ValueCategory = prvalue
# 2686|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2686|           Conversion = [BoolConversion] conversion to bool
# 2686|           Type = [BoolType] bool
# 2686|           Value = [CStyleCast] 0
# 2686|           ValueCategory = prvalue
# 2687|     getStmt(1): [ReturnStmt] return ...
# 2706| [TopLevelFunction] void many_defs_per_use()
# 2706|   <params>: 
# 2706|   getEntryPoint(): [BlockStmt] { ... }
# 2710|     getStmt(0): [DoStmt] do (...) ...
# 2712|       getCondition(): [Literal] 0
# 2712|           Type = [IntType] int
# 2712|           Value = [Literal] 0
# 2712|           ValueCategory = prvalue
# 2710|       getStmt(): [BlockStmt] { ... }
# 2711|         getStmt(0): [DeclStmt] declaration
# 2711|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x0
# 2711|               Type = [Struct] String
# 2711|             getVariable().getInitializer(): [Initializer] initializer for x0
# 2711|               getExpr(): [ConstructorCall] call to String
# 2711|                   Type = [VoidType] void
# 2711|                   ValueCategory = prvalue
# 2712|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2712|             Type = [VoidType] void
# 2712|             ValueCategory = prvalue
# 2712|           getQualifier(): [VariableAccess] x0
# 2712|               Type = [Struct] String
# 2712|               ValueCategory = lvalue
# 2712|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2712|           Conversion = [BoolConversion] conversion to bool
# 2712|           Type = [BoolType] bool
# 2712|           Value = [CStyleCast] 0
# 2712|           ValueCategory = prvalue
# 2713|     getStmt(1): [DoStmt] do (...) ...
# 2715|       getCondition(): [Literal] 0
# 2715|           Type = [IntType] int
# 2715|           Value = [Literal] 0
# 2715|           ValueCategory = prvalue
# 2713|       getStmt(): [BlockStmt] { ... }
# 2714|         getStmt(0): [DeclStmt] declaration
# 2714|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1
# 2714|               Type = [Struct] String
# 2714|             getVariable().getInitializer(): [Initializer] initializer for x1
# 2714|               getExpr(): [ConstructorCall] call to String
# 2714|                   Type = [VoidType] void
# 2714|                   ValueCategory = prvalue
# 2715|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2715|             Type = [VoidType] void
# 2715|             ValueCategory = prvalue
# 2715|           getQualifier(): [VariableAccess] x1
# 2715|               Type = [Struct] String
# 2715|               ValueCategory = lvalue
# 2715|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2715|           Conversion = [BoolConversion] conversion to bool
# 2715|           Type = [BoolType] bool
# 2715|           Value = [CStyleCast] 0
# 2715|           ValueCategory = prvalue
# 2716|     getStmt(2): [DoStmt] do (...) ...
# 2718|       getCondition(): [Literal] 0
# 2718|           Type = [IntType] int
# 2718|           Value = [Literal] 0
# 2718|           ValueCategory = prvalue
# 2716|       getStmt(): [BlockStmt] { ... }
# 2717|         getStmt(0): [DeclStmt] declaration
# 2717|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x2
# 2717|               Type = [Struct] String
# 2717|             getVariable().getInitializer(): [Initializer] initializer for x2
# 2717|               getExpr(): [ConstructorCall] call to String
# 2717|                   Type = [VoidType] void
# 2717|                   ValueCategory = prvalue
# 2718|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2718|             Type = [VoidType] void
# 2718|             ValueCategory = prvalue
# 2718|           getQualifier(): [VariableAccess] x2
# 2718|               Type = [Struct] String
# 2718|               ValueCategory = lvalue
# 2718|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2718|           Conversion = [BoolConversion] conversion to bool
# 2718|           Type = [BoolType] bool
# 2718|           Value = [CStyleCast] 0
# 2718|           ValueCategory = prvalue
# 2719|     getStmt(3): [DoStmt] do (...) ...
# 2721|       getCondition(): [Literal] 0
# 2721|           Type = [IntType] int
# 2721|           Value = [Literal] 0
# 2721|           ValueCategory = prvalue
# 2719|       getStmt(): [BlockStmt] { ... }
# 2720|         getStmt(0): [DeclStmt] declaration
# 2720|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x3
# 2720|               Type = [Struct] String
# 2720|             getVariable().getInitializer(): [Initializer] initializer for x3
# 2720|               getExpr(): [ConstructorCall] call to String
# 2720|                   Type = [VoidType] void
# 2720|                   ValueCategory = prvalue
# 2721|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2721|             Type = [VoidType] void
# 2721|             ValueCategory = prvalue
# 2721|           getQualifier(): [VariableAccess] x3
# 2721|               Type = [Struct] String
# 2721|               ValueCategory = lvalue
# 2721|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2721|           Conversion = [BoolConversion] conversion to bool
# 2721|           Type = [BoolType] bool
# 2721|           Value = [CStyleCast] 0
# 2721|           ValueCategory = prvalue
# 2722|     getStmt(4): [DoStmt] do (...) ...
# 2724|       getCondition(): [Literal] 0
# 2724|           Type = [IntType] int
# 2724|           Value = [Literal] 0
# 2724|           ValueCategory = prvalue
# 2722|       getStmt(): [BlockStmt] { ... }
# 2723|         getStmt(0): [DeclStmt] declaration
# 2723|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x4
# 2723|               Type = [Struct] String
# 2723|             getVariable().getInitializer(): [Initializer] initializer for x4
# 2723|               getExpr(): [ConstructorCall] call to String
# 2723|                   Type = [VoidType] void
# 2723|                   ValueCategory = prvalue
# 2724|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2724|             Type = [VoidType] void
# 2724|             ValueCategory = prvalue
# 2724|           getQualifier(): [VariableAccess] x4
# 2724|               Type = [Struct] String
# 2724|               ValueCategory = lvalue
# 2724|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2724|           Conversion = [BoolConversion] conversion to bool
# 2724|           Type = [BoolType] bool
# 2724|           Value = [CStyleCast] 0
# 2724|           ValueCategory = prvalue
# 2725|     getStmt(5): [DoStmt] do (...) ...
# 2727|       getCondition(): [Literal] 0
# 2727|           Type = [IntType] int
# 2727|           Value = [Literal] 0
# 2727|           ValueCategory = prvalue
# 2725|       getStmt(): [BlockStmt] { ... }
# 2726|         getStmt(0): [DeclStmt] declaration
# 2726|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x5
# 2726|               Type = [Struct] String
# 2726|             getVariable().getInitializer(): [Initializer] initializer for x5
# 2726|               getExpr(): [ConstructorCall] call to String
# 2726|                   Type = [VoidType] void
# 2726|                   ValueCategory = prvalue
# 2727|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2727|             Type = [VoidType] void
# 2727|             ValueCategory = prvalue
# 2727|           getQualifier(): [VariableAccess] x5
# 2727|               Type = [Struct] String
# 2727|               ValueCategory = lvalue
# 2727|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2727|           Conversion = [BoolConversion] conversion to bool
# 2727|           Type = [BoolType] bool
# 2727|           Value = [CStyleCast] 0
# 2727|           ValueCategory = prvalue
# 2728|     getStmt(6): [DoStmt] do (...) ...
# 2730|       getCondition(): [Literal] 0
# 2730|           Type = [IntType] int
# 2730|           Value = [Literal] 0
# 2730|           ValueCategory = prvalue
# 2728|       getStmt(): [BlockStmt] { ... }
# 2729|         getStmt(0): [DeclStmt] declaration
# 2729|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x6
# 2729|               Type = [Struct] String
# 2729|             getVariable().getInitializer(): [Initializer] initializer for x6
# 2729|               getExpr(): [ConstructorCall] call to String
# 2729|                   Type = [VoidType] void
# 2729|                   ValueCategory = prvalue
# 2730|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2730|             Type = [VoidType] void
# 2730|             ValueCategory = prvalue
# 2730|           getQualifier(): [VariableAccess] x6
# 2730|               Type = [Struct] String
# 2730|               ValueCategory = lvalue
# 2730|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2730|           Conversion = [BoolConversion] conversion to bool
# 2730|           Type = [BoolType] bool
# 2730|           Value = [CStyleCast] 0
# 2730|           ValueCategory = prvalue
# 2731|     getStmt(7): [DoStmt] do (...) ...
# 2733|       getCondition(): [Literal] 0
# 2733|           Type = [IntType] int
# 2733|           Value = [Literal] 0
# 2733|           ValueCategory = prvalue
# 2731|       getStmt(): [BlockStmt] { ... }
# 2732|         getStmt(0): [DeclStmt] declaration
# 2732|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x7
# 2732|               Type = [Struct] String
# 2732|             getVariable().getInitializer(): [Initializer] initializer for x7
# 2732|               getExpr(): [ConstructorCall] call to String
# 2732|                   Type = [VoidType] void
# 2732|                   ValueCategory = prvalue
# 2733|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2733|             Type = [VoidType] void
# 2733|             ValueCategory = prvalue
# 2733|           getQualifier(): [VariableAccess] x7
# 2733|               Type = [Struct] String
# 2733|               ValueCategory = lvalue
# 2733|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2733|           Conversion = [BoolConversion] conversion to bool
# 2733|           Type = [BoolType] bool
# 2733|           Value = [CStyleCast] 0
# 2733|           ValueCategory = prvalue
# 2734|     getStmt(8): [DoStmt] do (...) ...
# 2736|       getCondition(): [Literal] 0
# 2736|           Type = [IntType] int
# 2736|           Value = [Literal] 0
# 2736|           ValueCategory = prvalue
# 2734|       getStmt(): [BlockStmt] { ... }
# 2735|         getStmt(0): [DeclStmt] declaration
# 2735|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x8
# 2735|               Type = [Struct] String
# 2735|             getVariable().getInitializer(): [Initializer] initializer for x8
# 2735|               getExpr(): [ConstructorCall] call to String
# 2735|                   Type = [VoidType] void
# 2735|                   ValueCategory = prvalue
# 2736|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2736|             Type = [VoidType] void
# 2736|             ValueCategory = prvalue
# 2736|           getQualifier(): [VariableAccess] x8
# 2736|               Type = [Struct] String
# 2736|               ValueCategory = lvalue
# 2736|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2736|           Conversion = [BoolConversion] conversion to bool
# 2736|           Type = [BoolType] bool
# 2736|           Value = [CStyleCast] 0
# 2736|           ValueCategory = prvalue
# 2737|     getStmt(9): [DoStmt] do (...) ...
# 2739|       getCondition(): [Literal] 0
# 2739|           Type = [IntType] int
# 2739|           Value = [Literal] 0
# 2739|           ValueCategory = prvalue
# 2737|       getStmt(): [BlockStmt] { ... }
# 2738|         getStmt(0): [DeclStmt] declaration
# 2738|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x9
# 2738|               Type = [Struct] String
# 2738|             getVariable().getInitializer(): [Initializer] initializer for x9
# 2738|               getExpr(): [ConstructorCall] call to String
# 2738|                   Type = [VoidType] void
# 2738|                   ValueCategory = prvalue
# 2739|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2739|             Type = [VoidType] void
# 2739|             ValueCategory = prvalue
# 2739|           getQualifier(): [VariableAccess] x9
# 2739|               Type = [Struct] String
# 2739|               ValueCategory = lvalue
# 2739|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2739|           Conversion = [BoolConversion] conversion to bool
# 2739|           Type = [BoolType] bool
# 2739|           Value = [CStyleCast] 0
# 2739|           ValueCategory = prvalue
# 2740|     getStmt(10): [DoStmt] do (...) ...
# 2742|       getCondition(): [Literal] 0
# 2742|           Type = [IntType] int
# 2742|           Value = [Literal] 0
# 2742|           ValueCategory = prvalue
# 2740|       getStmt(): [BlockStmt] { ... }
# 2741|         getStmt(0): [DeclStmt] declaration
# 2741|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x10
# 2741|               Type = [Struct] String
# 2741|             getVariable().getInitializer(): [Initializer] initializer for x10
# 2741|               getExpr(): [ConstructorCall] call to String
# 2741|                   Type = [VoidType] void
# 2741|                   ValueCategory = prvalue
# 2742|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2742|             Type = [VoidType] void
# 2742|             ValueCategory = prvalue
# 2742|           getQualifier(): [VariableAccess] x10
# 2742|               Type = [Struct] String
# 2742|               ValueCategory = lvalue
# 2742|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2742|           Conversion = [BoolConversion] conversion to bool
# 2742|           Type = [BoolType] bool
# 2742|           Value = [CStyleCast] 0
# 2742|           ValueCategory = prvalue
# 2743|     getStmt(11): [DoStmt] do (...) ...
# 2745|       getCondition(): [Literal] 0
# 2745|           Type = [IntType] int
# 2745|           Value = [Literal] 0
# 2745|           ValueCategory = prvalue
# 2743|       getStmt(): [BlockStmt] { ... }
# 2744|         getStmt(0): [DeclStmt] declaration
# 2744|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x11
# 2744|               Type = [Struct] String
# 2744|             getVariable().getInitializer(): [Initializer] initializer for x11
# 2744|               getExpr(): [ConstructorCall] call to String
# 2744|                   Type = [VoidType] void
# 2744|                   ValueCategory = prvalue
# 2745|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2745|             Type = [VoidType] void
# 2745|             ValueCategory = prvalue
# 2745|           getQualifier(): [VariableAccess] x11
# 2745|               Type = [Struct] String
# 2745|               ValueCategory = lvalue
# 2745|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2745|           Conversion = [BoolConversion] conversion to bool
# 2745|           Type = [BoolType] bool
# 2745|           Value = [CStyleCast] 0
# 2745|           ValueCategory = prvalue
# 2746|     getStmt(12): [DoStmt] do (...) ...
# 2748|       getCondition(): [Literal] 0
# 2748|           Type = [IntType] int
# 2748|           Value = [Literal] 0
# 2748|           ValueCategory = prvalue
# 2746|       getStmt(): [BlockStmt] { ... }
# 2747|         getStmt(0): [DeclStmt] declaration
# 2747|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x12
# 2747|               Type = [Struct] String
# 2747|             getVariable().getInitializer(): [Initializer] initializer for x12
# 2747|               getExpr(): [ConstructorCall] call to String
# 2747|                   Type = [VoidType] void
# 2747|                   ValueCategory = prvalue
# 2748|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2748|             Type = [VoidType] void
# 2748|             ValueCategory = prvalue
# 2748|           getQualifier(): [VariableAccess] x12
# 2748|               Type = [Struct] String
# 2748|               ValueCategory = lvalue
# 2748|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2748|           Conversion = [BoolConversion] conversion to bool
# 2748|           Type = [BoolType] bool
# 2748|           Value = [CStyleCast] 0
# 2748|           ValueCategory = prvalue
# 2749|     getStmt(13): [DoStmt] do (...) ...
# 2751|       getCondition(): [Literal] 0
# 2751|           Type = [IntType] int
# 2751|           Value = [Literal] 0
# 2751|           ValueCategory = prvalue
# 2749|       getStmt(): [BlockStmt] { ... }
# 2750|         getStmt(0): [DeclStmt] declaration
# 2750|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x13
# 2750|               Type = [Struct] String
# 2750|             getVariable().getInitializer(): [Initializer] initializer for x13
# 2750|               getExpr(): [ConstructorCall] call to String
# 2750|                   Type = [VoidType] void
# 2750|                   ValueCategory = prvalue
# 2751|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2751|             Type = [VoidType] void
# 2751|             ValueCategory = prvalue
# 2751|           getQualifier(): [VariableAccess] x13
# 2751|               Type = [Struct] String
# 2751|               ValueCategory = lvalue
# 2751|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2751|           Conversion = [BoolConversion] conversion to bool
# 2751|           Type = [BoolType] bool
# 2751|           Value = [CStyleCast] 0
# 2751|           ValueCategory = prvalue
# 2752|     getStmt(14): [DoStmt] do (...) ...
# 2754|       getCondition(): [Literal] 0
# 2754|           Type = [IntType] int
# 2754|           Value = [Literal] 0
# 2754|           ValueCategory = prvalue
# 2752|       getStmt(): [BlockStmt] { ... }
# 2753|         getStmt(0): [DeclStmt] declaration
# 2753|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x14
# 2753|               Type = [Struct] String
# 2753|             getVariable().getInitializer(): [Initializer] initializer for x14
# 2753|               getExpr(): [ConstructorCall] call to String
# 2753|                   Type = [VoidType] void
# 2753|                   ValueCategory = prvalue
# 2754|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2754|             Type = [VoidType] void
# 2754|             ValueCategory = prvalue
# 2754|           getQualifier(): [VariableAccess] x14
# 2754|               Type = [Struct] String
# 2754|               ValueCategory = lvalue
# 2754|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2754|           Conversion = [BoolConversion] conversion to bool
# 2754|           Type = [BoolType] bool
# 2754|           Value = [CStyleCast] 0
# 2754|           ValueCategory = prvalue
# 2755|     getStmt(15): [DoStmt] do (...) ...
# 2757|       getCondition(): [Literal] 0
# 2757|           Type = [IntType] int
# 2757|           Value = [Literal] 0
# 2757|           ValueCategory = prvalue
# 2755|       getStmt(): [BlockStmt] { ... }
# 2756|         getStmt(0): [DeclStmt] declaration
# 2756|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x15
# 2756|               Type = [Struct] String
# 2756|             getVariable().getInitializer(): [Initializer] initializer for x15
# 2756|               getExpr(): [ConstructorCall] call to String
# 2756|                   Type = [VoidType] void
# 2756|                   ValueCategory = prvalue
# 2757|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2757|             Type = [VoidType] void
# 2757|             ValueCategory = prvalue
# 2757|           getQualifier(): [VariableAccess] x15
# 2757|               Type = [Struct] String
# 2757|               ValueCategory = lvalue
# 2757|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2757|           Conversion = [BoolConversion] conversion to bool
# 2757|           Type = [BoolType] bool
# 2757|           Value = [CStyleCast] 0
# 2757|           ValueCategory = prvalue
# 2758|     getStmt(16): [DoStmt] do (...) ...
# 2760|       getCondition(): [Literal] 0
# 2760|           Type = [IntType] int
# 2760|           Value = [Literal] 0
# 2760|           ValueCategory = prvalue
# 2758|       getStmt(): [BlockStmt] { ... }
# 2759|         getStmt(0): [DeclStmt] declaration
# 2759|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x16
# 2759|               Type = [Struct] String
# 2759|             getVariable().getInitializer(): [Initializer] initializer for x16
# 2759|               getExpr(): [ConstructorCall] call to String
# 2759|                   Type = [VoidType] void
# 2759|                   ValueCategory = prvalue
# 2760|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2760|             Type = [VoidType] void
# 2760|             ValueCategory = prvalue
# 2760|           getQualifier(): [VariableAccess] x16
# 2760|               Type = [Struct] String
# 2760|               ValueCategory = lvalue
# 2760|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2760|           Conversion = [BoolConversion] conversion to bool
# 2760|           Type = [BoolType] bool
# 2760|           Value = [CStyleCast] 0
# 2760|           ValueCategory = prvalue
# 2761|     getStmt(17): [DoStmt] do (...) ...
# 2763|       getCondition(): [Literal] 0
# 2763|           Type = [IntType] int
# 2763|           Value = [Literal] 0
# 2763|           ValueCategory = prvalue
# 2761|       getStmt(): [BlockStmt] { ... }
# 2762|         getStmt(0): [DeclStmt] declaration
# 2762|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x17
# 2762|               Type = [Struct] String
# 2762|             getVariable().getInitializer(): [Initializer] initializer for x17
# 2762|               getExpr(): [ConstructorCall] call to String
# 2762|                   Type = [VoidType] void
# 2762|                   ValueCategory = prvalue
# 2763|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2763|             Type = [VoidType] void
# 2763|             ValueCategory = prvalue
# 2763|           getQualifier(): [VariableAccess] x17
# 2763|               Type = [Struct] String
# 2763|               ValueCategory = lvalue
# 2763|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2763|           Conversion = [BoolConversion] conversion to bool
# 2763|           Type = [BoolType] bool
# 2763|           Value = [CStyleCast] 0
# 2763|           ValueCategory = prvalue
# 2764|     getStmt(18): [DoStmt] do (...) ...
# 2766|       getCondition(): [Literal] 0
# 2766|           Type = [IntType] int
# 2766|           Value = [Literal] 0
# 2766|           ValueCategory = prvalue
# 2764|       getStmt(): [BlockStmt] { ... }
# 2765|         getStmt(0): [DeclStmt] declaration
# 2765|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x18
# 2765|               Type = [Struct] String
# 2765|             getVariable().getInitializer(): [Initializer] initializer for x18
# 2765|               getExpr(): [ConstructorCall] call to String
# 2765|                   Type = [VoidType] void
# 2765|                   ValueCategory = prvalue
# 2766|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2766|             Type = [VoidType] void
# 2766|             ValueCategory = prvalue
# 2766|           getQualifier(): [VariableAccess] x18
# 2766|               Type = [Struct] String
# 2766|               ValueCategory = lvalue
# 2766|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2766|           Conversion = [BoolConversion] conversion to bool
# 2766|           Type = [BoolType] bool
# 2766|           Value = [CStyleCast] 0
# 2766|           ValueCategory = prvalue
# 2767|     getStmt(19): [DoStmt] do (...) ...
# 2769|       getCondition(): [Literal] 0
# 2769|           Type = [IntType] int
# 2769|           Value = [Literal] 0
# 2769|           ValueCategory = prvalue
# 2767|       getStmt(): [BlockStmt] { ... }
# 2768|         getStmt(0): [DeclStmt] declaration
# 2768|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x19
# 2768|               Type = [Struct] String
# 2768|             getVariable().getInitializer(): [Initializer] initializer for x19
# 2768|               getExpr(): [ConstructorCall] call to String
# 2768|                   Type = [VoidType] void
# 2768|                   ValueCategory = prvalue
# 2769|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2769|             Type = [VoidType] void
# 2769|             ValueCategory = prvalue
# 2769|           getQualifier(): [VariableAccess] x19
# 2769|               Type = [Struct] String
# 2769|               ValueCategory = lvalue
# 2769|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2769|           Conversion = [BoolConversion] conversion to bool
# 2769|           Type = [BoolType] bool
# 2769|           Value = [CStyleCast] 0
# 2769|           ValueCategory = prvalue
# 2770|     getStmt(20): [DoStmt] do (...) ...
# 2772|       getCondition(): [Literal] 0
# 2772|           Type = [IntType] int
# 2772|           Value = [Literal] 0
# 2772|           ValueCategory = prvalue
# 2770|       getStmt(): [BlockStmt] { ... }
# 2771|         getStmt(0): [DeclStmt] declaration
# 2771|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x20
# 2771|               Type = [Struct] String
# 2771|             getVariable().getInitializer(): [Initializer] initializer for x20
# 2771|               getExpr(): [ConstructorCall] call to String
# 2771|                   Type = [VoidType] void
# 2771|                   ValueCategory = prvalue
# 2772|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2772|             Type = [VoidType] void
# 2772|             ValueCategory = prvalue
# 2772|           getQualifier(): [VariableAccess] x20
# 2772|               Type = [Struct] String
# 2772|               ValueCategory = lvalue
# 2772|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2772|           Conversion = [BoolConversion] conversion to bool
# 2772|           Type = [BoolType] bool
# 2772|           Value = [CStyleCast] 0
# 2772|           ValueCategory = prvalue
# 2773|     getStmt(21): [DoStmt] do (...) ...
# 2775|       getCondition(): [Literal] 0
# 2775|           Type = [IntType] int
# 2775|           Value = [Literal] 0
# 2775|           ValueCategory = prvalue
# 2773|       getStmt(): [BlockStmt] { ... }
# 2774|         getStmt(0): [DeclStmt] declaration
# 2774|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x21
# 2774|               Type = [Struct] String
# 2774|             getVariable().getInitializer(): [Initializer] initializer for x21
# 2774|               getExpr(): [ConstructorCall] call to String
# 2774|                   Type = [VoidType] void
# 2774|                   ValueCategory = prvalue
# 2775|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2775|             Type = [VoidType] void
# 2775|             ValueCategory = prvalue
# 2775|           getQualifier(): [VariableAccess] x21
# 2775|               Type = [Struct] String
# 2775|               ValueCategory = lvalue
# 2775|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2775|           Conversion = [BoolConversion] conversion to bool
# 2775|           Type = [BoolType] bool
# 2775|           Value = [CStyleCast] 0
# 2775|           ValueCategory = prvalue
# 2776|     getStmt(22): [DoStmt] do (...) ...
# 2778|       getCondition(): [Literal] 0
# 2778|           Type = [IntType] int
# 2778|           Value = [Literal] 0
# 2778|           ValueCategory = prvalue
# 2776|       getStmt(): [BlockStmt] { ... }
# 2777|         getStmt(0): [DeclStmt] declaration
# 2777|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x22
# 2777|               Type = [Struct] String
# 2777|             getVariable().getInitializer(): [Initializer] initializer for x22
# 2777|               getExpr(): [ConstructorCall] call to String
# 2777|                   Type = [VoidType] void
# 2777|                   ValueCategory = prvalue
# 2778|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2778|             Type = [VoidType] void
# 2778|             ValueCategory = prvalue
# 2778|           getQualifier(): [VariableAccess] x22
# 2778|               Type = [Struct] String
# 2778|               ValueCategory = lvalue
# 2778|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2778|           Conversion = [BoolConversion] conversion to bool
# 2778|           Type = [BoolType] bool
# 2778|           Value = [CStyleCast] 0
# 2778|           ValueCategory = prvalue
# 2779|     getStmt(23): [DoStmt] do (...) ...
# 2781|       getCondition(): [Literal] 0
# 2781|           Type = [IntType] int
# 2781|           Value = [Literal] 0
# 2781|           ValueCategory = prvalue
# 2779|       getStmt(): [BlockStmt] { ... }
# 2780|         getStmt(0): [DeclStmt] declaration
# 2780|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x23
# 2780|               Type = [Struct] String
# 2780|             getVariable().getInitializer(): [Initializer] initializer for x23
# 2780|               getExpr(): [ConstructorCall] call to String
# 2780|                   Type = [VoidType] void
# 2780|                   ValueCategory = prvalue
# 2781|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2781|             Type = [VoidType] void
# 2781|             ValueCategory = prvalue
# 2781|           getQualifier(): [VariableAccess] x23
# 2781|               Type = [Struct] String
# 2781|               ValueCategory = lvalue
# 2781|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2781|           Conversion = [BoolConversion] conversion to bool
# 2781|           Type = [BoolType] bool
# 2781|           Value = [CStyleCast] 0
# 2781|           ValueCategory = prvalue
# 2782|     getStmt(24): [DoStmt] do (...) ...
# 2784|       getCondition(): [Literal] 0
# 2784|           Type = [IntType] int
# 2784|           Value = [Literal] 0
# 2784|           ValueCategory = prvalue
# 2782|       getStmt(): [BlockStmt] { ... }
# 2783|         getStmt(0): [DeclStmt] declaration
# 2783|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x24
# 2783|               Type = [Struct] String
# 2783|             getVariable().getInitializer(): [Initializer] initializer for x24
# 2783|               getExpr(): [ConstructorCall] call to String
# 2783|                   Type = [VoidType] void
# 2783|                   ValueCategory = prvalue
# 2784|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2784|             Type = [VoidType] void
# 2784|             ValueCategory = prvalue
# 2784|           getQualifier(): [VariableAccess] x24
# 2784|               Type = [Struct] String
# 2784|               ValueCategory = lvalue
# 2784|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2784|           Conversion = [BoolConversion] conversion to bool
# 2784|           Type = [BoolType] bool
# 2784|           Value = [CStyleCast] 0
# 2784|           ValueCategory = prvalue
# 2785|     getStmt(25): [DoStmt] do (...) ...
# 2787|       getCondition(): [Literal] 0
# 2787|           Type = [IntType] int
# 2787|           Value = [Literal] 0
# 2787|           ValueCategory = prvalue
# 2785|       getStmt(): [BlockStmt] { ... }
# 2786|         getStmt(0): [DeclStmt] declaration
# 2786|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x25
# 2786|               Type = [Struct] String
# 2786|             getVariable().getInitializer(): [Initializer] initializer for x25
# 2786|               getExpr(): [ConstructorCall] call to String
# 2786|                   Type = [VoidType] void
# 2786|                   ValueCategory = prvalue
# 2787|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2787|             Type = [VoidType] void
# 2787|             ValueCategory = prvalue
# 2787|           getQualifier(): [VariableAccess] x25
# 2787|               Type = [Struct] String
# 2787|               ValueCategory = lvalue
# 2787|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2787|           Conversion = [BoolConversion] conversion to bool
# 2787|           Type = [BoolType] bool
# 2787|           Value = [CStyleCast] 0
# 2787|           ValueCategory = prvalue
# 2788|     getStmt(26): [DoStmt] do (...) ...
# 2790|       getCondition(): [Literal] 0
# 2790|           Type = [IntType] int
# 2790|           Value = [Literal] 0
# 2790|           ValueCategory = prvalue
# 2788|       getStmt(): [BlockStmt] { ... }
# 2789|         getStmt(0): [DeclStmt] declaration
# 2789|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x26
# 2789|               Type = [Struct] String
# 2789|             getVariable().getInitializer(): [Initializer] initializer for x26
# 2789|               getExpr(): [ConstructorCall] call to String
# 2789|                   Type = [VoidType] void
# 2789|                   ValueCategory = prvalue
# 2790|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2790|             Type = [VoidType] void
# 2790|             ValueCategory = prvalue
# 2790|           getQualifier(): [VariableAccess] x26
# 2790|               Type = [Struct] String
# 2790|               ValueCategory = lvalue
# 2790|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2790|           Conversion = [BoolConversion] conversion to bool
# 2790|           Type = [BoolType] bool
# 2790|           Value = [CStyleCast] 0
# 2790|           ValueCategory = prvalue
# 2791|     getStmt(27): [DoStmt] do (...) ...
# 2793|       getCondition(): [Literal] 0
# 2793|           Type = [IntType] int
# 2793|           Value = [Literal] 0
# 2793|           ValueCategory = prvalue
# 2791|       getStmt(): [BlockStmt] { ... }
# 2792|         getStmt(0): [DeclStmt] declaration
# 2792|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x27
# 2792|               Type = [Struct] String
# 2792|             getVariable().getInitializer(): [Initializer] initializer for x27
# 2792|               getExpr(): [ConstructorCall] call to String
# 2792|                   Type = [VoidType] void
# 2792|                   ValueCategory = prvalue
# 2793|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2793|             Type = [VoidType] void
# 2793|             ValueCategory = prvalue
# 2793|           getQualifier(): [VariableAccess] x27
# 2793|               Type = [Struct] String
# 2793|               ValueCategory = lvalue
# 2793|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2793|           Conversion = [BoolConversion] conversion to bool
# 2793|           Type = [BoolType] bool
# 2793|           Value = [CStyleCast] 0
# 2793|           ValueCategory = prvalue
# 2794|     getStmt(28): [DoStmt] do (...) ...
# 2796|       getCondition(): [Literal] 0
# 2796|           Type = [IntType] int
# 2796|           Value = [Literal] 0
# 2796|           ValueCategory = prvalue
# 2794|       getStmt(): [BlockStmt] { ... }
# 2795|         getStmt(0): [DeclStmt] declaration
# 2795|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x28
# 2795|               Type = [Struct] String
# 2795|             getVariable().getInitializer(): [Initializer] initializer for x28
# 2795|               getExpr(): [ConstructorCall] call to String
# 2795|                   Type = [VoidType] void
# 2795|                   ValueCategory = prvalue
# 2796|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2796|             Type = [VoidType] void
# 2796|             ValueCategory = prvalue
# 2796|           getQualifier(): [VariableAccess] x28
# 2796|               Type = [Struct] String
# 2796|               ValueCategory = lvalue
# 2796|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2796|           Conversion = [BoolConversion] conversion to bool
# 2796|           Type = [BoolType] bool
# 2796|           Value = [CStyleCast] 0
# 2796|           ValueCategory = prvalue
# 2797|     getStmt(29): [DoStmt] do (...) ...
# 2799|       getCondition(): [Literal] 0
# 2799|           Type = [IntType] int
# 2799|           Value = [Literal] 0
# 2799|           ValueCategory = prvalue
# 2797|       getStmt(): [BlockStmt] { ... }
# 2798|         getStmt(0): [DeclStmt] declaration
# 2798|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x29
# 2798|               Type = [Struct] String
# 2798|             getVariable().getInitializer(): [Initializer] initializer for x29
# 2798|               getExpr(): [ConstructorCall] call to String
# 2798|                   Type = [VoidType] void
# 2798|                   ValueCategory = prvalue
# 2799|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2799|             Type = [VoidType] void
# 2799|             ValueCategory = prvalue
# 2799|           getQualifier(): [VariableAccess] x29
# 2799|               Type = [Struct] String
# 2799|               ValueCategory = lvalue
# 2799|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2799|           Conversion = [BoolConversion] conversion to bool
# 2799|           Type = [BoolType] bool
# 2799|           Value = [CStyleCast] 0
# 2799|           ValueCategory = prvalue
# 2800|     getStmt(30): [DoStmt] do (...) ...
# 2802|       getCondition(): [Literal] 0
# 2802|           Type = [IntType] int
# 2802|           Value = [Literal] 0
# 2802|           ValueCategory = prvalue
# 2800|       getStmt(): [BlockStmt] { ... }
# 2801|         getStmt(0): [DeclStmt] declaration
# 2801|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x30
# 2801|               Type = [Struct] String
# 2801|             getVariable().getInitializer(): [Initializer] initializer for x30
# 2801|               getExpr(): [ConstructorCall] call to String
# 2801|                   Type = [VoidType] void
# 2801|                   ValueCategory = prvalue
# 2802|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2802|             Type = [VoidType] void
# 2802|             ValueCategory = prvalue
# 2802|           getQualifier(): [VariableAccess] x30
# 2802|               Type = [Struct] String
# 2802|               ValueCategory = lvalue
# 2802|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2802|           Conversion = [BoolConversion] conversion to bool
# 2802|           Type = [BoolType] bool
# 2802|           Value = [CStyleCast] 0
# 2802|           ValueCategory = prvalue
# 2803|     getStmt(31): [DoStmt] do (...) ...
# 2805|       getCondition(): [Literal] 0
# 2805|           Type = [IntType] int
# 2805|           Value = [Literal] 0
# 2805|           ValueCategory = prvalue
# 2803|       getStmt(): [BlockStmt] { ... }
# 2804|         getStmt(0): [DeclStmt] declaration
# 2804|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x31
# 2804|               Type = [Struct] String
# 2804|             getVariable().getInitializer(): [Initializer] initializer for x31
# 2804|               getExpr(): [ConstructorCall] call to String
# 2804|                   Type = [VoidType] void
# 2804|                   ValueCategory = prvalue
# 2805|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2805|             Type = [VoidType] void
# 2805|             ValueCategory = prvalue
# 2805|           getQualifier(): [VariableAccess] x31
# 2805|               Type = [Struct] String
# 2805|               ValueCategory = lvalue
# 2805|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2805|           Conversion = [BoolConversion] conversion to bool
# 2805|           Type = [BoolType] bool
# 2805|           Value = [CStyleCast] 0
# 2805|           ValueCategory = prvalue
# 2806|     getStmt(32): [DoStmt] do (...) ...
# 2808|       getCondition(): [Literal] 0
# 2808|           Type = [IntType] int
# 2808|           Value = [Literal] 0
# 2808|           ValueCategory = prvalue
# 2806|       getStmt(): [BlockStmt] { ... }
# 2807|         getStmt(0): [DeclStmt] declaration
# 2807|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x32
# 2807|               Type = [Struct] String
# 2807|             getVariable().getInitializer(): [Initializer] initializer for x32
# 2807|               getExpr(): [ConstructorCall] call to String
# 2807|                   Type = [VoidType] void
# 2807|                   ValueCategory = prvalue
# 2808|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2808|             Type = [VoidType] void
# 2808|             ValueCategory = prvalue
# 2808|           getQualifier(): [VariableAccess] x32
# 2808|               Type = [Struct] String
# 2808|               ValueCategory = lvalue
# 2808|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2808|           Conversion = [BoolConversion] conversion to bool
# 2808|           Type = [BoolType] bool
# 2808|           Value = [CStyleCast] 0
# 2808|           ValueCategory = prvalue
# 2809|     getStmt(33): [DoStmt] do (...) ...
# 2811|       getCondition(): [Literal] 0
# 2811|           Type = [IntType] int
# 2811|           Value = [Literal] 0
# 2811|           ValueCategory = prvalue
# 2809|       getStmt(): [BlockStmt] { ... }
# 2810|         getStmt(0): [DeclStmt] declaration
# 2810|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x33
# 2810|               Type = [Struct] String
# 2810|             getVariable().getInitializer(): [Initializer] initializer for x33
# 2810|               getExpr(): [ConstructorCall] call to String
# 2810|                   Type = [VoidType] void
# 2810|                   ValueCategory = prvalue
# 2811|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2811|             Type = [VoidType] void
# 2811|             ValueCategory = prvalue
# 2811|           getQualifier(): [VariableAccess] x33
# 2811|               Type = [Struct] String
# 2811|               ValueCategory = lvalue
# 2811|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2811|           Conversion = [BoolConversion] conversion to bool
# 2811|           Type = [BoolType] bool
# 2811|           Value = [CStyleCast] 0
# 2811|           ValueCategory = prvalue
# 2812|     getStmt(34): [DoStmt] do (...) ...
# 2814|       getCondition(): [Literal] 0
# 2814|           Type = [IntType] int
# 2814|           Value = [Literal] 0
# 2814|           ValueCategory = prvalue
# 2812|       getStmt(): [BlockStmt] { ... }
# 2813|         getStmt(0): [DeclStmt] declaration
# 2813|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x34
# 2813|               Type = [Struct] String
# 2813|             getVariable().getInitializer(): [Initializer] initializer for x34
# 2813|               getExpr(): [ConstructorCall] call to String
# 2813|                   Type = [VoidType] void
# 2813|                   ValueCategory = prvalue
# 2814|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2814|             Type = [VoidType] void
# 2814|             ValueCategory = prvalue
# 2814|           getQualifier(): [VariableAccess] x34
# 2814|               Type = [Struct] String
# 2814|               ValueCategory = lvalue
# 2814|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2814|           Conversion = [BoolConversion] conversion to bool
# 2814|           Type = [BoolType] bool
# 2814|           Value = [CStyleCast] 0
# 2814|           ValueCategory = prvalue
# 2815|     getStmt(35): [DoStmt] do (...) ...
# 2817|       getCondition(): [Literal] 0
# 2817|           Type = [IntType] int
# 2817|           Value = [Literal] 0
# 2817|           ValueCategory = prvalue
# 2815|       getStmt(): [BlockStmt] { ... }
# 2816|         getStmt(0): [DeclStmt] declaration
# 2816|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x35
# 2816|               Type = [Struct] String
# 2816|             getVariable().getInitializer(): [Initializer] initializer for x35
# 2816|               getExpr(): [ConstructorCall] call to String
# 2816|                   Type = [VoidType] void
# 2816|                   ValueCategory = prvalue
# 2817|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2817|             Type = [VoidType] void
# 2817|             ValueCategory = prvalue
# 2817|           getQualifier(): [VariableAccess] x35
# 2817|               Type = [Struct] String
# 2817|               ValueCategory = lvalue
# 2817|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2817|           Conversion = [BoolConversion] conversion to bool
# 2817|           Type = [BoolType] bool
# 2817|           Value = [CStyleCast] 0
# 2817|           ValueCategory = prvalue
# 2818|     getStmt(36): [DoStmt] do (...) ...
# 2820|       getCondition(): [Literal] 0
# 2820|           Type = [IntType] int
# 2820|           Value = [Literal] 0
# 2820|           ValueCategory = prvalue
# 2818|       getStmt(): [BlockStmt] { ... }
# 2819|         getStmt(0): [DeclStmt] declaration
# 2819|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x36
# 2819|               Type = [Struct] String
# 2819|             getVariable().getInitializer(): [Initializer] initializer for x36
# 2819|               getExpr(): [ConstructorCall] call to String
# 2819|                   Type = [VoidType] void
# 2819|                   ValueCategory = prvalue
# 2820|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2820|             Type = [VoidType] void
# 2820|             ValueCategory = prvalue
# 2820|           getQualifier(): [VariableAccess] x36
# 2820|               Type = [Struct] String
# 2820|               ValueCategory = lvalue
# 2820|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2820|           Conversion = [BoolConversion] conversion to bool
# 2820|           Type = [BoolType] bool
# 2820|           Value = [CStyleCast] 0
# 2820|           ValueCategory = prvalue
# 2821|     getStmt(37): [DoStmt] do (...) ...
# 2823|       getCondition(): [Literal] 0
# 2823|           Type = [IntType] int
# 2823|           Value = [Literal] 0
# 2823|           ValueCategory = prvalue
# 2821|       getStmt(): [BlockStmt] { ... }
# 2822|         getStmt(0): [DeclStmt] declaration
# 2822|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x37
# 2822|               Type = [Struct] String
# 2822|             getVariable().getInitializer(): [Initializer] initializer for x37
# 2822|               getExpr(): [ConstructorCall] call to String
# 2822|                   Type = [VoidType] void
# 2822|                   ValueCategory = prvalue
# 2823|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2823|             Type = [VoidType] void
# 2823|             ValueCategory = prvalue
# 2823|           getQualifier(): [VariableAccess] x37
# 2823|               Type = [Struct] String
# 2823|               ValueCategory = lvalue
# 2823|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2823|           Conversion = [BoolConversion] conversion to bool
# 2823|           Type = [BoolType] bool
# 2823|           Value = [CStyleCast] 0
# 2823|           ValueCategory = prvalue
# 2824|     getStmt(38): [DoStmt] do (...) ...
# 2826|       getCondition(): [Literal] 0
# 2826|           Type = [IntType] int
# 2826|           Value = [Literal] 0
# 2826|           ValueCategory = prvalue
# 2824|       getStmt(): [BlockStmt] { ... }
# 2825|         getStmt(0): [DeclStmt] declaration
# 2825|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x38
# 2825|               Type = [Struct] String
# 2825|             getVariable().getInitializer(): [Initializer] initializer for x38
# 2825|               getExpr(): [ConstructorCall] call to String
# 2825|                   Type = [VoidType] void
# 2825|                   ValueCategory = prvalue
# 2826|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2826|             Type = [VoidType] void
# 2826|             ValueCategory = prvalue
# 2826|           getQualifier(): [VariableAccess] x38
# 2826|               Type = [Struct] String
# 2826|               ValueCategory = lvalue
# 2826|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2826|           Conversion = [BoolConversion] conversion to bool
# 2826|           Type = [BoolType] bool
# 2826|           Value = [CStyleCast] 0
# 2826|           ValueCategory = prvalue
# 2827|     getStmt(39): [DoStmt] do (...) ...
# 2829|       getCondition(): [Literal] 0
# 2829|           Type = [IntType] int
# 2829|           Value = [Literal] 0
# 2829|           ValueCategory = prvalue
# 2827|       getStmt(): [BlockStmt] { ... }
# 2828|         getStmt(0): [DeclStmt] declaration
# 2828|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x39
# 2828|               Type = [Struct] String
# 2828|             getVariable().getInitializer(): [Initializer] initializer for x39
# 2828|               getExpr(): [ConstructorCall] call to String
# 2828|                   Type = [VoidType] void
# 2828|                   ValueCategory = prvalue
# 2829|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2829|             Type = [VoidType] void
# 2829|             ValueCategory = prvalue
# 2829|           getQualifier(): [VariableAccess] x39
# 2829|               Type = [Struct] String
# 2829|               ValueCategory = lvalue
# 2829|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2829|           Conversion = [BoolConversion] conversion to bool
# 2829|           Type = [BoolType] bool
# 2829|           Value = [CStyleCast] 0
# 2829|           ValueCategory = prvalue
# 2830|     getStmt(40): [DoStmt] do (...) ...
# 2832|       getCondition(): [Literal] 0
# 2832|           Type = [IntType] int
# 2832|           Value = [Literal] 0
# 2832|           ValueCategory = prvalue
# 2830|       getStmt(): [BlockStmt] { ... }
# 2831|         getStmt(0): [DeclStmt] declaration
# 2831|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x40
# 2831|               Type = [Struct] String
# 2831|             getVariable().getInitializer(): [Initializer] initializer for x40
# 2831|               getExpr(): [ConstructorCall] call to String
# 2831|                   Type = [VoidType] void
# 2831|                   ValueCategory = prvalue
# 2832|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2832|             Type = [VoidType] void
# 2832|             ValueCategory = prvalue
# 2832|           getQualifier(): [VariableAccess] x40
# 2832|               Type = [Struct] String
# 2832|               ValueCategory = lvalue
# 2832|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2832|           Conversion = [BoolConversion] conversion to bool
# 2832|           Type = [BoolType] bool
# 2832|           Value = [CStyleCast] 0
# 2832|           ValueCategory = prvalue
# 2833|     getStmt(41): [DoStmt] do (...) ...
# 2835|       getCondition(): [Literal] 0
# 2835|           Type = [IntType] int
# 2835|           Value = [Literal] 0
# 2835|           ValueCategory = prvalue
# 2833|       getStmt(): [BlockStmt] { ... }
# 2834|         getStmt(0): [DeclStmt] declaration
# 2834|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x41
# 2834|               Type = [Struct] String
# 2834|             getVariable().getInitializer(): [Initializer] initializer for x41
# 2834|               getExpr(): [ConstructorCall] call to String
# 2834|                   Type = [VoidType] void
# 2834|                   ValueCategory = prvalue
# 2835|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2835|             Type = [VoidType] void
# 2835|             ValueCategory = prvalue
# 2835|           getQualifier(): [VariableAccess] x41
# 2835|               Type = [Struct] String
# 2835|               ValueCategory = lvalue
# 2835|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2835|           Conversion = [BoolConversion] conversion to bool
# 2835|           Type = [BoolType] bool
# 2835|           Value = [CStyleCast] 0
# 2835|           ValueCategory = prvalue
# 2836|     getStmt(42): [DoStmt] do (...) ...
# 2838|       getCondition(): [Literal] 0
# 2838|           Type = [IntType] int
# 2838|           Value = [Literal] 0
# 2838|           ValueCategory = prvalue
# 2836|       getStmt(): [BlockStmt] { ... }
# 2837|         getStmt(0): [DeclStmt] declaration
# 2837|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x42
# 2837|               Type = [Struct] String
# 2837|             getVariable().getInitializer(): [Initializer] initializer for x42
# 2837|               getExpr(): [ConstructorCall] call to String
# 2837|                   Type = [VoidType] void
# 2837|                   ValueCategory = prvalue
# 2838|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2838|             Type = [VoidType] void
# 2838|             ValueCategory = prvalue
# 2838|           getQualifier(): [VariableAccess] x42
# 2838|               Type = [Struct] String
# 2838|               ValueCategory = lvalue
# 2838|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2838|           Conversion = [BoolConversion] conversion to bool
# 2838|           Type = [BoolType] bool
# 2838|           Value = [CStyleCast] 0
# 2838|           ValueCategory = prvalue
# 2839|     getStmt(43): [DoStmt] do (...) ...
# 2841|       getCondition(): [Literal] 0
# 2841|           Type = [IntType] int
# 2841|           Value = [Literal] 0
# 2841|           ValueCategory = prvalue
# 2839|       getStmt(): [BlockStmt] { ... }
# 2840|         getStmt(0): [DeclStmt] declaration
# 2840|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x43
# 2840|               Type = [Struct] String
# 2840|             getVariable().getInitializer(): [Initializer] initializer for x43
# 2840|               getExpr(): [ConstructorCall] call to String
# 2840|                   Type = [VoidType] void
# 2840|                   ValueCategory = prvalue
# 2841|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2841|             Type = [VoidType] void
# 2841|             ValueCategory = prvalue
# 2841|           getQualifier(): [VariableAccess] x43
# 2841|               Type = [Struct] String
# 2841|               ValueCategory = lvalue
# 2841|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2841|           Conversion = [BoolConversion] conversion to bool
# 2841|           Type = [BoolType] bool
# 2841|           Value = [CStyleCast] 0
# 2841|           ValueCategory = prvalue
# 2842|     getStmt(44): [DoStmt] do (...) ...
# 2844|       getCondition(): [Literal] 0
# 2844|           Type = [IntType] int
# 2844|           Value = [Literal] 0
# 2844|           ValueCategory = prvalue
# 2842|       getStmt(): [BlockStmt] { ... }
# 2843|         getStmt(0): [DeclStmt] declaration
# 2843|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x44
# 2843|               Type = [Struct] String
# 2843|             getVariable().getInitializer(): [Initializer] initializer for x44
# 2843|               getExpr(): [ConstructorCall] call to String
# 2843|                   Type = [VoidType] void
# 2843|                   ValueCategory = prvalue
# 2844|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2844|             Type = [VoidType] void
# 2844|             ValueCategory = prvalue
# 2844|           getQualifier(): [VariableAccess] x44
# 2844|               Type = [Struct] String
# 2844|               ValueCategory = lvalue
# 2844|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2844|           Conversion = [BoolConversion] conversion to bool
# 2844|           Type = [BoolType] bool
# 2844|           Value = [CStyleCast] 0
# 2844|           ValueCategory = prvalue
# 2845|     getStmt(45): [DoStmt] do (...) ...
# 2847|       getCondition(): [Literal] 0
# 2847|           Type = [IntType] int
# 2847|           Value = [Literal] 0
# 2847|           ValueCategory = prvalue
# 2845|       getStmt(): [BlockStmt] { ... }
# 2846|         getStmt(0): [DeclStmt] declaration
# 2846|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x45
# 2846|               Type = [Struct] String
# 2846|             getVariable().getInitializer(): [Initializer] initializer for x45
# 2846|               getExpr(): [ConstructorCall] call to String
# 2846|                   Type = [VoidType] void
# 2846|                   ValueCategory = prvalue
# 2847|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2847|             Type = [VoidType] void
# 2847|             ValueCategory = prvalue
# 2847|           getQualifier(): [VariableAccess] x45
# 2847|               Type = [Struct] String
# 2847|               ValueCategory = lvalue
# 2847|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2847|           Conversion = [BoolConversion] conversion to bool
# 2847|           Type = [BoolType] bool
# 2847|           Value = [CStyleCast] 0
# 2847|           ValueCategory = prvalue
# 2848|     getStmt(46): [DoStmt] do (...) ...
# 2850|       getCondition(): [Literal] 0
# 2850|           Type = [IntType] int
# 2850|           Value = [Literal] 0
# 2850|           ValueCategory = prvalue
# 2848|       getStmt(): [BlockStmt] { ... }
# 2849|         getStmt(0): [DeclStmt] declaration
# 2849|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x46
# 2849|               Type = [Struct] String
# 2849|             getVariable().getInitializer(): [Initializer] initializer for x46
# 2849|               getExpr(): [ConstructorCall] call to String
# 2849|                   Type = [VoidType] void
# 2849|                   ValueCategory = prvalue
# 2850|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2850|             Type = [VoidType] void
# 2850|             ValueCategory = prvalue
# 2850|           getQualifier(): [VariableAccess] x46
# 2850|               Type = [Struct] String
# 2850|               ValueCategory = lvalue
# 2850|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2850|           Conversion = [BoolConversion] conversion to bool
# 2850|           Type = [BoolType] bool
# 2850|           Value = [CStyleCast] 0
# 2850|           ValueCategory = prvalue
# 2851|     getStmt(47): [DoStmt] do (...) ...
# 2853|       getCondition(): [Literal] 0
# 2853|           Type = [IntType] int
# 2853|           Value = [Literal] 0
# 2853|           ValueCategory = prvalue
# 2851|       getStmt(): [BlockStmt] { ... }
# 2852|         getStmt(0): [DeclStmt] declaration
# 2852|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x47
# 2852|               Type = [Struct] String
# 2852|             getVariable().getInitializer(): [Initializer] initializer for x47
# 2852|               getExpr(): [ConstructorCall] call to String
# 2852|                   Type = [VoidType] void
# 2852|                   ValueCategory = prvalue
# 2853|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2853|             Type = [VoidType] void
# 2853|             ValueCategory = prvalue
# 2853|           getQualifier(): [VariableAccess] x47
# 2853|               Type = [Struct] String
# 2853|               ValueCategory = lvalue
# 2853|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2853|           Conversion = [BoolConversion] conversion to bool
# 2853|           Type = [BoolType] bool
# 2853|           Value = [CStyleCast] 0
# 2853|           ValueCategory = prvalue
# 2854|     getStmt(48): [DoStmt] do (...) ...
# 2856|       getCondition(): [Literal] 0
# 2856|           Type = [IntType] int
# 2856|           Value = [Literal] 0
# 2856|           ValueCategory = prvalue
# 2854|       getStmt(): [BlockStmt] { ... }
# 2855|         getStmt(0): [DeclStmt] declaration
# 2855|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x48
# 2855|               Type = [Struct] String
# 2855|             getVariable().getInitializer(): [Initializer] initializer for x48
# 2855|               getExpr(): [ConstructorCall] call to String
# 2855|                   Type = [VoidType] void
# 2855|                   ValueCategory = prvalue
# 2856|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2856|             Type = [VoidType] void
# 2856|             ValueCategory = prvalue
# 2856|           getQualifier(): [VariableAccess] x48
# 2856|               Type = [Struct] String
# 2856|               ValueCategory = lvalue
# 2856|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2856|           Conversion = [BoolConversion] conversion to bool
# 2856|           Type = [BoolType] bool
# 2856|           Value = [CStyleCast] 0
# 2856|           ValueCategory = prvalue
# 2857|     getStmt(49): [DoStmt] do (...) ...
# 2859|       getCondition(): [Literal] 0
# 2859|           Type = [IntType] int
# 2859|           Value = [Literal] 0
# 2859|           ValueCategory = prvalue
# 2857|       getStmt(): [BlockStmt] { ... }
# 2858|         getStmt(0): [DeclStmt] declaration
# 2858|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x49
# 2858|               Type = [Struct] String
# 2858|             getVariable().getInitializer(): [Initializer] initializer for x49
# 2858|               getExpr(): [ConstructorCall] call to String
# 2858|                   Type = [VoidType] void
# 2858|                   ValueCategory = prvalue
# 2859|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2859|             Type = [VoidType] void
# 2859|             ValueCategory = prvalue
# 2859|           getQualifier(): [VariableAccess] x49
# 2859|               Type = [Struct] String
# 2859|               ValueCategory = lvalue
# 2859|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2859|           Conversion = [BoolConversion] conversion to bool
# 2859|           Type = [BoolType] bool
# 2859|           Value = [CStyleCast] 0
# 2859|           ValueCategory = prvalue
# 2860|     getStmt(50): [DoStmt] do (...) ...
# 2862|       getCondition(): [Literal] 0
# 2862|           Type = [IntType] int
# 2862|           Value = [Literal] 0
# 2862|           ValueCategory = prvalue
# 2860|       getStmt(): [BlockStmt] { ... }
# 2861|         getStmt(0): [DeclStmt] declaration
# 2861|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x50
# 2861|               Type = [Struct] String
# 2861|             getVariable().getInitializer(): [Initializer] initializer for x50
# 2861|               getExpr(): [ConstructorCall] call to String
# 2861|                   Type = [VoidType] void
# 2861|                   ValueCategory = prvalue
# 2862|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2862|             Type = [VoidType] void
# 2862|             ValueCategory = prvalue
# 2862|           getQualifier(): [VariableAccess] x50
# 2862|               Type = [Struct] String
# 2862|               ValueCategory = lvalue
# 2862|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2862|           Conversion = [BoolConversion] conversion to bool
# 2862|           Type = [BoolType] bool
# 2862|           Value = [CStyleCast] 0
# 2862|           ValueCategory = prvalue
# 2863|     getStmt(51): [DoStmt] do (...) ...
# 2865|       getCondition(): [Literal] 0
# 2865|           Type = [IntType] int
# 2865|           Value = [Literal] 0
# 2865|           ValueCategory = prvalue
# 2863|       getStmt(): [BlockStmt] { ... }
# 2864|         getStmt(0): [DeclStmt] declaration
# 2864|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x51
# 2864|               Type = [Struct] String
# 2864|             getVariable().getInitializer(): [Initializer] initializer for x51
# 2864|               getExpr(): [ConstructorCall] call to String
# 2864|                   Type = [VoidType] void
# 2864|                   ValueCategory = prvalue
# 2865|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2865|             Type = [VoidType] void
# 2865|             ValueCategory = prvalue
# 2865|           getQualifier(): [VariableAccess] x51
# 2865|               Type = [Struct] String
# 2865|               ValueCategory = lvalue
# 2865|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2865|           Conversion = [BoolConversion] conversion to bool
# 2865|           Type = [BoolType] bool
# 2865|           Value = [CStyleCast] 0
# 2865|           ValueCategory = prvalue
# 2866|     getStmt(52): [DoStmt] do (...) ...
# 2868|       getCondition(): [Literal] 0
# 2868|           Type = [IntType] int
# 2868|           Value = [Literal] 0
# 2868|           ValueCategory = prvalue
# 2866|       getStmt(): [BlockStmt] { ... }
# 2867|         getStmt(0): [DeclStmt] declaration
# 2867|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x52
# 2867|               Type = [Struct] String
# 2867|             getVariable().getInitializer(): [Initializer] initializer for x52
# 2867|               getExpr(): [ConstructorCall] call to String
# 2867|                   Type = [VoidType] void
# 2867|                   ValueCategory = prvalue
# 2868|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2868|             Type = [VoidType] void
# 2868|             ValueCategory = prvalue
# 2868|           getQualifier(): [VariableAccess] x52
# 2868|               Type = [Struct] String
# 2868|               ValueCategory = lvalue
# 2868|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2868|           Conversion = [BoolConversion] conversion to bool
# 2868|           Type = [BoolType] bool
# 2868|           Value = [CStyleCast] 0
# 2868|           ValueCategory = prvalue
# 2869|     getStmt(53): [DoStmt] do (...) ...
# 2871|       getCondition(): [Literal] 0
# 2871|           Type = [IntType] int
# 2871|           Value = [Literal] 0
# 2871|           ValueCategory = prvalue
# 2869|       getStmt(): [BlockStmt] { ... }
# 2870|         getStmt(0): [DeclStmt] declaration
# 2870|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x53
# 2870|               Type = [Struct] String
# 2870|             getVariable().getInitializer(): [Initializer] initializer for x53
# 2870|               getExpr(): [ConstructorCall] call to String
# 2870|                   Type = [VoidType] void
# 2870|                   ValueCategory = prvalue
# 2871|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2871|             Type = [VoidType] void
# 2871|             ValueCategory = prvalue
# 2871|           getQualifier(): [VariableAccess] x53
# 2871|               Type = [Struct] String
# 2871|               ValueCategory = lvalue
# 2871|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2871|           Conversion = [BoolConversion] conversion to bool
# 2871|           Type = [BoolType] bool
# 2871|           Value = [CStyleCast] 0
# 2871|           ValueCategory = prvalue
# 2872|     getStmt(54): [DoStmt] do (...) ...
# 2874|       getCondition(): [Literal] 0
# 2874|           Type = [IntType] int
# 2874|           Value = [Literal] 0
# 2874|           ValueCategory = prvalue
# 2872|       getStmt(): [BlockStmt] { ... }
# 2873|         getStmt(0): [DeclStmt] declaration
# 2873|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x54
# 2873|               Type = [Struct] String
# 2873|             getVariable().getInitializer(): [Initializer] initializer for x54
# 2873|               getExpr(): [ConstructorCall] call to String
# 2873|                   Type = [VoidType] void
# 2873|                   ValueCategory = prvalue
# 2874|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2874|             Type = [VoidType] void
# 2874|             ValueCategory = prvalue
# 2874|           getQualifier(): [VariableAccess] x54
# 2874|               Type = [Struct] String
# 2874|               ValueCategory = lvalue
# 2874|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2874|           Conversion = [BoolConversion] conversion to bool
# 2874|           Type = [BoolType] bool
# 2874|           Value = [CStyleCast] 0
# 2874|           ValueCategory = prvalue
# 2875|     getStmt(55): [DoStmt] do (...) ...
# 2877|       getCondition(): [Literal] 0
# 2877|           Type = [IntType] int
# 2877|           Value = [Literal] 0
# 2877|           ValueCategory = prvalue
# 2875|       getStmt(): [BlockStmt] { ... }
# 2876|         getStmt(0): [DeclStmt] declaration
# 2876|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x55
# 2876|               Type = [Struct] String
# 2876|             getVariable().getInitializer(): [Initializer] initializer for x55
# 2876|               getExpr(): [ConstructorCall] call to String
# 2876|                   Type = [VoidType] void
# 2876|                   ValueCategory = prvalue
# 2877|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2877|             Type = [VoidType] void
# 2877|             ValueCategory = prvalue
# 2877|           getQualifier(): [VariableAccess] x55
# 2877|               Type = [Struct] String
# 2877|               ValueCategory = lvalue
# 2877|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2877|           Conversion = [BoolConversion] conversion to bool
# 2877|           Type = [BoolType] bool
# 2877|           Value = [CStyleCast] 0
# 2877|           ValueCategory = prvalue
# 2878|     getStmt(56): [DoStmt] do (...) ...
# 2880|       getCondition(): [Literal] 0
# 2880|           Type = [IntType] int
# 2880|           Value = [Literal] 0
# 2880|           ValueCategory = prvalue
# 2878|       getStmt(): [BlockStmt] { ... }
# 2879|         getStmt(0): [DeclStmt] declaration
# 2879|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x56
# 2879|               Type = [Struct] String
# 2879|             getVariable().getInitializer(): [Initializer] initializer for x56
# 2879|               getExpr(): [ConstructorCall] call to String
# 2879|                   Type = [VoidType] void
# 2879|                   ValueCategory = prvalue
# 2880|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2880|             Type = [VoidType] void
# 2880|             ValueCategory = prvalue
# 2880|           getQualifier(): [VariableAccess] x56
# 2880|               Type = [Struct] String
# 2880|               ValueCategory = lvalue
# 2880|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2880|           Conversion = [BoolConversion] conversion to bool
# 2880|           Type = [BoolType] bool
# 2880|           Value = [CStyleCast] 0
# 2880|           ValueCategory = prvalue
# 2881|     getStmt(57): [DoStmt] do (...) ...
# 2883|       getCondition(): [Literal] 0
# 2883|           Type = [IntType] int
# 2883|           Value = [Literal] 0
# 2883|           ValueCategory = prvalue
# 2881|       getStmt(): [BlockStmt] { ... }
# 2882|         getStmt(0): [DeclStmt] declaration
# 2882|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x57
# 2882|               Type = [Struct] String
# 2882|             getVariable().getInitializer(): [Initializer] initializer for x57
# 2882|               getExpr(): [ConstructorCall] call to String
# 2882|                   Type = [VoidType] void
# 2882|                   ValueCategory = prvalue
# 2883|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2883|             Type = [VoidType] void
# 2883|             ValueCategory = prvalue
# 2883|           getQualifier(): [VariableAccess] x57
# 2883|               Type = [Struct] String
# 2883|               ValueCategory = lvalue
# 2883|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2883|           Conversion = [BoolConversion] conversion to bool
# 2883|           Type = [BoolType] bool
# 2883|           Value = [CStyleCast] 0
# 2883|           ValueCategory = prvalue
# 2884|     getStmt(58): [DoStmt] do (...) ...
# 2886|       getCondition(): [Literal] 0
# 2886|           Type = [IntType] int
# 2886|           Value = [Literal] 0
# 2886|           ValueCategory = prvalue
# 2884|       getStmt(): [BlockStmt] { ... }
# 2885|         getStmt(0): [DeclStmt] declaration
# 2885|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x58
# 2885|               Type = [Struct] String
# 2885|             getVariable().getInitializer(): [Initializer] initializer for x58
# 2885|               getExpr(): [ConstructorCall] call to String
# 2885|                   Type = [VoidType] void
# 2885|                   ValueCategory = prvalue
# 2886|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2886|             Type = [VoidType] void
# 2886|             ValueCategory = prvalue
# 2886|           getQualifier(): [VariableAccess] x58
# 2886|               Type = [Struct] String
# 2886|               ValueCategory = lvalue
# 2886|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2886|           Conversion = [BoolConversion] conversion to bool
# 2886|           Type = [BoolType] bool
# 2886|           Value = [CStyleCast] 0
# 2886|           ValueCategory = prvalue
# 2887|     getStmt(59): [DoStmt] do (...) ...
# 2889|       getCondition(): [Literal] 0
# 2889|           Type = [IntType] int
# 2889|           Value = [Literal] 0
# 2889|           ValueCategory = prvalue
# 2887|       getStmt(): [BlockStmt] { ... }
# 2888|         getStmt(0): [DeclStmt] declaration
# 2888|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x59
# 2888|               Type = [Struct] String
# 2888|             getVariable().getInitializer(): [Initializer] initializer for x59
# 2888|               getExpr(): [ConstructorCall] call to String
# 2888|                   Type = [VoidType] void
# 2888|                   ValueCategory = prvalue
# 2889|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2889|             Type = [VoidType] void
# 2889|             ValueCategory = prvalue
# 2889|           getQualifier(): [VariableAccess] x59
# 2889|               Type = [Struct] String
# 2889|               ValueCategory = lvalue
# 2889|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2889|           Conversion = [BoolConversion] conversion to bool
# 2889|           Type = [BoolType] bool
# 2889|           Value = [CStyleCast] 0
# 2889|           ValueCategory = prvalue
# 2890|     getStmt(60): [DoStmt] do (...) ...
# 2892|       getCondition(): [Literal] 0
# 2892|           Type = [IntType] int
# 2892|           Value = [Literal] 0
# 2892|           ValueCategory = prvalue
# 2890|       getStmt(): [BlockStmt] { ... }
# 2891|         getStmt(0): [DeclStmt] declaration
# 2891|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x60
# 2891|               Type = [Struct] String
# 2891|             getVariable().getInitializer(): [Initializer] initializer for x60
# 2891|               getExpr(): [ConstructorCall] call to String
# 2891|                   Type = [VoidType] void
# 2891|                   ValueCategory = prvalue
# 2892|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2892|             Type = [VoidType] void
# 2892|             ValueCategory = prvalue
# 2892|           getQualifier(): [VariableAccess] x60
# 2892|               Type = [Struct] String
# 2892|               ValueCategory = lvalue
# 2892|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2892|           Conversion = [BoolConversion] conversion to bool
# 2892|           Type = [BoolType] bool
# 2892|           Value = [CStyleCast] 0
# 2892|           ValueCategory = prvalue
# 2893|     getStmt(61): [DoStmt] do (...) ...
# 2895|       getCondition(): [Literal] 0
# 2895|           Type = [IntType] int
# 2895|           Value = [Literal] 0
# 2895|           ValueCategory = prvalue
# 2893|       getStmt(): [BlockStmt] { ... }
# 2894|         getStmt(0): [DeclStmt] declaration
# 2894|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x61
# 2894|               Type = [Struct] String
# 2894|             getVariable().getInitializer(): [Initializer] initializer for x61
# 2894|               getExpr(): [ConstructorCall] call to String
# 2894|                   Type = [VoidType] void
# 2894|                   ValueCategory = prvalue
# 2895|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2895|             Type = [VoidType] void
# 2895|             ValueCategory = prvalue
# 2895|           getQualifier(): [VariableAccess] x61
# 2895|               Type = [Struct] String
# 2895|               ValueCategory = lvalue
# 2895|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2895|           Conversion = [BoolConversion] conversion to bool
# 2895|           Type = [BoolType] bool
# 2895|           Value = [CStyleCast] 0
# 2895|           ValueCategory = prvalue
# 2896|     getStmt(62): [DoStmt] do (...) ...
# 2898|       getCondition(): [Literal] 0
# 2898|           Type = [IntType] int
# 2898|           Value = [Literal] 0
# 2898|           ValueCategory = prvalue
# 2896|       getStmt(): [BlockStmt] { ... }
# 2897|         getStmt(0): [DeclStmt] declaration
# 2897|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x62
# 2897|               Type = [Struct] String
# 2897|             getVariable().getInitializer(): [Initializer] initializer for x62
# 2897|               getExpr(): [ConstructorCall] call to String
# 2897|                   Type = [VoidType] void
# 2897|                   ValueCategory = prvalue
# 2898|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2898|             Type = [VoidType] void
# 2898|             ValueCategory = prvalue
# 2898|           getQualifier(): [VariableAccess] x62
# 2898|               Type = [Struct] String
# 2898|               ValueCategory = lvalue
# 2898|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2898|           Conversion = [BoolConversion] conversion to bool
# 2898|           Type = [BoolType] bool
# 2898|           Value = [CStyleCast] 0
# 2898|           ValueCategory = prvalue
# 2899|     getStmt(63): [DoStmt] do (...) ...
# 2901|       getCondition(): [Literal] 0
# 2901|           Type = [IntType] int
# 2901|           Value = [Literal] 0
# 2901|           ValueCategory = prvalue
# 2899|       getStmt(): [BlockStmt] { ... }
# 2900|         getStmt(0): [DeclStmt] declaration
# 2900|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x63
# 2900|               Type = [Struct] String
# 2900|             getVariable().getInitializer(): [Initializer] initializer for x63
# 2900|               getExpr(): [ConstructorCall] call to String
# 2900|                   Type = [VoidType] void
# 2900|                   ValueCategory = prvalue
# 2901|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2901|             Type = [VoidType] void
# 2901|             ValueCategory = prvalue
# 2901|           getQualifier(): [VariableAccess] x63
# 2901|               Type = [Struct] String
# 2901|               ValueCategory = lvalue
# 2901|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2901|           Conversion = [BoolConversion] conversion to bool
# 2901|           Type = [BoolType] bool
# 2901|           Value = [CStyleCast] 0
# 2901|           ValueCategory = prvalue
# 2902|     getStmt(64): [DoStmt] do (...) ...
# 2904|       getCondition(): [Literal] 0
# 2904|           Type = [IntType] int
# 2904|           Value = [Literal] 0
# 2904|           ValueCategory = prvalue
# 2902|       getStmt(): [BlockStmt] { ... }
# 2903|         getStmt(0): [DeclStmt] declaration
# 2903|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x64
# 2903|               Type = [Struct] String
# 2903|             getVariable().getInitializer(): [Initializer] initializer for x64
# 2903|               getExpr(): [ConstructorCall] call to String
# 2903|                   Type = [VoidType] void
# 2903|                   ValueCategory = prvalue
# 2904|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2904|             Type = [VoidType] void
# 2904|             ValueCategory = prvalue
# 2904|           getQualifier(): [VariableAccess] x64
# 2904|               Type = [Struct] String
# 2904|               ValueCategory = lvalue
# 2904|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2904|           Conversion = [BoolConversion] conversion to bool
# 2904|           Type = [BoolType] bool
# 2904|           Value = [CStyleCast] 0
# 2904|           ValueCategory = prvalue
# 2905|     getStmt(65): [DoStmt] do (...) ...
# 2907|       getCondition(): [Literal] 0
# 2907|           Type = [IntType] int
# 2907|           Value = [Literal] 0
# 2907|           ValueCategory = prvalue
# 2905|       getStmt(): [BlockStmt] { ... }
# 2906|         getStmt(0): [DeclStmt] declaration
# 2906|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x65
# 2906|               Type = [Struct] String
# 2906|             getVariable().getInitializer(): [Initializer] initializer for x65
# 2906|               getExpr(): [ConstructorCall] call to String
# 2906|                   Type = [VoidType] void
# 2906|                   ValueCategory = prvalue
# 2907|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2907|             Type = [VoidType] void
# 2907|             ValueCategory = prvalue
# 2907|           getQualifier(): [VariableAccess] x65
# 2907|               Type = [Struct] String
# 2907|               ValueCategory = lvalue
# 2907|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2907|           Conversion = [BoolConversion] conversion to bool
# 2907|           Type = [BoolType] bool
# 2907|           Value = [CStyleCast] 0
# 2907|           ValueCategory = prvalue
# 2908|     getStmt(66): [DoStmt] do (...) ...
# 2910|       getCondition(): [Literal] 0
# 2910|           Type = [IntType] int
# 2910|           Value = [Literal] 0
# 2910|           ValueCategory = prvalue
# 2908|       getStmt(): [BlockStmt] { ... }
# 2909|         getStmt(0): [DeclStmt] declaration
# 2909|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x66
# 2909|               Type = [Struct] String
# 2909|             getVariable().getInitializer(): [Initializer] initializer for x66
# 2909|               getExpr(): [ConstructorCall] call to String
# 2909|                   Type = [VoidType] void
# 2909|                   ValueCategory = prvalue
# 2910|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2910|             Type = [VoidType] void
# 2910|             ValueCategory = prvalue
# 2910|           getQualifier(): [VariableAccess] x66
# 2910|               Type = [Struct] String
# 2910|               ValueCategory = lvalue
# 2910|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2910|           Conversion = [BoolConversion] conversion to bool
# 2910|           Type = [BoolType] bool
# 2910|           Value = [CStyleCast] 0
# 2910|           ValueCategory = prvalue
# 2911|     getStmt(67): [DoStmt] do (...) ...
# 2913|       getCondition(): [Literal] 0
# 2913|           Type = [IntType] int
# 2913|           Value = [Literal] 0
# 2913|           ValueCategory = prvalue
# 2911|       getStmt(): [BlockStmt] { ... }
# 2912|         getStmt(0): [DeclStmt] declaration
# 2912|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x67
# 2912|               Type = [Struct] String
# 2912|             getVariable().getInitializer(): [Initializer] initializer for x67
# 2912|               getExpr(): [ConstructorCall] call to String
# 2912|                   Type = [VoidType] void
# 2912|                   ValueCategory = prvalue
# 2913|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2913|             Type = [VoidType] void
# 2913|             ValueCategory = prvalue
# 2913|           getQualifier(): [VariableAccess] x67
# 2913|               Type = [Struct] String
# 2913|               ValueCategory = lvalue
# 2913|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2913|           Conversion = [BoolConversion] conversion to bool
# 2913|           Type = [BoolType] bool
# 2913|           Value = [CStyleCast] 0
# 2913|           ValueCategory = prvalue
# 2914|     getStmt(68): [DoStmt] do (...) ...
# 2916|       getCondition(): [Literal] 0
# 2916|           Type = [IntType] int
# 2916|           Value = [Literal] 0
# 2916|           ValueCategory = prvalue
# 2914|       getStmt(): [BlockStmt] { ... }
# 2915|         getStmt(0): [DeclStmt] declaration
# 2915|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x68
# 2915|               Type = [Struct] String
# 2915|             getVariable().getInitializer(): [Initializer] initializer for x68
# 2915|               getExpr(): [ConstructorCall] call to String
# 2915|                   Type = [VoidType] void
# 2915|                   ValueCategory = prvalue
# 2916|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2916|             Type = [VoidType] void
# 2916|             ValueCategory = prvalue
# 2916|           getQualifier(): [VariableAccess] x68
# 2916|               Type = [Struct] String
# 2916|               ValueCategory = lvalue
# 2916|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2916|           Conversion = [BoolConversion] conversion to bool
# 2916|           Type = [BoolType] bool
# 2916|           Value = [CStyleCast] 0
# 2916|           ValueCategory = prvalue
# 2917|     getStmt(69): [DoStmt] do (...) ...
# 2919|       getCondition(): [Literal] 0
# 2919|           Type = [IntType] int
# 2919|           Value = [Literal] 0
# 2919|           ValueCategory = prvalue
# 2917|       getStmt(): [BlockStmt] { ... }
# 2918|         getStmt(0): [DeclStmt] declaration
# 2918|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x69
# 2918|               Type = [Struct] String
# 2918|             getVariable().getInitializer(): [Initializer] initializer for x69
# 2918|               getExpr(): [ConstructorCall] call to String
# 2918|                   Type = [VoidType] void
# 2918|                   ValueCategory = prvalue
# 2919|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2919|             Type = [VoidType] void
# 2919|             ValueCategory = prvalue
# 2919|           getQualifier(): [VariableAccess] x69
# 2919|               Type = [Struct] String
# 2919|               ValueCategory = lvalue
# 2919|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2919|           Conversion = [BoolConversion] conversion to bool
# 2919|           Type = [BoolType] bool
# 2919|           Value = [CStyleCast] 0
# 2919|           ValueCategory = prvalue
# 2920|     getStmt(70): [DoStmt] do (...) ...
# 2922|       getCondition(): [Literal] 0
# 2922|           Type = [IntType] int
# 2922|           Value = [Literal] 0
# 2922|           ValueCategory = prvalue
# 2920|       getStmt(): [BlockStmt] { ... }
# 2921|         getStmt(0): [DeclStmt] declaration
# 2921|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x70
# 2921|               Type = [Struct] String
# 2921|             getVariable().getInitializer(): [Initializer] initializer for x70
# 2921|               getExpr(): [ConstructorCall] call to String
# 2921|                   Type = [VoidType] void
# 2921|                   ValueCategory = prvalue
# 2922|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2922|             Type = [VoidType] void
# 2922|             ValueCategory = prvalue
# 2922|           getQualifier(): [VariableAccess] x70
# 2922|               Type = [Struct] String
# 2922|               ValueCategory = lvalue
# 2922|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2922|           Conversion = [BoolConversion] conversion to bool
# 2922|           Type = [BoolType] bool
# 2922|           Value = [CStyleCast] 0
# 2922|           ValueCategory = prvalue
# 2923|     getStmt(71): [DoStmt] do (...) ...
# 2925|       getCondition(): [Literal] 0
# 2925|           Type = [IntType] int
# 2925|           Value = [Literal] 0
# 2925|           ValueCategory = prvalue
# 2923|       getStmt(): [BlockStmt] { ... }
# 2924|         getStmt(0): [DeclStmt] declaration
# 2924|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x71
# 2924|               Type = [Struct] String
# 2924|             getVariable().getInitializer(): [Initializer] initializer for x71
# 2924|               getExpr(): [ConstructorCall] call to String
# 2924|                   Type = [VoidType] void
# 2924|                   ValueCategory = prvalue
# 2925|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2925|             Type = [VoidType] void
# 2925|             ValueCategory = prvalue
# 2925|           getQualifier(): [VariableAccess] x71
# 2925|               Type = [Struct] String
# 2925|               ValueCategory = lvalue
# 2925|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2925|           Conversion = [BoolConversion] conversion to bool
# 2925|           Type = [BoolType] bool
# 2925|           Value = [CStyleCast] 0
# 2925|           ValueCategory = prvalue
# 2926|     getStmt(72): [DoStmt] do (...) ...
# 2928|       getCondition(): [Literal] 0
# 2928|           Type = [IntType] int
# 2928|           Value = [Literal] 0
# 2928|           ValueCategory = prvalue
# 2926|       getStmt(): [BlockStmt] { ... }
# 2927|         getStmt(0): [DeclStmt] declaration
# 2927|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x72
# 2927|               Type = [Struct] String
# 2927|             getVariable().getInitializer(): [Initializer] initializer for x72
# 2927|               getExpr(): [ConstructorCall] call to String
# 2927|                   Type = [VoidType] void
# 2927|                   ValueCategory = prvalue
# 2928|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2928|             Type = [VoidType] void
# 2928|             ValueCategory = prvalue
# 2928|           getQualifier(): [VariableAccess] x72
# 2928|               Type = [Struct] String
# 2928|               ValueCategory = lvalue
# 2928|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2928|           Conversion = [BoolConversion] conversion to bool
# 2928|           Type = [BoolType] bool
# 2928|           Value = [CStyleCast] 0
# 2928|           ValueCategory = prvalue
# 2929|     getStmt(73): [DoStmt] do (...) ...
# 2931|       getCondition(): [Literal] 0
# 2931|           Type = [IntType] int
# 2931|           Value = [Literal] 0
# 2931|           ValueCategory = prvalue
# 2929|       getStmt(): [BlockStmt] { ... }
# 2930|         getStmt(0): [DeclStmt] declaration
# 2930|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x73
# 2930|               Type = [Struct] String
# 2930|             getVariable().getInitializer(): [Initializer] initializer for x73
# 2930|               getExpr(): [ConstructorCall] call to String
# 2930|                   Type = [VoidType] void
# 2930|                   ValueCategory = prvalue
# 2931|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2931|             Type = [VoidType] void
# 2931|             ValueCategory = prvalue
# 2931|           getQualifier(): [VariableAccess] x73
# 2931|               Type = [Struct] String
# 2931|               ValueCategory = lvalue
# 2931|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2931|           Conversion = [BoolConversion] conversion to bool
# 2931|           Type = [BoolType] bool
# 2931|           Value = [CStyleCast] 0
# 2931|           ValueCategory = prvalue
# 2932|     getStmt(74): [DoStmt] do (...) ...
# 2934|       getCondition(): [Literal] 0
# 2934|           Type = [IntType] int
# 2934|           Value = [Literal] 0
# 2934|           ValueCategory = prvalue
# 2932|       getStmt(): [BlockStmt] { ... }
# 2933|         getStmt(0): [DeclStmt] declaration
# 2933|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x74
# 2933|               Type = [Struct] String
# 2933|             getVariable().getInitializer(): [Initializer] initializer for x74
# 2933|               getExpr(): [ConstructorCall] call to String
# 2933|                   Type = [VoidType] void
# 2933|                   ValueCategory = prvalue
# 2934|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2934|             Type = [VoidType] void
# 2934|             ValueCategory = prvalue
# 2934|           getQualifier(): [VariableAccess] x74
# 2934|               Type = [Struct] String
# 2934|               ValueCategory = lvalue
# 2934|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2934|           Conversion = [BoolConversion] conversion to bool
# 2934|           Type = [BoolType] bool
# 2934|           Value = [CStyleCast] 0
# 2934|           ValueCategory = prvalue
# 2935|     getStmt(75): [DoStmt] do (...) ...
# 2937|       getCondition(): [Literal] 0
# 2937|           Type = [IntType] int
# 2937|           Value = [Literal] 0
# 2937|           ValueCategory = prvalue
# 2935|       getStmt(): [BlockStmt] { ... }
# 2936|         getStmt(0): [DeclStmt] declaration
# 2936|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x75
# 2936|               Type = [Struct] String
# 2936|             getVariable().getInitializer(): [Initializer] initializer for x75
# 2936|               getExpr(): [ConstructorCall] call to String
# 2936|                   Type = [VoidType] void
# 2936|                   ValueCategory = prvalue
# 2937|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2937|             Type = [VoidType] void
# 2937|             ValueCategory = prvalue
# 2937|           getQualifier(): [VariableAccess] x75
# 2937|               Type = [Struct] String
# 2937|               ValueCategory = lvalue
# 2937|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2937|           Conversion = [BoolConversion] conversion to bool
# 2937|           Type = [BoolType] bool
# 2937|           Value = [CStyleCast] 0
# 2937|           ValueCategory = prvalue
# 2938|     getStmt(76): [DoStmt] do (...) ...
# 2940|       getCondition(): [Literal] 0
# 2940|           Type = [IntType] int
# 2940|           Value = [Literal] 0
# 2940|           ValueCategory = prvalue
# 2938|       getStmt(): [BlockStmt] { ... }
# 2939|         getStmt(0): [DeclStmt] declaration
# 2939|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x76
# 2939|               Type = [Struct] String
# 2939|             getVariable().getInitializer(): [Initializer] initializer for x76
# 2939|               getExpr(): [ConstructorCall] call to String
# 2939|                   Type = [VoidType] void
# 2939|                   ValueCategory = prvalue
# 2940|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2940|             Type = [VoidType] void
# 2940|             ValueCategory = prvalue
# 2940|           getQualifier(): [VariableAccess] x76
# 2940|               Type = [Struct] String
# 2940|               ValueCategory = lvalue
# 2940|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2940|           Conversion = [BoolConversion] conversion to bool
# 2940|           Type = [BoolType] bool
# 2940|           Value = [CStyleCast] 0
# 2940|           ValueCategory = prvalue
# 2941|     getStmt(77): [DoStmt] do (...) ...
# 2943|       getCondition(): [Literal] 0
# 2943|           Type = [IntType] int
# 2943|           Value = [Literal] 0
# 2943|           ValueCategory = prvalue
# 2941|       getStmt(): [BlockStmt] { ... }
# 2942|         getStmt(0): [DeclStmt] declaration
# 2942|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x77
# 2942|               Type = [Struct] String
# 2942|             getVariable().getInitializer(): [Initializer] initializer for x77
# 2942|               getExpr(): [ConstructorCall] call to String
# 2942|                   Type = [VoidType] void
# 2942|                   ValueCategory = prvalue
# 2943|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2943|             Type = [VoidType] void
# 2943|             ValueCategory = prvalue
# 2943|           getQualifier(): [VariableAccess] x77
# 2943|               Type = [Struct] String
# 2943|               ValueCategory = lvalue
# 2943|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2943|           Conversion = [BoolConversion] conversion to bool
# 2943|           Type = [BoolType] bool
# 2943|           Value = [CStyleCast] 0
# 2943|           ValueCategory = prvalue
# 2944|     getStmt(78): [DoStmt] do (...) ...
# 2946|       getCondition(): [Literal] 0
# 2946|           Type = [IntType] int
# 2946|           Value = [Literal] 0
# 2946|           ValueCategory = prvalue
# 2944|       getStmt(): [BlockStmt] { ... }
# 2945|         getStmt(0): [DeclStmt] declaration
# 2945|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x78
# 2945|               Type = [Struct] String
# 2945|             getVariable().getInitializer(): [Initializer] initializer for x78
# 2945|               getExpr(): [ConstructorCall] call to String
# 2945|                   Type = [VoidType] void
# 2945|                   ValueCategory = prvalue
# 2946|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2946|             Type = [VoidType] void
# 2946|             ValueCategory = prvalue
# 2946|           getQualifier(): [VariableAccess] x78
# 2946|               Type = [Struct] String
# 2946|               ValueCategory = lvalue
# 2946|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2946|           Conversion = [BoolConversion] conversion to bool
# 2946|           Type = [BoolType] bool
# 2946|           Value = [CStyleCast] 0
# 2946|           ValueCategory = prvalue
# 2947|     getStmt(79): [DoStmt] do (...) ...
# 2949|       getCondition(): [Literal] 0
# 2949|           Type = [IntType] int
# 2949|           Value = [Literal] 0
# 2949|           ValueCategory = prvalue
# 2947|       getStmt(): [BlockStmt] { ... }
# 2948|         getStmt(0): [DeclStmt] declaration
# 2948|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x79
# 2948|               Type = [Struct] String
# 2948|             getVariable().getInitializer(): [Initializer] initializer for x79
# 2948|               getExpr(): [ConstructorCall] call to String
# 2948|                   Type = [VoidType] void
# 2948|                   ValueCategory = prvalue
# 2949|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2949|             Type = [VoidType] void
# 2949|             ValueCategory = prvalue
# 2949|           getQualifier(): [VariableAccess] x79
# 2949|               Type = [Struct] String
# 2949|               ValueCategory = lvalue
# 2949|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2949|           Conversion = [BoolConversion] conversion to bool
# 2949|           Type = [BoolType] bool
# 2949|           Value = [CStyleCast] 0
# 2949|           ValueCategory = prvalue
# 2950|     getStmt(80): [DoStmt] do (...) ...
# 2952|       getCondition(): [Literal] 0
# 2952|           Type = [IntType] int
# 2952|           Value = [Literal] 0
# 2952|           ValueCategory = prvalue
# 2950|       getStmt(): [BlockStmt] { ... }
# 2951|         getStmt(0): [DeclStmt] declaration
# 2951|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x80
# 2951|               Type = [Struct] String
# 2951|             getVariable().getInitializer(): [Initializer] initializer for x80
# 2951|               getExpr(): [ConstructorCall] call to String
# 2951|                   Type = [VoidType] void
# 2951|                   ValueCategory = prvalue
# 2952|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2952|             Type = [VoidType] void
# 2952|             ValueCategory = prvalue
# 2952|           getQualifier(): [VariableAccess] x80
# 2952|               Type = [Struct] String
# 2952|               ValueCategory = lvalue
# 2952|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2952|           Conversion = [BoolConversion] conversion to bool
# 2952|           Type = [BoolType] bool
# 2952|           Value = [CStyleCast] 0
# 2952|           ValueCategory = prvalue
# 2953|     getStmt(81): [DoStmt] do (...) ...
# 2955|       getCondition(): [Literal] 0
# 2955|           Type = [IntType] int
# 2955|           Value = [Literal] 0
# 2955|           ValueCategory = prvalue
# 2953|       getStmt(): [BlockStmt] { ... }
# 2954|         getStmt(0): [DeclStmt] declaration
# 2954|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x81
# 2954|               Type = [Struct] String
# 2954|             getVariable().getInitializer(): [Initializer] initializer for x81
# 2954|               getExpr(): [ConstructorCall] call to String
# 2954|                   Type = [VoidType] void
# 2954|                   ValueCategory = prvalue
# 2955|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2955|             Type = [VoidType] void
# 2955|             ValueCategory = prvalue
# 2955|           getQualifier(): [VariableAccess] x81
# 2955|               Type = [Struct] String
# 2955|               ValueCategory = lvalue
# 2955|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2955|           Conversion = [BoolConversion] conversion to bool
# 2955|           Type = [BoolType] bool
# 2955|           Value = [CStyleCast] 0
# 2955|           ValueCategory = prvalue
# 2956|     getStmt(82): [DoStmt] do (...) ...
# 2958|       getCondition(): [Literal] 0
# 2958|           Type = [IntType] int
# 2958|           Value = [Literal] 0
# 2958|           ValueCategory = prvalue
# 2956|       getStmt(): [BlockStmt] { ... }
# 2957|         getStmt(0): [DeclStmt] declaration
# 2957|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x82
# 2957|               Type = [Struct] String
# 2957|             getVariable().getInitializer(): [Initializer] initializer for x82
# 2957|               getExpr(): [ConstructorCall] call to String
# 2957|                   Type = [VoidType] void
# 2957|                   ValueCategory = prvalue
# 2958|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2958|             Type = [VoidType] void
# 2958|             ValueCategory = prvalue
# 2958|           getQualifier(): [VariableAccess] x82
# 2958|               Type = [Struct] String
# 2958|               ValueCategory = lvalue
# 2958|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2958|           Conversion = [BoolConversion] conversion to bool
# 2958|           Type = [BoolType] bool
# 2958|           Value = [CStyleCast] 0
# 2958|           ValueCategory = prvalue
# 2959|     getStmt(83): [DoStmt] do (...) ...
# 2961|       getCondition(): [Literal] 0
# 2961|           Type = [IntType] int
# 2961|           Value = [Literal] 0
# 2961|           ValueCategory = prvalue
# 2959|       getStmt(): [BlockStmt] { ... }
# 2960|         getStmt(0): [DeclStmt] declaration
# 2960|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x83
# 2960|               Type = [Struct] String
# 2960|             getVariable().getInitializer(): [Initializer] initializer for x83
# 2960|               getExpr(): [ConstructorCall] call to String
# 2960|                   Type = [VoidType] void
# 2960|                   ValueCategory = prvalue
# 2961|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2961|             Type = [VoidType] void
# 2961|             ValueCategory = prvalue
# 2961|           getQualifier(): [VariableAccess] x83
# 2961|               Type = [Struct] String
# 2961|               ValueCategory = lvalue
# 2961|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2961|           Conversion = [BoolConversion] conversion to bool
# 2961|           Type = [BoolType] bool
# 2961|           Value = [CStyleCast] 0
# 2961|           ValueCategory = prvalue
# 2962|     getStmt(84): [DoStmt] do (...) ...
# 2964|       getCondition(): [Literal] 0
# 2964|           Type = [IntType] int
# 2964|           Value = [Literal] 0
# 2964|           ValueCategory = prvalue
# 2962|       getStmt(): [BlockStmt] { ... }
# 2963|         getStmt(0): [DeclStmt] declaration
# 2963|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x84
# 2963|               Type = [Struct] String
# 2963|             getVariable().getInitializer(): [Initializer] initializer for x84
# 2963|               getExpr(): [ConstructorCall] call to String
# 2963|                   Type = [VoidType] void
# 2963|                   ValueCategory = prvalue
# 2964|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2964|             Type = [VoidType] void
# 2964|             ValueCategory = prvalue
# 2964|           getQualifier(): [VariableAccess] x84
# 2964|               Type = [Struct] String
# 2964|               ValueCategory = lvalue
# 2964|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2964|           Conversion = [BoolConversion] conversion to bool
# 2964|           Type = [BoolType] bool
# 2964|           Value = [CStyleCast] 0
# 2964|           ValueCategory = prvalue
# 2965|     getStmt(85): [DoStmt] do (...) ...
# 2967|       getCondition(): [Literal] 0
# 2967|           Type = [IntType] int
# 2967|           Value = [Literal] 0
# 2967|           ValueCategory = prvalue
# 2965|       getStmt(): [BlockStmt] { ... }
# 2966|         getStmt(0): [DeclStmt] declaration
# 2966|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x85
# 2966|               Type = [Struct] String
# 2966|             getVariable().getInitializer(): [Initializer] initializer for x85
# 2966|               getExpr(): [ConstructorCall] call to String
# 2966|                   Type = [VoidType] void
# 2966|                   ValueCategory = prvalue
# 2967|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2967|             Type = [VoidType] void
# 2967|             ValueCategory = prvalue
# 2967|           getQualifier(): [VariableAccess] x85
# 2967|               Type = [Struct] String
# 2967|               ValueCategory = lvalue
# 2967|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2967|           Conversion = [BoolConversion] conversion to bool
# 2967|           Type = [BoolType] bool
# 2967|           Value = [CStyleCast] 0
# 2967|           ValueCategory = prvalue
# 2968|     getStmt(86): [DoStmt] do (...) ...
# 2970|       getCondition(): [Literal] 0
# 2970|           Type = [IntType] int
# 2970|           Value = [Literal] 0
# 2970|           ValueCategory = prvalue
# 2968|       getStmt(): [BlockStmt] { ... }
# 2969|         getStmt(0): [DeclStmt] declaration
# 2969|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x86
# 2969|               Type = [Struct] String
# 2969|             getVariable().getInitializer(): [Initializer] initializer for x86
# 2969|               getExpr(): [ConstructorCall] call to String
# 2969|                   Type = [VoidType] void
# 2969|                   ValueCategory = prvalue
# 2970|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2970|             Type = [VoidType] void
# 2970|             ValueCategory = prvalue
# 2970|           getQualifier(): [VariableAccess] x86
# 2970|               Type = [Struct] String
# 2970|               ValueCategory = lvalue
# 2970|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2970|           Conversion = [BoolConversion] conversion to bool
# 2970|           Type = [BoolType] bool
# 2970|           Value = [CStyleCast] 0
# 2970|           ValueCategory = prvalue
# 2971|     getStmt(87): [DoStmt] do (...) ...
# 2973|       getCondition(): [Literal] 0
# 2973|           Type = [IntType] int
# 2973|           Value = [Literal] 0
# 2973|           ValueCategory = prvalue
# 2971|       getStmt(): [BlockStmt] { ... }
# 2972|         getStmt(0): [DeclStmt] declaration
# 2972|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x87
# 2972|               Type = [Struct] String
# 2972|             getVariable().getInitializer(): [Initializer] initializer for x87
# 2972|               getExpr(): [ConstructorCall] call to String
# 2972|                   Type = [VoidType] void
# 2972|                   ValueCategory = prvalue
# 2973|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2973|             Type = [VoidType] void
# 2973|             ValueCategory = prvalue
# 2973|           getQualifier(): [VariableAccess] x87
# 2973|               Type = [Struct] String
# 2973|               ValueCategory = lvalue
# 2973|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2973|           Conversion = [BoolConversion] conversion to bool
# 2973|           Type = [BoolType] bool
# 2973|           Value = [CStyleCast] 0
# 2973|           ValueCategory = prvalue
# 2974|     getStmt(88): [DoStmt] do (...) ...
# 2976|       getCondition(): [Literal] 0
# 2976|           Type = [IntType] int
# 2976|           Value = [Literal] 0
# 2976|           ValueCategory = prvalue
# 2974|       getStmt(): [BlockStmt] { ... }
# 2975|         getStmt(0): [DeclStmt] declaration
# 2975|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x88
# 2975|               Type = [Struct] String
# 2975|             getVariable().getInitializer(): [Initializer] initializer for x88
# 2975|               getExpr(): [ConstructorCall] call to String
# 2975|                   Type = [VoidType] void
# 2975|                   ValueCategory = prvalue
# 2976|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2976|             Type = [VoidType] void
# 2976|             ValueCategory = prvalue
# 2976|           getQualifier(): [VariableAccess] x88
# 2976|               Type = [Struct] String
# 2976|               ValueCategory = lvalue
# 2976|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2976|           Conversion = [BoolConversion] conversion to bool
# 2976|           Type = [BoolType] bool
# 2976|           Value = [CStyleCast] 0
# 2976|           ValueCategory = prvalue
# 2977|     getStmt(89): [DoStmt] do (...) ...
# 2979|       getCondition(): [Literal] 0
# 2979|           Type = [IntType] int
# 2979|           Value = [Literal] 0
# 2979|           ValueCategory = prvalue
# 2977|       getStmt(): [BlockStmt] { ... }
# 2978|         getStmt(0): [DeclStmt] declaration
# 2978|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x89
# 2978|               Type = [Struct] String
# 2978|             getVariable().getInitializer(): [Initializer] initializer for x89
# 2978|               getExpr(): [ConstructorCall] call to String
# 2978|                   Type = [VoidType] void
# 2978|                   ValueCategory = prvalue
# 2979|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2979|             Type = [VoidType] void
# 2979|             ValueCategory = prvalue
# 2979|           getQualifier(): [VariableAccess] x89
# 2979|               Type = [Struct] String
# 2979|               ValueCategory = lvalue
# 2979|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2979|           Conversion = [BoolConversion] conversion to bool
# 2979|           Type = [BoolType] bool
# 2979|           Value = [CStyleCast] 0
# 2979|           ValueCategory = prvalue
# 2980|     getStmt(90): [DoStmt] do (...) ...
# 2982|       getCondition(): [Literal] 0
# 2982|           Type = [IntType] int
# 2982|           Value = [Literal] 0
# 2982|           ValueCategory = prvalue
# 2980|       getStmt(): [BlockStmt] { ... }
# 2981|         getStmt(0): [DeclStmt] declaration
# 2981|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x90
# 2981|               Type = [Struct] String
# 2981|             getVariable().getInitializer(): [Initializer] initializer for x90
# 2981|               getExpr(): [ConstructorCall] call to String
# 2981|                   Type = [VoidType] void
# 2981|                   ValueCategory = prvalue
# 2982|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2982|             Type = [VoidType] void
# 2982|             ValueCategory = prvalue
# 2982|           getQualifier(): [VariableAccess] x90
# 2982|               Type = [Struct] String
# 2982|               ValueCategory = lvalue
# 2982|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2982|           Conversion = [BoolConversion] conversion to bool
# 2982|           Type = [BoolType] bool
# 2982|           Value = [CStyleCast] 0
# 2982|           ValueCategory = prvalue
# 2983|     getStmt(91): [DoStmt] do (...) ...
# 2985|       getCondition(): [Literal] 0
# 2985|           Type = [IntType] int
# 2985|           Value = [Literal] 0
# 2985|           ValueCategory = prvalue
# 2983|       getStmt(): [BlockStmt] { ... }
# 2984|         getStmt(0): [DeclStmt] declaration
# 2984|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x91
# 2984|               Type = [Struct] String
# 2984|             getVariable().getInitializer(): [Initializer] initializer for x91
# 2984|               getExpr(): [ConstructorCall] call to String
# 2984|                   Type = [VoidType] void
# 2984|                   ValueCategory = prvalue
# 2985|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2985|             Type = [VoidType] void
# 2985|             ValueCategory = prvalue
# 2985|           getQualifier(): [VariableAccess] x91
# 2985|               Type = [Struct] String
# 2985|               ValueCategory = lvalue
# 2985|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2985|           Conversion = [BoolConversion] conversion to bool
# 2985|           Type = [BoolType] bool
# 2985|           Value = [CStyleCast] 0
# 2985|           ValueCategory = prvalue
# 2986|     getStmt(92): [DoStmt] do (...) ...
# 2988|       getCondition(): [Literal] 0
# 2988|           Type = [IntType] int
# 2988|           Value = [Literal] 0
# 2988|           ValueCategory = prvalue
# 2986|       getStmt(): [BlockStmt] { ... }
# 2987|         getStmt(0): [DeclStmt] declaration
# 2987|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x92
# 2987|               Type = [Struct] String
# 2987|             getVariable().getInitializer(): [Initializer] initializer for x92
# 2987|               getExpr(): [ConstructorCall] call to String
# 2987|                   Type = [VoidType] void
# 2987|                   ValueCategory = prvalue
# 2988|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2988|             Type = [VoidType] void
# 2988|             ValueCategory = prvalue
# 2988|           getQualifier(): [VariableAccess] x92
# 2988|               Type = [Struct] String
# 2988|               ValueCategory = lvalue
# 2988|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2988|           Conversion = [BoolConversion] conversion to bool
# 2988|           Type = [BoolType] bool
# 2988|           Value = [CStyleCast] 0
# 2988|           ValueCategory = prvalue
# 2989|     getStmt(93): [DoStmt] do (...) ...
# 2991|       getCondition(): [Literal] 0
# 2991|           Type = [IntType] int
# 2991|           Value = [Literal] 0
# 2991|           ValueCategory = prvalue
# 2989|       getStmt(): [BlockStmt] { ... }
# 2990|         getStmt(0): [DeclStmt] declaration
# 2990|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x93
# 2990|               Type = [Struct] String
# 2990|             getVariable().getInitializer(): [Initializer] initializer for x93
# 2990|               getExpr(): [ConstructorCall] call to String
# 2990|                   Type = [VoidType] void
# 2990|                   ValueCategory = prvalue
# 2991|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2991|             Type = [VoidType] void
# 2991|             ValueCategory = prvalue
# 2991|           getQualifier(): [VariableAccess] x93
# 2991|               Type = [Struct] String
# 2991|               ValueCategory = lvalue
# 2991|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2991|           Conversion = [BoolConversion] conversion to bool
# 2991|           Type = [BoolType] bool
# 2991|           Value = [CStyleCast] 0
# 2991|           ValueCategory = prvalue
# 2992|     getStmt(94): [DoStmt] do (...) ...
# 2994|       getCondition(): [Literal] 0
# 2994|           Type = [IntType] int
# 2994|           Value = [Literal] 0
# 2994|           ValueCategory = prvalue
# 2992|       getStmt(): [BlockStmt] { ... }
# 2993|         getStmt(0): [DeclStmt] declaration
# 2993|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x94
# 2993|               Type = [Struct] String
# 2993|             getVariable().getInitializer(): [Initializer] initializer for x94
# 2993|               getExpr(): [ConstructorCall] call to String
# 2993|                   Type = [VoidType] void
# 2993|                   ValueCategory = prvalue
# 2994|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2994|             Type = [VoidType] void
# 2994|             ValueCategory = prvalue
# 2994|           getQualifier(): [VariableAccess] x94
# 2994|               Type = [Struct] String
# 2994|               ValueCategory = lvalue
# 2994|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2994|           Conversion = [BoolConversion] conversion to bool
# 2994|           Type = [BoolType] bool
# 2994|           Value = [CStyleCast] 0
# 2994|           ValueCategory = prvalue
# 2995|     getStmt(95): [DoStmt] do (...) ...
# 2997|       getCondition(): [Literal] 0
# 2997|           Type = [IntType] int
# 2997|           Value = [Literal] 0
# 2997|           ValueCategory = prvalue
# 2995|       getStmt(): [BlockStmt] { ... }
# 2996|         getStmt(0): [DeclStmt] declaration
# 2996|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x95
# 2996|               Type = [Struct] String
# 2996|             getVariable().getInitializer(): [Initializer] initializer for x95
# 2996|               getExpr(): [ConstructorCall] call to String
# 2996|                   Type = [VoidType] void
# 2996|                   ValueCategory = prvalue
# 2997|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 2997|             Type = [VoidType] void
# 2997|             ValueCategory = prvalue
# 2997|           getQualifier(): [VariableAccess] x95
# 2997|               Type = [Struct] String
# 2997|               ValueCategory = lvalue
# 2997|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 2997|           Conversion = [BoolConversion] conversion to bool
# 2997|           Type = [BoolType] bool
# 2997|           Value = [CStyleCast] 0
# 2997|           ValueCategory = prvalue
# 2998|     getStmt(96): [DoStmt] do (...) ...
# 3000|       getCondition(): [Literal] 0
# 3000|           Type = [IntType] int
# 3000|           Value = [Literal] 0
# 3000|           ValueCategory = prvalue
# 2998|       getStmt(): [BlockStmt] { ... }
# 2999|         getStmt(0): [DeclStmt] declaration
# 2999|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x96
# 2999|               Type = [Struct] String
# 2999|             getVariable().getInitializer(): [Initializer] initializer for x96
# 2999|               getExpr(): [ConstructorCall] call to String
# 2999|                   Type = [VoidType] void
# 2999|                   ValueCategory = prvalue
# 3000|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3000|             Type = [VoidType] void
# 3000|             ValueCategory = prvalue
# 3000|           getQualifier(): [VariableAccess] x96
# 3000|               Type = [Struct] String
# 3000|               ValueCategory = lvalue
# 3000|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3000|           Conversion = [BoolConversion] conversion to bool
# 3000|           Type = [BoolType] bool
# 3000|           Value = [CStyleCast] 0
# 3000|           ValueCategory = prvalue
# 3001|     getStmt(97): [DoStmt] do (...) ...
# 3003|       getCondition(): [Literal] 0
# 3003|           Type = [IntType] int
# 3003|           Value = [Literal] 0
# 3003|           ValueCategory = prvalue
# 3001|       getStmt(): [BlockStmt] { ... }
# 3002|         getStmt(0): [DeclStmt] declaration
# 3002|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x97
# 3002|               Type = [Struct] String
# 3002|             getVariable().getInitializer(): [Initializer] initializer for x97
# 3002|               getExpr(): [ConstructorCall] call to String
# 3002|                   Type = [VoidType] void
# 3002|                   ValueCategory = prvalue
# 3003|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3003|             Type = [VoidType] void
# 3003|             ValueCategory = prvalue
# 3003|           getQualifier(): [VariableAccess] x97
# 3003|               Type = [Struct] String
# 3003|               ValueCategory = lvalue
# 3003|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3003|           Conversion = [BoolConversion] conversion to bool
# 3003|           Type = [BoolType] bool
# 3003|           Value = [CStyleCast] 0
# 3003|           ValueCategory = prvalue
# 3004|     getStmt(98): [DoStmt] do (...) ...
# 3006|       getCondition(): [Literal] 0
# 3006|           Type = [IntType] int
# 3006|           Value = [Literal] 0
# 3006|           ValueCategory = prvalue
# 3004|       getStmt(): [BlockStmt] { ... }
# 3005|         getStmt(0): [DeclStmt] declaration
# 3005|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x98
# 3005|               Type = [Struct] String
# 3005|             getVariable().getInitializer(): [Initializer] initializer for x98
# 3005|               getExpr(): [ConstructorCall] call to String
# 3005|                   Type = [VoidType] void
# 3005|                   ValueCategory = prvalue
# 3006|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3006|             Type = [VoidType] void
# 3006|             ValueCategory = prvalue
# 3006|           getQualifier(): [VariableAccess] x98
# 3006|               Type = [Struct] String
# 3006|               ValueCategory = lvalue
# 3006|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3006|           Conversion = [BoolConversion] conversion to bool
# 3006|           Type = [BoolType] bool
# 3006|           Value = [CStyleCast] 0
# 3006|           ValueCategory = prvalue
# 3007|     getStmt(99): [DoStmt] do (...) ...
# 3009|       getCondition(): [Literal] 0
# 3009|           Type = [IntType] int
# 3009|           Value = [Literal] 0
# 3009|           ValueCategory = prvalue
# 3007|       getStmt(): [BlockStmt] { ... }
# 3008|         getStmt(0): [DeclStmt] declaration
# 3008|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x99
# 3008|               Type = [Struct] String
# 3008|             getVariable().getInitializer(): [Initializer] initializer for x99
# 3008|               getExpr(): [ConstructorCall] call to String
# 3008|                   Type = [VoidType] void
# 3008|                   ValueCategory = prvalue
# 3009|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3009|             Type = [VoidType] void
# 3009|             ValueCategory = prvalue
# 3009|           getQualifier(): [VariableAccess] x99
# 3009|               Type = [Struct] String
# 3009|               ValueCategory = lvalue
# 3009|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3009|           Conversion = [BoolConversion] conversion to bool
# 3009|           Type = [BoolType] bool
# 3009|           Value = [CStyleCast] 0
# 3009|           ValueCategory = prvalue
# 3010|     getStmt(100): [DoStmt] do (...) ...
# 3012|       getCondition(): [Literal] 0
# 3012|           Type = [IntType] int
# 3012|           Value = [Literal] 0
# 3012|           ValueCategory = prvalue
# 3010|       getStmt(): [BlockStmt] { ... }
# 3011|         getStmt(0): [DeclStmt] declaration
# 3011|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x100
# 3011|               Type = [Struct] String
# 3011|             getVariable().getInitializer(): [Initializer] initializer for x100
# 3011|               getExpr(): [ConstructorCall] call to String
# 3011|                   Type = [VoidType] void
# 3011|                   ValueCategory = prvalue
# 3012|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3012|             Type = [VoidType] void
# 3012|             ValueCategory = prvalue
# 3012|           getQualifier(): [VariableAccess] x100
# 3012|               Type = [Struct] String
# 3012|               ValueCategory = lvalue
# 3012|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3012|           Conversion = [BoolConversion] conversion to bool
# 3012|           Type = [BoolType] bool
# 3012|           Value = [CStyleCast] 0
# 3012|           ValueCategory = prvalue
# 3013|     getStmt(101): [DoStmt] do (...) ...
# 3015|       getCondition(): [Literal] 0
# 3015|           Type = [IntType] int
# 3015|           Value = [Literal] 0
# 3015|           ValueCategory = prvalue
# 3013|       getStmt(): [BlockStmt] { ... }
# 3014|         getStmt(0): [DeclStmt] declaration
# 3014|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x101
# 3014|               Type = [Struct] String
# 3014|             getVariable().getInitializer(): [Initializer] initializer for x101
# 3014|               getExpr(): [ConstructorCall] call to String
# 3014|                   Type = [VoidType] void
# 3014|                   ValueCategory = prvalue
# 3015|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3015|             Type = [VoidType] void
# 3015|             ValueCategory = prvalue
# 3015|           getQualifier(): [VariableAccess] x101
# 3015|               Type = [Struct] String
# 3015|               ValueCategory = lvalue
# 3015|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3015|           Conversion = [BoolConversion] conversion to bool
# 3015|           Type = [BoolType] bool
# 3015|           Value = [CStyleCast] 0
# 3015|           ValueCategory = prvalue
# 3016|     getStmt(102): [DoStmt] do (...) ...
# 3018|       getCondition(): [Literal] 0
# 3018|           Type = [IntType] int
# 3018|           Value = [Literal] 0
# 3018|           ValueCategory = prvalue
# 3016|       getStmt(): [BlockStmt] { ... }
# 3017|         getStmt(0): [DeclStmt] declaration
# 3017|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x102
# 3017|               Type = [Struct] String
# 3017|             getVariable().getInitializer(): [Initializer] initializer for x102
# 3017|               getExpr(): [ConstructorCall] call to String
# 3017|                   Type = [VoidType] void
# 3017|                   ValueCategory = prvalue
# 3018|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3018|             Type = [VoidType] void
# 3018|             ValueCategory = prvalue
# 3018|           getQualifier(): [VariableAccess] x102
# 3018|               Type = [Struct] String
# 3018|               ValueCategory = lvalue
# 3018|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3018|           Conversion = [BoolConversion] conversion to bool
# 3018|           Type = [BoolType] bool
# 3018|           Value = [CStyleCast] 0
# 3018|           ValueCategory = prvalue
# 3019|     getStmt(103): [DoStmt] do (...) ...
# 3021|       getCondition(): [Literal] 0
# 3021|           Type = [IntType] int
# 3021|           Value = [Literal] 0
# 3021|           ValueCategory = prvalue
# 3019|       getStmt(): [BlockStmt] { ... }
# 3020|         getStmt(0): [DeclStmt] declaration
# 3020|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x103
# 3020|               Type = [Struct] String
# 3020|             getVariable().getInitializer(): [Initializer] initializer for x103
# 3020|               getExpr(): [ConstructorCall] call to String
# 3020|                   Type = [VoidType] void
# 3020|                   ValueCategory = prvalue
# 3021|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3021|             Type = [VoidType] void
# 3021|             ValueCategory = prvalue
# 3021|           getQualifier(): [VariableAccess] x103
# 3021|               Type = [Struct] String
# 3021|               ValueCategory = lvalue
# 3021|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3021|           Conversion = [BoolConversion] conversion to bool
# 3021|           Type = [BoolType] bool
# 3021|           Value = [CStyleCast] 0
# 3021|           ValueCategory = prvalue
# 3022|     getStmt(104): [DoStmt] do (...) ...
# 3024|       getCondition(): [Literal] 0
# 3024|           Type = [IntType] int
# 3024|           Value = [Literal] 0
# 3024|           ValueCategory = prvalue
# 3022|       getStmt(): [BlockStmt] { ... }
# 3023|         getStmt(0): [DeclStmt] declaration
# 3023|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x104
# 3023|               Type = [Struct] String
# 3023|             getVariable().getInitializer(): [Initializer] initializer for x104
# 3023|               getExpr(): [ConstructorCall] call to String
# 3023|                   Type = [VoidType] void
# 3023|                   ValueCategory = prvalue
# 3024|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3024|             Type = [VoidType] void
# 3024|             ValueCategory = prvalue
# 3024|           getQualifier(): [VariableAccess] x104
# 3024|               Type = [Struct] String
# 3024|               ValueCategory = lvalue
# 3024|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3024|           Conversion = [BoolConversion] conversion to bool
# 3024|           Type = [BoolType] bool
# 3024|           Value = [CStyleCast] 0
# 3024|           ValueCategory = prvalue
# 3025|     getStmt(105): [DoStmt] do (...) ...
# 3027|       getCondition(): [Literal] 0
# 3027|           Type = [IntType] int
# 3027|           Value = [Literal] 0
# 3027|           ValueCategory = prvalue
# 3025|       getStmt(): [BlockStmt] { ... }
# 3026|         getStmt(0): [DeclStmt] declaration
# 3026|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x105
# 3026|               Type = [Struct] String
# 3026|             getVariable().getInitializer(): [Initializer] initializer for x105
# 3026|               getExpr(): [ConstructorCall] call to String
# 3026|                   Type = [VoidType] void
# 3026|                   ValueCategory = prvalue
# 3027|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3027|             Type = [VoidType] void
# 3027|             ValueCategory = prvalue
# 3027|           getQualifier(): [VariableAccess] x105
# 3027|               Type = [Struct] String
# 3027|               ValueCategory = lvalue
# 3027|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3027|           Conversion = [BoolConversion] conversion to bool
# 3027|           Type = [BoolType] bool
# 3027|           Value = [CStyleCast] 0
# 3027|           ValueCategory = prvalue
# 3028|     getStmt(106): [DoStmt] do (...) ...
# 3030|       getCondition(): [Literal] 0
# 3030|           Type = [IntType] int
# 3030|           Value = [Literal] 0
# 3030|           ValueCategory = prvalue
# 3028|       getStmt(): [BlockStmt] { ... }
# 3029|         getStmt(0): [DeclStmt] declaration
# 3029|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x106
# 3029|               Type = [Struct] String
# 3029|             getVariable().getInitializer(): [Initializer] initializer for x106
# 3029|               getExpr(): [ConstructorCall] call to String
# 3029|                   Type = [VoidType] void
# 3029|                   ValueCategory = prvalue
# 3030|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3030|             Type = [VoidType] void
# 3030|             ValueCategory = prvalue
# 3030|           getQualifier(): [VariableAccess] x106
# 3030|               Type = [Struct] String
# 3030|               ValueCategory = lvalue
# 3030|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3030|           Conversion = [BoolConversion] conversion to bool
# 3030|           Type = [BoolType] bool
# 3030|           Value = [CStyleCast] 0
# 3030|           ValueCategory = prvalue
# 3031|     getStmt(107): [DoStmt] do (...) ...
# 3033|       getCondition(): [Literal] 0
# 3033|           Type = [IntType] int
# 3033|           Value = [Literal] 0
# 3033|           ValueCategory = prvalue
# 3031|       getStmt(): [BlockStmt] { ... }
# 3032|         getStmt(0): [DeclStmt] declaration
# 3032|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x107
# 3032|               Type = [Struct] String
# 3032|             getVariable().getInitializer(): [Initializer] initializer for x107
# 3032|               getExpr(): [ConstructorCall] call to String
# 3032|                   Type = [VoidType] void
# 3032|                   ValueCategory = prvalue
# 3033|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3033|             Type = [VoidType] void
# 3033|             ValueCategory = prvalue
# 3033|           getQualifier(): [VariableAccess] x107
# 3033|               Type = [Struct] String
# 3033|               ValueCategory = lvalue
# 3033|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3033|           Conversion = [BoolConversion] conversion to bool
# 3033|           Type = [BoolType] bool
# 3033|           Value = [CStyleCast] 0
# 3033|           ValueCategory = prvalue
# 3034|     getStmt(108): [DoStmt] do (...) ...
# 3036|       getCondition(): [Literal] 0
# 3036|           Type = [IntType] int
# 3036|           Value = [Literal] 0
# 3036|           ValueCategory = prvalue
# 3034|       getStmt(): [BlockStmt] { ... }
# 3035|         getStmt(0): [DeclStmt] declaration
# 3035|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x108
# 3035|               Type = [Struct] String
# 3035|             getVariable().getInitializer(): [Initializer] initializer for x108
# 3035|               getExpr(): [ConstructorCall] call to String
# 3035|                   Type = [VoidType] void
# 3035|                   ValueCategory = prvalue
# 3036|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3036|             Type = [VoidType] void
# 3036|             ValueCategory = prvalue
# 3036|           getQualifier(): [VariableAccess] x108
# 3036|               Type = [Struct] String
# 3036|               ValueCategory = lvalue
# 3036|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3036|           Conversion = [BoolConversion] conversion to bool
# 3036|           Type = [BoolType] bool
# 3036|           Value = [CStyleCast] 0
# 3036|           ValueCategory = prvalue
# 3037|     getStmt(109): [DoStmt] do (...) ...
# 3039|       getCondition(): [Literal] 0
# 3039|           Type = [IntType] int
# 3039|           Value = [Literal] 0
# 3039|           ValueCategory = prvalue
# 3037|       getStmt(): [BlockStmt] { ... }
# 3038|         getStmt(0): [DeclStmt] declaration
# 3038|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x109
# 3038|               Type = [Struct] String
# 3038|             getVariable().getInitializer(): [Initializer] initializer for x109
# 3038|               getExpr(): [ConstructorCall] call to String
# 3038|                   Type = [VoidType] void
# 3038|                   ValueCategory = prvalue
# 3039|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3039|             Type = [VoidType] void
# 3039|             ValueCategory = prvalue
# 3039|           getQualifier(): [VariableAccess] x109
# 3039|               Type = [Struct] String
# 3039|               ValueCategory = lvalue
# 3039|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3039|           Conversion = [BoolConversion] conversion to bool
# 3039|           Type = [BoolType] bool
# 3039|           Value = [CStyleCast] 0
# 3039|           ValueCategory = prvalue
# 3040|     getStmt(110): [DoStmt] do (...) ...
# 3042|       getCondition(): [Literal] 0
# 3042|           Type = [IntType] int
# 3042|           Value = [Literal] 0
# 3042|           ValueCategory = prvalue
# 3040|       getStmt(): [BlockStmt] { ... }
# 3041|         getStmt(0): [DeclStmt] declaration
# 3041|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x110
# 3041|               Type = [Struct] String
# 3041|             getVariable().getInitializer(): [Initializer] initializer for x110
# 3041|               getExpr(): [ConstructorCall] call to String
# 3041|                   Type = [VoidType] void
# 3041|                   ValueCategory = prvalue
# 3042|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3042|             Type = [VoidType] void
# 3042|             ValueCategory = prvalue
# 3042|           getQualifier(): [VariableAccess] x110
# 3042|               Type = [Struct] String
# 3042|               ValueCategory = lvalue
# 3042|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3042|           Conversion = [BoolConversion] conversion to bool
# 3042|           Type = [BoolType] bool
# 3042|           Value = [CStyleCast] 0
# 3042|           ValueCategory = prvalue
# 3043|     getStmt(111): [DoStmt] do (...) ...
# 3045|       getCondition(): [Literal] 0
# 3045|           Type = [IntType] int
# 3045|           Value = [Literal] 0
# 3045|           ValueCategory = prvalue
# 3043|       getStmt(): [BlockStmt] { ... }
# 3044|         getStmt(0): [DeclStmt] declaration
# 3044|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x111
# 3044|               Type = [Struct] String
# 3044|             getVariable().getInitializer(): [Initializer] initializer for x111
# 3044|               getExpr(): [ConstructorCall] call to String
# 3044|                   Type = [VoidType] void
# 3044|                   ValueCategory = prvalue
# 3045|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3045|             Type = [VoidType] void
# 3045|             ValueCategory = prvalue
# 3045|           getQualifier(): [VariableAccess] x111
# 3045|               Type = [Struct] String
# 3045|               ValueCategory = lvalue
# 3045|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3045|           Conversion = [BoolConversion] conversion to bool
# 3045|           Type = [BoolType] bool
# 3045|           Value = [CStyleCast] 0
# 3045|           ValueCategory = prvalue
# 3046|     getStmt(112): [DoStmt] do (...) ...
# 3048|       getCondition(): [Literal] 0
# 3048|           Type = [IntType] int
# 3048|           Value = [Literal] 0
# 3048|           ValueCategory = prvalue
# 3046|       getStmt(): [BlockStmt] { ... }
# 3047|         getStmt(0): [DeclStmt] declaration
# 3047|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x112
# 3047|               Type = [Struct] String
# 3047|             getVariable().getInitializer(): [Initializer] initializer for x112
# 3047|               getExpr(): [ConstructorCall] call to String
# 3047|                   Type = [VoidType] void
# 3047|                   ValueCategory = prvalue
# 3048|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3048|             Type = [VoidType] void
# 3048|             ValueCategory = prvalue
# 3048|           getQualifier(): [VariableAccess] x112
# 3048|               Type = [Struct] String
# 3048|               ValueCategory = lvalue
# 3048|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3048|           Conversion = [BoolConversion] conversion to bool
# 3048|           Type = [BoolType] bool
# 3048|           Value = [CStyleCast] 0
# 3048|           ValueCategory = prvalue
# 3049|     getStmt(113): [DoStmt] do (...) ...
# 3051|       getCondition(): [Literal] 0
# 3051|           Type = [IntType] int
# 3051|           Value = [Literal] 0
# 3051|           ValueCategory = prvalue
# 3049|       getStmt(): [BlockStmt] { ... }
# 3050|         getStmt(0): [DeclStmt] declaration
# 3050|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x113
# 3050|               Type = [Struct] String
# 3050|             getVariable().getInitializer(): [Initializer] initializer for x113
# 3050|               getExpr(): [ConstructorCall] call to String
# 3050|                   Type = [VoidType] void
# 3050|                   ValueCategory = prvalue
# 3051|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3051|             Type = [VoidType] void
# 3051|             ValueCategory = prvalue
# 3051|           getQualifier(): [VariableAccess] x113
# 3051|               Type = [Struct] String
# 3051|               ValueCategory = lvalue
# 3051|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3051|           Conversion = [BoolConversion] conversion to bool
# 3051|           Type = [BoolType] bool
# 3051|           Value = [CStyleCast] 0
# 3051|           ValueCategory = prvalue
# 3052|     getStmt(114): [DoStmt] do (...) ...
# 3054|       getCondition(): [Literal] 0
# 3054|           Type = [IntType] int
# 3054|           Value = [Literal] 0
# 3054|           ValueCategory = prvalue
# 3052|       getStmt(): [BlockStmt] { ... }
# 3053|         getStmt(0): [DeclStmt] declaration
# 3053|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x114
# 3053|               Type = [Struct] String
# 3053|             getVariable().getInitializer(): [Initializer] initializer for x114
# 3053|               getExpr(): [ConstructorCall] call to String
# 3053|                   Type = [VoidType] void
# 3053|                   ValueCategory = prvalue
# 3054|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3054|             Type = [VoidType] void
# 3054|             ValueCategory = prvalue
# 3054|           getQualifier(): [VariableAccess] x114
# 3054|               Type = [Struct] String
# 3054|               ValueCategory = lvalue
# 3054|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3054|           Conversion = [BoolConversion] conversion to bool
# 3054|           Type = [BoolType] bool
# 3054|           Value = [CStyleCast] 0
# 3054|           ValueCategory = prvalue
# 3055|     getStmt(115): [DoStmt] do (...) ...
# 3057|       getCondition(): [Literal] 0
# 3057|           Type = [IntType] int
# 3057|           Value = [Literal] 0
# 3057|           ValueCategory = prvalue
# 3055|       getStmt(): [BlockStmt] { ... }
# 3056|         getStmt(0): [DeclStmt] declaration
# 3056|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x115
# 3056|               Type = [Struct] String
# 3056|             getVariable().getInitializer(): [Initializer] initializer for x115
# 3056|               getExpr(): [ConstructorCall] call to String
# 3056|                   Type = [VoidType] void
# 3056|                   ValueCategory = prvalue
# 3057|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3057|             Type = [VoidType] void
# 3057|             ValueCategory = prvalue
# 3057|           getQualifier(): [VariableAccess] x115
# 3057|               Type = [Struct] String
# 3057|               ValueCategory = lvalue
# 3057|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3057|           Conversion = [BoolConversion] conversion to bool
# 3057|           Type = [BoolType] bool
# 3057|           Value = [CStyleCast] 0
# 3057|           ValueCategory = prvalue
# 3058|     getStmt(116): [DoStmt] do (...) ...
# 3060|       getCondition(): [Literal] 0
# 3060|           Type = [IntType] int
# 3060|           Value = [Literal] 0
# 3060|           ValueCategory = prvalue
# 3058|       getStmt(): [BlockStmt] { ... }
# 3059|         getStmt(0): [DeclStmt] declaration
# 3059|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x116
# 3059|               Type = [Struct] String
# 3059|             getVariable().getInitializer(): [Initializer] initializer for x116
# 3059|               getExpr(): [ConstructorCall] call to String
# 3059|                   Type = [VoidType] void
# 3059|                   ValueCategory = prvalue
# 3060|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3060|             Type = [VoidType] void
# 3060|             ValueCategory = prvalue
# 3060|           getQualifier(): [VariableAccess] x116
# 3060|               Type = [Struct] String
# 3060|               ValueCategory = lvalue
# 3060|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3060|           Conversion = [BoolConversion] conversion to bool
# 3060|           Type = [BoolType] bool
# 3060|           Value = [CStyleCast] 0
# 3060|           ValueCategory = prvalue
# 3061|     getStmt(117): [DoStmt] do (...) ...
# 3063|       getCondition(): [Literal] 0
# 3063|           Type = [IntType] int
# 3063|           Value = [Literal] 0
# 3063|           ValueCategory = prvalue
# 3061|       getStmt(): [BlockStmt] { ... }
# 3062|         getStmt(0): [DeclStmt] declaration
# 3062|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x117
# 3062|               Type = [Struct] String
# 3062|             getVariable().getInitializer(): [Initializer] initializer for x117
# 3062|               getExpr(): [ConstructorCall] call to String
# 3062|                   Type = [VoidType] void
# 3062|                   ValueCategory = prvalue
# 3063|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3063|             Type = [VoidType] void
# 3063|             ValueCategory = prvalue
# 3063|           getQualifier(): [VariableAccess] x117
# 3063|               Type = [Struct] String
# 3063|               ValueCategory = lvalue
# 3063|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3063|           Conversion = [BoolConversion] conversion to bool
# 3063|           Type = [BoolType] bool
# 3063|           Value = [CStyleCast] 0
# 3063|           ValueCategory = prvalue
# 3064|     getStmt(118): [DoStmt] do (...) ...
# 3066|       getCondition(): [Literal] 0
# 3066|           Type = [IntType] int
# 3066|           Value = [Literal] 0
# 3066|           ValueCategory = prvalue
# 3064|       getStmt(): [BlockStmt] { ... }
# 3065|         getStmt(0): [DeclStmt] declaration
# 3065|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x118
# 3065|               Type = [Struct] String
# 3065|             getVariable().getInitializer(): [Initializer] initializer for x118
# 3065|               getExpr(): [ConstructorCall] call to String
# 3065|                   Type = [VoidType] void
# 3065|                   ValueCategory = prvalue
# 3066|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3066|             Type = [VoidType] void
# 3066|             ValueCategory = prvalue
# 3066|           getQualifier(): [VariableAccess] x118
# 3066|               Type = [Struct] String
# 3066|               ValueCategory = lvalue
# 3066|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3066|           Conversion = [BoolConversion] conversion to bool
# 3066|           Type = [BoolType] bool
# 3066|           Value = [CStyleCast] 0
# 3066|           ValueCategory = prvalue
# 3067|     getStmt(119): [DoStmt] do (...) ...
# 3069|       getCondition(): [Literal] 0
# 3069|           Type = [IntType] int
# 3069|           Value = [Literal] 0
# 3069|           ValueCategory = prvalue
# 3067|       getStmt(): [BlockStmt] { ... }
# 3068|         getStmt(0): [DeclStmt] declaration
# 3068|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x119
# 3068|               Type = [Struct] String
# 3068|             getVariable().getInitializer(): [Initializer] initializer for x119
# 3068|               getExpr(): [ConstructorCall] call to String
# 3068|                   Type = [VoidType] void
# 3068|                   ValueCategory = prvalue
# 3069|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3069|             Type = [VoidType] void
# 3069|             ValueCategory = prvalue
# 3069|           getQualifier(): [VariableAccess] x119
# 3069|               Type = [Struct] String
# 3069|               ValueCategory = lvalue
# 3069|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3069|           Conversion = [BoolConversion] conversion to bool
# 3069|           Type = [BoolType] bool
# 3069|           Value = [CStyleCast] 0
# 3069|           ValueCategory = prvalue
# 3070|     getStmt(120): [DoStmt] do (...) ...
# 3072|       getCondition(): [Literal] 0
# 3072|           Type = [IntType] int
# 3072|           Value = [Literal] 0
# 3072|           ValueCategory = prvalue
# 3070|       getStmt(): [BlockStmt] { ... }
# 3071|         getStmt(0): [DeclStmt] declaration
# 3071|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x120
# 3071|               Type = [Struct] String
# 3071|             getVariable().getInitializer(): [Initializer] initializer for x120
# 3071|               getExpr(): [ConstructorCall] call to String
# 3071|                   Type = [VoidType] void
# 3071|                   ValueCategory = prvalue
# 3072|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3072|             Type = [VoidType] void
# 3072|             ValueCategory = prvalue
# 3072|           getQualifier(): [VariableAccess] x120
# 3072|               Type = [Struct] String
# 3072|               ValueCategory = lvalue
# 3072|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3072|           Conversion = [BoolConversion] conversion to bool
# 3072|           Type = [BoolType] bool
# 3072|           Value = [CStyleCast] 0
# 3072|           ValueCategory = prvalue
# 3073|     getStmt(121): [DoStmt] do (...) ...
# 3075|       getCondition(): [Literal] 0
# 3075|           Type = [IntType] int
# 3075|           Value = [Literal] 0
# 3075|           ValueCategory = prvalue
# 3073|       getStmt(): [BlockStmt] { ... }
# 3074|         getStmt(0): [DeclStmt] declaration
# 3074|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x121
# 3074|               Type = [Struct] String
# 3074|             getVariable().getInitializer(): [Initializer] initializer for x121
# 3074|               getExpr(): [ConstructorCall] call to String
# 3074|                   Type = [VoidType] void
# 3074|                   ValueCategory = prvalue
# 3075|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3075|             Type = [VoidType] void
# 3075|             ValueCategory = prvalue
# 3075|           getQualifier(): [VariableAccess] x121
# 3075|               Type = [Struct] String
# 3075|               ValueCategory = lvalue
# 3075|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3075|           Conversion = [BoolConversion] conversion to bool
# 3075|           Type = [BoolType] bool
# 3075|           Value = [CStyleCast] 0
# 3075|           ValueCategory = prvalue
# 3076|     getStmt(122): [DoStmt] do (...) ...
# 3078|       getCondition(): [Literal] 0
# 3078|           Type = [IntType] int
# 3078|           Value = [Literal] 0
# 3078|           ValueCategory = prvalue
# 3076|       getStmt(): [BlockStmt] { ... }
# 3077|         getStmt(0): [DeclStmt] declaration
# 3077|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x122
# 3077|               Type = [Struct] String
# 3077|             getVariable().getInitializer(): [Initializer] initializer for x122
# 3077|               getExpr(): [ConstructorCall] call to String
# 3077|                   Type = [VoidType] void
# 3077|                   ValueCategory = prvalue
# 3078|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3078|             Type = [VoidType] void
# 3078|             ValueCategory = prvalue
# 3078|           getQualifier(): [VariableAccess] x122
# 3078|               Type = [Struct] String
# 3078|               ValueCategory = lvalue
# 3078|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3078|           Conversion = [BoolConversion] conversion to bool
# 3078|           Type = [BoolType] bool
# 3078|           Value = [CStyleCast] 0
# 3078|           ValueCategory = prvalue
# 3079|     getStmt(123): [DoStmt] do (...) ...
# 3081|       getCondition(): [Literal] 0
# 3081|           Type = [IntType] int
# 3081|           Value = [Literal] 0
# 3081|           ValueCategory = prvalue
# 3079|       getStmt(): [BlockStmt] { ... }
# 3080|         getStmt(0): [DeclStmt] declaration
# 3080|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x123
# 3080|               Type = [Struct] String
# 3080|             getVariable().getInitializer(): [Initializer] initializer for x123
# 3080|               getExpr(): [ConstructorCall] call to String
# 3080|                   Type = [VoidType] void
# 3080|                   ValueCategory = prvalue
# 3081|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3081|             Type = [VoidType] void
# 3081|             ValueCategory = prvalue
# 3081|           getQualifier(): [VariableAccess] x123
# 3081|               Type = [Struct] String
# 3081|               ValueCategory = lvalue
# 3081|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3081|           Conversion = [BoolConversion] conversion to bool
# 3081|           Type = [BoolType] bool
# 3081|           Value = [CStyleCast] 0
# 3081|           ValueCategory = prvalue
# 3082|     getStmt(124): [DoStmt] do (...) ...
# 3084|       getCondition(): [Literal] 0
# 3084|           Type = [IntType] int
# 3084|           Value = [Literal] 0
# 3084|           ValueCategory = prvalue
# 3082|       getStmt(): [BlockStmt] { ... }
# 3083|         getStmt(0): [DeclStmt] declaration
# 3083|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x124
# 3083|               Type = [Struct] String
# 3083|             getVariable().getInitializer(): [Initializer] initializer for x124
# 3083|               getExpr(): [ConstructorCall] call to String
# 3083|                   Type = [VoidType] void
# 3083|                   ValueCategory = prvalue
# 3084|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3084|             Type = [VoidType] void
# 3084|             ValueCategory = prvalue
# 3084|           getQualifier(): [VariableAccess] x124
# 3084|               Type = [Struct] String
# 3084|               ValueCategory = lvalue
# 3084|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3084|           Conversion = [BoolConversion] conversion to bool
# 3084|           Type = [BoolType] bool
# 3084|           Value = [CStyleCast] 0
# 3084|           ValueCategory = prvalue
# 3085|     getStmt(125): [DoStmt] do (...) ...
# 3087|       getCondition(): [Literal] 0
# 3087|           Type = [IntType] int
# 3087|           Value = [Literal] 0
# 3087|           ValueCategory = prvalue
# 3085|       getStmt(): [BlockStmt] { ... }
# 3086|         getStmt(0): [DeclStmt] declaration
# 3086|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x125
# 3086|               Type = [Struct] String
# 3086|             getVariable().getInitializer(): [Initializer] initializer for x125
# 3086|               getExpr(): [ConstructorCall] call to String
# 3086|                   Type = [VoidType] void
# 3086|                   ValueCategory = prvalue
# 3087|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3087|             Type = [VoidType] void
# 3087|             ValueCategory = prvalue
# 3087|           getQualifier(): [VariableAccess] x125
# 3087|               Type = [Struct] String
# 3087|               ValueCategory = lvalue
# 3087|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3087|           Conversion = [BoolConversion] conversion to bool
# 3087|           Type = [BoolType] bool
# 3087|           Value = [CStyleCast] 0
# 3087|           ValueCategory = prvalue
# 3088|     getStmt(126): [DoStmt] do (...) ...
# 3090|       getCondition(): [Literal] 0
# 3090|           Type = [IntType] int
# 3090|           Value = [Literal] 0
# 3090|           ValueCategory = prvalue
# 3088|       getStmt(): [BlockStmt] { ... }
# 3089|         getStmt(0): [DeclStmt] declaration
# 3089|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x126
# 3089|               Type = [Struct] String
# 3089|             getVariable().getInitializer(): [Initializer] initializer for x126
# 3089|               getExpr(): [ConstructorCall] call to String
# 3089|                   Type = [VoidType] void
# 3089|                   ValueCategory = prvalue
# 3090|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3090|             Type = [VoidType] void
# 3090|             ValueCategory = prvalue
# 3090|           getQualifier(): [VariableAccess] x126
# 3090|               Type = [Struct] String
# 3090|               ValueCategory = lvalue
# 3090|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3090|           Conversion = [BoolConversion] conversion to bool
# 3090|           Type = [BoolType] bool
# 3090|           Value = [CStyleCast] 0
# 3090|           ValueCategory = prvalue
# 3091|     getStmt(127): [DoStmt] do (...) ...
# 3093|       getCondition(): [Literal] 0
# 3093|           Type = [IntType] int
# 3093|           Value = [Literal] 0
# 3093|           ValueCategory = prvalue
# 3091|       getStmt(): [BlockStmt] { ... }
# 3092|         getStmt(0): [DeclStmt] declaration
# 3092|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x127
# 3092|               Type = [Struct] String
# 3092|             getVariable().getInitializer(): [Initializer] initializer for x127
# 3092|               getExpr(): [ConstructorCall] call to String
# 3092|                   Type = [VoidType] void
# 3092|                   ValueCategory = prvalue
# 3093|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3093|             Type = [VoidType] void
# 3093|             ValueCategory = prvalue
# 3093|           getQualifier(): [VariableAccess] x127
# 3093|               Type = [Struct] String
# 3093|               ValueCategory = lvalue
# 3093|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3093|           Conversion = [BoolConversion] conversion to bool
# 3093|           Type = [BoolType] bool
# 3093|           Value = [CStyleCast] 0
# 3093|           ValueCategory = prvalue
# 3094|     getStmt(128): [DoStmt] do (...) ...
# 3096|       getCondition(): [Literal] 0
# 3096|           Type = [IntType] int
# 3096|           Value = [Literal] 0
# 3096|           ValueCategory = prvalue
# 3094|       getStmt(): [BlockStmt] { ... }
# 3095|         getStmt(0): [DeclStmt] declaration
# 3095|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x128
# 3095|               Type = [Struct] String
# 3095|             getVariable().getInitializer(): [Initializer] initializer for x128
# 3095|               getExpr(): [ConstructorCall] call to String
# 3095|                   Type = [VoidType] void
# 3095|                   ValueCategory = prvalue
# 3096|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3096|             Type = [VoidType] void
# 3096|             ValueCategory = prvalue
# 3096|           getQualifier(): [VariableAccess] x128
# 3096|               Type = [Struct] String
# 3096|               ValueCategory = lvalue
# 3096|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3096|           Conversion = [BoolConversion] conversion to bool
# 3096|           Type = [BoolType] bool
# 3096|           Value = [CStyleCast] 0
# 3096|           ValueCategory = prvalue
# 3097|     getStmt(129): [DoStmt] do (...) ...
# 3099|       getCondition(): [Literal] 0
# 3099|           Type = [IntType] int
# 3099|           Value = [Literal] 0
# 3099|           ValueCategory = prvalue
# 3097|       getStmt(): [BlockStmt] { ... }
# 3098|         getStmt(0): [DeclStmt] declaration
# 3098|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x129
# 3098|               Type = [Struct] String
# 3098|             getVariable().getInitializer(): [Initializer] initializer for x129
# 3098|               getExpr(): [ConstructorCall] call to String
# 3098|                   Type = [VoidType] void
# 3098|                   ValueCategory = prvalue
# 3099|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3099|             Type = [VoidType] void
# 3099|             ValueCategory = prvalue
# 3099|           getQualifier(): [VariableAccess] x129
# 3099|               Type = [Struct] String
# 3099|               ValueCategory = lvalue
# 3099|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3099|           Conversion = [BoolConversion] conversion to bool
# 3099|           Type = [BoolType] bool
# 3099|           Value = [CStyleCast] 0
# 3099|           ValueCategory = prvalue
# 3100|     getStmt(130): [DoStmt] do (...) ...
# 3102|       getCondition(): [Literal] 0
# 3102|           Type = [IntType] int
# 3102|           Value = [Literal] 0
# 3102|           ValueCategory = prvalue
# 3100|       getStmt(): [BlockStmt] { ... }
# 3101|         getStmt(0): [DeclStmt] declaration
# 3101|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x130
# 3101|               Type = [Struct] String
# 3101|             getVariable().getInitializer(): [Initializer] initializer for x130
# 3101|               getExpr(): [ConstructorCall] call to String
# 3101|                   Type = [VoidType] void
# 3101|                   ValueCategory = prvalue
# 3102|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3102|             Type = [VoidType] void
# 3102|             ValueCategory = prvalue
# 3102|           getQualifier(): [VariableAccess] x130
# 3102|               Type = [Struct] String
# 3102|               ValueCategory = lvalue
# 3102|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3102|           Conversion = [BoolConversion] conversion to bool
# 3102|           Type = [BoolType] bool
# 3102|           Value = [CStyleCast] 0
# 3102|           ValueCategory = prvalue
# 3103|     getStmt(131): [DoStmt] do (...) ...
# 3105|       getCondition(): [Literal] 0
# 3105|           Type = [IntType] int
# 3105|           Value = [Literal] 0
# 3105|           ValueCategory = prvalue
# 3103|       getStmt(): [BlockStmt] { ... }
# 3104|         getStmt(0): [DeclStmt] declaration
# 3104|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x131
# 3104|               Type = [Struct] String
# 3104|             getVariable().getInitializer(): [Initializer] initializer for x131
# 3104|               getExpr(): [ConstructorCall] call to String
# 3104|                   Type = [VoidType] void
# 3104|                   ValueCategory = prvalue
# 3105|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3105|             Type = [VoidType] void
# 3105|             ValueCategory = prvalue
# 3105|           getQualifier(): [VariableAccess] x131
# 3105|               Type = [Struct] String
# 3105|               ValueCategory = lvalue
# 3105|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3105|           Conversion = [BoolConversion] conversion to bool
# 3105|           Type = [BoolType] bool
# 3105|           Value = [CStyleCast] 0
# 3105|           ValueCategory = prvalue
# 3106|     getStmt(132): [DoStmt] do (...) ...
# 3108|       getCondition(): [Literal] 0
# 3108|           Type = [IntType] int
# 3108|           Value = [Literal] 0
# 3108|           ValueCategory = prvalue
# 3106|       getStmt(): [BlockStmt] { ... }
# 3107|         getStmt(0): [DeclStmt] declaration
# 3107|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x132
# 3107|               Type = [Struct] String
# 3107|             getVariable().getInitializer(): [Initializer] initializer for x132
# 3107|               getExpr(): [ConstructorCall] call to String
# 3107|                   Type = [VoidType] void
# 3107|                   ValueCategory = prvalue
# 3108|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3108|             Type = [VoidType] void
# 3108|             ValueCategory = prvalue
# 3108|           getQualifier(): [VariableAccess] x132
# 3108|               Type = [Struct] String
# 3108|               ValueCategory = lvalue
# 3108|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3108|           Conversion = [BoolConversion] conversion to bool
# 3108|           Type = [BoolType] bool
# 3108|           Value = [CStyleCast] 0
# 3108|           ValueCategory = prvalue
# 3109|     getStmt(133): [DoStmt] do (...) ...
# 3111|       getCondition(): [Literal] 0
# 3111|           Type = [IntType] int
# 3111|           Value = [Literal] 0
# 3111|           ValueCategory = prvalue
# 3109|       getStmt(): [BlockStmt] { ... }
# 3110|         getStmt(0): [DeclStmt] declaration
# 3110|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x133
# 3110|               Type = [Struct] String
# 3110|             getVariable().getInitializer(): [Initializer] initializer for x133
# 3110|               getExpr(): [ConstructorCall] call to String
# 3110|                   Type = [VoidType] void
# 3110|                   ValueCategory = prvalue
# 3111|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3111|             Type = [VoidType] void
# 3111|             ValueCategory = prvalue
# 3111|           getQualifier(): [VariableAccess] x133
# 3111|               Type = [Struct] String
# 3111|               ValueCategory = lvalue
# 3111|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3111|           Conversion = [BoolConversion] conversion to bool
# 3111|           Type = [BoolType] bool
# 3111|           Value = [CStyleCast] 0
# 3111|           ValueCategory = prvalue
# 3112|     getStmt(134): [DoStmt] do (...) ...
# 3114|       getCondition(): [Literal] 0
# 3114|           Type = [IntType] int
# 3114|           Value = [Literal] 0
# 3114|           ValueCategory = prvalue
# 3112|       getStmt(): [BlockStmt] { ... }
# 3113|         getStmt(0): [DeclStmt] declaration
# 3113|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x134
# 3113|               Type = [Struct] String
# 3113|             getVariable().getInitializer(): [Initializer] initializer for x134
# 3113|               getExpr(): [ConstructorCall] call to String
# 3113|                   Type = [VoidType] void
# 3113|                   ValueCategory = prvalue
# 3114|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3114|             Type = [VoidType] void
# 3114|             ValueCategory = prvalue
# 3114|           getQualifier(): [VariableAccess] x134
# 3114|               Type = [Struct] String
# 3114|               ValueCategory = lvalue
# 3114|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3114|           Conversion = [BoolConversion] conversion to bool
# 3114|           Type = [BoolType] bool
# 3114|           Value = [CStyleCast] 0
# 3114|           ValueCategory = prvalue
# 3115|     getStmt(135): [DoStmt] do (...) ...
# 3117|       getCondition(): [Literal] 0
# 3117|           Type = [IntType] int
# 3117|           Value = [Literal] 0
# 3117|           ValueCategory = prvalue
# 3115|       getStmt(): [BlockStmt] { ... }
# 3116|         getStmt(0): [DeclStmt] declaration
# 3116|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x135
# 3116|               Type = [Struct] String
# 3116|             getVariable().getInitializer(): [Initializer] initializer for x135
# 3116|               getExpr(): [ConstructorCall] call to String
# 3116|                   Type = [VoidType] void
# 3116|                   ValueCategory = prvalue
# 3117|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3117|             Type = [VoidType] void
# 3117|             ValueCategory = prvalue
# 3117|           getQualifier(): [VariableAccess] x135
# 3117|               Type = [Struct] String
# 3117|               ValueCategory = lvalue
# 3117|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3117|           Conversion = [BoolConversion] conversion to bool
# 3117|           Type = [BoolType] bool
# 3117|           Value = [CStyleCast] 0
# 3117|           ValueCategory = prvalue
# 3118|     getStmt(136): [DoStmt] do (...) ...
# 3120|       getCondition(): [Literal] 0
# 3120|           Type = [IntType] int
# 3120|           Value = [Literal] 0
# 3120|           ValueCategory = prvalue
# 3118|       getStmt(): [BlockStmt] { ... }
# 3119|         getStmt(0): [DeclStmt] declaration
# 3119|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x136
# 3119|               Type = [Struct] String
# 3119|             getVariable().getInitializer(): [Initializer] initializer for x136
# 3119|               getExpr(): [ConstructorCall] call to String
# 3119|                   Type = [VoidType] void
# 3119|                   ValueCategory = prvalue
# 3120|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3120|             Type = [VoidType] void
# 3120|             ValueCategory = prvalue
# 3120|           getQualifier(): [VariableAccess] x136
# 3120|               Type = [Struct] String
# 3120|               ValueCategory = lvalue
# 3120|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3120|           Conversion = [BoolConversion] conversion to bool
# 3120|           Type = [BoolType] bool
# 3120|           Value = [CStyleCast] 0
# 3120|           ValueCategory = prvalue
# 3121|     getStmt(137): [DoStmt] do (...) ...
# 3123|       getCondition(): [Literal] 0
# 3123|           Type = [IntType] int
# 3123|           Value = [Literal] 0
# 3123|           ValueCategory = prvalue
# 3121|       getStmt(): [BlockStmt] { ... }
# 3122|         getStmt(0): [DeclStmt] declaration
# 3122|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x137
# 3122|               Type = [Struct] String
# 3122|             getVariable().getInitializer(): [Initializer] initializer for x137
# 3122|               getExpr(): [ConstructorCall] call to String
# 3122|                   Type = [VoidType] void
# 3122|                   ValueCategory = prvalue
# 3123|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3123|             Type = [VoidType] void
# 3123|             ValueCategory = prvalue
# 3123|           getQualifier(): [VariableAccess] x137
# 3123|               Type = [Struct] String
# 3123|               ValueCategory = lvalue
# 3123|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3123|           Conversion = [BoolConversion] conversion to bool
# 3123|           Type = [BoolType] bool
# 3123|           Value = [CStyleCast] 0
# 3123|           ValueCategory = prvalue
# 3124|     getStmt(138): [DoStmt] do (...) ...
# 3126|       getCondition(): [Literal] 0
# 3126|           Type = [IntType] int
# 3126|           Value = [Literal] 0
# 3126|           ValueCategory = prvalue
# 3124|       getStmt(): [BlockStmt] { ... }
# 3125|         getStmt(0): [DeclStmt] declaration
# 3125|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x138
# 3125|               Type = [Struct] String
# 3125|             getVariable().getInitializer(): [Initializer] initializer for x138
# 3125|               getExpr(): [ConstructorCall] call to String
# 3125|                   Type = [VoidType] void
# 3125|                   ValueCategory = prvalue
# 3126|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3126|             Type = [VoidType] void
# 3126|             ValueCategory = prvalue
# 3126|           getQualifier(): [VariableAccess] x138
# 3126|               Type = [Struct] String
# 3126|               ValueCategory = lvalue
# 3126|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3126|           Conversion = [BoolConversion] conversion to bool
# 3126|           Type = [BoolType] bool
# 3126|           Value = [CStyleCast] 0
# 3126|           ValueCategory = prvalue
# 3127|     getStmt(139): [DoStmt] do (...) ...
# 3129|       getCondition(): [Literal] 0
# 3129|           Type = [IntType] int
# 3129|           Value = [Literal] 0
# 3129|           ValueCategory = prvalue
# 3127|       getStmt(): [BlockStmt] { ... }
# 3128|         getStmt(0): [DeclStmt] declaration
# 3128|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x139
# 3128|               Type = [Struct] String
# 3128|             getVariable().getInitializer(): [Initializer] initializer for x139
# 3128|               getExpr(): [ConstructorCall] call to String
# 3128|                   Type = [VoidType] void
# 3128|                   ValueCategory = prvalue
# 3129|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3129|             Type = [VoidType] void
# 3129|             ValueCategory = prvalue
# 3129|           getQualifier(): [VariableAccess] x139
# 3129|               Type = [Struct] String
# 3129|               ValueCategory = lvalue
# 3129|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3129|           Conversion = [BoolConversion] conversion to bool
# 3129|           Type = [BoolType] bool
# 3129|           Value = [CStyleCast] 0
# 3129|           ValueCategory = prvalue
# 3130|     getStmt(140): [DoStmt] do (...) ...
# 3132|       getCondition(): [Literal] 0
# 3132|           Type = [IntType] int
# 3132|           Value = [Literal] 0
# 3132|           ValueCategory = prvalue
# 3130|       getStmt(): [BlockStmt] { ... }
# 3131|         getStmt(0): [DeclStmt] declaration
# 3131|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x140
# 3131|               Type = [Struct] String
# 3131|             getVariable().getInitializer(): [Initializer] initializer for x140
# 3131|               getExpr(): [ConstructorCall] call to String
# 3131|                   Type = [VoidType] void
# 3131|                   ValueCategory = prvalue
# 3132|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3132|             Type = [VoidType] void
# 3132|             ValueCategory = prvalue
# 3132|           getQualifier(): [VariableAccess] x140
# 3132|               Type = [Struct] String
# 3132|               ValueCategory = lvalue
# 3132|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3132|           Conversion = [BoolConversion] conversion to bool
# 3132|           Type = [BoolType] bool
# 3132|           Value = [CStyleCast] 0
# 3132|           ValueCategory = prvalue
# 3133|     getStmt(141): [DoStmt] do (...) ...
# 3135|       getCondition(): [Literal] 0
# 3135|           Type = [IntType] int
# 3135|           Value = [Literal] 0
# 3135|           ValueCategory = prvalue
# 3133|       getStmt(): [BlockStmt] { ... }
# 3134|         getStmt(0): [DeclStmt] declaration
# 3134|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x141
# 3134|               Type = [Struct] String
# 3134|             getVariable().getInitializer(): [Initializer] initializer for x141
# 3134|               getExpr(): [ConstructorCall] call to String
# 3134|                   Type = [VoidType] void
# 3134|                   ValueCategory = prvalue
# 3135|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3135|             Type = [VoidType] void
# 3135|             ValueCategory = prvalue
# 3135|           getQualifier(): [VariableAccess] x141
# 3135|               Type = [Struct] String
# 3135|               ValueCategory = lvalue
# 3135|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3135|           Conversion = [BoolConversion] conversion to bool
# 3135|           Type = [BoolType] bool
# 3135|           Value = [CStyleCast] 0
# 3135|           ValueCategory = prvalue
# 3136|     getStmt(142): [DoStmt] do (...) ...
# 3138|       getCondition(): [Literal] 0
# 3138|           Type = [IntType] int
# 3138|           Value = [Literal] 0
# 3138|           ValueCategory = prvalue
# 3136|       getStmt(): [BlockStmt] { ... }
# 3137|         getStmt(0): [DeclStmt] declaration
# 3137|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x142
# 3137|               Type = [Struct] String
# 3137|             getVariable().getInitializer(): [Initializer] initializer for x142
# 3137|               getExpr(): [ConstructorCall] call to String
# 3137|                   Type = [VoidType] void
# 3137|                   ValueCategory = prvalue
# 3138|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3138|             Type = [VoidType] void
# 3138|             ValueCategory = prvalue
# 3138|           getQualifier(): [VariableAccess] x142
# 3138|               Type = [Struct] String
# 3138|               ValueCategory = lvalue
# 3138|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3138|           Conversion = [BoolConversion] conversion to bool
# 3138|           Type = [BoolType] bool
# 3138|           Value = [CStyleCast] 0
# 3138|           ValueCategory = prvalue
# 3139|     getStmt(143): [DoStmt] do (...) ...
# 3141|       getCondition(): [Literal] 0
# 3141|           Type = [IntType] int
# 3141|           Value = [Literal] 0
# 3141|           ValueCategory = prvalue
# 3139|       getStmt(): [BlockStmt] { ... }
# 3140|         getStmt(0): [DeclStmt] declaration
# 3140|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x143
# 3140|               Type = [Struct] String
# 3140|             getVariable().getInitializer(): [Initializer] initializer for x143
# 3140|               getExpr(): [ConstructorCall] call to String
# 3140|                   Type = [VoidType] void
# 3140|                   ValueCategory = prvalue
# 3141|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3141|             Type = [VoidType] void
# 3141|             ValueCategory = prvalue
# 3141|           getQualifier(): [VariableAccess] x143
# 3141|               Type = [Struct] String
# 3141|               ValueCategory = lvalue
# 3141|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3141|           Conversion = [BoolConversion] conversion to bool
# 3141|           Type = [BoolType] bool
# 3141|           Value = [CStyleCast] 0
# 3141|           ValueCategory = prvalue
# 3142|     getStmt(144): [DoStmt] do (...) ...
# 3144|       getCondition(): [Literal] 0
# 3144|           Type = [IntType] int
# 3144|           Value = [Literal] 0
# 3144|           ValueCategory = prvalue
# 3142|       getStmt(): [BlockStmt] { ... }
# 3143|         getStmt(0): [DeclStmt] declaration
# 3143|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x144
# 3143|               Type = [Struct] String
# 3143|             getVariable().getInitializer(): [Initializer] initializer for x144
# 3143|               getExpr(): [ConstructorCall] call to String
# 3143|                   Type = [VoidType] void
# 3143|                   ValueCategory = prvalue
# 3144|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3144|             Type = [VoidType] void
# 3144|             ValueCategory = prvalue
# 3144|           getQualifier(): [VariableAccess] x144
# 3144|               Type = [Struct] String
# 3144|               ValueCategory = lvalue
# 3144|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3144|           Conversion = [BoolConversion] conversion to bool
# 3144|           Type = [BoolType] bool
# 3144|           Value = [CStyleCast] 0
# 3144|           ValueCategory = prvalue
# 3145|     getStmt(145): [DoStmt] do (...) ...
# 3147|       getCondition(): [Literal] 0
# 3147|           Type = [IntType] int
# 3147|           Value = [Literal] 0
# 3147|           ValueCategory = prvalue
# 3145|       getStmt(): [BlockStmt] { ... }
# 3146|         getStmt(0): [DeclStmt] declaration
# 3146|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x145
# 3146|               Type = [Struct] String
# 3146|             getVariable().getInitializer(): [Initializer] initializer for x145
# 3146|               getExpr(): [ConstructorCall] call to String
# 3146|                   Type = [VoidType] void
# 3146|                   ValueCategory = prvalue
# 3147|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3147|             Type = [VoidType] void
# 3147|             ValueCategory = prvalue
# 3147|           getQualifier(): [VariableAccess] x145
# 3147|               Type = [Struct] String
# 3147|               ValueCategory = lvalue
# 3147|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3147|           Conversion = [BoolConversion] conversion to bool
# 3147|           Type = [BoolType] bool
# 3147|           Value = [CStyleCast] 0
# 3147|           ValueCategory = prvalue
# 3148|     getStmt(146): [DoStmt] do (...) ...
# 3150|       getCondition(): [Literal] 0
# 3150|           Type = [IntType] int
# 3150|           Value = [Literal] 0
# 3150|           ValueCategory = prvalue
# 3148|       getStmt(): [BlockStmt] { ... }
# 3149|         getStmt(0): [DeclStmt] declaration
# 3149|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x146
# 3149|               Type = [Struct] String
# 3149|             getVariable().getInitializer(): [Initializer] initializer for x146
# 3149|               getExpr(): [ConstructorCall] call to String
# 3149|                   Type = [VoidType] void
# 3149|                   ValueCategory = prvalue
# 3150|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3150|             Type = [VoidType] void
# 3150|             ValueCategory = prvalue
# 3150|           getQualifier(): [VariableAccess] x146
# 3150|               Type = [Struct] String
# 3150|               ValueCategory = lvalue
# 3150|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3150|           Conversion = [BoolConversion] conversion to bool
# 3150|           Type = [BoolType] bool
# 3150|           Value = [CStyleCast] 0
# 3150|           ValueCategory = prvalue
# 3151|     getStmt(147): [DoStmt] do (...) ...
# 3153|       getCondition(): [Literal] 0
# 3153|           Type = [IntType] int
# 3153|           Value = [Literal] 0
# 3153|           ValueCategory = prvalue
# 3151|       getStmt(): [BlockStmt] { ... }
# 3152|         getStmt(0): [DeclStmt] declaration
# 3152|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x147
# 3152|               Type = [Struct] String
# 3152|             getVariable().getInitializer(): [Initializer] initializer for x147
# 3152|               getExpr(): [ConstructorCall] call to String
# 3152|                   Type = [VoidType] void
# 3152|                   ValueCategory = prvalue
# 3153|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3153|             Type = [VoidType] void
# 3153|             ValueCategory = prvalue
# 3153|           getQualifier(): [VariableAccess] x147
# 3153|               Type = [Struct] String
# 3153|               ValueCategory = lvalue
# 3153|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3153|           Conversion = [BoolConversion] conversion to bool
# 3153|           Type = [BoolType] bool
# 3153|           Value = [CStyleCast] 0
# 3153|           ValueCategory = prvalue
# 3154|     getStmt(148): [DoStmt] do (...) ...
# 3156|       getCondition(): [Literal] 0
# 3156|           Type = [IntType] int
# 3156|           Value = [Literal] 0
# 3156|           ValueCategory = prvalue
# 3154|       getStmt(): [BlockStmt] { ... }
# 3155|         getStmt(0): [DeclStmt] declaration
# 3155|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x148
# 3155|               Type = [Struct] String
# 3155|             getVariable().getInitializer(): [Initializer] initializer for x148
# 3155|               getExpr(): [ConstructorCall] call to String
# 3155|                   Type = [VoidType] void
# 3155|                   ValueCategory = prvalue
# 3156|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3156|             Type = [VoidType] void
# 3156|             ValueCategory = prvalue
# 3156|           getQualifier(): [VariableAccess] x148
# 3156|               Type = [Struct] String
# 3156|               ValueCategory = lvalue
# 3156|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3156|           Conversion = [BoolConversion] conversion to bool
# 3156|           Type = [BoolType] bool
# 3156|           Value = [CStyleCast] 0
# 3156|           ValueCategory = prvalue
# 3157|     getStmt(149): [DoStmt] do (...) ...
# 3159|       getCondition(): [Literal] 0
# 3159|           Type = [IntType] int
# 3159|           Value = [Literal] 0
# 3159|           ValueCategory = prvalue
# 3157|       getStmt(): [BlockStmt] { ... }
# 3158|         getStmt(0): [DeclStmt] declaration
# 3158|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x149
# 3158|               Type = [Struct] String
# 3158|             getVariable().getInitializer(): [Initializer] initializer for x149
# 3158|               getExpr(): [ConstructorCall] call to String
# 3158|                   Type = [VoidType] void
# 3158|                   ValueCategory = prvalue
# 3159|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3159|             Type = [VoidType] void
# 3159|             ValueCategory = prvalue
# 3159|           getQualifier(): [VariableAccess] x149
# 3159|               Type = [Struct] String
# 3159|               ValueCategory = lvalue
# 3159|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3159|           Conversion = [BoolConversion] conversion to bool
# 3159|           Type = [BoolType] bool
# 3159|           Value = [CStyleCast] 0
# 3159|           ValueCategory = prvalue
# 3160|     getStmt(150): [DoStmt] do (...) ...
# 3162|       getCondition(): [Literal] 0
# 3162|           Type = [IntType] int
# 3162|           Value = [Literal] 0
# 3162|           ValueCategory = prvalue
# 3160|       getStmt(): [BlockStmt] { ... }
# 3161|         getStmt(0): [DeclStmt] declaration
# 3161|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x150
# 3161|               Type = [Struct] String
# 3161|             getVariable().getInitializer(): [Initializer] initializer for x150
# 3161|               getExpr(): [ConstructorCall] call to String
# 3161|                   Type = [VoidType] void
# 3161|                   ValueCategory = prvalue
# 3162|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3162|             Type = [VoidType] void
# 3162|             ValueCategory = prvalue
# 3162|           getQualifier(): [VariableAccess] x150
# 3162|               Type = [Struct] String
# 3162|               ValueCategory = lvalue
# 3162|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3162|           Conversion = [BoolConversion] conversion to bool
# 3162|           Type = [BoolType] bool
# 3162|           Value = [CStyleCast] 0
# 3162|           ValueCategory = prvalue
# 3163|     getStmt(151): [DoStmt] do (...) ...
# 3165|       getCondition(): [Literal] 0
# 3165|           Type = [IntType] int
# 3165|           Value = [Literal] 0
# 3165|           ValueCategory = prvalue
# 3163|       getStmt(): [BlockStmt] { ... }
# 3164|         getStmt(0): [DeclStmt] declaration
# 3164|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x151
# 3164|               Type = [Struct] String
# 3164|             getVariable().getInitializer(): [Initializer] initializer for x151
# 3164|               getExpr(): [ConstructorCall] call to String
# 3164|                   Type = [VoidType] void
# 3164|                   ValueCategory = prvalue
# 3165|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3165|             Type = [VoidType] void
# 3165|             ValueCategory = prvalue
# 3165|           getQualifier(): [VariableAccess] x151
# 3165|               Type = [Struct] String
# 3165|               ValueCategory = lvalue
# 3165|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3165|           Conversion = [BoolConversion] conversion to bool
# 3165|           Type = [BoolType] bool
# 3165|           Value = [CStyleCast] 0
# 3165|           ValueCategory = prvalue
# 3166|     getStmt(152): [DoStmt] do (...) ...
# 3168|       getCondition(): [Literal] 0
# 3168|           Type = [IntType] int
# 3168|           Value = [Literal] 0
# 3168|           ValueCategory = prvalue
# 3166|       getStmt(): [BlockStmt] { ... }
# 3167|         getStmt(0): [DeclStmt] declaration
# 3167|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x152
# 3167|               Type = [Struct] String
# 3167|             getVariable().getInitializer(): [Initializer] initializer for x152
# 3167|               getExpr(): [ConstructorCall] call to String
# 3167|                   Type = [VoidType] void
# 3167|                   ValueCategory = prvalue
# 3168|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3168|             Type = [VoidType] void
# 3168|             ValueCategory = prvalue
# 3168|           getQualifier(): [VariableAccess] x152
# 3168|               Type = [Struct] String
# 3168|               ValueCategory = lvalue
# 3168|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3168|           Conversion = [BoolConversion] conversion to bool
# 3168|           Type = [BoolType] bool
# 3168|           Value = [CStyleCast] 0
# 3168|           ValueCategory = prvalue
# 3169|     getStmt(153): [DoStmt] do (...) ...
# 3171|       getCondition(): [Literal] 0
# 3171|           Type = [IntType] int
# 3171|           Value = [Literal] 0
# 3171|           ValueCategory = prvalue
# 3169|       getStmt(): [BlockStmt] { ... }
# 3170|         getStmt(0): [DeclStmt] declaration
# 3170|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x153
# 3170|               Type = [Struct] String
# 3170|             getVariable().getInitializer(): [Initializer] initializer for x153
# 3170|               getExpr(): [ConstructorCall] call to String
# 3170|                   Type = [VoidType] void
# 3170|                   ValueCategory = prvalue
# 3171|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3171|             Type = [VoidType] void
# 3171|             ValueCategory = prvalue
# 3171|           getQualifier(): [VariableAccess] x153
# 3171|               Type = [Struct] String
# 3171|               ValueCategory = lvalue
# 3171|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3171|           Conversion = [BoolConversion] conversion to bool
# 3171|           Type = [BoolType] bool
# 3171|           Value = [CStyleCast] 0
# 3171|           ValueCategory = prvalue
# 3172|     getStmt(154): [DoStmt] do (...) ...
# 3174|       getCondition(): [Literal] 0
# 3174|           Type = [IntType] int
# 3174|           Value = [Literal] 0
# 3174|           ValueCategory = prvalue
# 3172|       getStmt(): [BlockStmt] { ... }
# 3173|         getStmt(0): [DeclStmt] declaration
# 3173|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x154
# 3173|               Type = [Struct] String
# 3173|             getVariable().getInitializer(): [Initializer] initializer for x154
# 3173|               getExpr(): [ConstructorCall] call to String
# 3173|                   Type = [VoidType] void
# 3173|                   ValueCategory = prvalue
# 3174|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3174|             Type = [VoidType] void
# 3174|             ValueCategory = prvalue
# 3174|           getQualifier(): [VariableAccess] x154
# 3174|               Type = [Struct] String
# 3174|               ValueCategory = lvalue
# 3174|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3174|           Conversion = [BoolConversion] conversion to bool
# 3174|           Type = [BoolType] bool
# 3174|           Value = [CStyleCast] 0
# 3174|           ValueCategory = prvalue
# 3175|     getStmt(155): [DoStmt] do (...) ...
# 3177|       getCondition(): [Literal] 0
# 3177|           Type = [IntType] int
# 3177|           Value = [Literal] 0
# 3177|           ValueCategory = prvalue
# 3175|       getStmt(): [BlockStmt] { ... }
# 3176|         getStmt(0): [DeclStmt] declaration
# 3176|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x155
# 3176|               Type = [Struct] String
# 3176|             getVariable().getInitializer(): [Initializer] initializer for x155
# 3176|               getExpr(): [ConstructorCall] call to String
# 3176|                   Type = [VoidType] void
# 3176|                   ValueCategory = prvalue
# 3177|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3177|             Type = [VoidType] void
# 3177|             ValueCategory = prvalue
# 3177|           getQualifier(): [VariableAccess] x155
# 3177|               Type = [Struct] String
# 3177|               ValueCategory = lvalue
# 3177|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3177|           Conversion = [BoolConversion] conversion to bool
# 3177|           Type = [BoolType] bool
# 3177|           Value = [CStyleCast] 0
# 3177|           ValueCategory = prvalue
# 3178|     getStmt(156): [DoStmt] do (...) ...
# 3180|       getCondition(): [Literal] 0
# 3180|           Type = [IntType] int
# 3180|           Value = [Literal] 0
# 3180|           ValueCategory = prvalue
# 3178|       getStmt(): [BlockStmt] { ... }
# 3179|         getStmt(0): [DeclStmt] declaration
# 3179|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x156
# 3179|               Type = [Struct] String
# 3179|             getVariable().getInitializer(): [Initializer] initializer for x156
# 3179|               getExpr(): [ConstructorCall] call to String
# 3179|                   Type = [VoidType] void
# 3179|                   ValueCategory = prvalue
# 3180|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3180|             Type = [VoidType] void
# 3180|             ValueCategory = prvalue
# 3180|           getQualifier(): [VariableAccess] x156
# 3180|               Type = [Struct] String
# 3180|               ValueCategory = lvalue
# 3180|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3180|           Conversion = [BoolConversion] conversion to bool
# 3180|           Type = [BoolType] bool
# 3180|           Value = [CStyleCast] 0
# 3180|           ValueCategory = prvalue
# 3181|     getStmt(157): [DoStmt] do (...) ...
# 3183|       getCondition(): [Literal] 0
# 3183|           Type = [IntType] int
# 3183|           Value = [Literal] 0
# 3183|           ValueCategory = prvalue
# 3181|       getStmt(): [BlockStmt] { ... }
# 3182|         getStmt(0): [DeclStmt] declaration
# 3182|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x157
# 3182|               Type = [Struct] String
# 3182|             getVariable().getInitializer(): [Initializer] initializer for x157
# 3182|               getExpr(): [ConstructorCall] call to String
# 3182|                   Type = [VoidType] void
# 3182|                   ValueCategory = prvalue
# 3183|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3183|             Type = [VoidType] void
# 3183|             ValueCategory = prvalue
# 3183|           getQualifier(): [VariableAccess] x157
# 3183|               Type = [Struct] String
# 3183|               ValueCategory = lvalue
# 3183|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3183|           Conversion = [BoolConversion] conversion to bool
# 3183|           Type = [BoolType] bool
# 3183|           Value = [CStyleCast] 0
# 3183|           ValueCategory = prvalue
# 3184|     getStmt(158): [DoStmt] do (...) ...
# 3186|       getCondition(): [Literal] 0
# 3186|           Type = [IntType] int
# 3186|           Value = [Literal] 0
# 3186|           ValueCategory = prvalue
# 3184|       getStmt(): [BlockStmt] { ... }
# 3185|         getStmt(0): [DeclStmt] declaration
# 3185|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x158
# 3185|               Type = [Struct] String
# 3185|             getVariable().getInitializer(): [Initializer] initializer for x158
# 3185|               getExpr(): [ConstructorCall] call to String
# 3185|                   Type = [VoidType] void
# 3185|                   ValueCategory = prvalue
# 3186|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3186|             Type = [VoidType] void
# 3186|             ValueCategory = prvalue
# 3186|           getQualifier(): [VariableAccess] x158
# 3186|               Type = [Struct] String
# 3186|               ValueCategory = lvalue
# 3186|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3186|           Conversion = [BoolConversion] conversion to bool
# 3186|           Type = [BoolType] bool
# 3186|           Value = [CStyleCast] 0
# 3186|           ValueCategory = prvalue
# 3187|     getStmt(159): [DoStmt] do (...) ...
# 3189|       getCondition(): [Literal] 0
# 3189|           Type = [IntType] int
# 3189|           Value = [Literal] 0
# 3189|           ValueCategory = prvalue
# 3187|       getStmt(): [BlockStmt] { ... }
# 3188|         getStmt(0): [DeclStmt] declaration
# 3188|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x159
# 3188|               Type = [Struct] String
# 3188|             getVariable().getInitializer(): [Initializer] initializer for x159
# 3188|               getExpr(): [ConstructorCall] call to String
# 3188|                   Type = [VoidType] void
# 3188|                   ValueCategory = prvalue
# 3189|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3189|             Type = [VoidType] void
# 3189|             ValueCategory = prvalue
# 3189|           getQualifier(): [VariableAccess] x159
# 3189|               Type = [Struct] String
# 3189|               ValueCategory = lvalue
# 3189|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3189|           Conversion = [BoolConversion] conversion to bool
# 3189|           Type = [BoolType] bool
# 3189|           Value = [CStyleCast] 0
# 3189|           ValueCategory = prvalue
# 3190|     getStmt(160): [DoStmt] do (...) ...
# 3192|       getCondition(): [Literal] 0
# 3192|           Type = [IntType] int
# 3192|           Value = [Literal] 0
# 3192|           ValueCategory = prvalue
# 3190|       getStmt(): [BlockStmt] { ... }
# 3191|         getStmt(0): [DeclStmt] declaration
# 3191|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x160
# 3191|               Type = [Struct] String
# 3191|             getVariable().getInitializer(): [Initializer] initializer for x160
# 3191|               getExpr(): [ConstructorCall] call to String
# 3191|                   Type = [VoidType] void
# 3191|                   ValueCategory = prvalue
# 3192|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3192|             Type = [VoidType] void
# 3192|             ValueCategory = prvalue
# 3192|           getQualifier(): [VariableAccess] x160
# 3192|               Type = [Struct] String
# 3192|               ValueCategory = lvalue
# 3192|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3192|           Conversion = [BoolConversion] conversion to bool
# 3192|           Type = [BoolType] bool
# 3192|           Value = [CStyleCast] 0
# 3192|           ValueCategory = prvalue
# 3193|     getStmt(161): [DoStmt] do (...) ...
# 3195|       getCondition(): [Literal] 0
# 3195|           Type = [IntType] int
# 3195|           Value = [Literal] 0
# 3195|           ValueCategory = prvalue
# 3193|       getStmt(): [BlockStmt] { ... }
# 3194|         getStmt(0): [DeclStmt] declaration
# 3194|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x161
# 3194|               Type = [Struct] String
# 3194|             getVariable().getInitializer(): [Initializer] initializer for x161
# 3194|               getExpr(): [ConstructorCall] call to String
# 3194|                   Type = [VoidType] void
# 3194|                   ValueCategory = prvalue
# 3195|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3195|             Type = [VoidType] void
# 3195|             ValueCategory = prvalue
# 3195|           getQualifier(): [VariableAccess] x161
# 3195|               Type = [Struct] String
# 3195|               ValueCategory = lvalue
# 3195|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3195|           Conversion = [BoolConversion] conversion to bool
# 3195|           Type = [BoolType] bool
# 3195|           Value = [CStyleCast] 0
# 3195|           ValueCategory = prvalue
# 3196|     getStmt(162): [DoStmt] do (...) ...
# 3198|       getCondition(): [Literal] 0
# 3198|           Type = [IntType] int
# 3198|           Value = [Literal] 0
# 3198|           ValueCategory = prvalue
# 3196|       getStmt(): [BlockStmt] { ... }
# 3197|         getStmt(0): [DeclStmt] declaration
# 3197|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x162
# 3197|               Type = [Struct] String
# 3197|             getVariable().getInitializer(): [Initializer] initializer for x162
# 3197|               getExpr(): [ConstructorCall] call to String
# 3197|                   Type = [VoidType] void
# 3197|                   ValueCategory = prvalue
# 3198|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3198|             Type = [VoidType] void
# 3198|             ValueCategory = prvalue
# 3198|           getQualifier(): [VariableAccess] x162
# 3198|               Type = [Struct] String
# 3198|               ValueCategory = lvalue
# 3198|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3198|           Conversion = [BoolConversion] conversion to bool
# 3198|           Type = [BoolType] bool
# 3198|           Value = [CStyleCast] 0
# 3198|           ValueCategory = prvalue
# 3199|     getStmt(163): [DoStmt] do (...) ...
# 3201|       getCondition(): [Literal] 0
# 3201|           Type = [IntType] int
# 3201|           Value = [Literal] 0
# 3201|           ValueCategory = prvalue
# 3199|       getStmt(): [BlockStmt] { ... }
# 3200|         getStmt(0): [DeclStmt] declaration
# 3200|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x163
# 3200|               Type = [Struct] String
# 3200|             getVariable().getInitializer(): [Initializer] initializer for x163
# 3200|               getExpr(): [ConstructorCall] call to String
# 3200|                   Type = [VoidType] void
# 3200|                   ValueCategory = prvalue
# 3201|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3201|             Type = [VoidType] void
# 3201|             ValueCategory = prvalue
# 3201|           getQualifier(): [VariableAccess] x163
# 3201|               Type = [Struct] String
# 3201|               ValueCategory = lvalue
# 3201|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3201|           Conversion = [BoolConversion] conversion to bool
# 3201|           Type = [BoolType] bool
# 3201|           Value = [CStyleCast] 0
# 3201|           ValueCategory = prvalue
# 3202|     getStmt(164): [DoStmt] do (...) ...
# 3204|       getCondition(): [Literal] 0
# 3204|           Type = [IntType] int
# 3204|           Value = [Literal] 0
# 3204|           ValueCategory = prvalue
# 3202|       getStmt(): [BlockStmt] { ... }
# 3203|         getStmt(0): [DeclStmt] declaration
# 3203|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x164
# 3203|               Type = [Struct] String
# 3203|             getVariable().getInitializer(): [Initializer] initializer for x164
# 3203|               getExpr(): [ConstructorCall] call to String
# 3203|                   Type = [VoidType] void
# 3203|                   ValueCategory = prvalue
# 3204|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3204|             Type = [VoidType] void
# 3204|             ValueCategory = prvalue
# 3204|           getQualifier(): [VariableAccess] x164
# 3204|               Type = [Struct] String
# 3204|               ValueCategory = lvalue
# 3204|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3204|           Conversion = [BoolConversion] conversion to bool
# 3204|           Type = [BoolType] bool
# 3204|           Value = [CStyleCast] 0
# 3204|           ValueCategory = prvalue
# 3205|     getStmt(165): [DoStmt] do (...) ...
# 3207|       getCondition(): [Literal] 0
# 3207|           Type = [IntType] int
# 3207|           Value = [Literal] 0
# 3207|           ValueCategory = prvalue
# 3205|       getStmt(): [BlockStmt] { ... }
# 3206|         getStmt(0): [DeclStmt] declaration
# 3206|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x165
# 3206|               Type = [Struct] String
# 3206|             getVariable().getInitializer(): [Initializer] initializer for x165
# 3206|               getExpr(): [ConstructorCall] call to String
# 3206|                   Type = [VoidType] void
# 3206|                   ValueCategory = prvalue
# 3207|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3207|             Type = [VoidType] void
# 3207|             ValueCategory = prvalue
# 3207|           getQualifier(): [VariableAccess] x165
# 3207|               Type = [Struct] String
# 3207|               ValueCategory = lvalue
# 3207|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3207|           Conversion = [BoolConversion] conversion to bool
# 3207|           Type = [BoolType] bool
# 3207|           Value = [CStyleCast] 0
# 3207|           ValueCategory = prvalue
# 3208|     getStmt(166): [DoStmt] do (...) ...
# 3210|       getCondition(): [Literal] 0
# 3210|           Type = [IntType] int
# 3210|           Value = [Literal] 0
# 3210|           ValueCategory = prvalue
# 3208|       getStmt(): [BlockStmt] { ... }
# 3209|         getStmt(0): [DeclStmt] declaration
# 3209|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x166
# 3209|               Type = [Struct] String
# 3209|             getVariable().getInitializer(): [Initializer] initializer for x166
# 3209|               getExpr(): [ConstructorCall] call to String
# 3209|                   Type = [VoidType] void
# 3209|                   ValueCategory = prvalue
# 3210|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3210|             Type = [VoidType] void
# 3210|             ValueCategory = prvalue
# 3210|           getQualifier(): [VariableAccess] x166
# 3210|               Type = [Struct] String
# 3210|               ValueCategory = lvalue
# 3210|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3210|           Conversion = [BoolConversion] conversion to bool
# 3210|           Type = [BoolType] bool
# 3210|           Value = [CStyleCast] 0
# 3210|           ValueCategory = prvalue
# 3211|     getStmt(167): [DoStmt] do (...) ...
# 3213|       getCondition(): [Literal] 0
# 3213|           Type = [IntType] int
# 3213|           Value = [Literal] 0
# 3213|           ValueCategory = prvalue
# 3211|       getStmt(): [BlockStmt] { ... }
# 3212|         getStmt(0): [DeclStmt] declaration
# 3212|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x167
# 3212|               Type = [Struct] String
# 3212|             getVariable().getInitializer(): [Initializer] initializer for x167
# 3212|               getExpr(): [ConstructorCall] call to String
# 3212|                   Type = [VoidType] void
# 3212|                   ValueCategory = prvalue
# 3213|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3213|             Type = [VoidType] void
# 3213|             ValueCategory = prvalue
# 3213|           getQualifier(): [VariableAccess] x167
# 3213|               Type = [Struct] String
# 3213|               ValueCategory = lvalue
# 3213|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3213|           Conversion = [BoolConversion] conversion to bool
# 3213|           Type = [BoolType] bool
# 3213|           Value = [CStyleCast] 0
# 3213|           ValueCategory = prvalue
# 3214|     getStmt(168): [DoStmt] do (...) ...
# 3216|       getCondition(): [Literal] 0
# 3216|           Type = [IntType] int
# 3216|           Value = [Literal] 0
# 3216|           ValueCategory = prvalue
# 3214|       getStmt(): [BlockStmt] { ... }
# 3215|         getStmt(0): [DeclStmt] declaration
# 3215|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x168
# 3215|               Type = [Struct] String
# 3215|             getVariable().getInitializer(): [Initializer] initializer for x168
# 3215|               getExpr(): [ConstructorCall] call to String
# 3215|                   Type = [VoidType] void
# 3215|                   ValueCategory = prvalue
# 3216|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3216|             Type = [VoidType] void
# 3216|             ValueCategory = prvalue
# 3216|           getQualifier(): [VariableAccess] x168
# 3216|               Type = [Struct] String
# 3216|               ValueCategory = lvalue
# 3216|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3216|           Conversion = [BoolConversion] conversion to bool
# 3216|           Type = [BoolType] bool
# 3216|           Value = [CStyleCast] 0
# 3216|           ValueCategory = prvalue
# 3217|     getStmt(169): [DoStmt] do (...) ...
# 3219|       getCondition(): [Literal] 0
# 3219|           Type = [IntType] int
# 3219|           Value = [Literal] 0
# 3219|           ValueCategory = prvalue
# 3217|       getStmt(): [BlockStmt] { ... }
# 3218|         getStmt(0): [DeclStmt] declaration
# 3218|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x169
# 3218|               Type = [Struct] String
# 3218|             getVariable().getInitializer(): [Initializer] initializer for x169
# 3218|               getExpr(): [ConstructorCall] call to String
# 3218|                   Type = [VoidType] void
# 3218|                   ValueCategory = prvalue
# 3219|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3219|             Type = [VoidType] void
# 3219|             ValueCategory = prvalue
# 3219|           getQualifier(): [VariableAccess] x169
# 3219|               Type = [Struct] String
# 3219|               ValueCategory = lvalue
# 3219|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3219|           Conversion = [BoolConversion] conversion to bool
# 3219|           Type = [BoolType] bool
# 3219|           Value = [CStyleCast] 0
# 3219|           ValueCategory = prvalue
# 3220|     getStmt(170): [DoStmt] do (...) ...
# 3222|       getCondition(): [Literal] 0
# 3222|           Type = [IntType] int
# 3222|           Value = [Literal] 0
# 3222|           ValueCategory = prvalue
# 3220|       getStmt(): [BlockStmt] { ... }
# 3221|         getStmt(0): [DeclStmt] declaration
# 3221|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x170
# 3221|               Type = [Struct] String
# 3221|             getVariable().getInitializer(): [Initializer] initializer for x170
# 3221|               getExpr(): [ConstructorCall] call to String
# 3221|                   Type = [VoidType] void
# 3221|                   ValueCategory = prvalue
# 3222|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3222|             Type = [VoidType] void
# 3222|             ValueCategory = prvalue
# 3222|           getQualifier(): [VariableAccess] x170
# 3222|               Type = [Struct] String
# 3222|               ValueCategory = lvalue
# 3222|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3222|           Conversion = [BoolConversion] conversion to bool
# 3222|           Type = [BoolType] bool
# 3222|           Value = [CStyleCast] 0
# 3222|           ValueCategory = prvalue
# 3223|     getStmt(171): [DoStmt] do (...) ...
# 3225|       getCondition(): [Literal] 0
# 3225|           Type = [IntType] int
# 3225|           Value = [Literal] 0
# 3225|           ValueCategory = prvalue
# 3223|       getStmt(): [BlockStmt] { ... }
# 3224|         getStmt(0): [DeclStmt] declaration
# 3224|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x171
# 3224|               Type = [Struct] String
# 3224|             getVariable().getInitializer(): [Initializer] initializer for x171
# 3224|               getExpr(): [ConstructorCall] call to String
# 3224|                   Type = [VoidType] void
# 3224|                   ValueCategory = prvalue
# 3225|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3225|             Type = [VoidType] void
# 3225|             ValueCategory = prvalue
# 3225|           getQualifier(): [VariableAccess] x171
# 3225|               Type = [Struct] String
# 3225|               ValueCategory = lvalue
# 3225|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3225|           Conversion = [BoolConversion] conversion to bool
# 3225|           Type = [BoolType] bool
# 3225|           Value = [CStyleCast] 0
# 3225|           ValueCategory = prvalue
# 3226|     getStmt(172): [DoStmt] do (...) ...
# 3228|       getCondition(): [Literal] 0
# 3228|           Type = [IntType] int
# 3228|           Value = [Literal] 0
# 3228|           ValueCategory = prvalue
# 3226|       getStmt(): [BlockStmt] { ... }
# 3227|         getStmt(0): [DeclStmt] declaration
# 3227|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x172
# 3227|               Type = [Struct] String
# 3227|             getVariable().getInitializer(): [Initializer] initializer for x172
# 3227|               getExpr(): [ConstructorCall] call to String
# 3227|                   Type = [VoidType] void
# 3227|                   ValueCategory = prvalue
# 3228|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3228|             Type = [VoidType] void
# 3228|             ValueCategory = prvalue
# 3228|           getQualifier(): [VariableAccess] x172
# 3228|               Type = [Struct] String
# 3228|               ValueCategory = lvalue
# 3228|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3228|           Conversion = [BoolConversion] conversion to bool
# 3228|           Type = [BoolType] bool
# 3228|           Value = [CStyleCast] 0
# 3228|           ValueCategory = prvalue
# 3229|     getStmt(173): [DoStmt] do (...) ...
# 3231|       getCondition(): [Literal] 0
# 3231|           Type = [IntType] int
# 3231|           Value = [Literal] 0
# 3231|           ValueCategory = prvalue
# 3229|       getStmt(): [BlockStmt] { ... }
# 3230|         getStmt(0): [DeclStmt] declaration
# 3230|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x173
# 3230|               Type = [Struct] String
# 3230|             getVariable().getInitializer(): [Initializer] initializer for x173
# 3230|               getExpr(): [ConstructorCall] call to String
# 3230|                   Type = [VoidType] void
# 3230|                   ValueCategory = prvalue
# 3231|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3231|             Type = [VoidType] void
# 3231|             ValueCategory = prvalue
# 3231|           getQualifier(): [VariableAccess] x173
# 3231|               Type = [Struct] String
# 3231|               ValueCategory = lvalue
# 3231|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3231|           Conversion = [BoolConversion] conversion to bool
# 3231|           Type = [BoolType] bool
# 3231|           Value = [CStyleCast] 0
# 3231|           ValueCategory = prvalue
# 3232|     getStmt(174): [DoStmt] do (...) ...
# 3234|       getCondition(): [Literal] 0
# 3234|           Type = [IntType] int
# 3234|           Value = [Literal] 0
# 3234|           ValueCategory = prvalue
# 3232|       getStmt(): [BlockStmt] { ... }
# 3233|         getStmt(0): [DeclStmt] declaration
# 3233|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x174
# 3233|               Type = [Struct] String
# 3233|             getVariable().getInitializer(): [Initializer] initializer for x174
# 3233|               getExpr(): [ConstructorCall] call to String
# 3233|                   Type = [VoidType] void
# 3233|                   ValueCategory = prvalue
# 3234|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3234|             Type = [VoidType] void
# 3234|             ValueCategory = prvalue
# 3234|           getQualifier(): [VariableAccess] x174
# 3234|               Type = [Struct] String
# 3234|               ValueCategory = lvalue
# 3234|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3234|           Conversion = [BoolConversion] conversion to bool
# 3234|           Type = [BoolType] bool
# 3234|           Value = [CStyleCast] 0
# 3234|           ValueCategory = prvalue
# 3235|     getStmt(175): [DoStmt] do (...) ...
# 3237|       getCondition(): [Literal] 0
# 3237|           Type = [IntType] int
# 3237|           Value = [Literal] 0
# 3237|           ValueCategory = prvalue
# 3235|       getStmt(): [BlockStmt] { ... }
# 3236|         getStmt(0): [DeclStmt] declaration
# 3236|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x175
# 3236|               Type = [Struct] String
# 3236|             getVariable().getInitializer(): [Initializer] initializer for x175
# 3236|               getExpr(): [ConstructorCall] call to String
# 3236|                   Type = [VoidType] void
# 3236|                   ValueCategory = prvalue
# 3237|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3237|             Type = [VoidType] void
# 3237|             ValueCategory = prvalue
# 3237|           getQualifier(): [VariableAccess] x175
# 3237|               Type = [Struct] String
# 3237|               ValueCategory = lvalue
# 3237|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3237|           Conversion = [BoolConversion] conversion to bool
# 3237|           Type = [BoolType] bool
# 3237|           Value = [CStyleCast] 0
# 3237|           ValueCategory = prvalue
# 3238|     getStmt(176): [DoStmt] do (...) ...
# 3240|       getCondition(): [Literal] 0
# 3240|           Type = [IntType] int
# 3240|           Value = [Literal] 0
# 3240|           ValueCategory = prvalue
# 3238|       getStmt(): [BlockStmt] { ... }
# 3239|         getStmt(0): [DeclStmt] declaration
# 3239|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x176
# 3239|               Type = [Struct] String
# 3239|             getVariable().getInitializer(): [Initializer] initializer for x176
# 3239|               getExpr(): [ConstructorCall] call to String
# 3239|                   Type = [VoidType] void
# 3239|                   ValueCategory = prvalue
# 3240|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3240|             Type = [VoidType] void
# 3240|             ValueCategory = prvalue
# 3240|           getQualifier(): [VariableAccess] x176
# 3240|               Type = [Struct] String
# 3240|               ValueCategory = lvalue
# 3240|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3240|           Conversion = [BoolConversion] conversion to bool
# 3240|           Type = [BoolType] bool
# 3240|           Value = [CStyleCast] 0
# 3240|           ValueCategory = prvalue
# 3241|     getStmt(177): [DoStmt] do (...) ...
# 3243|       getCondition(): [Literal] 0
# 3243|           Type = [IntType] int
# 3243|           Value = [Literal] 0
# 3243|           ValueCategory = prvalue
# 3241|       getStmt(): [BlockStmt] { ... }
# 3242|         getStmt(0): [DeclStmt] declaration
# 3242|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x177
# 3242|               Type = [Struct] String
# 3242|             getVariable().getInitializer(): [Initializer] initializer for x177
# 3242|               getExpr(): [ConstructorCall] call to String
# 3242|                   Type = [VoidType] void
# 3242|                   ValueCategory = prvalue
# 3243|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3243|             Type = [VoidType] void
# 3243|             ValueCategory = prvalue
# 3243|           getQualifier(): [VariableAccess] x177
# 3243|               Type = [Struct] String
# 3243|               ValueCategory = lvalue
# 3243|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3243|           Conversion = [BoolConversion] conversion to bool
# 3243|           Type = [BoolType] bool
# 3243|           Value = [CStyleCast] 0
# 3243|           ValueCategory = prvalue
# 3244|     getStmt(178): [DoStmt] do (...) ...
# 3246|       getCondition(): [Literal] 0
# 3246|           Type = [IntType] int
# 3246|           Value = [Literal] 0
# 3246|           ValueCategory = prvalue
# 3244|       getStmt(): [BlockStmt] { ... }
# 3245|         getStmt(0): [DeclStmt] declaration
# 3245|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x178
# 3245|               Type = [Struct] String
# 3245|             getVariable().getInitializer(): [Initializer] initializer for x178
# 3245|               getExpr(): [ConstructorCall] call to String
# 3245|                   Type = [VoidType] void
# 3245|                   ValueCategory = prvalue
# 3246|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3246|             Type = [VoidType] void
# 3246|             ValueCategory = prvalue
# 3246|           getQualifier(): [VariableAccess] x178
# 3246|               Type = [Struct] String
# 3246|               ValueCategory = lvalue
# 3246|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3246|           Conversion = [BoolConversion] conversion to bool
# 3246|           Type = [BoolType] bool
# 3246|           Value = [CStyleCast] 0
# 3246|           ValueCategory = prvalue
# 3247|     getStmt(179): [DoStmt] do (...) ...
# 3249|       getCondition(): [Literal] 0
# 3249|           Type = [IntType] int
# 3249|           Value = [Literal] 0
# 3249|           ValueCategory = prvalue
# 3247|       getStmt(): [BlockStmt] { ... }
# 3248|         getStmt(0): [DeclStmt] declaration
# 3248|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x179
# 3248|               Type = [Struct] String
# 3248|             getVariable().getInitializer(): [Initializer] initializer for x179
# 3248|               getExpr(): [ConstructorCall] call to String
# 3248|                   Type = [VoidType] void
# 3248|                   ValueCategory = prvalue
# 3249|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3249|             Type = [VoidType] void
# 3249|             ValueCategory = prvalue
# 3249|           getQualifier(): [VariableAccess] x179
# 3249|               Type = [Struct] String
# 3249|               ValueCategory = lvalue
# 3249|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3249|           Conversion = [BoolConversion] conversion to bool
# 3249|           Type = [BoolType] bool
# 3249|           Value = [CStyleCast] 0
# 3249|           ValueCategory = prvalue
# 3250|     getStmt(180): [DoStmt] do (...) ...
# 3252|       getCondition(): [Literal] 0
# 3252|           Type = [IntType] int
# 3252|           Value = [Literal] 0
# 3252|           ValueCategory = prvalue
# 3250|       getStmt(): [BlockStmt] { ... }
# 3251|         getStmt(0): [DeclStmt] declaration
# 3251|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x180
# 3251|               Type = [Struct] String
# 3251|             getVariable().getInitializer(): [Initializer] initializer for x180
# 3251|               getExpr(): [ConstructorCall] call to String
# 3251|                   Type = [VoidType] void
# 3251|                   ValueCategory = prvalue
# 3252|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3252|             Type = [VoidType] void
# 3252|             ValueCategory = prvalue
# 3252|           getQualifier(): [VariableAccess] x180
# 3252|               Type = [Struct] String
# 3252|               ValueCategory = lvalue
# 3252|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3252|           Conversion = [BoolConversion] conversion to bool
# 3252|           Type = [BoolType] bool
# 3252|           Value = [CStyleCast] 0
# 3252|           ValueCategory = prvalue
# 3253|     getStmt(181): [DoStmt] do (...) ...
# 3255|       getCondition(): [Literal] 0
# 3255|           Type = [IntType] int
# 3255|           Value = [Literal] 0
# 3255|           ValueCategory = prvalue
# 3253|       getStmt(): [BlockStmt] { ... }
# 3254|         getStmt(0): [DeclStmt] declaration
# 3254|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x181
# 3254|               Type = [Struct] String
# 3254|             getVariable().getInitializer(): [Initializer] initializer for x181
# 3254|               getExpr(): [ConstructorCall] call to String
# 3254|                   Type = [VoidType] void
# 3254|                   ValueCategory = prvalue
# 3255|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3255|             Type = [VoidType] void
# 3255|             ValueCategory = prvalue
# 3255|           getQualifier(): [VariableAccess] x181
# 3255|               Type = [Struct] String
# 3255|               ValueCategory = lvalue
# 3255|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3255|           Conversion = [BoolConversion] conversion to bool
# 3255|           Type = [BoolType] bool
# 3255|           Value = [CStyleCast] 0
# 3255|           ValueCategory = prvalue
# 3256|     getStmt(182): [DoStmt] do (...) ...
# 3258|       getCondition(): [Literal] 0
# 3258|           Type = [IntType] int
# 3258|           Value = [Literal] 0
# 3258|           ValueCategory = prvalue
# 3256|       getStmt(): [BlockStmt] { ... }
# 3257|         getStmt(0): [DeclStmt] declaration
# 3257|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x182
# 3257|               Type = [Struct] String
# 3257|             getVariable().getInitializer(): [Initializer] initializer for x182
# 3257|               getExpr(): [ConstructorCall] call to String
# 3257|                   Type = [VoidType] void
# 3257|                   ValueCategory = prvalue
# 3258|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3258|             Type = [VoidType] void
# 3258|             ValueCategory = prvalue
# 3258|           getQualifier(): [VariableAccess] x182
# 3258|               Type = [Struct] String
# 3258|               ValueCategory = lvalue
# 3258|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3258|           Conversion = [BoolConversion] conversion to bool
# 3258|           Type = [BoolType] bool
# 3258|           Value = [CStyleCast] 0
# 3258|           ValueCategory = prvalue
# 3259|     getStmt(183): [DoStmt] do (...) ...
# 3261|       getCondition(): [Literal] 0
# 3261|           Type = [IntType] int
# 3261|           Value = [Literal] 0
# 3261|           ValueCategory = prvalue
# 3259|       getStmt(): [BlockStmt] { ... }
# 3260|         getStmt(0): [DeclStmt] declaration
# 3260|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x183
# 3260|               Type = [Struct] String
# 3260|             getVariable().getInitializer(): [Initializer] initializer for x183
# 3260|               getExpr(): [ConstructorCall] call to String
# 3260|                   Type = [VoidType] void
# 3260|                   ValueCategory = prvalue
# 3261|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3261|             Type = [VoidType] void
# 3261|             ValueCategory = prvalue
# 3261|           getQualifier(): [VariableAccess] x183
# 3261|               Type = [Struct] String
# 3261|               ValueCategory = lvalue
# 3261|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3261|           Conversion = [BoolConversion] conversion to bool
# 3261|           Type = [BoolType] bool
# 3261|           Value = [CStyleCast] 0
# 3261|           ValueCategory = prvalue
# 3262|     getStmt(184): [DoStmt] do (...) ...
# 3264|       getCondition(): [Literal] 0
# 3264|           Type = [IntType] int
# 3264|           Value = [Literal] 0
# 3264|           ValueCategory = prvalue
# 3262|       getStmt(): [BlockStmt] { ... }
# 3263|         getStmt(0): [DeclStmt] declaration
# 3263|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x184
# 3263|               Type = [Struct] String
# 3263|             getVariable().getInitializer(): [Initializer] initializer for x184
# 3263|               getExpr(): [ConstructorCall] call to String
# 3263|                   Type = [VoidType] void
# 3263|                   ValueCategory = prvalue
# 3264|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3264|             Type = [VoidType] void
# 3264|             ValueCategory = prvalue
# 3264|           getQualifier(): [VariableAccess] x184
# 3264|               Type = [Struct] String
# 3264|               ValueCategory = lvalue
# 3264|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3264|           Conversion = [BoolConversion] conversion to bool
# 3264|           Type = [BoolType] bool
# 3264|           Value = [CStyleCast] 0
# 3264|           ValueCategory = prvalue
# 3265|     getStmt(185): [DoStmt] do (...) ...
# 3267|       getCondition(): [Literal] 0
# 3267|           Type = [IntType] int
# 3267|           Value = [Literal] 0
# 3267|           ValueCategory = prvalue
# 3265|       getStmt(): [BlockStmt] { ... }
# 3266|         getStmt(0): [DeclStmt] declaration
# 3266|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x185
# 3266|               Type = [Struct] String
# 3266|             getVariable().getInitializer(): [Initializer] initializer for x185
# 3266|               getExpr(): [ConstructorCall] call to String
# 3266|                   Type = [VoidType] void
# 3266|                   ValueCategory = prvalue
# 3267|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3267|             Type = [VoidType] void
# 3267|             ValueCategory = prvalue
# 3267|           getQualifier(): [VariableAccess] x185
# 3267|               Type = [Struct] String
# 3267|               ValueCategory = lvalue
# 3267|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3267|           Conversion = [BoolConversion] conversion to bool
# 3267|           Type = [BoolType] bool
# 3267|           Value = [CStyleCast] 0
# 3267|           ValueCategory = prvalue
# 3268|     getStmt(186): [DoStmt] do (...) ...
# 3270|       getCondition(): [Literal] 0
# 3270|           Type = [IntType] int
# 3270|           Value = [Literal] 0
# 3270|           ValueCategory = prvalue
# 3268|       getStmt(): [BlockStmt] { ... }
# 3269|         getStmt(0): [DeclStmt] declaration
# 3269|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x186
# 3269|               Type = [Struct] String
# 3269|             getVariable().getInitializer(): [Initializer] initializer for x186
# 3269|               getExpr(): [ConstructorCall] call to String
# 3269|                   Type = [VoidType] void
# 3269|                   ValueCategory = prvalue
# 3270|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3270|             Type = [VoidType] void
# 3270|             ValueCategory = prvalue
# 3270|           getQualifier(): [VariableAccess] x186
# 3270|               Type = [Struct] String
# 3270|               ValueCategory = lvalue
# 3270|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3270|           Conversion = [BoolConversion] conversion to bool
# 3270|           Type = [BoolType] bool
# 3270|           Value = [CStyleCast] 0
# 3270|           ValueCategory = prvalue
# 3271|     getStmt(187): [DoStmt] do (...) ...
# 3273|       getCondition(): [Literal] 0
# 3273|           Type = [IntType] int
# 3273|           Value = [Literal] 0
# 3273|           ValueCategory = prvalue
# 3271|       getStmt(): [BlockStmt] { ... }
# 3272|         getStmt(0): [DeclStmt] declaration
# 3272|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x187
# 3272|               Type = [Struct] String
# 3272|             getVariable().getInitializer(): [Initializer] initializer for x187
# 3272|               getExpr(): [ConstructorCall] call to String
# 3272|                   Type = [VoidType] void
# 3272|                   ValueCategory = prvalue
# 3273|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3273|             Type = [VoidType] void
# 3273|             ValueCategory = prvalue
# 3273|           getQualifier(): [VariableAccess] x187
# 3273|               Type = [Struct] String
# 3273|               ValueCategory = lvalue
# 3273|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3273|           Conversion = [BoolConversion] conversion to bool
# 3273|           Type = [BoolType] bool
# 3273|           Value = [CStyleCast] 0
# 3273|           ValueCategory = prvalue
# 3274|     getStmt(188): [DoStmt] do (...) ...
# 3276|       getCondition(): [Literal] 0
# 3276|           Type = [IntType] int
# 3276|           Value = [Literal] 0
# 3276|           ValueCategory = prvalue
# 3274|       getStmt(): [BlockStmt] { ... }
# 3275|         getStmt(0): [DeclStmt] declaration
# 3275|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x188
# 3275|               Type = [Struct] String
# 3275|             getVariable().getInitializer(): [Initializer] initializer for x188
# 3275|               getExpr(): [ConstructorCall] call to String
# 3275|                   Type = [VoidType] void
# 3275|                   ValueCategory = prvalue
# 3276|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3276|             Type = [VoidType] void
# 3276|             ValueCategory = prvalue
# 3276|           getQualifier(): [VariableAccess] x188
# 3276|               Type = [Struct] String
# 3276|               ValueCategory = lvalue
# 3276|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3276|           Conversion = [BoolConversion] conversion to bool
# 3276|           Type = [BoolType] bool
# 3276|           Value = [CStyleCast] 0
# 3276|           ValueCategory = prvalue
# 3277|     getStmt(189): [DoStmt] do (...) ...
# 3279|       getCondition(): [Literal] 0
# 3279|           Type = [IntType] int
# 3279|           Value = [Literal] 0
# 3279|           ValueCategory = prvalue
# 3277|       getStmt(): [BlockStmt] { ... }
# 3278|         getStmt(0): [DeclStmt] declaration
# 3278|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x189
# 3278|               Type = [Struct] String
# 3278|             getVariable().getInitializer(): [Initializer] initializer for x189
# 3278|               getExpr(): [ConstructorCall] call to String
# 3278|                   Type = [VoidType] void
# 3278|                   ValueCategory = prvalue
# 3279|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3279|             Type = [VoidType] void
# 3279|             ValueCategory = prvalue
# 3279|           getQualifier(): [VariableAccess] x189
# 3279|               Type = [Struct] String
# 3279|               ValueCategory = lvalue
# 3279|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3279|           Conversion = [BoolConversion] conversion to bool
# 3279|           Type = [BoolType] bool
# 3279|           Value = [CStyleCast] 0
# 3279|           ValueCategory = prvalue
# 3280|     getStmt(190): [DoStmt] do (...) ...
# 3282|       getCondition(): [Literal] 0
# 3282|           Type = [IntType] int
# 3282|           Value = [Literal] 0
# 3282|           ValueCategory = prvalue
# 3280|       getStmt(): [BlockStmt] { ... }
# 3281|         getStmt(0): [DeclStmt] declaration
# 3281|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x190
# 3281|               Type = [Struct] String
# 3281|             getVariable().getInitializer(): [Initializer] initializer for x190
# 3281|               getExpr(): [ConstructorCall] call to String
# 3281|                   Type = [VoidType] void
# 3281|                   ValueCategory = prvalue
# 3282|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3282|             Type = [VoidType] void
# 3282|             ValueCategory = prvalue
# 3282|           getQualifier(): [VariableAccess] x190
# 3282|               Type = [Struct] String
# 3282|               ValueCategory = lvalue
# 3282|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3282|           Conversion = [BoolConversion] conversion to bool
# 3282|           Type = [BoolType] bool
# 3282|           Value = [CStyleCast] 0
# 3282|           ValueCategory = prvalue
# 3283|     getStmt(191): [DoStmt] do (...) ...
# 3285|       getCondition(): [Literal] 0
# 3285|           Type = [IntType] int
# 3285|           Value = [Literal] 0
# 3285|           ValueCategory = prvalue
# 3283|       getStmt(): [BlockStmt] { ... }
# 3284|         getStmt(0): [DeclStmt] declaration
# 3284|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x191
# 3284|               Type = [Struct] String
# 3284|             getVariable().getInitializer(): [Initializer] initializer for x191
# 3284|               getExpr(): [ConstructorCall] call to String
# 3284|                   Type = [VoidType] void
# 3284|                   ValueCategory = prvalue
# 3285|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3285|             Type = [VoidType] void
# 3285|             ValueCategory = prvalue
# 3285|           getQualifier(): [VariableAccess] x191
# 3285|               Type = [Struct] String
# 3285|               ValueCategory = lvalue
# 3285|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3285|           Conversion = [BoolConversion] conversion to bool
# 3285|           Type = [BoolType] bool
# 3285|           Value = [CStyleCast] 0
# 3285|           ValueCategory = prvalue
# 3286|     getStmt(192): [DoStmt] do (...) ...
# 3288|       getCondition(): [Literal] 0
# 3288|           Type = [IntType] int
# 3288|           Value = [Literal] 0
# 3288|           ValueCategory = prvalue
# 3286|       getStmt(): [BlockStmt] { ... }
# 3287|         getStmt(0): [DeclStmt] declaration
# 3287|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x192
# 3287|               Type = [Struct] String
# 3287|             getVariable().getInitializer(): [Initializer] initializer for x192
# 3287|               getExpr(): [ConstructorCall] call to String
# 3287|                   Type = [VoidType] void
# 3287|                   ValueCategory = prvalue
# 3288|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3288|             Type = [VoidType] void
# 3288|             ValueCategory = prvalue
# 3288|           getQualifier(): [VariableAccess] x192
# 3288|               Type = [Struct] String
# 3288|               ValueCategory = lvalue
# 3288|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3288|           Conversion = [BoolConversion] conversion to bool
# 3288|           Type = [BoolType] bool
# 3288|           Value = [CStyleCast] 0
# 3288|           ValueCategory = prvalue
# 3289|     getStmt(193): [DoStmt] do (...) ...
# 3291|       getCondition(): [Literal] 0
# 3291|           Type = [IntType] int
# 3291|           Value = [Literal] 0
# 3291|           ValueCategory = prvalue
# 3289|       getStmt(): [BlockStmt] { ... }
# 3290|         getStmt(0): [DeclStmt] declaration
# 3290|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x193
# 3290|               Type = [Struct] String
# 3290|             getVariable().getInitializer(): [Initializer] initializer for x193
# 3290|               getExpr(): [ConstructorCall] call to String
# 3290|                   Type = [VoidType] void
# 3290|                   ValueCategory = prvalue
# 3291|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3291|             Type = [VoidType] void
# 3291|             ValueCategory = prvalue
# 3291|           getQualifier(): [VariableAccess] x193
# 3291|               Type = [Struct] String
# 3291|               ValueCategory = lvalue
# 3291|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3291|           Conversion = [BoolConversion] conversion to bool
# 3291|           Type = [BoolType] bool
# 3291|           Value = [CStyleCast] 0
# 3291|           ValueCategory = prvalue
# 3292|     getStmt(194): [DoStmt] do (...) ...
# 3294|       getCondition(): [Literal] 0
# 3294|           Type = [IntType] int
# 3294|           Value = [Literal] 0
# 3294|           ValueCategory = prvalue
# 3292|       getStmt(): [BlockStmt] { ... }
# 3293|         getStmt(0): [DeclStmt] declaration
# 3293|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x194
# 3293|               Type = [Struct] String
# 3293|             getVariable().getInitializer(): [Initializer] initializer for x194
# 3293|               getExpr(): [ConstructorCall] call to String
# 3293|                   Type = [VoidType] void
# 3293|                   ValueCategory = prvalue
# 3294|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3294|             Type = [VoidType] void
# 3294|             ValueCategory = prvalue
# 3294|           getQualifier(): [VariableAccess] x194
# 3294|               Type = [Struct] String
# 3294|               ValueCategory = lvalue
# 3294|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3294|           Conversion = [BoolConversion] conversion to bool
# 3294|           Type = [BoolType] bool
# 3294|           Value = [CStyleCast] 0
# 3294|           ValueCategory = prvalue
# 3295|     getStmt(195): [DoStmt] do (...) ...
# 3297|       getCondition(): [Literal] 0
# 3297|           Type = [IntType] int
# 3297|           Value = [Literal] 0
# 3297|           ValueCategory = prvalue
# 3295|       getStmt(): [BlockStmt] { ... }
# 3296|         getStmt(0): [DeclStmt] declaration
# 3296|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x195
# 3296|               Type = [Struct] String
# 3296|             getVariable().getInitializer(): [Initializer] initializer for x195
# 3296|               getExpr(): [ConstructorCall] call to String
# 3296|                   Type = [VoidType] void
# 3296|                   ValueCategory = prvalue
# 3297|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3297|             Type = [VoidType] void
# 3297|             ValueCategory = prvalue
# 3297|           getQualifier(): [VariableAccess] x195
# 3297|               Type = [Struct] String
# 3297|               ValueCategory = lvalue
# 3297|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3297|           Conversion = [BoolConversion] conversion to bool
# 3297|           Type = [BoolType] bool
# 3297|           Value = [CStyleCast] 0
# 3297|           ValueCategory = prvalue
# 3298|     getStmt(196): [DoStmt] do (...) ...
# 3300|       getCondition(): [Literal] 0
# 3300|           Type = [IntType] int
# 3300|           Value = [Literal] 0
# 3300|           ValueCategory = prvalue
# 3298|       getStmt(): [BlockStmt] { ... }
# 3299|         getStmt(0): [DeclStmt] declaration
# 3299|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x196
# 3299|               Type = [Struct] String
# 3299|             getVariable().getInitializer(): [Initializer] initializer for x196
# 3299|               getExpr(): [ConstructorCall] call to String
# 3299|                   Type = [VoidType] void
# 3299|                   ValueCategory = prvalue
# 3300|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3300|             Type = [VoidType] void
# 3300|             ValueCategory = prvalue
# 3300|           getQualifier(): [VariableAccess] x196
# 3300|               Type = [Struct] String
# 3300|               ValueCategory = lvalue
# 3300|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3300|           Conversion = [BoolConversion] conversion to bool
# 3300|           Type = [BoolType] bool
# 3300|           Value = [CStyleCast] 0
# 3300|           ValueCategory = prvalue
# 3301|     getStmt(197): [DoStmt] do (...) ...
# 3303|       getCondition(): [Literal] 0
# 3303|           Type = [IntType] int
# 3303|           Value = [Literal] 0
# 3303|           ValueCategory = prvalue
# 3301|       getStmt(): [BlockStmt] { ... }
# 3302|         getStmt(0): [DeclStmt] declaration
# 3302|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x197
# 3302|               Type = [Struct] String
# 3302|             getVariable().getInitializer(): [Initializer] initializer for x197
# 3302|               getExpr(): [ConstructorCall] call to String
# 3302|                   Type = [VoidType] void
# 3302|                   ValueCategory = prvalue
# 3303|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3303|             Type = [VoidType] void
# 3303|             ValueCategory = prvalue
# 3303|           getQualifier(): [VariableAccess] x197
# 3303|               Type = [Struct] String
# 3303|               ValueCategory = lvalue
# 3303|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3303|           Conversion = [BoolConversion] conversion to bool
# 3303|           Type = [BoolType] bool
# 3303|           Value = [CStyleCast] 0
# 3303|           ValueCategory = prvalue
# 3304|     getStmt(198): [DoStmt] do (...) ...
# 3306|       getCondition(): [Literal] 0
# 3306|           Type = [IntType] int
# 3306|           Value = [Literal] 0
# 3306|           ValueCategory = prvalue
# 3304|       getStmt(): [BlockStmt] { ... }
# 3305|         getStmt(0): [DeclStmt] declaration
# 3305|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x198
# 3305|               Type = [Struct] String
# 3305|             getVariable().getInitializer(): [Initializer] initializer for x198
# 3305|               getExpr(): [ConstructorCall] call to String
# 3305|                   Type = [VoidType] void
# 3305|                   ValueCategory = prvalue
# 3306|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3306|             Type = [VoidType] void
# 3306|             ValueCategory = prvalue
# 3306|           getQualifier(): [VariableAccess] x198
# 3306|               Type = [Struct] String
# 3306|               ValueCategory = lvalue
# 3306|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3306|           Conversion = [BoolConversion] conversion to bool
# 3306|           Type = [BoolType] bool
# 3306|           Value = [CStyleCast] 0
# 3306|           ValueCategory = prvalue
# 3307|     getStmt(199): [DoStmt] do (...) ...
# 3309|       getCondition(): [Literal] 0
# 3309|           Type = [IntType] int
# 3309|           Value = [Literal] 0
# 3309|           ValueCategory = prvalue
# 3307|       getStmt(): [BlockStmt] { ... }
# 3308|         getStmt(0): [DeclStmt] declaration
# 3308|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x199
# 3308|               Type = [Struct] String
# 3308|             getVariable().getInitializer(): [Initializer] initializer for x199
# 3308|               getExpr(): [ConstructorCall] call to String
# 3308|                   Type = [VoidType] void
# 3308|                   ValueCategory = prvalue
# 3309|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3309|             Type = [VoidType] void
# 3309|             ValueCategory = prvalue
# 3309|           getQualifier(): [VariableAccess] x199
# 3309|               Type = [Struct] String
# 3309|               ValueCategory = lvalue
# 3309|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3309|           Conversion = [BoolConversion] conversion to bool
# 3309|           Type = [BoolType] bool
# 3309|           Value = [CStyleCast] 0
# 3309|           ValueCategory = prvalue
# 3310|     getStmt(200): [DoStmt] do (...) ...
# 3312|       getCondition(): [Literal] 0
# 3312|           Type = [IntType] int
# 3312|           Value = [Literal] 0
# 3312|           ValueCategory = prvalue
# 3310|       getStmt(): [BlockStmt] { ... }
# 3311|         getStmt(0): [DeclStmt] declaration
# 3311|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x200
# 3311|               Type = [Struct] String
# 3311|             getVariable().getInitializer(): [Initializer] initializer for x200
# 3311|               getExpr(): [ConstructorCall] call to String
# 3311|                   Type = [VoidType] void
# 3311|                   ValueCategory = prvalue
# 3312|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3312|             Type = [VoidType] void
# 3312|             ValueCategory = prvalue
# 3312|           getQualifier(): [VariableAccess] x200
# 3312|               Type = [Struct] String
# 3312|               ValueCategory = lvalue
# 3312|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3312|           Conversion = [BoolConversion] conversion to bool
# 3312|           Type = [BoolType] bool
# 3312|           Value = [CStyleCast] 0
# 3312|           ValueCategory = prvalue
# 3313|     getStmt(201): [DoStmt] do (...) ...
# 3315|       getCondition(): [Literal] 0
# 3315|           Type = [IntType] int
# 3315|           Value = [Literal] 0
# 3315|           ValueCategory = prvalue
# 3313|       getStmt(): [BlockStmt] { ... }
# 3314|         getStmt(0): [DeclStmt] declaration
# 3314|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x201
# 3314|               Type = [Struct] String
# 3314|             getVariable().getInitializer(): [Initializer] initializer for x201
# 3314|               getExpr(): [ConstructorCall] call to String
# 3314|                   Type = [VoidType] void
# 3314|                   ValueCategory = prvalue
# 3315|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3315|             Type = [VoidType] void
# 3315|             ValueCategory = prvalue
# 3315|           getQualifier(): [VariableAccess] x201
# 3315|               Type = [Struct] String
# 3315|               ValueCategory = lvalue
# 3315|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3315|           Conversion = [BoolConversion] conversion to bool
# 3315|           Type = [BoolType] bool
# 3315|           Value = [CStyleCast] 0
# 3315|           ValueCategory = prvalue
# 3316|     getStmt(202): [DoStmt] do (...) ...
# 3318|       getCondition(): [Literal] 0
# 3318|           Type = [IntType] int
# 3318|           Value = [Literal] 0
# 3318|           ValueCategory = prvalue
# 3316|       getStmt(): [BlockStmt] { ... }
# 3317|         getStmt(0): [DeclStmt] declaration
# 3317|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x202
# 3317|               Type = [Struct] String
# 3317|             getVariable().getInitializer(): [Initializer] initializer for x202
# 3317|               getExpr(): [ConstructorCall] call to String
# 3317|                   Type = [VoidType] void
# 3317|                   ValueCategory = prvalue
# 3318|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3318|             Type = [VoidType] void
# 3318|             ValueCategory = prvalue
# 3318|           getQualifier(): [VariableAccess] x202
# 3318|               Type = [Struct] String
# 3318|               ValueCategory = lvalue
# 3318|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3318|           Conversion = [BoolConversion] conversion to bool
# 3318|           Type = [BoolType] bool
# 3318|           Value = [CStyleCast] 0
# 3318|           ValueCategory = prvalue
# 3319|     getStmt(203): [DoStmt] do (...) ...
# 3321|       getCondition(): [Literal] 0
# 3321|           Type = [IntType] int
# 3321|           Value = [Literal] 0
# 3321|           ValueCategory = prvalue
# 3319|       getStmt(): [BlockStmt] { ... }
# 3320|         getStmt(0): [DeclStmt] declaration
# 3320|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x203
# 3320|               Type = [Struct] String
# 3320|             getVariable().getInitializer(): [Initializer] initializer for x203
# 3320|               getExpr(): [ConstructorCall] call to String
# 3320|                   Type = [VoidType] void
# 3320|                   ValueCategory = prvalue
# 3321|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3321|             Type = [VoidType] void
# 3321|             ValueCategory = prvalue
# 3321|           getQualifier(): [VariableAccess] x203
# 3321|               Type = [Struct] String
# 3321|               ValueCategory = lvalue
# 3321|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3321|           Conversion = [BoolConversion] conversion to bool
# 3321|           Type = [BoolType] bool
# 3321|           Value = [CStyleCast] 0
# 3321|           ValueCategory = prvalue
# 3322|     getStmt(204): [DoStmt] do (...) ...
# 3324|       getCondition(): [Literal] 0
# 3324|           Type = [IntType] int
# 3324|           Value = [Literal] 0
# 3324|           ValueCategory = prvalue
# 3322|       getStmt(): [BlockStmt] { ... }
# 3323|         getStmt(0): [DeclStmt] declaration
# 3323|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x204
# 3323|               Type = [Struct] String
# 3323|             getVariable().getInitializer(): [Initializer] initializer for x204
# 3323|               getExpr(): [ConstructorCall] call to String
# 3323|                   Type = [VoidType] void
# 3323|                   ValueCategory = prvalue
# 3324|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3324|             Type = [VoidType] void
# 3324|             ValueCategory = prvalue
# 3324|           getQualifier(): [VariableAccess] x204
# 3324|               Type = [Struct] String
# 3324|               ValueCategory = lvalue
# 3324|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3324|           Conversion = [BoolConversion] conversion to bool
# 3324|           Type = [BoolType] bool
# 3324|           Value = [CStyleCast] 0
# 3324|           ValueCategory = prvalue
# 3325|     getStmt(205): [DoStmt] do (...) ...
# 3327|       getCondition(): [Literal] 0
# 3327|           Type = [IntType] int
# 3327|           Value = [Literal] 0
# 3327|           ValueCategory = prvalue
# 3325|       getStmt(): [BlockStmt] { ... }
# 3326|         getStmt(0): [DeclStmt] declaration
# 3326|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x205
# 3326|               Type = [Struct] String
# 3326|             getVariable().getInitializer(): [Initializer] initializer for x205
# 3326|               getExpr(): [ConstructorCall] call to String
# 3326|                   Type = [VoidType] void
# 3326|                   ValueCategory = prvalue
# 3327|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3327|             Type = [VoidType] void
# 3327|             ValueCategory = prvalue
# 3327|           getQualifier(): [VariableAccess] x205
# 3327|               Type = [Struct] String
# 3327|               ValueCategory = lvalue
# 3327|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3327|           Conversion = [BoolConversion] conversion to bool
# 3327|           Type = [BoolType] bool
# 3327|           Value = [CStyleCast] 0
# 3327|           ValueCategory = prvalue
# 3328|     getStmt(206): [DoStmt] do (...) ...
# 3330|       getCondition(): [Literal] 0
# 3330|           Type = [IntType] int
# 3330|           Value = [Literal] 0
# 3330|           ValueCategory = prvalue
# 3328|       getStmt(): [BlockStmt] { ... }
# 3329|         getStmt(0): [DeclStmt] declaration
# 3329|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x206
# 3329|               Type = [Struct] String
# 3329|             getVariable().getInitializer(): [Initializer] initializer for x206
# 3329|               getExpr(): [ConstructorCall] call to String
# 3329|                   Type = [VoidType] void
# 3329|                   ValueCategory = prvalue
# 3330|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3330|             Type = [VoidType] void
# 3330|             ValueCategory = prvalue
# 3330|           getQualifier(): [VariableAccess] x206
# 3330|               Type = [Struct] String
# 3330|               ValueCategory = lvalue
# 3330|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3330|           Conversion = [BoolConversion] conversion to bool
# 3330|           Type = [BoolType] bool
# 3330|           Value = [CStyleCast] 0
# 3330|           ValueCategory = prvalue
# 3331|     getStmt(207): [DoStmt] do (...) ...
# 3333|       getCondition(): [Literal] 0
# 3333|           Type = [IntType] int
# 3333|           Value = [Literal] 0
# 3333|           ValueCategory = prvalue
# 3331|       getStmt(): [BlockStmt] { ... }
# 3332|         getStmt(0): [DeclStmt] declaration
# 3332|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x207
# 3332|               Type = [Struct] String
# 3332|             getVariable().getInitializer(): [Initializer] initializer for x207
# 3332|               getExpr(): [ConstructorCall] call to String
# 3332|                   Type = [VoidType] void
# 3332|                   ValueCategory = prvalue
# 3333|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3333|             Type = [VoidType] void
# 3333|             ValueCategory = prvalue
# 3333|           getQualifier(): [VariableAccess] x207
# 3333|               Type = [Struct] String
# 3333|               ValueCategory = lvalue
# 3333|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3333|           Conversion = [BoolConversion] conversion to bool
# 3333|           Type = [BoolType] bool
# 3333|           Value = [CStyleCast] 0
# 3333|           ValueCategory = prvalue
# 3334|     getStmt(208): [DoStmt] do (...) ...
# 3336|       getCondition(): [Literal] 0
# 3336|           Type = [IntType] int
# 3336|           Value = [Literal] 0
# 3336|           ValueCategory = prvalue
# 3334|       getStmt(): [BlockStmt] { ... }
# 3335|         getStmt(0): [DeclStmt] declaration
# 3335|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x208
# 3335|               Type = [Struct] String
# 3335|             getVariable().getInitializer(): [Initializer] initializer for x208
# 3335|               getExpr(): [ConstructorCall] call to String
# 3335|                   Type = [VoidType] void
# 3335|                   ValueCategory = prvalue
# 3336|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3336|             Type = [VoidType] void
# 3336|             ValueCategory = prvalue
# 3336|           getQualifier(): [VariableAccess] x208
# 3336|               Type = [Struct] String
# 3336|               ValueCategory = lvalue
# 3336|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3336|           Conversion = [BoolConversion] conversion to bool
# 3336|           Type = [BoolType] bool
# 3336|           Value = [CStyleCast] 0
# 3336|           ValueCategory = prvalue
# 3337|     getStmt(209): [DoStmt] do (...) ...
# 3339|       getCondition(): [Literal] 0
# 3339|           Type = [IntType] int
# 3339|           Value = [Literal] 0
# 3339|           ValueCategory = prvalue
# 3337|       getStmt(): [BlockStmt] { ... }
# 3338|         getStmt(0): [DeclStmt] declaration
# 3338|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x209
# 3338|               Type = [Struct] String
# 3338|             getVariable().getInitializer(): [Initializer] initializer for x209
# 3338|               getExpr(): [ConstructorCall] call to String
# 3338|                   Type = [VoidType] void
# 3338|                   ValueCategory = prvalue
# 3339|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3339|             Type = [VoidType] void
# 3339|             ValueCategory = prvalue
# 3339|           getQualifier(): [VariableAccess] x209
# 3339|               Type = [Struct] String
# 3339|               ValueCategory = lvalue
# 3339|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3339|           Conversion = [BoolConversion] conversion to bool
# 3339|           Type = [BoolType] bool
# 3339|           Value = [CStyleCast] 0
# 3339|           ValueCategory = prvalue
# 3340|     getStmt(210): [DoStmt] do (...) ...
# 3342|       getCondition(): [Literal] 0
# 3342|           Type = [IntType] int
# 3342|           Value = [Literal] 0
# 3342|           ValueCategory = prvalue
# 3340|       getStmt(): [BlockStmt] { ... }
# 3341|         getStmt(0): [DeclStmt] declaration
# 3341|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x210
# 3341|               Type = [Struct] String
# 3341|             getVariable().getInitializer(): [Initializer] initializer for x210
# 3341|               getExpr(): [ConstructorCall] call to String
# 3341|                   Type = [VoidType] void
# 3341|                   ValueCategory = prvalue
# 3342|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3342|             Type = [VoidType] void
# 3342|             ValueCategory = prvalue
# 3342|           getQualifier(): [VariableAccess] x210
# 3342|               Type = [Struct] String
# 3342|               ValueCategory = lvalue
# 3342|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3342|           Conversion = [BoolConversion] conversion to bool
# 3342|           Type = [BoolType] bool
# 3342|           Value = [CStyleCast] 0
# 3342|           ValueCategory = prvalue
# 3343|     getStmt(211): [DoStmt] do (...) ...
# 3345|       getCondition(): [Literal] 0
# 3345|           Type = [IntType] int
# 3345|           Value = [Literal] 0
# 3345|           ValueCategory = prvalue
# 3343|       getStmt(): [BlockStmt] { ... }
# 3344|         getStmt(0): [DeclStmt] declaration
# 3344|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x211
# 3344|               Type = [Struct] String
# 3344|             getVariable().getInitializer(): [Initializer] initializer for x211
# 3344|               getExpr(): [ConstructorCall] call to String
# 3344|                   Type = [VoidType] void
# 3344|                   ValueCategory = prvalue
# 3345|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3345|             Type = [VoidType] void
# 3345|             ValueCategory = prvalue
# 3345|           getQualifier(): [VariableAccess] x211
# 3345|               Type = [Struct] String
# 3345|               ValueCategory = lvalue
# 3345|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3345|           Conversion = [BoolConversion] conversion to bool
# 3345|           Type = [BoolType] bool
# 3345|           Value = [CStyleCast] 0
# 3345|           ValueCategory = prvalue
# 3346|     getStmt(212): [DoStmt] do (...) ...
# 3348|       getCondition(): [Literal] 0
# 3348|           Type = [IntType] int
# 3348|           Value = [Literal] 0
# 3348|           ValueCategory = prvalue
# 3346|       getStmt(): [BlockStmt] { ... }
# 3347|         getStmt(0): [DeclStmt] declaration
# 3347|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x212
# 3347|               Type = [Struct] String
# 3347|             getVariable().getInitializer(): [Initializer] initializer for x212
# 3347|               getExpr(): [ConstructorCall] call to String
# 3347|                   Type = [VoidType] void
# 3347|                   ValueCategory = prvalue
# 3348|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3348|             Type = [VoidType] void
# 3348|             ValueCategory = prvalue
# 3348|           getQualifier(): [VariableAccess] x212
# 3348|               Type = [Struct] String
# 3348|               ValueCategory = lvalue
# 3348|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3348|           Conversion = [BoolConversion] conversion to bool
# 3348|           Type = [BoolType] bool
# 3348|           Value = [CStyleCast] 0
# 3348|           ValueCategory = prvalue
# 3349|     getStmt(213): [DoStmt] do (...) ...
# 3351|       getCondition(): [Literal] 0
# 3351|           Type = [IntType] int
# 3351|           Value = [Literal] 0
# 3351|           ValueCategory = prvalue
# 3349|       getStmt(): [BlockStmt] { ... }
# 3350|         getStmt(0): [DeclStmt] declaration
# 3350|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x213
# 3350|               Type = [Struct] String
# 3350|             getVariable().getInitializer(): [Initializer] initializer for x213
# 3350|               getExpr(): [ConstructorCall] call to String
# 3350|                   Type = [VoidType] void
# 3350|                   ValueCategory = prvalue
# 3351|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3351|             Type = [VoidType] void
# 3351|             ValueCategory = prvalue
# 3351|           getQualifier(): [VariableAccess] x213
# 3351|               Type = [Struct] String
# 3351|               ValueCategory = lvalue
# 3351|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3351|           Conversion = [BoolConversion] conversion to bool
# 3351|           Type = [BoolType] bool
# 3351|           Value = [CStyleCast] 0
# 3351|           ValueCategory = prvalue
# 3352|     getStmt(214): [DoStmt] do (...) ...
# 3354|       getCondition(): [Literal] 0
# 3354|           Type = [IntType] int
# 3354|           Value = [Literal] 0
# 3354|           ValueCategory = prvalue
# 3352|       getStmt(): [BlockStmt] { ... }
# 3353|         getStmt(0): [DeclStmt] declaration
# 3353|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x214
# 3353|               Type = [Struct] String
# 3353|             getVariable().getInitializer(): [Initializer] initializer for x214
# 3353|               getExpr(): [ConstructorCall] call to String
# 3353|                   Type = [VoidType] void
# 3353|                   ValueCategory = prvalue
# 3354|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3354|             Type = [VoidType] void
# 3354|             ValueCategory = prvalue
# 3354|           getQualifier(): [VariableAccess] x214
# 3354|               Type = [Struct] String
# 3354|               ValueCategory = lvalue
# 3354|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3354|           Conversion = [BoolConversion] conversion to bool
# 3354|           Type = [BoolType] bool
# 3354|           Value = [CStyleCast] 0
# 3354|           ValueCategory = prvalue
# 3355|     getStmt(215): [DoStmt] do (...) ...
# 3357|       getCondition(): [Literal] 0
# 3357|           Type = [IntType] int
# 3357|           Value = [Literal] 0
# 3357|           ValueCategory = prvalue
# 3355|       getStmt(): [BlockStmt] { ... }
# 3356|         getStmt(0): [DeclStmt] declaration
# 3356|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x215
# 3356|               Type = [Struct] String
# 3356|             getVariable().getInitializer(): [Initializer] initializer for x215
# 3356|               getExpr(): [ConstructorCall] call to String
# 3356|                   Type = [VoidType] void
# 3356|                   ValueCategory = prvalue
# 3357|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3357|             Type = [VoidType] void
# 3357|             ValueCategory = prvalue
# 3357|           getQualifier(): [VariableAccess] x215
# 3357|               Type = [Struct] String
# 3357|               ValueCategory = lvalue
# 3357|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3357|           Conversion = [BoolConversion] conversion to bool
# 3357|           Type = [BoolType] bool
# 3357|           Value = [CStyleCast] 0
# 3357|           ValueCategory = prvalue
# 3358|     getStmt(216): [DoStmt] do (...) ...
# 3360|       getCondition(): [Literal] 0
# 3360|           Type = [IntType] int
# 3360|           Value = [Literal] 0
# 3360|           ValueCategory = prvalue
# 3358|       getStmt(): [BlockStmt] { ... }
# 3359|         getStmt(0): [DeclStmt] declaration
# 3359|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x216
# 3359|               Type = [Struct] String
# 3359|             getVariable().getInitializer(): [Initializer] initializer for x216
# 3359|               getExpr(): [ConstructorCall] call to String
# 3359|                   Type = [VoidType] void
# 3359|                   ValueCategory = prvalue
# 3360|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3360|             Type = [VoidType] void
# 3360|             ValueCategory = prvalue
# 3360|           getQualifier(): [VariableAccess] x216
# 3360|               Type = [Struct] String
# 3360|               ValueCategory = lvalue
# 3360|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3360|           Conversion = [BoolConversion] conversion to bool
# 3360|           Type = [BoolType] bool
# 3360|           Value = [CStyleCast] 0
# 3360|           ValueCategory = prvalue
# 3361|     getStmt(217): [DoStmt] do (...) ...
# 3363|       getCondition(): [Literal] 0
# 3363|           Type = [IntType] int
# 3363|           Value = [Literal] 0
# 3363|           ValueCategory = prvalue
# 3361|       getStmt(): [BlockStmt] { ... }
# 3362|         getStmt(0): [DeclStmt] declaration
# 3362|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x217
# 3362|               Type = [Struct] String
# 3362|             getVariable().getInitializer(): [Initializer] initializer for x217
# 3362|               getExpr(): [ConstructorCall] call to String
# 3362|                   Type = [VoidType] void
# 3362|                   ValueCategory = prvalue
# 3363|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3363|             Type = [VoidType] void
# 3363|             ValueCategory = prvalue
# 3363|           getQualifier(): [VariableAccess] x217
# 3363|               Type = [Struct] String
# 3363|               ValueCategory = lvalue
# 3363|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3363|           Conversion = [BoolConversion] conversion to bool
# 3363|           Type = [BoolType] bool
# 3363|           Value = [CStyleCast] 0
# 3363|           ValueCategory = prvalue
# 3364|     getStmt(218): [DoStmt] do (...) ...
# 3366|       getCondition(): [Literal] 0
# 3366|           Type = [IntType] int
# 3366|           Value = [Literal] 0
# 3366|           ValueCategory = prvalue
# 3364|       getStmt(): [BlockStmt] { ... }
# 3365|         getStmt(0): [DeclStmt] declaration
# 3365|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x218
# 3365|               Type = [Struct] String
# 3365|             getVariable().getInitializer(): [Initializer] initializer for x218
# 3365|               getExpr(): [ConstructorCall] call to String
# 3365|                   Type = [VoidType] void
# 3365|                   ValueCategory = prvalue
# 3366|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3366|             Type = [VoidType] void
# 3366|             ValueCategory = prvalue
# 3366|           getQualifier(): [VariableAccess] x218
# 3366|               Type = [Struct] String
# 3366|               ValueCategory = lvalue
# 3366|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3366|           Conversion = [BoolConversion] conversion to bool
# 3366|           Type = [BoolType] bool
# 3366|           Value = [CStyleCast] 0
# 3366|           ValueCategory = prvalue
# 3367|     getStmt(219): [DoStmt] do (...) ...
# 3369|       getCondition(): [Literal] 0
# 3369|           Type = [IntType] int
# 3369|           Value = [Literal] 0
# 3369|           ValueCategory = prvalue
# 3367|       getStmt(): [BlockStmt] { ... }
# 3368|         getStmt(0): [DeclStmt] declaration
# 3368|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x219
# 3368|               Type = [Struct] String
# 3368|             getVariable().getInitializer(): [Initializer] initializer for x219
# 3368|               getExpr(): [ConstructorCall] call to String
# 3368|                   Type = [VoidType] void
# 3368|                   ValueCategory = prvalue
# 3369|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3369|             Type = [VoidType] void
# 3369|             ValueCategory = prvalue
# 3369|           getQualifier(): [VariableAccess] x219
# 3369|               Type = [Struct] String
# 3369|               ValueCategory = lvalue
# 3369|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3369|           Conversion = [BoolConversion] conversion to bool
# 3369|           Type = [BoolType] bool
# 3369|           Value = [CStyleCast] 0
# 3369|           ValueCategory = prvalue
# 3370|     getStmt(220): [DoStmt] do (...) ...
# 3372|       getCondition(): [Literal] 0
# 3372|           Type = [IntType] int
# 3372|           Value = [Literal] 0
# 3372|           ValueCategory = prvalue
# 3370|       getStmt(): [BlockStmt] { ... }
# 3371|         getStmt(0): [DeclStmt] declaration
# 3371|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x220
# 3371|               Type = [Struct] String
# 3371|             getVariable().getInitializer(): [Initializer] initializer for x220
# 3371|               getExpr(): [ConstructorCall] call to String
# 3371|                   Type = [VoidType] void
# 3371|                   ValueCategory = prvalue
# 3372|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3372|             Type = [VoidType] void
# 3372|             ValueCategory = prvalue
# 3372|           getQualifier(): [VariableAccess] x220
# 3372|               Type = [Struct] String
# 3372|               ValueCategory = lvalue
# 3372|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3372|           Conversion = [BoolConversion] conversion to bool
# 3372|           Type = [BoolType] bool
# 3372|           Value = [CStyleCast] 0
# 3372|           ValueCategory = prvalue
# 3373|     getStmt(221): [DoStmt] do (...) ...
# 3375|       getCondition(): [Literal] 0
# 3375|           Type = [IntType] int
# 3375|           Value = [Literal] 0
# 3375|           ValueCategory = prvalue
# 3373|       getStmt(): [BlockStmt] { ... }
# 3374|         getStmt(0): [DeclStmt] declaration
# 3374|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x221
# 3374|               Type = [Struct] String
# 3374|             getVariable().getInitializer(): [Initializer] initializer for x221
# 3374|               getExpr(): [ConstructorCall] call to String
# 3374|                   Type = [VoidType] void
# 3374|                   ValueCategory = prvalue
# 3375|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3375|             Type = [VoidType] void
# 3375|             ValueCategory = prvalue
# 3375|           getQualifier(): [VariableAccess] x221
# 3375|               Type = [Struct] String
# 3375|               ValueCategory = lvalue
# 3375|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3375|           Conversion = [BoolConversion] conversion to bool
# 3375|           Type = [BoolType] bool
# 3375|           Value = [CStyleCast] 0
# 3375|           ValueCategory = prvalue
# 3376|     getStmt(222): [DoStmt] do (...) ...
# 3378|       getCondition(): [Literal] 0
# 3378|           Type = [IntType] int
# 3378|           Value = [Literal] 0
# 3378|           ValueCategory = prvalue
# 3376|       getStmt(): [BlockStmt] { ... }
# 3377|         getStmt(0): [DeclStmt] declaration
# 3377|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x222
# 3377|               Type = [Struct] String
# 3377|             getVariable().getInitializer(): [Initializer] initializer for x222
# 3377|               getExpr(): [ConstructorCall] call to String
# 3377|                   Type = [VoidType] void
# 3377|                   ValueCategory = prvalue
# 3378|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3378|             Type = [VoidType] void
# 3378|             ValueCategory = prvalue
# 3378|           getQualifier(): [VariableAccess] x222
# 3378|               Type = [Struct] String
# 3378|               ValueCategory = lvalue
# 3378|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3378|           Conversion = [BoolConversion] conversion to bool
# 3378|           Type = [BoolType] bool
# 3378|           Value = [CStyleCast] 0
# 3378|           ValueCategory = prvalue
# 3379|     getStmt(223): [DoStmt] do (...) ...
# 3381|       getCondition(): [Literal] 0
# 3381|           Type = [IntType] int
# 3381|           Value = [Literal] 0
# 3381|           ValueCategory = prvalue
# 3379|       getStmt(): [BlockStmt] { ... }
# 3380|         getStmt(0): [DeclStmt] declaration
# 3380|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x223
# 3380|               Type = [Struct] String
# 3380|             getVariable().getInitializer(): [Initializer] initializer for x223
# 3380|               getExpr(): [ConstructorCall] call to String
# 3380|                   Type = [VoidType] void
# 3380|                   ValueCategory = prvalue
# 3381|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3381|             Type = [VoidType] void
# 3381|             ValueCategory = prvalue
# 3381|           getQualifier(): [VariableAccess] x223
# 3381|               Type = [Struct] String
# 3381|               ValueCategory = lvalue
# 3381|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3381|           Conversion = [BoolConversion] conversion to bool
# 3381|           Type = [BoolType] bool
# 3381|           Value = [CStyleCast] 0
# 3381|           ValueCategory = prvalue
# 3382|     getStmt(224): [DoStmt] do (...) ...
# 3384|       getCondition(): [Literal] 0
# 3384|           Type = [IntType] int
# 3384|           Value = [Literal] 0
# 3384|           ValueCategory = prvalue
# 3382|       getStmt(): [BlockStmt] { ... }
# 3383|         getStmt(0): [DeclStmt] declaration
# 3383|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x224
# 3383|               Type = [Struct] String
# 3383|             getVariable().getInitializer(): [Initializer] initializer for x224
# 3383|               getExpr(): [ConstructorCall] call to String
# 3383|                   Type = [VoidType] void
# 3383|                   ValueCategory = prvalue
# 3384|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3384|             Type = [VoidType] void
# 3384|             ValueCategory = prvalue
# 3384|           getQualifier(): [VariableAccess] x224
# 3384|               Type = [Struct] String
# 3384|               ValueCategory = lvalue
# 3384|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3384|           Conversion = [BoolConversion] conversion to bool
# 3384|           Type = [BoolType] bool
# 3384|           Value = [CStyleCast] 0
# 3384|           ValueCategory = prvalue
# 3385|     getStmt(225): [DoStmt] do (...) ...
# 3387|       getCondition(): [Literal] 0
# 3387|           Type = [IntType] int
# 3387|           Value = [Literal] 0
# 3387|           ValueCategory = prvalue
# 3385|       getStmt(): [BlockStmt] { ... }
# 3386|         getStmt(0): [DeclStmt] declaration
# 3386|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x225
# 3386|               Type = [Struct] String
# 3386|             getVariable().getInitializer(): [Initializer] initializer for x225
# 3386|               getExpr(): [ConstructorCall] call to String
# 3386|                   Type = [VoidType] void
# 3386|                   ValueCategory = prvalue
# 3387|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3387|             Type = [VoidType] void
# 3387|             ValueCategory = prvalue
# 3387|           getQualifier(): [VariableAccess] x225
# 3387|               Type = [Struct] String
# 3387|               ValueCategory = lvalue
# 3387|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3387|           Conversion = [BoolConversion] conversion to bool
# 3387|           Type = [BoolType] bool
# 3387|           Value = [CStyleCast] 0
# 3387|           ValueCategory = prvalue
# 3388|     getStmt(226): [DoStmt] do (...) ...
# 3390|       getCondition(): [Literal] 0
# 3390|           Type = [IntType] int
# 3390|           Value = [Literal] 0
# 3390|           ValueCategory = prvalue
# 3388|       getStmt(): [BlockStmt] { ... }
# 3389|         getStmt(0): [DeclStmt] declaration
# 3389|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x226
# 3389|               Type = [Struct] String
# 3389|             getVariable().getInitializer(): [Initializer] initializer for x226
# 3389|               getExpr(): [ConstructorCall] call to String
# 3389|                   Type = [VoidType] void
# 3389|                   ValueCategory = prvalue
# 3390|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3390|             Type = [VoidType] void
# 3390|             ValueCategory = prvalue
# 3390|           getQualifier(): [VariableAccess] x226
# 3390|               Type = [Struct] String
# 3390|               ValueCategory = lvalue
# 3390|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3390|           Conversion = [BoolConversion] conversion to bool
# 3390|           Type = [BoolType] bool
# 3390|           Value = [CStyleCast] 0
# 3390|           ValueCategory = prvalue
# 3391|     getStmt(227): [DoStmt] do (...) ...
# 3393|       getCondition(): [Literal] 0
# 3393|           Type = [IntType] int
# 3393|           Value = [Literal] 0
# 3393|           ValueCategory = prvalue
# 3391|       getStmt(): [BlockStmt] { ... }
# 3392|         getStmt(0): [DeclStmt] declaration
# 3392|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x227
# 3392|               Type = [Struct] String
# 3392|             getVariable().getInitializer(): [Initializer] initializer for x227
# 3392|               getExpr(): [ConstructorCall] call to String
# 3392|                   Type = [VoidType] void
# 3392|                   ValueCategory = prvalue
# 3393|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3393|             Type = [VoidType] void
# 3393|             ValueCategory = prvalue
# 3393|           getQualifier(): [VariableAccess] x227
# 3393|               Type = [Struct] String
# 3393|               ValueCategory = lvalue
# 3393|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3393|           Conversion = [BoolConversion] conversion to bool
# 3393|           Type = [BoolType] bool
# 3393|           Value = [CStyleCast] 0
# 3393|           ValueCategory = prvalue
# 3394|     getStmt(228): [DoStmt] do (...) ...
# 3396|       getCondition(): [Literal] 0
# 3396|           Type = [IntType] int
# 3396|           Value = [Literal] 0
# 3396|           ValueCategory = prvalue
# 3394|       getStmt(): [BlockStmt] { ... }
# 3395|         getStmt(0): [DeclStmt] declaration
# 3395|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x228
# 3395|               Type = [Struct] String
# 3395|             getVariable().getInitializer(): [Initializer] initializer for x228
# 3395|               getExpr(): [ConstructorCall] call to String
# 3395|                   Type = [VoidType] void
# 3395|                   ValueCategory = prvalue
# 3396|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3396|             Type = [VoidType] void
# 3396|             ValueCategory = prvalue
# 3396|           getQualifier(): [VariableAccess] x228
# 3396|               Type = [Struct] String
# 3396|               ValueCategory = lvalue
# 3396|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3396|           Conversion = [BoolConversion] conversion to bool
# 3396|           Type = [BoolType] bool
# 3396|           Value = [CStyleCast] 0
# 3396|           ValueCategory = prvalue
# 3397|     getStmt(229): [DoStmt] do (...) ...
# 3399|       getCondition(): [Literal] 0
# 3399|           Type = [IntType] int
# 3399|           Value = [Literal] 0
# 3399|           ValueCategory = prvalue
# 3397|       getStmt(): [BlockStmt] { ... }
# 3398|         getStmt(0): [DeclStmt] declaration
# 3398|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x229
# 3398|               Type = [Struct] String
# 3398|             getVariable().getInitializer(): [Initializer] initializer for x229
# 3398|               getExpr(): [ConstructorCall] call to String
# 3398|                   Type = [VoidType] void
# 3398|                   ValueCategory = prvalue
# 3399|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3399|             Type = [VoidType] void
# 3399|             ValueCategory = prvalue
# 3399|           getQualifier(): [VariableAccess] x229
# 3399|               Type = [Struct] String
# 3399|               ValueCategory = lvalue
# 3399|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3399|           Conversion = [BoolConversion] conversion to bool
# 3399|           Type = [BoolType] bool
# 3399|           Value = [CStyleCast] 0
# 3399|           ValueCategory = prvalue
# 3400|     getStmt(230): [DoStmt] do (...) ...
# 3402|       getCondition(): [Literal] 0
# 3402|           Type = [IntType] int
# 3402|           Value = [Literal] 0
# 3402|           ValueCategory = prvalue
# 3400|       getStmt(): [BlockStmt] { ... }
# 3401|         getStmt(0): [DeclStmt] declaration
# 3401|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x230
# 3401|               Type = [Struct] String
# 3401|             getVariable().getInitializer(): [Initializer] initializer for x230
# 3401|               getExpr(): [ConstructorCall] call to String
# 3401|                   Type = [VoidType] void
# 3401|                   ValueCategory = prvalue
# 3402|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3402|             Type = [VoidType] void
# 3402|             ValueCategory = prvalue
# 3402|           getQualifier(): [VariableAccess] x230
# 3402|               Type = [Struct] String
# 3402|               ValueCategory = lvalue
# 3402|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3402|           Conversion = [BoolConversion] conversion to bool
# 3402|           Type = [BoolType] bool
# 3402|           Value = [CStyleCast] 0
# 3402|           ValueCategory = prvalue
# 3403|     getStmt(231): [DoStmt] do (...) ...
# 3405|       getCondition(): [Literal] 0
# 3405|           Type = [IntType] int
# 3405|           Value = [Literal] 0
# 3405|           ValueCategory = prvalue
# 3403|       getStmt(): [BlockStmt] { ... }
# 3404|         getStmt(0): [DeclStmt] declaration
# 3404|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x231
# 3404|               Type = [Struct] String
# 3404|             getVariable().getInitializer(): [Initializer] initializer for x231
# 3404|               getExpr(): [ConstructorCall] call to String
# 3404|                   Type = [VoidType] void
# 3404|                   ValueCategory = prvalue
# 3405|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3405|             Type = [VoidType] void
# 3405|             ValueCategory = prvalue
# 3405|           getQualifier(): [VariableAccess] x231
# 3405|               Type = [Struct] String
# 3405|               ValueCategory = lvalue
# 3405|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3405|           Conversion = [BoolConversion] conversion to bool
# 3405|           Type = [BoolType] bool
# 3405|           Value = [CStyleCast] 0
# 3405|           ValueCategory = prvalue
# 3406|     getStmt(232): [DoStmt] do (...) ...
# 3408|       getCondition(): [Literal] 0
# 3408|           Type = [IntType] int
# 3408|           Value = [Literal] 0
# 3408|           ValueCategory = prvalue
# 3406|       getStmt(): [BlockStmt] { ... }
# 3407|         getStmt(0): [DeclStmt] declaration
# 3407|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x232
# 3407|               Type = [Struct] String
# 3407|             getVariable().getInitializer(): [Initializer] initializer for x232
# 3407|               getExpr(): [ConstructorCall] call to String
# 3407|                   Type = [VoidType] void
# 3407|                   ValueCategory = prvalue
# 3408|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3408|             Type = [VoidType] void
# 3408|             ValueCategory = prvalue
# 3408|           getQualifier(): [VariableAccess] x232
# 3408|               Type = [Struct] String
# 3408|               ValueCategory = lvalue
# 3408|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3408|           Conversion = [BoolConversion] conversion to bool
# 3408|           Type = [BoolType] bool
# 3408|           Value = [CStyleCast] 0
# 3408|           ValueCategory = prvalue
# 3409|     getStmt(233): [DoStmt] do (...) ...
# 3411|       getCondition(): [Literal] 0
# 3411|           Type = [IntType] int
# 3411|           Value = [Literal] 0
# 3411|           ValueCategory = prvalue
# 3409|       getStmt(): [BlockStmt] { ... }
# 3410|         getStmt(0): [DeclStmt] declaration
# 3410|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x233
# 3410|               Type = [Struct] String
# 3410|             getVariable().getInitializer(): [Initializer] initializer for x233
# 3410|               getExpr(): [ConstructorCall] call to String
# 3410|                   Type = [VoidType] void
# 3410|                   ValueCategory = prvalue
# 3411|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3411|             Type = [VoidType] void
# 3411|             ValueCategory = prvalue
# 3411|           getQualifier(): [VariableAccess] x233
# 3411|               Type = [Struct] String
# 3411|               ValueCategory = lvalue
# 3411|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3411|           Conversion = [BoolConversion] conversion to bool
# 3411|           Type = [BoolType] bool
# 3411|           Value = [CStyleCast] 0
# 3411|           ValueCategory = prvalue
# 3412|     getStmt(234): [DoStmt] do (...) ...
# 3414|       getCondition(): [Literal] 0
# 3414|           Type = [IntType] int
# 3414|           Value = [Literal] 0
# 3414|           ValueCategory = prvalue
# 3412|       getStmt(): [BlockStmt] { ... }
# 3413|         getStmt(0): [DeclStmt] declaration
# 3413|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x234
# 3413|               Type = [Struct] String
# 3413|             getVariable().getInitializer(): [Initializer] initializer for x234
# 3413|               getExpr(): [ConstructorCall] call to String
# 3413|                   Type = [VoidType] void
# 3413|                   ValueCategory = prvalue
# 3414|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3414|             Type = [VoidType] void
# 3414|             ValueCategory = prvalue
# 3414|           getQualifier(): [VariableAccess] x234
# 3414|               Type = [Struct] String
# 3414|               ValueCategory = lvalue
# 3414|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3414|           Conversion = [BoolConversion] conversion to bool
# 3414|           Type = [BoolType] bool
# 3414|           Value = [CStyleCast] 0
# 3414|           ValueCategory = prvalue
# 3415|     getStmt(235): [DoStmt] do (...) ...
# 3417|       getCondition(): [Literal] 0
# 3417|           Type = [IntType] int
# 3417|           Value = [Literal] 0
# 3417|           ValueCategory = prvalue
# 3415|       getStmt(): [BlockStmt] { ... }
# 3416|         getStmt(0): [DeclStmt] declaration
# 3416|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x235
# 3416|               Type = [Struct] String
# 3416|             getVariable().getInitializer(): [Initializer] initializer for x235
# 3416|               getExpr(): [ConstructorCall] call to String
# 3416|                   Type = [VoidType] void
# 3416|                   ValueCategory = prvalue
# 3417|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3417|             Type = [VoidType] void
# 3417|             ValueCategory = prvalue
# 3417|           getQualifier(): [VariableAccess] x235
# 3417|               Type = [Struct] String
# 3417|               ValueCategory = lvalue
# 3417|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3417|           Conversion = [BoolConversion] conversion to bool
# 3417|           Type = [BoolType] bool
# 3417|           Value = [CStyleCast] 0
# 3417|           ValueCategory = prvalue
# 3418|     getStmt(236): [DoStmt] do (...) ...
# 3420|       getCondition(): [Literal] 0
# 3420|           Type = [IntType] int
# 3420|           Value = [Literal] 0
# 3420|           ValueCategory = prvalue
# 3418|       getStmt(): [BlockStmt] { ... }
# 3419|         getStmt(0): [DeclStmt] declaration
# 3419|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x236
# 3419|               Type = [Struct] String
# 3419|             getVariable().getInitializer(): [Initializer] initializer for x236
# 3419|               getExpr(): [ConstructorCall] call to String
# 3419|                   Type = [VoidType] void
# 3419|                   ValueCategory = prvalue
# 3420|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3420|             Type = [VoidType] void
# 3420|             ValueCategory = prvalue
# 3420|           getQualifier(): [VariableAccess] x236
# 3420|               Type = [Struct] String
# 3420|               ValueCategory = lvalue
# 3420|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3420|           Conversion = [BoolConversion] conversion to bool
# 3420|           Type = [BoolType] bool
# 3420|           Value = [CStyleCast] 0
# 3420|           ValueCategory = prvalue
# 3421|     getStmt(237): [DoStmt] do (...) ...
# 3423|       getCondition(): [Literal] 0
# 3423|           Type = [IntType] int
# 3423|           Value = [Literal] 0
# 3423|           ValueCategory = prvalue
# 3421|       getStmt(): [BlockStmt] { ... }
# 3422|         getStmt(0): [DeclStmt] declaration
# 3422|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x237
# 3422|               Type = [Struct] String
# 3422|             getVariable().getInitializer(): [Initializer] initializer for x237
# 3422|               getExpr(): [ConstructorCall] call to String
# 3422|                   Type = [VoidType] void
# 3422|                   ValueCategory = prvalue
# 3423|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3423|             Type = [VoidType] void
# 3423|             ValueCategory = prvalue
# 3423|           getQualifier(): [VariableAccess] x237
# 3423|               Type = [Struct] String
# 3423|               ValueCategory = lvalue
# 3423|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3423|           Conversion = [BoolConversion] conversion to bool
# 3423|           Type = [BoolType] bool
# 3423|           Value = [CStyleCast] 0
# 3423|           ValueCategory = prvalue
# 3424|     getStmt(238): [DoStmt] do (...) ...
# 3426|       getCondition(): [Literal] 0
# 3426|           Type = [IntType] int
# 3426|           Value = [Literal] 0
# 3426|           ValueCategory = prvalue
# 3424|       getStmt(): [BlockStmt] { ... }
# 3425|         getStmt(0): [DeclStmt] declaration
# 3425|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x238
# 3425|               Type = [Struct] String
# 3425|             getVariable().getInitializer(): [Initializer] initializer for x238
# 3425|               getExpr(): [ConstructorCall] call to String
# 3425|                   Type = [VoidType] void
# 3425|                   ValueCategory = prvalue
# 3426|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3426|             Type = [VoidType] void
# 3426|             ValueCategory = prvalue
# 3426|           getQualifier(): [VariableAccess] x238
# 3426|               Type = [Struct] String
# 3426|               ValueCategory = lvalue
# 3426|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3426|           Conversion = [BoolConversion] conversion to bool
# 3426|           Type = [BoolType] bool
# 3426|           Value = [CStyleCast] 0
# 3426|           ValueCategory = prvalue
# 3427|     getStmt(239): [DoStmt] do (...) ...
# 3429|       getCondition(): [Literal] 0
# 3429|           Type = [IntType] int
# 3429|           Value = [Literal] 0
# 3429|           ValueCategory = prvalue
# 3427|       getStmt(): [BlockStmt] { ... }
# 3428|         getStmt(0): [DeclStmt] declaration
# 3428|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x239
# 3428|               Type = [Struct] String
# 3428|             getVariable().getInitializer(): [Initializer] initializer for x239
# 3428|               getExpr(): [ConstructorCall] call to String
# 3428|                   Type = [VoidType] void
# 3428|                   ValueCategory = prvalue
# 3429|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3429|             Type = [VoidType] void
# 3429|             ValueCategory = prvalue
# 3429|           getQualifier(): [VariableAccess] x239
# 3429|               Type = [Struct] String
# 3429|               ValueCategory = lvalue
# 3429|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3429|           Conversion = [BoolConversion] conversion to bool
# 3429|           Type = [BoolType] bool
# 3429|           Value = [CStyleCast] 0
# 3429|           ValueCategory = prvalue
# 3430|     getStmt(240): [DoStmt] do (...) ...
# 3432|       getCondition(): [Literal] 0
# 3432|           Type = [IntType] int
# 3432|           Value = [Literal] 0
# 3432|           ValueCategory = prvalue
# 3430|       getStmt(): [BlockStmt] { ... }
# 3431|         getStmt(0): [DeclStmt] declaration
# 3431|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x240
# 3431|               Type = [Struct] String
# 3431|             getVariable().getInitializer(): [Initializer] initializer for x240
# 3431|               getExpr(): [ConstructorCall] call to String
# 3431|                   Type = [VoidType] void
# 3431|                   ValueCategory = prvalue
# 3432|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3432|             Type = [VoidType] void
# 3432|             ValueCategory = prvalue
# 3432|           getQualifier(): [VariableAccess] x240
# 3432|               Type = [Struct] String
# 3432|               ValueCategory = lvalue
# 3432|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3432|           Conversion = [BoolConversion] conversion to bool
# 3432|           Type = [BoolType] bool
# 3432|           Value = [CStyleCast] 0
# 3432|           ValueCategory = prvalue
# 3433|     getStmt(241): [DoStmt] do (...) ...
# 3435|       getCondition(): [Literal] 0
# 3435|           Type = [IntType] int
# 3435|           Value = [Literal] 0
# 3435|           ValueCategory = prvalue
# 3433|       getStmt(): [BlockStmt] { ... }
# 3434|         getStmt(0): [DeclStmt] declaration
# 3434|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x241
# 3434|               Type = [Struct] String
# 3434|             getVariable().getInitializer(): [Initializer] initializer for x241
# 3434|               getExpr(): [ConstructorCall] call to String
# 3434|                   Type = [VoidType] void
# 3434|                   ValueCategory = prvalue
# 3435|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3435|             Type = [VoidType] void
# 3435|             ValueCategory = prvalue
# 3435|           getQualifier(): [VariableAccess] x241
# 3435|               Type = [Struct] String
# 3435|               ValueCategory = lvalue
# 3435|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3435|           Conversion = [BoolConversion] conversion to bool
# 3435|           Type = [BoolType] bool
# 3435|           Value = [CStyleCast] 0
# 3435|           ValueCategory = prvalue
# 3436|     getStmt(242): [DoStmt] do (...) ...
# 3438|       getCondition(): [Literal] 0
# 3438|           Type = [IntType] int
# 3438|           Value = [Literal] 0
# 3438|           ValueCategory = prvalue
# 3436|       getStmt(): [BlockStmt] { ... }
# 3437|         getStmt(0): [DeclStmt] declaration
# 3437|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x242
# 3437|               Type = [Struct] String
# 3437|             getVariable().getInitializer(): [Initializer] initializer for x242
# 3437|               getExpr(): [ConstructorCall] call to String
# 3437|                   Type = [VoidType] void
# 3437|                   ValueCategory = prvalue
# 3438|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3438|             Type = [VoidType] void
# 3438|             ValueCategory = prvalue
# 3438|           getQualifier(): [VariableAccess] x242
# 3438|               Type = [Struct] String
# 3438|               ValueCategory = lvalue
# 3438|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3438|           Conversion = [BoolConversion] conversion to bool
# 3438|           Type = [BoolType] bool
# 3438|           Value = [CStyleCast] 0
# 3438|           ValueCategory = prvalue
# 3439|     getStmt(243): [DoStmt] do (...) ...
# 3441|       getCondition(): [Literal] 0
# 3441|           Type = [IntType] int
# 3441|           Value = [Literal] 0
# 3441|           ValueCategory = prvalue
# 3439|       getStmt(): [BlockStmt] { ... }
# 3440|         getStmt(0): [DeclStmt] declaration
# 3440|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x243
# 3440|               Type = [Struct] String
# 3440|             getVariable().getInitializer(): [Initializer] initializer for x243
# 3440|               getExpr(): [ConstructorCall] call to String
# 3440|                   Type = [VoidType] void
# 3440|                   ValueCategory = prvalue
# 3441|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3441|             Type = [VoidType] void
# 3441|             ValueCategory = prvalue
# 3441|           getQualifier(): [VariableAccess] x243
# 3441|               Type = [Struct] String
# 3441|               ValueCategory = lvalue
# 3441|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3441|           Conversion = [BoolConversion] conversion to bool
# 3441|           Type = [BoolType] bool
# 3441|           Value = [CStyleCast] 0
# 3441|           ValueCategory = prvalue
# 3442|     getStmt(244): [DoStmt] do (...) ...
# 3444|       getCondition(): [Literal] 0
# 3444|           Type = [IntType] int
# 3444|           Value = [Literal] 0
# 3444|           ValueCategory = prvalue
# 3442|       getStmt(): [BlockStmt] { ... }
# 3443|         getStmt(0): [DeclStmt] declaration
# 3443|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x244
# 3443|               Type = [Struct] String
# 3443|             getVariable().getInitializer(): [Initializer] initializer for x244
# 3443|               getExpr(): [ConstructorCall] call to String
# 3443|                   Type = [VoidType] void
# 3443|                   ValueCategory = prvalue
# 3444|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3444|             Type = [VoidType] void
# 3444|             ValueCategory = prvalue
# 3444|           getQualifier(): [VariableAccess] x244
# 3444|               Type = [Struct] String
# 3444|               ValueCategory = lvalue
# 3444|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3444|           Conversion = [BoolConversion] conversion to bool
# 3444|           Type = [BoolType] bool
# 3444|           Value = [CStyleCast] 0
# 3444|           ValueCategory = prvalue
# 3445|     getStmt(245): [DoStmt] do (...) ...
# 3447|       getCondition(): [Literal] 0
# 3447|           Type = [IntType] int
# 3447|           Value = [Literal] 0
# 3447|           ValueCategory = prvalue
# 3445|       getStmt(): [BlockStmt] { ... }
# 3446|         getStmt(0): [DeclStmt] declaration
# 3446|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x245
# 3446|               Type = [Struct] String
# 3446|             getVariable().getInitializer(): [Initializer] initializer for x245
# 3446|               getExpr(): [ConstructorCall] call to String
# 3446|                   Type = [VoidType] void
# 3446|                   ValueCategory = prvalue
# 3447|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3447|             Type = [VoidType] void
# 3447|             ValueCategory = prvalue
# 3447|           getQualifier(): [VariableAccess] x245
# 3447|               Type = [Struct] String
# 3447|               ValueCategory = lvalue
# 3447|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3447|           Conversion = [BoolConversion] conversion to bool
# 3447|           Type = [BoolType] bool
# 3447|           Value = [CStyleCast] 0
# 3447|           ValueCategory = prvalue
# 3448|     getStmt(246): [DoStmt] do (...) ...
# 3450|       getCondition(): [Literal] 0
# 3450|           Type = [IntType] int
# 3450|           Value = [Literal] 0
# 3450|           ValueCategory = prvalue
# 3448|       getStmt(): [BlockStmt] { ... }
# 3449|         getStmt(0): [DeclStmt] declaration
# 3449|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x246
# 3449|               Type = [Struct] String
# 3449|             getVariable().getInitializer(): [Initializer] initializer for x246
# 3449|               getExpr(): [ConstructorCall] call to String
# 3449|                   Type = [VoidType] void
# 3449|                   ValueCategory = prvalue
# 3450|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3450|             Type = [VoidType] void
# 3450|             ValueCategory = prvalue
# 3450|           getQualifier(): [VariableAccess] x246
# 3450|               Type = [Struct] String
# 3450|               ValueCategory = lvalue
# 3450|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3450|           Conversion = [BoolConversion] conversion to bool
# 3450|           Type = [BoolType] bool
# 3450|           Value = [CStyleCast] 0
# 3450|           ValueCategory = prvalue
# 3451|     getStmt(247): [DoStmt] do (...) ...
# 3453|       getCondition(): [Literal] 0
# 3453|           Type = [IntType] int
# 3453|           Value = [Literal] 0
# 3453|           ValueCategory = prvalue
# 3451|       getStmt(): [BlockStmt] { ... }
# 3452|         getStmt(0): [DeclStmt] declaration
# 3452|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x247
# 3452|               Type = [Struct] String
# 3452|             getVariable().getInitializer(): [Initializer] initializer for x247
# 3452|               getExpr(): [ConstructorCall] call to String
# 3452|                   Type = [VoidType] void
# 3452|                   ValueCategory = prvalue
# 3453|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3453|             Type = [VoidType] void
# 3453|             ValueCategory = prvalue
# 3453|           getQualifier(): [VariableAccess] x247
# 3453|               Type = [Struct] String
# 3453|               ValueCategory = lvalue
# 3453|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3453|           Conversion = [BoolConversion] conversion to bool
# 3453|           Type = [BoolType] bool
# 3453|           Value = [CStyleCast] 0
# 3453|           ValueCategory = prvalue
# 3454|     getStmt(248): [DoStmt] do (...) ...
# 3456|       getCondition(): [Literal] 0
# 3456|           Type = [IntType] int
# 3456|           Value = [Literal] 0
# 3456|           ValueCategory = prvalue
# 3454|       getStmt(): [BlockStmt] { ... }
# 3455|         getStmt(0): [DeclStmt] declaration
# 3455|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x248
# 3455|               Type = [Struct] String
# 3455|             getVariable().getInitializer(): [Initializer] initializer for x248
# 3455|               getExpr(): [ConstructorCall] call to String
# 3455|                   Type = [VoidType] void
# 3455|                   ValueCategory = prvalue
# 3456|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3456|             Type = [VoidType] void
# 3456|             ValueCategory = prvalue
# 3456|           getQualifier(): [VariableAccess] x248
# 3456|               Type = [Struct] String
# 3456|               ValueCategory = lvalue
# 3456|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3456|           Conversion = [BoolConversion] conversion to bool
# 3456|           Type = [BoolType] bool
# 3456|           Value = [CStyleCast] 0
# 3456|           ValueCategory = prvalue
# 3457|     getStmt(249): [DoStmt] do (...) ...
# 3459|       getCondition(): [Literal] 0
# 3459|           Type = [IntType] int
# 3459|           Value = [Literal] 0
# 3459|           ValueCategory = prvalue
# 3457|       getStmt(): [BlockStmt] { ... }
# 3458|         getStmt(0): [DeclStmt] declaration
# 3458|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x249
# 3458|               Type = [Struct] String
# 3458|             getVariable().getInitializer(): [Initializer] initializer for x249
# 3458|               getExpr(): [ConstructorCall] call to String
# 3458|                   Type = [VoidType] void
# 3458|                   ValueCategory = prvalue
# 3459|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3459|             Type = [VoidType] void
# 3459|             ValueCategory = prvalue
# 3459|           getQualifier(): [VariableAccess] x249
# 3459|               Type = [Struct] String
# 3459|               ValueCategory = lvalue
# 3459|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3459|           Conversion = [BoolConversion] conversion to bool
# 3459|           Type = [BoolType] bool
# 3459|           Value = [CStyleCast] 0
# 3459|           ValueCategory = prvalue
# 3460|     getStmt(250): [DoStmt] do (...) ...
# 3462|       getCondition(): [Literal] 0
# 3462|           Type = [IntType] int
# 3462|           Value = [Literal] 0
# 3462|           ValueCategory = prvalue
# 3460|       getStmt(): [BlockStmt] { ... }
# 3461|         getStmt(0): [DeclStmt] declaration
# 3461|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x250
# 3461|               Type = [Struct] String
# 3461|             getVariable().getInitializer(): [Initializer] initializer for x250
# 3461|               getExpr(): [ConstructorCall] call to String
# 3461|                   Type = [VoidType] void
# 3461|                   ValueCategory = prvalue
# 3462|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3462|             Type = [VoidType] void
# 3462|             ValueCategory = prvalue
# 3462|           getQualifier(): [VariableAccess] x250
# 3462|               Type = [Struct] String
# 3462|               ValueCategory = lvalue
# 3462|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3462|           Conversion = [BoolConversion] conversion to bool
# 3462|           Type = [BoolType] bool
# 3462|           Value = [CStyleCast] 0
# 3462|           ValueCategory = prvalue
# 3463|     getStmt(251): [DoStmt] do (...) ...
# 3465|       getCondition(): [Literal] 0
# 3465|           Type = [IntType] int
# 3465|           Value = [Literal] 0
# 3465|           ValueCategory = prvalue
# 3463|       getStmt(): [BlockStmt] { ... }
# 3464|         getStmt(0): [DeclStmt] declaration
# 3464|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x251
# 3464|               Type = [Struct] String
# 3464|             getVariable().getInitializer(): [Initializer] initializer for x251
# 3464|               getExpr(): [ConstructorCall] call to String
# 3464|                   Type = [VoidType] void
# 3464|                   ValueCategory = prvalue
# 3465|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3465|             Type = [VoidType] void
# 3465|             ValueCategory = prvalue
# 3465|           getQualifier(): [VariableAccess] x251
# 3465|               Type = [Struct] String
# 3465|               ValueCategory = lvalue
# 3465|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3465|           Conversion = [BoolConversion] conversion to bool
# 3465|           Type = [BoolType] bool
# 3465|           Value = [CStyleCast] 0
# 3465|           ValueCategory = prvalue
# 3466|     getStmt(252): [DoStmt] do (...) ...
# 3468|       getCondition(): [Literal] 0
# 3468|           Type = [IntType] int
# 3468|           Value = [Literal] 0
# 3468|           ValueCategory = prvalue
# 3466|       getStmt(): [BlockStmt] { ... }
# 3467|         getStmt(0): [DeclStmt] declaration
# 3467|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x252
# 3467|               Type = [Struct] String
# 3467|             getVariable().getInitializer(): [Initializer] initializer for x252
# 3467|               getExpr(): [ConstructorCall] call to String
# 3467|                   Type = [VoidType] void
# 3467|                   ValueCategory = prvalue
# 3468|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3468|             Type = [VoidType] void
# 3468|             ValueCategory = prvalue
# 3468|           getQualifier(): [VariableAccess] x252
# 3468|               Type = [Struct] String
# 3468|               ValueCategory = lvalue
# 3468|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3468|           Conversion = [BoolConversion] conversion to bool
# 3468|           Type = [BoolType] bool
# 3468|           Value = [CStyleCast] 0
# 3468|           ValueCategory = prvalue
# 3469|     getStmt(253): [DoStmt] do (...) ...
# 3471|       getCondition(): [Literal] 0
# 3471|           Type = [IntType] int
# 3471|           Value = [Literal] 0
# 3471|           ValueCategory = prvalue
# 3469|       getStmt(): [BlockStmt] { ... }
# 3470|         getStmt(0): [DeclStmt] declaration
# 3470|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x253
# 3470|               Type = [Struct] String
# 3470|             getVariable().getInitializer(): [Initializer] initializer for x253
# 3470|               getExpr(): [ConstructorCall] call to String
# 3470|                   Type = [VoidType] void
# 3470|                   ValueCategory = prvalue
# 3471|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3471|             Type = [VoidType] void
# 3471|             ValueCategory = prvalue
# 3471|           getQualifier(): [VariableAccess] x253
# 3471|               Type = [Struct] String
# 3471|               ValueCategory = lvalue
# 3471|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3471|           Conversion = [BoolConversion] conversion to bool
# 3471|           Type = [BoolType] bool
# 3471|           Value = [CStyleCast] 0
# 3471|           ValueCategory = prvalue
# 3472|     getStmt(254): [DoStmt] do (...) ...
# 3474|       getCondition(): [Literal] 0
# 3474|           Type = [IntType] int
# 3474|           Value = [Literal] 0
# 3474|           ValueCategory = prvalue
# 3472|       getStmt(): [BlockStmt] { ... }
# 3473|         getStmt(0): [DeclStmt] declaration
# 3473|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x254
# 3473|               Type = [Struct] String
# 3473|             getVariable().getInitializer(): [Initializer] initializer for x254
# 3473|               getExpr(): [ConstructorCall] call to String
# 3473|                   Type = [VoidType] void
# 3473|                   ValueCategory = prvalue
# 3474|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3474|             Type = [VoidType] void
# 3474|             ValueCategory = prvalue
# 3474|           getQualifier(): [VariableAccess] x254
# 3474|               Type = [Struct] String
# 3474|               ValueCategory = lvalue
# 3474|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3474|           Conversion = [BoolConversion] conversion to bool
# 3474|           Type = [BoolType] bool
# 3474|           Value = [CStyleCast] 0
# 3474|           ValueCategory = prvalue
# 3475|     getStmt(255): [DoStmt] do (...) ...
# 3477|       getCondition(): [Literal] 0
# 3477|           Type = [IntType] int
# 3477|           Value = [Literal] 0
# 3477|           ValueCategory = prvalue
# 3475|       getStmt(): [BlockStmt] { ... }
# 3476|         getStmt(0): [DeclStmt] declaration
# 3476|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x255
# 3476|               Type = [Struct] String
# 3476|             getVariable().getInitializer(): [Initializer] initializer for x255
# 3476|               getExpr(): [ConstructorCall] call to String
# 3476|                   Type = [VoidType] void
# 3476|                   ValueCategory = prvalue
# 3477|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3477|             Type = [VoidType] void
# 3477|             ValueCategory = prvalue
# 3477|           getQualifier(): [VariableAccess] x255
# 3477|               Type = [Struct] String
# 3477|               ValueCategory = lvalue
# 3477|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3477|           Conversion = [BoolConversion] conversion to bool
# 3477|           Type = [BoolType] bool
# 3477|           Value = [CStyleCast] 0
# 3477|           ValueCategory = prvalue
# 3478|     getStmt(256): [DoStmt] do (...) ...
# 3480|       getCondition(): [Literal] 0
# 3480|           Type = [IntType] int
# 3480|           Value = [Literal] 0
# 3480|           ValueCategory = prvalue
# 3478|       getStmt(): [BlockStmt] { ... }
# 3479|         getStmt(0): [DeclStmt] declaration
# 3479|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x256
# 3479|               Type = [Struct] String
# 3479|             getVariable().getInitializer(): [Initializer] initializer for x256
# 3479|               getExpr(): [ConstructorCall] call to String
# 3479|                   Type = [VoidType] void
# 3479|                   ValueCategory = prvalue
# 3480|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3480|             Type = [VoidType] void
# 3480|             ValueCategory = prvalue
# 3480|           getQualifier(): [VariableAccess] x256
# 3480|               Type = [Struct] String
# 3480|               ValueCategory = lvalue
# 3480|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3480|           Conversion = [BoolConversion] conversion to bool
# 3480|           Type = [BoolType] bool
# 3480|           Value = [CStyleCast] 0
# 3480|           ValueCategory = prvalue
# 3481|     getStmt(257): [DoStmt] do (...) ...
# 3483|       getCondition(): [Literal] 0
# 3483|           Type = [IntType] int
# 3483|           Value = [Literal] 0
# 3483|           ValueCategory = prvalue
# 3481|       getStmt(): [BlockStmt] { ... }
# 3482|         getStmt(0): [DeclStmt] declaration
# 3482|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x257
# 3482|               Type = [Struct] String
# 3482|             getVariable().getInitializer(): [Initializer] initializer for x257
# 3482|               getExpr(): [ConstructorCall] call to String
# 3482|                   Type = [VoidType] void
# 3482|                   ValueCategory = prvalue
# 3483|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3483|             Type = [VoidType] void
# 3483|             ValueCategory = prvalue
# 3483|           getQualifier(): [VariableAccess] x257
# 3483|               Type = [Struct] String
# 3483|               ValueCategory = lvalue
# 3483|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3483|           Conversion = [BoolConversion] conversion to bool
# 3483|           Type = [BoolType] bool
# 3483|           Value = [CStyleCast] 0
# 3483|           ValueCategory = prvalue
# 3484|     getStmt(258): [DoStmt] do (...) ...
# 3486|       getCondition(): [Literal] 0
# 3486|           Type = [IntType] int
# 3486|           Value = [Literal] 0
# 3486|           ValueCategory = prvalue
# 3484|       getStmt(): [BlockStmt] { ... }
# 3485|         getStmt(0): [DeclStmt] declaration
# 3485|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x258
# 3485|               Type = [Struct] String
# 3485|             getVariable().getInitializer(): [Initializer] initializer for x258
# 3485|               getExpr(): [ConstructorCall] call to String
# 3485|                   Type = [VoidType] void
# 3485|                   ValueCategory = prvalue
# 3486|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3486|             Type = [VoidType] void
# 3486|             ValueCategory = prvalue
# 3486|           getQualifier(): [VariableAccess] x258
# 3486|               Type = [Struct] String
# 3486|               ValueCategory = lvalue
# 3486|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3486|           Conversion = [BoolConversion] conversion to bool
# 3486|           Type = [BoolType] bool
# 3486|           Value = [CStyleCast] 0
# 3486|           ValueCategory = prvalue
# 3487|     getStmt(259): [DoStmt] do (...) ...
# 3489|       getCondition(): [Literal] 0
# 3489|           Type = [IntType] int
# 3489|           Value = [Literal] 0
# 3489|           ValueCategory = prvalue
# 3487|       getStmt(): [BlockStmt] { ... }
# 3488|         getStmt(0): [DeclStmt] declaration
# 3488|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x259
# 3488|               Type = [Struct] String
# 3488|             getVariable().getInitializer(): [Initializer] initializer for x259
# 3488|               getExpr(): [ConstructorCall] call to String
# 3488|                   Type = [VoidType] void
# 3488|                   ValueCategory = prvalue
# 3489|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3489|             Type = [VoidType] void
# 3489|             ValueCategory = prvalue
# 3489|           getQualifier(): [VariableAccess] x259
# 3489|               Type = [Struct] String
# 3489|               ValueCategory = lvalue
# 3489|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3489|           Conversion = [BoolConversion] conversion to bool
# 3489|           Type = [BoolType] bool
# 3489|           Value = [CStyleCast] 0
# 3489|           ValueCategory = prvalue
# 3490|     getStmt(260): [DoStmt] do (...) ...
# 3492|       getCondition(): [Literal] 0
# 3492|           Type = [IntType] int
# 3492|           Value = [Literal] 0
# 3492|           ValueCategory = prvalue
# 3490|       getStmt(): [BlockStmt] { ... }
# 3491|         getStmt(0): [DeclStmt] declaration
# 3491|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x260
# 3491|               Type = [Struct] String
# 3491|             getVariable().getInitializer(): [Initializer] initializer for x260
# 3491|               getExpr(): [ConstructorCall] call to String
# 3491|                   Type = [VoidType] void
# 3491|                   ValueCategory = prvalue
# 3492|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3492|             Type = [VoidType] void
# 3492|             ValueCategory = prvalue
# 3492|           getQualifier(): [VariableAccess] x260
# 3492|               Type = [Struct] String
# 3492|               ValueCategory = lvalue
# 3492|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3492|           Conversion = [BoolConversion] conversion to bool
# 3492|           Type = [BoolType] bool
# 3492|           Value = [CStyleCast] 0
# 3492|           ValueCategory = prvalue
# 3493|     getStmt(261): [DoStmt] do (...) ...
# 3495|       getCondition(): [Literal] 0
# 3495|           Type = [IntType] int
# 3495|           Value = [Literal] 0
# 3495|           ValueCategory = prvalue
# 3493|       getStmt(): [BlockStmt] { ... }
# 3494|         getStmt(0): [DeclStmt] declaration
# 3494|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x261
# 3494|               Type = [Struct] String
# 3494|             getVariable().getInitializer(): [Initializer] initializer for x261
# 3494|               getExpr(): [ConstructorCall] call to String
# 3494|                   Type = [VoidType] void
# 3494|                   ValueCategory = prvalue
# 3495|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3495|             Type = [VoidType] void
# 3495|             ValueCategory = prvalue
# 3495|           getQualifier(): [VariableAccess] x261
# 3495|               Type = [Struct] String
# 3495|               ValueCategory = lvalue
# 3495|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3495|           Conversion = [BoolConversion] conversion to bool
# 3495|           Type = [BoolType] bool
# 3495|           Value = [CStyleCast] 0
# 3495|           ValueCategory = prvalue
# 3496|     getStmt(262): [DoStmt] do (...) ...
# 3498|       getCondition(): [Literal] 0
# 3498|           Type = [IntType] int
# 3498|           Value = [Literal] 0
# 3498|           ValueCategory = prvalue
# 3496|       getStmt(): [BlockStmt] { ... }
# 3497|         getStmt(0): [DeclStmt] declaration
# 3497|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x262
# 3497|               Type = [Struct] String
# 3497|             getVariable().getInitializer(): [Initializer] initializer for x262
# 3497|               getExpr(): [ConstructorCall] call to String
# 3497|                   Type = [VoidType] void
# 3497|                   ValueCategory = prvalue
# 3498|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3498|             Type = [VoidType] void
# 3498|             ValueCategory = prvalue
# 3498|           getQualifier(): [VariableAccess] x262
# 3498|               Type = [Struct] String
# 3498|               ValueCategory = lvalue
# 3498|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3498|           Conversion = [BoolConversion] conversion to bool
# 3498|           Type = [BoolType] bool
# 3498|           Value = [CStyleCast] 0
# 3498|           ValueCategory = prvalue
# 3499|     getStmt(263): [DoStmt] do (...) ...
# 3501|       getCondition(): [Literal] 0
# 3501|           Type = [IntType] int
# 3501|           Value = [Literal] 0
# 3501|           ValueCategory = prvalue
# 3499|       getStmt(): [BlockStmt] { ... }
# 3500|         getStmt(0): [DeclStmt] declaration
# 3500|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x263
# 3500|               Type = [Struct] String
# 3500|             getVariable().getInitializer(): [Initializer] initializer for x263
# 3500|               getExpr(): [ConstructorCall] call to String
# 3500|                   Type = [VoidType] void
# 3500|                   ValueCategory = prvalue
# 3501|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3501|             Type = [VoidType] void
# 3501|             ValueCategory = prvalue
# 3501|           getQualifier(): [VariableAccess] x263
# 3501|               Type = [Struct] String
# 3501|               ValueCategory = lvalue
# 3501|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3501|           Conversion = [BoolConversion] conversion to bool
# 3501|           Type = [BoolType] bool
# 3501|           Value = [CStyleCast] 0
# 3501|           ValueCategory = prvalue
# 3502|     getStmt(264): [DoStmt] do (...) ...
# 3504|       getCondition(): [Literal] 0
# 3504|           Type = [IntType] int
# 3504|           Value = [Literal] 0
# 3504|           ValueCategory = prvalue
# 3502|       getStmt(): [BlockStmt] { ... }
# 3503|         getStmt(0): [DeclStmt] declaration
# 3503|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x264
# 3503|               Type = [Struct] String
# 3503|             getVariable().getInitializer(): [Initializer] initializer for x264
# 3503|               getExpr(): [ConstructorCall] call to String
# 3503|                   Type = [VoidType] void
# 3503|                   ValueCategory = prvalue
# 3504|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3504|             Type = [VoidType] void
# 3504|             ValueCategory = prvalue
# 3504|           getQualifier(): [VariableAccess] x264
# 3504|               Type = [Struct] String
# 3504|               ValueCategory = lvalue
# 3504|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3504|           Conversion = [BoolConversion] conversion to bool
# 3504|           Type = [BoolType] bool
# 3504|           Value = [CStyleCast] 0
# 3504|           ValueCategory = prvalue
# 3505|     getStmt(265): [DoStmt] do (...) ...
# 3507|       getCondition(): [Literal] 0
# 3507|           Type = [IntType] int
# 3507|           Value = [Literal] 0
# 3507|           ValueCategory = prvalue
# 3505|       getStmt(): [BlockStmt] { ... }
# 3506|         getStmt(0): [DeclStmt] declaration
# 3506|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x265
# 3506|               Type = [Struct] String
# 3506|             getVariable().getInitializer(): [Initializer] initializer for x265
# 3506|               getExpr(): [ConstructorCall] call to String
# 3506|                   Type = [VoidType] void
# 3506|                   ValueCategory = prvalue
# 3507|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3507|             Type = [VoidType] void
# 3507|             ValueCategory = prvalue
# 3507|           getQualifier(): [VariableAccess] x265
# 3507|               Type = [Struct] String
# 3507|               ValueCategory = lvalue
# 3507|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3507|           Conversion = [BoolConversion] conversion to bool
# 3507|           Type = [BoolType] bool
# 3507|           Value = [CStyleCast] 0
# 3507|           ValueCategory = prvalue
# 3508|     getStmt(266): [DoStmt] do (...) ...
# 3510|       getCondition(): [Literal] 0
# 3510|           Type = [IntType] int
# 3510|           Value = [Literal] 0
# 3510|           ValueCategory = prvalue
# 3508|       getStmt(): [BlockStmt] { ... }
# 3509|         getStmt(0): [DeclStmt] declaration
# 3509|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x266
# 3509|               Type = [Struct] String
# 3509|             getVariable().getInitializer(): [Initializer] initializer for x266
# 3509|               getExpr(): [ConstructorCall] call to String
# 3509|                   Type = [VoidType] void
# 3509|                   ValueCategory = prvalue
# 3510|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3510|             Type = [VoidType] void
# 3510|             ValueCategory = prvalue
# 3510|           getQualifier(): [VariableAccess] x266
# 3510|               Type = [Struct] String
# 3510|               ValueCategory = lvalue
# 3510|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3510|           Conversion = [BoolConversion] conversion to bool
# 3510|           Type = [BoolType] bool
# 3510|           Value = [CStyleCast] 0
# 3510|           ValueCategory = prvalue
# 3511|     getStmt(267): [DoStmt] do (...) ...
# 3513|       getCondition(): [Literal] 0
# 3513|           Type = [IntType] int
# 3513|           Value = [Literal] 0
# 3513|           ValueCategory = prvalue
# 3511|       getStmt(): [BlockStmt] { ... }
# 3512|         getStmt(0): [DeclStmt] declaration
# 3512|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x267
# 3512|               Type = [Struct] String
# 3512|             getVariable().getInitializer(): [Initializer] initializer for x267
# 3512|               getExpr(): [ConstructorCall] call to String
# 3512|                   Type = [VoidType] void
# 3512|                   ValueCategory = prvalue
# 3513|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3513|             Type = [VoidType] void
# 3513|             ValueCategory = prvalue
# 3513|           getQualifier(): [VariableAccess] x267
# 3513|               Type = [Struct] String
# 3513|               ValueCategory = lvalue
# 3513|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3513|           Conversion = [BoolConversion] conversion to bool
# 3513|           Type = [BoolType] bool
# 3513|           Value = [CStyleCast] 0
# 3513|           ValueCategory = prvalue
# 3514|     getStmt(268): [DoStmt] do (...) ...
# 3516|       getCondition(): [Literal] 0
# 3516|           Type = [IntType] int
# 3516|           Value = [Literal] 0
# 3516|           ValueCategory = prvalue
# 3514|       getStmt(): [BlockStmt] { ... }
# 3515|         getStmt(0): [DeclStmt] declaration
# 3515|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x268
# 3515|               Type = [Struct] String
# 3515|             getVariable().getInitializer(): [Initializer] initializer for x268
# 3515|               getExpr(): [ConstructorCall] call to String
# 3515|                   Type = [VoidType] void
# 3515|                   ValueCategory = prvalue
# 3516|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3516|             Type = [VoidType] void
# 3516|             ValueCategory = prvalue
# 3516|           getQualifier(): [VariableAccess] x268
# 3516|               Type = [Struct] String
# 3516|               ValueCategory = lvalue
# 3516|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3516|           Conversion = [BoolConversion] conversion to bool
# 3516|           Type = [BoolType] bool
# 3516|           Value = [CStyleCast] 0
# 3516|           ValueCategory = prvalue
# 3517|     getStmt(269): [DoStmt] do (...) ...
# 3519|       getCondition(): [Literal] 0
# 3519|           Type = [IntType] int
# 3519|           Value = [Literal] 0
# 3519|           ValueCategory = prvalue
# 3517|       getStmt(): [BlockStmt] { ... }
# 3518|         getStmt(0): [DeclStmt] declaration
# 3518|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x269
# 3518|               Type = [Struct] String
# 3518|             getVariable().getInitializer(): [Initializer] initializer for x269
# 3518|               getExpr(): [ConstructorCall] call to String
# 3518|                   Type = [VoidType] void
# 3518|                   ValueCategory = prvalue
# 3519|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3519|             Type = [VoidType] void
# 3519|             ValueCategory = prvalue
# 3519|           getQualifier(): [VariableAccess] x269
# 3519|               Type = [Struct] String
# 3519|               ValueCategory = lvalue
# 3519|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3519|           Conversion = [BoolConversion] conversion to bool
# 3519|           Type = [BoolType] bool
# 3519|           Value = [CStyleCast] 0
# 3519|           ValueCategory = prvalue
# 3520|     getStmt(270): [DoStmt] do (...) ...
# 3522|       getCondition(): [Literal] 0
# 3522|           Type = [IntType] int
# 3522|           Value = [Literal] 0
# 3522|           ValueCategory = prvalue
# 3520|       getStmt(): [BlockStmt] { ... }
# 3521|         getStmt(0): [DeclStmt] declaration
# 3521|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x270
# 3521|               Type = [Struct] String
# 3521|             getVariable().getInitializer(): [Initializer] initializer for x270
# 3521|               getExpr(): [ConstructorCall] call to String
# 3521|                   Type = [VoidType] void
# 3521|                   ValueCategory = prvalue
# 3522|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3522|             Type = [VoidType] void
# 3522|             ValueCategory = prvalue
# 3522|           getQualifier(): [VariableAccess] x270
# 3522|               Type = [Struct] String
# 3522|               ValueCategory = lvalue
# 3522|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3522|           Conversion = [BoolConversion] conversion to bool
# 3522|           Type = [BoolType] bool
# 3522|           Value = [CStyleCast] 0
# 3522|           ValueCategory = prvalue
# 3523|     getStmt(271): [DoStmt] do (...) ...
# 3525|       getCondition(): [Literal] 0
# 3525|           Type = [IntType] int
# 3525|           Value = [Literal] 0
# 3525|           ValueCategory = prvalue
# 3523|       getStmt(): [BlockStmt] { ... }
# 3524|         getStmt(0): [DeclStmt] declaration
# 3524|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x271
# 3524|               Type = [Struct] String
# 3524|             getVariable().getInitializer(): [Initializer] initializer for x271
# 3524|               getExpr(): [ConstructorCall] call to String
# 3524|                   Type = [VoidType] void
# 3524|                   ValueCategory = prvalue
# 3525|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3525|             Type = [VoidType] void
# 3525|             ValueCategory = prvalue
# 3525|           getQualifier(): [VariableAccess] x271
# 3525|               Type = [Struct] String
# 3525|               ValueCategory = lvalue
# 3525|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3525|           Conversion = [BoolConversion] conversion to bool
# 3525|           Type = [BoolType] bool
# 3525|           Value = [CStyleCast] 0
# 3525|           ValueCategory = prvalue
# 3526|     getStmt(272): [DoStmt] do (...) ...
# 3528|       getCondition(): [Literal] 0
# 3528|           Type = [IntType] int
# 3528|           Value = [Literal] 0
# 3528|           ValueCategory = prvalue
# 3526|       getStmt(): [BlockStmt] { ... }
# 3527|         getStmt(0): [DeclStmt] declaration
# 3527|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x272
# 3527|               Type = [Struct] String
# 3527|             getVariable().getInitializer(): [Initializer] initializer for x272
# 3527|               getExpr(): [ConstructorCall] call to String
# 3527|                   Type = [VoidType] void
# 3527|                   ValueCategory = prvalue
# 3528|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3528|             Type = [VoidType] void
# 3528|             ValueCategory = prvalue
# 3528|           getQualifier(): [VariableAccess] x272
# 3528|               Type = [Struct] String
# 3528|               ValueCategory = lvalue
# 3528|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3528|           Conversion = [BoolConversion] conversion to bool
# 3528|           Type = [BoolType] bool
# 3528|           Value = [CStyleCast] 0
# 3528|           ValueCategory = prvalue
# 3529|     getStmt(273): [DoStmt] do (...) ...
# 3531|       getCondition(): [Literal] 0
# 3531|           Type = [IntType] int
# 3531|           Value = [Literal] 0
# 3531|           ValueCategory = prvalue
# 3529|       getStmt(): [BlockStmt] { ... }
# 3530|         getStmt(0): [DeclStmt] declaration
# 3530|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x273
# 3530|               Type = [Struct] String
# 3530|             getVariable().getInitializer(): [Initializer] initializer for x273
# 3530|               getExpr(): [ConstructorCall] call to String
# 3530|                   Type = [VoidType] void
# 3530|                   ValueCategory = prvalue
# 3531|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3531|             Type = [VoidType] void
# 3531|             ValueCategory = prvalue
# 3531|           getQualifier(): [VariableAccess] x273
# 3531|               Type = [Struct] String
# 3531|               ValueCategory = lvalue
# 3531|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3531|           Conversion = [BoolConversion] conversion to bool
# 3531|           Type = [BoolType] bool
# 3531|           Value = [CStyleCast] 0
# 3531|           ValueCategory = prvalue
# 3532|     getStmt(274): [DoStmt] do (...) ...
# 3534|       getCondition(): [Literal] 0
# 3534|           Type = [IntType] int
# 3534|           Value = [Literal] 0
# 3534|           ValueCategory = prvalue
# 3532|       getStmt(): [BlockStmt] { ... }
# 3533|         getStmt(0): [DeclStmt] declaration
# 3533|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x274
# 3533|               Type = [Struct] String
# 3533|             getVariable().getInitializer(): [Initializer] initializer for x274
# 3533|               getExpr(): [ConstructorCall] call to String
# 3533|                   Type = [VoidType] void
# 3533|                   ValueCategory = prvalue
# 3534|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3534|             Type = [VoidType] void
# 3534|             ValueCategory = prvalue
# 3534|           getQualifier(): [VariableAccess] x274
# 3534|               Type = [Struct] String
# 3534|               ValueCategory = lvalue
# 3534|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3534|           Conversion = [BoolConversion] conversion to bool
# 3534|           Type = [BoolType] bool
# 3534|           Value = [CStyleCast] 0
# 3534|           ValueCategory = prvalue
# 3535|     getStmt(275): [DoStmt] do (...) ...
# 3537|       getCondition(): [Literal] 0
# 3537|           Type = [IntType] int
# 3537|           Value = [Literal] 0
# 3537|           ValueCategory = prvalue
# 3535|       getStmt(): [BlockStmt] { ... }
# 3536|         getStmt(0): [DeclStmt] declaration
# 3536|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x275
# 3536|               Type = [Struct] String
# 3536|             getVariable().getInitializer(): [Initializer] initializer for x275
# 3536|               getExpr(): [ConstructorCall] call to String
# 3536|                   Type = [VoidType] void
# 3536|                   ValueCategory = prvalue
# 3537|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3537|             Type = [VoidType] void
# 3537|             ValueCategory = prvalue
# 3537|           getQualifier(): [VariableAccess] x275
# 3537|               Type = [Struct] String
# 3537|               ValueCategory = lvalue
# 3537|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3537|           Conversion = [BoolConversion] conversion to bool
# 3537|           Type = [BoolType] bool
# 3537|           Value = [CStyleCast] 0
# 3537|           ValueCategory = prvalue
# 3538|     getStmt(276): [DoStmt] do (...) ...
# 3540|       getCondition(): [Literal] 0
# 3540|           Type = [IntType] int
# 3540|           Value = [Literal] 0
# 3540|           ValueCategory = prvalue
# 3538|       getStmt(): [BlockStmt] { ... }
# 3539|         getStmt(0): [DeclStmt] declaration
# 3539|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x276
# 3539|               Type = [Struct] String
# 3539|             getVariable().getInitializer(): [Initializer] initializer for x276
# 3539|               getExpr(): [ConstructorCall] call to String
# 3539|                   Type = [VoidType] void
# 3539|                   ValueCategory = prvalue
# 3540|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3540|             Type = [VoidType] void
# 3540|             ValueCategory = prvalue
# 3540|           getQualifier(): [VariableAccess] x276
# 3540|               Type = [Struct] String
# 3540|               ValueCategory = lvalue
# 3540|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3540|           Conversion = [BoolConversion] conversion to bool
# 3540|           Type = [BoolType] bool
# 3540|           Value = [CStyleCast] 0
# 3540|           ValueCategory = prvalue
# 3541|     getStmt(277): [DoStmt] do (...) ...
# 3543|       getCondition(): [Literal] 0
# 3543|           Type = [IntType] int
# 3543|           Value = [Literal] 0
# 3543|           ValueCategory = prvalue
# 3541|       getStmt(): [BlockStmt] { ... }
# 3542|         getStmt(0): [DeclStmt] declaration
# 3542|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x277
# 3542|               Type = [Struct] String
# 3542|             getVariable().getInitializer(): [Initializer] initializer for x277
# 3542|               getExpr(): [ConstructorCall] call to String
# 3542|                   Type = [VoidType] void
# 3542|                   ValueCategory = prvalue
# 3543|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3543|             Type = [VoidType] void
# 3543|             ValueCategory = prvalue
# 3543|           getQualifier(): [VariableAccess] x277
# 3543|               Type = [Struct] String
# 3543|               ValueCategory = lvalue
# 3543|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3543|           Conversion = [BoolConversion] conversion to bool
# 3543|           Type = [BoolType] bool
# 3543|           Value = [CStyleCast] 0
# 3543|           ValueCategory = prvalue
# 3544|     getStmt(278): [DoStmt] do (...) ...
# 3546|       getCondition(): [Literal] 0
# 3546|           Type = [IntType] int
# 3546|           Value = [Literal] 0
# 3546|           ValueCategory = prvalue
# 3544|       getStmt(): [BlockStmt] { ... }
# 3545|         getStmt(0): [DeclStmt] declaration
# 3545|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x278
# 3545|               Type = [Struct] String
# 3545|             getVariable().getInitializer(): [Initializer] initializer for x278
# 3545|               getExpr(): [ConstructorCall] call to String
# 3545|                   Type = [VoidType] void
# 3545|                   ValueCategory = prvalue
# 3546|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3546|             Type = [VoidType] void
# 3546|             ValueCategory = prvalue
# 3546|           getQualifier(): [VariableAccess] x278
# 3546|               Type = [Struct] String
# 3546|               ValueCategory = lvalue
# 3546|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3546|           Conversion = [BoolConversion] conversion to bool
# 3546|           Type = [BoolType] bool
# 3546|           Value = [CStyleCast] 0
# 3546|           ValueCategory = prvalue
# 3547|     getStmt(279): [DoStmt] do (...) ...
# 3549|       getCondition(): [Literal] 0
# 3549|           Type = [IntType] int
# 3549|           Value = [Literal] 0
# 3549|           ValueCategory = prvalue
# 3547|       getStmt(): [BlockStmt] { ... }
# 3548|         getStmt(0): [DeclStmt] declaration
# 3548|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x279
# 3548|               Type = [Struct] String
# 3548|             getVariable().getInitializer(): [Initializer] initializer for x279
# 3548|               getExpr(): [ConstructorCall] call to String
# 3548|                   Type = [VoidType] void
# 3548|                   ValueCategory = prvalue
# 3549|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3549|             Type = [VoidType] void
# 3549|             ValueCategory = prvalue
# 3549|           getQualifier(): [VariableAccess] x279
# 3549|               Type = [Struct] String
# 3549|               ValueCategory = lvalue
# 3549|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3549|           Conversion = [BoolConversion] conversion to bool
# 3549|           Type = [BoolType] bool
# 3549|           Value = [CStyleCast] 0
# 3549|           ValueCategory = prvalue
# 3550|     getStmt(280): [DoStmt] do (...) ...
# 3552|       getCondition(): [Literal] 0
# 3552|           Type = [IntType] int
# 3552|           Value = [Literal] 0
# 3552|           ValueCategory = prvalue
# 3550|       getStmt(): [BlockStmt] { ... }
# 3551|         getStmt(0): [DeclStmt] declaration
# 3551|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x280
# 3551|               Type = [Struct] String
# 3551|             getVariable().getInitializer(): [Initializer] initializer for x280
# 3551|               getExpr(): [ConstructorCall] call to String
# 3551|                   Type = [VoidType] void
# 3551|                   ValueCategory = prvalue
# 3552|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3552|             Type = [VoidType] void
# 3552|             ValueCategory = prvalue
# 3552|           getQualifier(): [VariableAccess] x280
# 3552|               Type = [Struct] String
# 3552|               ValueCategory = lvalue
# 3552|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3552|           Conversion = [BoolConversion] conversion to bool
# 3552|           Type = [BoolType] bool
# 3552|           Value = [CStyleCast] 0
# 3552|           ValueCategory = prvalue
# 3553|     getStmt(281): [DoStmt] do (...) ...
# 3555|       getCondition(): [Literal] 0
# 3555|           Type = [IntType] int
# 3555|           Value = [Literal] 0
# 3555|           ValueCategory = prvalue
# 3553|       getStmt(): [BlockStmt] { ... }
# 3554|         getStmt(0): [DeclStmt] declaration
# 3554|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x281
# 3554|               Type = [Struct] String
# 3554|             getVariable().getInitializer(): [Initializer] initializer for x281
# 3554|               getExpr(): [ConstructorCall] call to String
# 3554|                   Type = [VoidType] void
# 3554|                   ValueCategory = prvalue
# 3555|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3555|             Type = [VoidType] void
# 3555|             ValueCategory = prvalue
# 3555|           getQualifier(): [VariableAccess] x281
# 3555|               Type = [Struct] String
# 3555|               ValueCategory = lvalue
# 3555|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3555|           Conversion = [BoolConversion] conversion to bool
# 3555|           Type = [BoolType] bool
# 3555|           Value = [CStyleCast] 0
# 3555|           ValueCategory = prvalue
# 3556|     getStmt(282): [DoStmt] do (...) ...
# 3558|       getCondition(): [Literal] 0
# 3558|           Type = [IntType] int
# 3558|           Value = [Literal] 0
# 3558|           ValueCategory = prvalue
# 3556|       getStmt(): [BlockStmt] { ... }
# 3557|         getStmt(0): [DeclStmt] declaration
# 3557|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x282
# 3557|               Type = [Struct] String
# 3557|             getVariable().getInitializer(): [Initializer] initializer for x282
# 3557|               getExpr(): [ConstructorCall] call to String
# 3557|                   Type = [VoidType] void
# 3557|                   ValueCategory = prvalue
# 3558|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3558|             Type = [VoidType] void
# 3558|             ValueCategory = prvalue
# 3558|           getQualifier(): [VariableAccess] x282
# 3558|               Type = [Struct] String
# 3558|               ValueCategory = lvalue
# 3558|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3558|           Conversion = [BoolConversion] conversion to bool
# 3558|           Type = [BoolType] bool
# 3558|           Value = [CStyleCast] 0
# 3558|           ValueCategory = prvalue
# 3559|     getStmt(283): [DoStmt] do (...) ...
# 3561|       getCondition(): [Literal] 0
# 3561|           Type = [IntType] int
# 3561|           Value = [Literal] 0
# 3561|           ValueCategory = prvalue
# 3559|       getStmt(): [BlockStmt] { ... }
# 3560|         getStmt(0): [DeclStmt] declaration
# 3560|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x283
# 3560|               Type = [Struct] String
# 3560|             getVariable().getInitializer(): [Initializer] initializer for x283
# 3560|               getExpr(): [ConstructorCall] call to String
# 3560|                   Type = [VoidType] void
# 3560|                   ValueCategory = prvalue
# 3561|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3561|             Type = [VoidType] void
# 3561|             ValueCategory = prvalue
# 3561|           getQualifier(): [VariableAccess] x283
# 3561|               Type = [Struct] String
# 3561|               ValueCategory = lvalue
# 3561|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3561|           Conversion = [BoolConversion] conversion to bool
# 3561|           Type = [BoolType] bool
# 3561|           Value = [CStyleCast] 0
# 3561|           ValueCategory = prvalue
# 3562|     getStmt(284): [DoStmt] do (...) ...
# 3564|       getCondition(): [Literal] 0
# 3564|           Type = [IntType] int
# 3564|           Value = [Literal] 0
# 3564|           ValueCategory = prvalue
# 3562|       getStmt(): [BlockStmt] { ... }
# 3563|         getStmt(0): [DeclStmt] declaration
# 3563|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x284
# 3563|               Type = [Struct] String
# 3563|             getVariable().getInitializer(): [Initializer] initializer for x284
# 3563|               getExpr(): [ConstructorCall] call to String
# 3563|                   Type = [VoidType] void
# 3563|                   ValueCategory = prvalue
# 3564|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3564|             Type = [VoidType] void
# 3564|             ValueCategory = prvalue
# 3564|           getQualifier(): [VariableAccess] x284
# 3564|               Type = [Struct] String
# 3564|               ValueCategory = lvalue
# 3564|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3564|           Conversion = [BoolConversion] conversion to bool
# 3564|           Type = [BoolType] bool
# 3564|           Value = [CStyleCast] 0
# 3564|           ValueCategory = prvalue
# 3565|     getStmt(285): [DoStmt] do (...) ...
# 3567|       getCondition(): [Literal] 0
# 3567|           Type = [IntType] int
# 3567|           Value = [Literal] 0
# 3567|           ValueCategory = prvalue
# 3565|       getStmt(): [BlockStmt] { ... }
# 3566|         getStmt(0): [DeclStmt] declaration
# 3566|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x285
# 3566|               Type = [Struct] String
# 3566|             getVariable().getInitializer(): [Initializer] initializer for x285
# 3566|               getExpr(): [ConstructorCall] call to String
# 3566|                   Type = [VoidType] void
# 3566|                   ValueCategory = prvalue
# 3567|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3567|             Type = [VoidType] void
# 3567|             ValueCategory = prvalue
# 3567|           getQualifier(): [VariableAccess] x285
# 3567|               Type = [Struct] String
# 3567|               ValueCategory = lvalue
# 3567|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3567|           Conversion = [BoolConversion] conversion to bool
# 3567|           Type = [BoolType] bool
# 3567|           Value = [CStyleCast] 0
# 3567|           ValueCategory = prvalue
# 3568|     getStmt(286): [DoStmt] do (...) ...
# 3570|       getCondition(): [Literal] 0
# 3570|           Type = [IntType] int
# 3570|           Value = [Literal] 0
# 3570|           ValueCategory = prvalue
# 3568|       getStmt(): [BlockStmt] { ... }
# 3569|         getStmt(0): [DeclStmt] declaration
# 3569|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x286
# 3569|               Type = [Struct] String
# 3569|             getVariable().getInitializer(): [Initializer] initializer for x286
# 3569|               getExpr(): [ConstructorCall] call to String
# 3569|                   Type = [VoidType] void
# 3569|                   ValueCategory = prvalue
# 3570|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3570|             Type = [VoidType] void
# 3570|             ValueCategory = prvalue
# 3570|           getQualifier(): [VariableAccess] x286
# 3570|               Type = [Struct] String
# 3570|               ValueCategory = lvalue
# 3570|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3570|           Conversion = [BoolConversion] conversion to bool
# 3570|           Type = [BoolType] bool
# 3570|           Value = [CStyleCast] 0
# 3570|           ValueCategory = prvalue
# 3571|     getStmt(287): [DoStmt] do (...) ...
# 3573|       getCondition(): [Literal] 0
# 3573|           Type = [IntType] int
# 3573|           Value = [Literal] 0
# 3573|           ValueCategory = prvalue
# 3571|       getStmt(): [BlockStmt] { ... }
# 3572|         getStmt(0): [DeclStmt] declaration
# 3572|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x287
# 3572|               Type = [Struct] String
# 3572|             getVariable().getInitializer(): [Initializer] initializer for x287
# 3572|               getExpr(): [ConstructorCall] call to String
# 3572|                   Type = [VoidType] void
# 3572|                   ValueCategory = prvalue
# 3573|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3573|             Type = [VoidType] void
# 3573|             ValueCategory = prvalue
# 3573|           getQualifier(): [VariableAccess] x287
# 3573|               Type = [Struct] String
# 3573|               ValueCategory = lvalue
# 3573|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3573|           Conversion = [BoolConversion] conversion to bool
# 3573|           Type = [BoolType] bool
# 3573|           Value = [CStyleCast] 0
# 3573|           ValueCategory = prvalue
# 3574|     getStmt(288): [DoStmt] do (...) ...
# 3576|       getCondition(): [Literal] 0
# 3576|           Type = [IntType] int
# 3576|           Value = [Literal] 0
# 3576|           ValueCategory = prvalue
# 3574|       getStmt(): [BlockStmt] { ... }
# 3575|         getStmt(0): [DeclStmt] declaration
# 3575|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x288
# 3575|               Type = [Struct] String
# 3575|             getVariable().getInitializer(): [Initializer] initializer for x288
# 3575|               getExpr(): [ConstructorCall] call to String
# 3575|                   Type = [VoidType] void
# 3575|                   ValueCategory = prvalue
# 3576|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3576|             Type = [VoidType] void
# 3576|             ValueCategory = prvalue
# 3576|           getQualifier(): [VariableAccess] x288
# 3576|               Type = [Struct] String
# 3576|               ValueCategory = lvalue
# 3576|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3576|           Conversion = [BoolConversion] conversion to bool
# 3576|           Type = [BoolType] bool
# 3576|           Value = [CStyleCast] 0
# 3576|           ValueCategory = prvalue
# 3577|     getStmt(289): [DoStmt] do (...) ...
# 3579|       getCondition(): [Literal] 0
# 3579|           Type = [IntType] int
# 3579|           Value = [Literal] 0
# 3579|           ValueCategory = prvalue
# 3577|       getStmt(): [BlockStmt] { ... }
# 3578|         getStmt(0): [DeclStmt] declaration
# 3578|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x289
# 3578|               Type = [Struct] String
# 3578|             getVariable().getInitializer(): [Initializer] initializer for x289
# 3578|               getExpr(): [ConstructorCall] call to String
# 3578|                   Type = [VoidType] void
# 3578|                   ValueCategory = prvalue
# 3579|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3579|             Type = [VoidType] void
# 3579|             ValueCategory = prvalue
# 3579|           getQualifier(): [VariableAccess] x289
# 3579|               Type = [Struct] String
# 3579|               ValueCategory = lvalue
# 3579|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3579|           Conversion = [BoolConversion] conversion to bool
# 3579|           Type = [BoolType] bool
# 3579|           Value = [CStyleCast] 0
# 3579|           ValueCategory = prvalue
# 3580|     getStmt(290): [DoStmt] do (...) ...
# 3582|       getCondition(): [Literal] 0
# 3582|           Type = [IntType] int
# 3582|           Value = [Literal] 0
# 3582|           ValueCategory = prvalue
# 3580|       getStmt(): [BlockStmt] { ... }
# 3581|         getStmt(0): [DeclStmt] declaration
# 3581|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x290
# 3581|               Type = [Struct] String
# 3581|             getVariable().getInitializer(): [Initializer] initializer for x290
# 3581|               getExpr(): [ConstructorCall] call to String
# 3581|                   Type = [VoidType] void
# 3581|                   ValueCategory = prvalue
# 3582|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3582|             Type = [VoidType] void
# 3582|             ValueCategory = prvalue
# 3582|           getQualifier(): [VariableAccess] x290
# 3582|               Type = [Struct] String
# 3582|               ValueCategory = lvalue
# 3582|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3582|           Conversion = [BoolConversion] conversion to bool
# 3582|           Type = [BoolType] bool
# 3582|           Value = [CStyleCast] 0
# 3582|           ValueCategory = prvalue
# 3583|     getStmt(291): [DoStmt] do (...) ...
# 3585|       getCondition(): [Literal] 0
# 3585|           Type = [IntType] int
# 3585|           Value = [Literal] 0
# 3585|           ValueCategory = prvalue
# 3583|       getStmt(): [BlockStmt] { ... }
# 3584|         getStmt(0): [DeclStmt] declaration
# 3584|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x291
# 3584|               Type = [Struct] String
# 3584|             getVariable().getInitializer(): [Initializer] initializer for x291
# 3584|               getExpr(): [ConstructorCall] call to String
# 3584|                   Type = [VoidType] void
# 3584|                   ValueCategory = prvalue
# 3585|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3585|             Type = [VoidType] void
# 3585|             ValueCategory = prvalue
# 3585|           getQualifier(): [VariableAccess] x291
# 3585|               Type = [Struct] String
# 3585|               ValueCategory = lvalue
# 3585|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3585|           Conversion = [BoolConversion] conversion to bool
# 3585|           Type = [BoolType] bool
# 3585|           Value = [CStyleCast] 0
# 3585|           ValueCategory = prvalue
# 3586|     getStmt(292): [DoStmt] do (...) ...
# 3588|       getCondition(): [Literal] 0
# 3588|           Type = [IntType] int
# 3588|           Value = [Literal] 0
# 3588|           ValueCategory = prvalue
# 3586|       getStmt(): [BlockStmt] { ... }
# 3587|         getStmt(0): [DeclStmt] declaration
# 3587|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x292
# 3587|               Type = [Struct] String
# 3587|             getVariable().getInitializer(): [Initializer] initializer for x292
# 3587|               getExpr(): [ConstructorCall] call to String
# 3587|                   Type = [VoidType] void
# 3587|                   ValueCategory = prvalue
# 3588|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3588|             Type = [VoidType] void
# 3588|             ValueCategory = prvalue
# 3588|           getQualifier(): [VariableAccess] x292
# 3588|               Type = [Struct] String
# 3588|               ValueCategory = lvalue
# 3588|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3588|           Conversion = [BoolConversion] conversion to bool
# 3588|           Type = [BoolType] bool
# 3588|           Value = [CStyleCast] 0
# 3588|           ValueCategory = prvalue
# 3589|     getStmt(293): [DoStmt] do (...) ...
# 3591|       getCondition(): [Literal] 0
# 3591|           Type = [IntType] int
# 3591|           Value = [Literal] 0
# 3591|           ValueCategory = prvalue
# 3589|       getStmt(): [BlockStmt] { ... }
# 3590|         getStmt(0): [DeclStmt] declaration
# 3590|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x293
# 3590|               Type = [Struct] String
# 3590|             getVariable().getInitializer(): [Initializer] initializer for x293
# 3590|               getExpr(): [ConstructorCall] call to String
# 3590|                   Type = [VoidType] void
# 3590|                   ValueCategory = prvalue
# 3591|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3591|             Type = [VoidType] void
# 3591|             ValueCategory = prvalue
# 3591|           getQualifier(): [VariableAccess] x293
# 3591|               Type = [Struct] String
# 3591|               ValueCategory = lvalue
# 3591|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3591|           Conversion = [BoolConversion] conversion to bool
# 3591|           Type = [BoolType] bool
# 3591|           Value = [CStyleCast] 0
# 3591|           ValueCategory = prvalue
# 3592|     getStmt(294): [DoStmt] do (...) ...
# 3594|       getCondition(): [Literal] 0
# 3594|           Type = [IntType] int
# 3594|           Value = [Literal] 0
# 3594|           ValueCategory = prvalue
# 3592|       getStmt(): [BlockStmt] { ... }
# 3593|         getStmt(0): [DeclStmt] declaration
# 3593|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x294
# 3593|               Type = [Struct] String
# 3593|             getVariable().getInitializer(): [Initializer] initializer for x294
# 3593|               getExpr(): [ConstructorCall] call to String
# 3593|                   Type = [VoidType] void
# 3593|                   ValueCategory = prvalue
# 3594|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3594|             Type = [VoidType] void
# 3594|             ValueCategory = prvalue
# 3594|           getQualifier(): [VariableAccess] x294
# 3594|               Type = [Struct] String
# 3594|               ValueCategory = lvalue
# 3594|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3594|           Conversion = [BoolConversion] conversion to bool
# 3594|           Type = [BoolType] bool
# 3594|           Value = [CStyleCast] 0
# 3594|           ValueCategory = prvalue
# 3595|     getStmt(295): [DoStmt] do (...) ...
# 3597|       getCondition(): [Literal] 0
# 3597|           Type = [IntType] int
# 3597|           Value = [Literal] 0
# 3597|           ValueCategory = prvalue
# 3595|       getStmt(): [BlockStmt] { ... }
# 3596|         getStmt(0): [DeclStmt] declaration
# 3596|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x295
# 3596|               Type = [Struct] String
# 3596|             getVariable().getInitializer(): [Initializer] initializer for x295
# 3596|               getExpr(): [ConstructorCall] call to String
# 3596|                   Type = [VoidType] void
# 3596|                   ValueCategory = prvalue
# 3597|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3597|             Type = [VoidType] void
# 3597|             ValueCategory = prvalue
# 3597|           getQualifier(): [VariableAccess] x295
# 3597|               Type = [Struct] String
# 3597|               ValueCategory = lvalue
# 3597|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3597|           Conversion = [BoolConversion] conversion to bool
# 3597|           Type = [BoolType] bool
# 3597|           Value = [CStyleCast] 0
# 3597|           ValueCategory = prvalue
# 3598|     getStmt(296): [DoStmt] do (...) ...
# 3600|       getCondition(): [Literal] 0
# 3600|           Type = [IntType] int
# 3600|           Value = [Literal] 0
# 3600|           ValueCategory = prvalue
# 3598|       getStmt(): [BlockStmt] { ... }
# 3599|         getStmt(0): [DeclStmt] declaration
# 3599|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x296
# 3599|               Type = [Struct] String
# 3599|             getVariable().getInitializer(): [Initializer] initializer for x296
# 3599|               getExpr(): [ConstructorCall] call to String
# 3599|                   Type = [VoidType] void
# 3599|                   ValueCategory = prvalue
# 3600|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3600|             Type = [VoidType] void
# 3600|             ValueCategory = prvalue
# 3600|           getQualifier(): [VariableAccess] x296
# 3600|               Type = [Struct] String
# 3600|               ValueCategory = lvalue
# 3600|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3600|           Conversion = [BoolConversion] conversion to bool
# 3600|           Type = [BoolType] bool
# 3600|           Value = [CStyleCast] 0
# 3600|           ValueCategory = prvalue
# 3601|     getStmt(297): [DoStmt] do (...) ...
# 3603|       getCondition(): [Literal] 0
# 3603|           Type = [IntType] int
# 3603|           Value = [Literal] 0
# 3603|           ValueCategory = prvalue
# 3601|       getStmt(): [BlockStmt] { ... }
# 3602|         getStmt(0): [DeclStmt] declaration
# 3602|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x297
# 3602|               Type = [Struct] String
# 3602|             getVariable().getInitializer(): [Initializer] initializer for x297
# 3602|               getExpr(): [ConstructorCall] call to String
# 3602|                   Type = [VoidType] void
# 3602|                   ValueCategory = prvalue
# 3603|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3603|             Type = [VoidType] void
# 3603|             ValueCategory = prvalue
# 3603|           getQualifier(): [VariableAccess] x297
# 3603|               Type = [Struct] String
# 3603|               ValueCategory = lvalue
# 3603|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3603|           Conversion = [BoolConversion] conversion to bool
# 3603|           Type = [BoolType] bool
# 3603|           Value = [CStyleCast] 0
# 3603|           ValueCategory = prvalue
# 3604|     getStmt(298): [DoStmt] do (...) ...
# 3606|       getCondition(): [Literal] 0
# 3606|           Type = [IntType] int
# 3606|           Value = [Literal] 0
# 3606|           ValueCategory = prvalue
# 3604|       getStmt(): [BlockStmt] { ... }
# 3605|         getStmt(0): [DeclStmt] declaration
# 3605|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x298
# 3605|               Type = [Struct] String
# 3605|             getVariable().getInitializer(): [Initializer] initializer for x298
# 3605|               getExpr(): [ConstructorCall] call to String
# 3605|                   Type = [VoidType] void
# 3605|                   ValueCategory = prvalue
# 3606|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3606|             Type = [VoidType] void
# 3606|             ValueCategory = prvalue
# 3606|           getQualifier(): [VariableAccess] x298
# 3606|               Type = [Struct] String
# 3606|               ValueCategory = lvalue
# 3606|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3606|           Conversion = [BoolConversion] conversion to bool
# 3606|           Type = [BoolType] bool
# 3606|           Value = [CStyleCast] 0
# 3606|           ValueCategory = prvalue
# 3607|     getStmt(299): [DoStmt] do (...) ...
# 3609|       getCondition(): [Literal] 0
# 3609|           Type = [IntType] int
# 3609|           Value = [Literal] 0
# 3609|           ValueCategory = prvalue
# 3607|       getStmt(): [BlockStmt] { ... }
# 3608|         getStmt(0): [DeclStmt] declaration
# 3608|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x299
# 3608|               Type = [Struct] String
# 3608|             getVariable().getInitializer(): [Initializer] initializer for x299
# 3608|               getExpr(): [ConstructorCall] call to String
# 3608|                   Type = [VoidType] void
# 3608|                   ValueCategory = prvalue
# 3609|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3609|             Type = [VoidType] void
# 3609|             ValueCategory = prvalue
# 3609|           getQualifier(): [VariableAccess] x299
# 3609|               Type = [Struct] String
# 3609|               ValueCategory = lvalue
# 3609|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3609|           Conversion = [BoolConversion] conversion to bool
# 3609|           Type = [BoolType] bool
# 3609|           Value = [CStyleCast] 0
# 3609|           ValueCategory = prvalue
# 3610|     getStmt(300): [DoStmt] do (...) ...
# 3612|       getCondition(): [Literal] 0
# 3612|           Type = [IntType] int
# 3612|           Value = [Literal] 0
# 3612|           ValueCategory = prvalue
# 3610|       getStmt(): [BlockStmt] { ... }
# 3611|         getStmt(0): [DeclStmt] declaration
# 3611|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x300
# 3611|               Type = [Struct] String
# 3611|             getVariable().getInitializer(): [Initializer] initializer for x300
# 3611|               getExpr(): [ConstructorCall] call to String
# 3611|                   Type = [VoidType] void
# 3611|                   ValueCategory = prvalue
# 3612|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3612|             Type = [VoidType] void
# 3612|             ValueCategory = prvalue
# 3612|           getQualifier(): [VariableAccess] x300
# 3612|               Type = [Struct] String
# 3612|               ValueCategory = lvalue
# 3612|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3612|           Conversion = [BoolConversion] conversion to bool
# 3612|           Type = [BoolType] bool
# 3612|           Value = [CStyleCast] 0
# 3612|           ValueCategory = prvalue
# 3613|     getStmt(301): [DoStmt] do (...) ...
# 3615|       getCondition(): [Literal] 0
# 3615|           Type = [IntType] int
# 3615|           Value = [Literal] 0
# 3615|           ValueCategory = prvalue
# 3613|       getStmt(): [BlockStmt] { ... }
# 3614|         getStmt(0): [DeclStmt] declaration
# 3614|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x301
# 3614|               Type = [Struct] String
# 3614|             getVariable().getInitializer(): [Initializer] initializer for x301
# 3614|               getExpr(): [ConstructorCall] call to String
# 3614|                   Type = [VoidType] void
# 3614|                   ValueCategory = prvalue
# 3615|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3615|             Type = [VoidType] void
# 3615|             ValueCategory = prvalue
# 3615|           getQualifier(): [VariableAccess] x301
# 3615|               Type = [Struct] String
# 3615|               ValueCategory = lvalue
# 3615|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3615|           Conversion = [BoolConversion] conversion to bool
# 3615|           Type = [BoolType] bool
# 3615|           Value = [CStyleCast] 0
# 3615|           ValueCategory = prvalue
# 3616|     getStmt(302): [DoStmt] do (...) ...
# 3618|       getCondition(): [Literal] 0
# 3618|           Type = [IntType] int
# 3618|           Value = [Literal] 0
# 3618|           ValueCategory = prvalue
# 3616|       getStmt(): [BlockStmt] { ... }
# 3617|         getStmt(0): [DeclStmt] declaration
# 3617|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x302
# 3617|               Type = [Struct] String
# 3617|             getVariable().getInitializer(): [Initializer] initializer for x302
# 3617|               getExpr(): [ConstructorCall] call to String
# 3617|                   Type = [VoidType] void
# 3617|                   ValueCategory = prvalue
# 3618|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3618|             Type = [VoidType] void
# 3618|             ValueCategory = prvalue
# 3618|           getQualifier(): [VariableAccess] x302
# 3618|               Type = [Struct] String
# 3618|               ValueCategory = lvalue
# 3618|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3618|           Conversion = [BoolConversion] conversion to bool
# 3618|           Type = [BoolType] bool
# 3618|           Value = [CStyleCast] 0
# 3618|           ValueCategory = prvalue
# 3619|     getStmt(303): [DoStmt] do (...) ...
# 3621|       getCondition(): [Literal] 0
# 3621|           Type = [IntType] int
# 3621|           Value = [Literal] 0
# 3621|           ValueCategory = prvalue
# 3619|       getStmt(): [BlockStmt] { ... }
# 3620|         getStmt(0): [DeclStmt] declaration
# 3620|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x303
# 3620|               Type = [Struct] String
# 3620|             getVariable().getInitializer(): [Initializer] initializer for x303
# 3620|               getExpr(): [ConstructorCall] call to String
# 3620|                   Type = [VoidType] void
# 3620|                   ValueCategory = prvalue
# 3621|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3621|             Type = [VoidType] void
# 3621|             ValueCategory = prvalue
# 3621|           getQualifier(): [VariableAccess] x303
# 3621|               Type = [Struct] String
# 3621|               ValueCategory = lvalue
# 3621|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3621|           Conversion = [BoolConversion] conversion to bool
# 3621|           Type = [BoolType] bool
# 3621|           Value = [CStyleCast] 0
# 3621|           ValueCategory = prvalue
# 3622|     getStmt(304): [DoStmt] do (...) ...
# 3624|       getCondition(): [Literal] 0
# 3624|           Type = [IntType] int
# 3624|           Value = [Literal] 0
# 3624|           ValueCategory = prvalue
# 3622|       getStmt(): [BlockStmt] { ... }
# 3623|         getStmt(0): [DeclStmt] declaration
# 3623|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x304
# 3623|               Type = [Struct] String
# 3623|             getVariable().getInitializer(): [Initializer] initializer for x304
# 3623|               getExpr(): [ConstructorCall] call to String
# 3623|                   Type = [VoidType] void
# 3623|                   ValueCategory = prvalue
# 3624|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3624|             Type = [VoidType] void
# 3624|             ValueCategory = prvalue
# 3624|           getQualifier(): [VariableAccess] x304
# 3624|               Type = [Struct] String
# 3624|               ValueCategory = lvalue
# 3624|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3624|           Conversion = [BoolConversion] conversion to bool
# 3624|           Type = [BoolType] bool
# 3624|           Value = [CStyleCast] 0
# 3624|           ValueCategory = prvalue
# 3625|     getStmt(305): [DoStmt] do (...) ...
# 3627|       getCondition(): [Literal] 0
# 3627|           Type = [IntType] int
# 3627|           Value = [Literal] 0
# 3627|           ValueCategory = prvalue
# 3625|       getStmt(): [BlockStmt] { ... }
# 3626|         getStmt(0): [DeclStmt] declaration
# 3626|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x305
# 3626|               Type = [Struct] String
# 3626|             getVariable().getInitializer(): [Initializer] initializer for x305
# 3626|               getExpr(): [ConstructorCall] call to String
# 3626|                   Type = [VoidType] void
# 3626|                   ValueCategory = prvalue
# 3627|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3627|             Type = [VoidType] void
# 3627|             ValueCategory = prvalue
# 3627|           getQualifier(): [VariableAccess] x305
# 3627|               Type = [Struct] String
# 3627|               ValueCategory = lvalue
# 3627|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3627|           Conversion = [BoolConversion] conversion to bool
# 3627|           Type = [BoolType] bool
# 3627|           Value = [CStyleCast] 0
# 3627|           ValueCategory = prvalue
# 3628|     getStmt(306): [DoStmt] do (...) ...
# 3630|       getCondition(): [Literal] 0
# 3630|           Type = [IntType] int
# 3630|           Value = [Literal] 0
# 3630|           ValueCategory = prvalue
# 3628|       getStmt(): [BlockStmt] { ... }
# 3629|         getStmt(0): [DeclStmt] declaration
# 3629|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x306
# 3629|               Type = [Struct] String
# 3629|             getVariable().getInitializer(): [Initializer] initializer for x306
# 3629|               getExpr(): [ConstructorCall] call to String
# 3629|                   Type = [VoidType] void
# 3629|                   ValueCategory = prvalue
# 3630|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3630|             Type = [VoidType] void
# 3630|             ValueCategory = prvalue
# 3630|           getQualifier(): [VariableAccess] x306
# 3630|               Type = [Struct] String
# 3630|               ValueCategory = lvalue
# 3630|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3630|           Conversion = [BoolConversion] conversion to bool
# 3630|           Type = [BoolType] bool
# 3630|           Value = [CStyleCast] 0
# 3630|           ValueCategory = prvalue
# 3631|     getStmt(307): [DoStmt] do (...) ...
# 3633|       getCondition(): [Literal] 0
# 3633|           Type = [IntType] int
# 3633|           Value = [Literal] 0
# 3633|           ValueCategory = prvalue
# 3631|       getStmt(): [BlockStmt] { ... }
# 3632|         getStmt(0): [DeclStmt] declaration
# 3632|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x307
# 3632|               Type = [Struct] String
# 3632|             getVariable().getInitializer(): [Initializer] initializer for x307
# 3632|               getExpr(): [ConstructorCall] call to String
# 3632|                   Type = [VoidType] void
# 3632|                   ValueCategory = prvalue
# 3633|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3633|             Type = [VoidType] void
# 3633|             ValueCategory = prvalue
# 3633|           getQualifier(): [VariableAccess] x307
# 3633|               Type = [Struct] String
# 3633|               ValueCategory = lvalue
# 3633|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3633|           Conversion = [BoolConversion] conversion to bool
# 3633|           Type = [BoolType] bool
# 3633|           Value = [CStyleCast] 0
# 3633|           ValueCategory = prvalue
# 3634|     getStmt(308): [DoStmt] do (...) ...
# 3636|       getCondition(): [Literal] 0
# 3636|           Type = [IntType] int
# 3636|           Value = [Literal] 0
# 3636|           ValueCategory = prvalue
# 3634|       getStmt(): [BlockStmt] { ... }
# 3635|         getStmt(0): [DeclStmt] declaration
# 3635|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x308
# 3635|               Type = [Struct] String
# 3635|             getVariable().getInitializer(): [Initializer] initializer for x308
# 3635|               getExpr(): [ConstructorCall] call to String
# 3635|                   Type = [VoidType] void
# 3635|                   ValueCategory = prvalue
# 3636|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3636|             Type = [VoidType] void
# 3636|             ValueCategory = prvalue
# 3636|           getQualifier(): [VariableAccess] x308
# 3636|               Type = [Struct] String
# 3636|               ValueCategory = lvalue
# 3636|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3636|           Conversion = [BoolConversion] conversion to bool
# 3636|           Type = [BoolType] bool
# 3636|           Value = [CStyleCast] 0
# 3636|           ValueCategory = prvalue
# 3637|     getStmt(309): [DoStmt] do (...) ...
# 3639|       getCondition(): [Literal] 0
# 3639|           Type = [IntType] int
# 3639|           Value = [Literal] 0
# 3639|           ValueCategory = prvalue
# 3637|       getStmt(): [BlockStmt] { ... }
# 3638|         getStmt(0): [DeclStmt] declaration
# 3638|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x309
# 3638|               Type = [Struct] String
# 3638|             getVariable().getInitializer(): [Initializer] initializer for x309
# 3638|               getExpr(): [ConstructorCall] call to String
# 3638|                   Type = [VoidType] void
# 3638|                   ValueCategory = prvalue
# 3639|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3639|             Type = [VoidType] void
# 3639|             ValueCategory = prvalue
# 3639|           getQualifier(): [VariableAccess] x309
# 3639|               Type = [Struct] String
# 3639|               ValueCategory = lvalue
# 3639|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3639|           Conversion = [BoolConversion] conversion to bool
# 3639|           Type = [BoolType] bool
# 3639|           Value = [CStyleCast] 0
# 3639|           ValueCategory = prvalue
# 3640|     getStmt(310): [DoStmt] do (...) ...
# 3642|       getCondition(): [Literal] 0
# 3642|           Type = [IntType] int
# 3642|           Value = [Literal] 0
# 3642|           ValueCategory = prvalue
# 3640|       getStmt(): [BlockStmt] { ... }
# 3641|         getStmt(0): [DeclStmt] declaration
# 3641|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x310
# 3641|               Type = [Struct] String
# 3641|             getVariable().getInitializer(): [Initializer] initializer for x310
# 3641|               getExpr(): [ConstructorCall] call to String
# 3641|                   Type = [VoidType] void
# 3641|                   ValueCategory = prvalue
# 3642|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3642|             Type = [VoidType] void
# 3642|             ValueCategory = prvalue
# 3642|           getQualifier(): [VariableAccess] x310
# 3642|               Type = [Struct] String
# 3642|               ValueCategory = lvalue
# 3642|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3642|           Conversion = [BoolConversion] conversion to bool
# 3642|           Type = [BoolType] bool
# 3642|           Value = [CStyleCast] 0
# 3642|           ValueCategory = prvalue
# 3643|     getStmt(311): [DoStmt] do (...) ...
# 3645|       getCondition(): [Literal] 0
# 3645|           Type = [IntType] int
# 3645|           Value = [Literal] 0
# 3645|           ValueCategory = prvalue
# 3643|       getStmt(): [BlockStmt] { ... }
# 3644|         getStmt(0): [DeclStmt] declaration
# 3644|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x311
# 3644|               Type = [Struct] String
# 3644|             getVariable().getInitializer(): [Initializer] initializer for x311
# 3644|               getExpr(): [ConstructorCall] call to String
# 3644|                   Type = [VoidType] void
# 3644|                   ValueCategory = prvalue
# 3645|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3645|             Type = [VoidType] void
# 3645|             ValueCategory = prvalue
# 3645|           getQualifier(): [VariableAccess] x311
# 3645|               Type = [Struct] String
# 3645|               ValueCategory = lvalue
# 3645|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3645|           Conversion = [BoolConversion] conversion to bool
# 3645|           Type = [BoolType] bool
# 3645|           Value = [CStyleCast] 0
# 3645|           ValueCategory = prvalue
# 3646|     getStmt(312): [DoStmt] do (...) ...
# 3648|       getCondition(): [Literal] 0
# 3648|           Type = [IntType] int
# 3648|           Value = [Literal] 0
# 3648|           ValueCategory = prvalue
# 3646|       getStmt(): [BlockStmt] { ... }
# 3647|         getStmt(0): [DeclStmt] declaration
# 3647|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x312
# 3647|               Type = [Struct] String
# 3647|             getVariable().getInitializer(): [Initializer] initializer for x312
# 3647|               getExpr(): [ConstructorCall] call to String
# 3647|                   Type = [VoidType] void
# 3647|                   ValueCategory = prvalue
# 3648|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3648|             Type = [VoidType] void
# 3648|             ValueCategory = prvalue
# 3648|           getQualifier(): [VariableAccess] x312
# 3648|               Type = [Struct] String
# 3648|               ValueCategory = lvalue
# 3648|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3648|           Conversion = [BoolConversion] conversion to bool
# 3648|           Type = [BoolType] bool
# 3648|           Value = [CStyleCast] 0
# 3648|           ValueCategory = prvalue
# 3649|     getStmt(313): [DoStmt] do (...) ...
# 3651|       getCondition(): [Literal] 0
# 3651|           Type = [IntType] int
# 3651|           Value = [Literal] 0
# 3651|           ValueCategory = prvalue
# 3649|       getStmt(): [BlockStmt] { ... }
# 3650|         getStmt(0): [DeclStmt] declaration
# 3650|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x313
# 3650|               Type = [Struct] String
# 3650|             getVariable().getInitializer(): [Initializer] initializer for x313
# 3650|               getExpr(): [ConstructorCall] call to String
# 3650|                   Type = [VoidType] void
# 3650|                   ValueCategory = prvalue
# 3651|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3651|             Type = [VoidType] void
# 3651|             ValueCategory = prvalue
# 3651|           getQualifier(): [VariableAccess] x313
# 3651|               Type = [Struct] String
# 3651|               ValueCategory = lvalue
# 3651|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3651|           Conversion = [BoolConversion] conversion to bool
# 3651|           Type = [BoolType] bool
# 3651|           Value = [CStyleCast] 0
# 3651|           ValueCategory = prvalue
# 3652|     getStmt(314): [DoStmt] do (...) ...
# 3654|       getCondition(): [Literal] 0
# 3654|           Type = [IntType] int
# 3654|           Value = [Literal] 0
# 3654|           ValueCategory = prvalue
# 3652|       getStmt(): [BlockStmt] { ... }
# 3653|         getStmt(0): [DeclStmt] declaration
# 3653|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x314
# 3653|               Type = [Struct] String
# 3653|             getVariable().getInitializer(): [Initializer] initializer for x314
# 3653|               getExpr(): [ConstructorCall] call to String
# 3653|                   Type = [VoidType] void
# 3653|                   ValueCategory = prvalue
# 3654|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3654|             Type = [VoidType] void
# 3654|             ValueCategory = prvalue
# 3654|           getQualifier(): [VariableAccess] x314
# 3654|               Type = [Struct] String
# 3654|               ValueCategory = lvalue
# 3654|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3654|           Conversion = [BoolConversion] conversion to bool
# 3654|           Type = [BoolType] bool
# 3654|           Value = [CStyleCast] 0
# 3654|           ValueCategory = prvalue
# 3655|     getStmt(315): [DoStmt] do (...) ...
# 3657|       getCondition(): [Literal] 0
# 3657|           Type = [IntType] int
# 3657|           Value = [Literal] 0
# 3657|           ValueCategory = prvalue
# 3655|       getStmt(): [BlockStmt] { ... }
# 3656|         getStmt(0): [DeclStmt] declaration
# 3656|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x315
# 3656|               Type = [Struct] String
# 3656|             getVariable().getInitializer(): [Initializer] initializer for x315
# 3656|               getExpr(): [ConstructorCall] call to String
# 3656|                   Type = [VoidType] void
# 3656|                   ValueCategory = prvalue
# 3657|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3657|             Type = [VoidType] void
# 3657|             ValueCategory = prvalue
# 3657|           getQualifier(): [VariableAccess] x315
# 3657|               Type = [Struct] String
# 3657|               ValueCategory = lvalue
# 3657|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3657|           Conversion = [BoolConversion] conversion to bool
# 3657|           Type = [BoolType] bool
# 3657|           Value = [CStyleCast] 0
# 3657|           ValueCategory = prvalue
# 3658|     getStmt(316): [DoStmt] do (...) ...
# 3660|       getCondition(): [Literal] 0
# 3660|           Type = [IntType] int
# 3660|           Value = [Literal] 0
# 3660|           ValueCategory = prvalue
# 3658|       getStmt(): [BlockStmt] { ... }
# 3659|         getStmt(0): [DeclStmt] declaration
# 3659|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x316
# 3659|               Type = [Struct] String
# 3659|             getVariable().getInitializer(): [Initializer] initializer for x316
# 3659|               getExpr(): [ConstructorCall] call to String
# 3659|                   Type = [VoidType] void
# 3659|                   ValueCategory = prvalue
# 3660|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3660|             Type = [VoidType] void
# 3660|             ValueCategory = prvalue
# 3660|           getQualifier(): [VariableAccess] x316
# 3660|               Type = [Struct] String
# 3660|               ValueCategory = lvalue
# 3660|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3660|           Conversion = [BoolConversion] conversion to bool
# 3660|           Type = [BoolType] bool
# 3660|           Value = [CStyleCast] 0
# 3660|           ValueCategory = prvalue
# 3661|     getStmt(317): [DoStmt] do (...) ...
# 3663|       getCondition(): [Literal] 0
# 3663|           Type = [IntType] int
# 3663|           Value = [Literal] 0
# 3663|           ValueCategory = prvalue
# 3661|       getStmt(): [BlockStmt] { ... }
# 3662|         getStmt(0): [DeclStmt] declaration
# 3662|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x317
# 3662|               Type = [Struct] String
# 3662|             getVariable().getInitializer(): [Initializer] initializer for x317
# 3662|               getExpr(): [ConstructorCall] call to String
# 3662|                   Type = [VoidType] void
# 3662|                   ValueCategory = prvalue
# 3663|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3663|             Type = [VoidType] void
# 3663|             ValueCategory = prvalue
# 3663|           getQualifier(): [VariableAccess] x317
# 3663|               Type = [Struct] String
# 3663|               ValueCategory = lvalue
# 3663|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3663|           Conversion = [BoolConversion] conversion to bool
# 3663|           Type = [BoolType] bool
# 3663|           Value = [CStyleCast] 0
# 3663|           ValueCategory = prvalue
# 3664|     getStmt(318): [DoStmt] do (...) ...
# 3666|       getCondition(): [Literal] 0
# 3666|           Type = [IntType] int
# 3666|           Value = [Literal] 0
# 3666|           ValueCategory = prvalue
# 3664|       getStmt(): [BlockStmt] { ... }
# 3665|         getStmt(0): [DeclStmt] declaration
# 3665|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x318
# 3665|               Type = [Struct] String
# 3665|             getVariable().getInitializer(): [Initializer] initializer for x318
# 3665|               getExpr(): [ConstructorCall] call to String
# 3665|                   Type = [VoidType] void
# 3665|                   ValueCategory = prvalue
# 3666|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3666|             Type = [VoidType] void
# 3666|             ValueCategory = prvalue
# 3666|           getQualifier(): [VariableAccess] x318
# 3666|               Type = [Struct] String
# 3666|               ValueCategory = lvalue
# 3666|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3666|           Conversion = [BoolConversion] conversion to bool
# 3666|           Type = [BoolType] bool
# 3666|           Value = [CStyleCast] 0
# 3666|           ValueCategory = prvalue
# 3667|     getStmt(319): [DoStmt] do (...) ...
# 3669|       getCondition(): [Literal] 0
# 3669|           Type = [IntType] int
# 3669|           Value = [Literal] 0
# 3669|           ValueCategory = prvalue
# 3667|       getStmt(): [BlockStmt] { ... }
# 3668|         getStmt(0): [DeclStmt] declaration
# 3668|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x319
# 3668|               Type = [Struct] String
# 3668|             getVariable().getInitializer(): [Initializer] initializer for x319
# 3668|               getExpr(): [ConstructorCall] call to String
# 3668|                   Type = [VoidType] void
# 3668|                   ValueCategory = prvalue
# 3669|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3669|             Type = [VoidType] void
# 3669|             ValueCategory = prvalue
# 3669|           getQualifier(): [VariableAccess] x319
# 3669|               Type = [Struct] String
# 3669|               ValueCategory = lvalue
# 3669|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3669|           Conversion = [BoolConversion] conversion to bool
# 3669|           Type = [BoolType] bool
# 3669|           Value = [CStyleCast] 0
# 3669|           ValueCategory = prvalue
# 3670|     getStmt(320): [DoStmt] do (...) ...
# 3672|       getCondition(): [Literal] 0
# 3672|           Type = [IntType] int
# 3672|           Value = [Literal] 0
# 3672|           ValueCategory = prvalue
# 3670|       getStmt(): [BlockStmt] { ... }
# 3671|         getStmt(0): [DeclStmt] declaration
# 3671|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x320
# 3671|               Type = [Struct] String
# 3671|             getVariable().getInitializer(): [Initializer] initializer for x320
# 3671|               getExpr(): [ConstructorCall] call to String
# 3671|                   Type = [VoidType] void
# 3671|                   ValueCategory = prvalue
# 3672|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3672|             Type = [VoidType] void
# 3672|             ValueCategory = prvalue
# 3672|           getQualifier(): [VariableAccess] x320
# 3672|               Type = [Struct] String
# 3672|               ValueCategory = lvalue
# 3672|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3672|           Conversion = [BoolConversion] conversion to bool
# 3672|           Type = [BoolType] bool
# 3672|           Value = [CStyleCast] 0
# 3672|           ValueCategory = prvalue
# 3673|     getStmt(321): [DoStmt] do (...) ...
# 3675|       getCondition(): [Literal] 0
# 3675|           Type = [IntType] int
# 3675|           Value = [Literal] 0
# 3675|           ValueCategory = prvalue
# 3673|       getStmt(): [BlockStmt] { ... }
# 3674|         getStmt(0): [DeclStmt] declaration
# 3674|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x321
# 3674|               Type = [Struct] String
# 3674|             getVariable().getInitializer(): [Initializer] initializer for x321
# 3674|               getExpr(): [ConstructorCall] call to String
# 3674|                   Type = [VoidType] void
# 3674|                   ValueCategory = prvalue
# 3675|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3675|             Type = [VoidType] void
# 3675|             ValueCategory = prvalue
# 3675|           getQualifier(): [VariableAccess] x321
# 3675|               Type = [Struct] String
# 3675|               ValueCategory = lvalue
# 3675|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3675|           Conversion = [BoolConversion] conversion to bool
# 3675|           Type = [BoolType] bool
# 3675|           Value = [CStyleCast] 0
# 3675|           ValueCategory = prvalue
# 3676|     getStmt(322): [DoStmt] do (...) ...
# 3678|       getCondition(): [Literal] 0
# 3678|           Type = [IntType] int
# 3678|           Value = [Literal] 0
# 3678|           ValueCategory = prvalue
# 3676|       getStmt(): [BlockStmt] { ... }
# 3677|         getStmt(0): [DeclStmt] declaration
# 3677|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x322
# 3677|               Type = [Struct] String
# 3677|             getVariable().getInitializer(): [Initializer] initializer for x322
# 3677|               getExpr(): [ConstructorCall] call to String
# 3677|                   Type = [VoidType] void
# 3677|                   ValueCategory = prvalue
# 3678|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3678|             Type = [VoidType] void
# 3678|             ValueCategory = prvalue
# 3678|           getQualifier(): [VariableAccess] x322
# 3678|               Type = [Struct] String
# 3678|               ValueCategory = lvalue
# 3678|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3678|           Conversion = [BoolConversion] conversion to bool
# 3678|           Type = [BoolType] bool
# 3678|           Value = [CStyleCast] 0
# 3678|           ValueCategory = prvalue
# 3679|     getStmt(323): [DoStmt] do (...) ...
# 3681|       getCondition(): [Literal] 0
# 3681|           Type = [IntType] int
# 3681|           Value = [Literal] 0
# 3681|           ValueCategory = prvalue
# 3679|       getStmt(): [BlockStmt] { ... }
# 3680|         getStmt(0): [DeclStmt] declaration
# 3680|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x323
# 3680|               Type = [Struct] String
# 3680|             getVariable().getInitializer(): [Initializer] initializer for x323
# 3680|               getExpr(): [ConstructorCall] call to String
# 3680|                   Type = [VoidType] void
# 3680|                   ValueCategory = prvalue
# 3681|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3681|             Type = [VoidType] void
# 3681|             ValueCategory = prvalue
# 3681|           getQualifier(): [VariableAccess] x323
# 3681|               Type = [Struct] String
# 3681|               ValueCategory = lvalue
# 3681|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3681|           Conversion = [BoolConversion] conversion to bool
# 3681|           Type = [BoolType] bool
# 3681|           Value = [CStyleCast] 0
# 3681|           ValueCategory = prvalue
# 3682|     getStmt(324): [DoStmt] do (...) ...
# 3684|       getCondition(): [Literal] 0
# 3684|           Type = [IntType] int
# 3684|           Value = [Literal] 0
# 3684|           ValueCategory = prvalue
# 3682|       getStmt(): [BlockStmt] { ... }
# 3683|         getStmt(0): [DeclStmt] declaration
# 3683|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x324
# 3683|               Type = [Struct] String
# 3683|             getVariable().getInitializer(): [Initializer] initializer for x324
# 3683|               getExpr(): [ConstructorCall] call to String
# 3683|                   Type = [VoidType] void
# 3683|                   ValueCategory = prvalue
# 3684|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3684|             Type = [VoidType] void
# 3684|             ValueCategory = prvalue
# 3684|           getQualifier(): [VariableAccess] x324
# 3684|               Type = [Struct] String
# 3684|               ValueCategory = lvalue
# 3684|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3684|           Conversion = [BoolConversion] conversion to bool
# 3684|           Type = [BoolType] bool
# 3684|           Value = [CStyleCast] 0
# 3684|           ValueCategory = prvalue
# 3685|     getStmt(325): [DoStmt] do (...) ...
# 3687|       getCondition(): [Literal] 0
# 3687|           Type = [IntType] int
# 3687|           Value = [Literal] 0
# 3687|           ValueCategory = prvalue
# 3685|       getStmt(): [BlockStmt] { ... }
# 3686|         getStmt(0): [DeclStmt] declaration
# 3686|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x325
# 3686|               Type = [Struct] String
# 3686|             getVariable().getInitializer(): [Initializer] initializer for x325
# 3686|               getExpr(): [ConstructorCall] call to String
# 3686|                   Type = [VoidType] void
# 3686|                   ValueCategory = prvalue
# 3687|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3687|             Type = [VoidType] void
# 3687|             ValueCategory = prvalue
# 3687|           getQualifier(): [VariableAccess] x325
# 3687|               Type = [Struct] String
# 3687|               ValueCategory = lvalue
# 3687|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3687|           Conversion = [BoolConversion] conversion to bool
# 3687|           Type = [BoolType] bool
# 3687|           Value = [CStyleCast] 0
# 3687|           ValueCategory = prvalue
# 3688|     getStmt(326): [DoStmt] do (...) ...
# 3690|       getCondition(): [Literal] 0
# 3690|           Type = [IntType] int
# 3690|           Value = [Literal] 0
# 3690|           ValueCategory = prvalue
# 3688|       getStmt(): [BlockStmt] { ... }
# 3689|         getStmt(0): [DeclStmt] declaration
# 3689|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x326
# 3689|               Type = [Struct] String
# 3689|             getVariable().getInitializer(): [Initializer] initializer for x326
# 3689|               getExpr(): [ConstructorCall] call to String
# 3689|                   Type = [VoidType] void
# 3689|                   ValueCategory = prvalue
# 3690|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3690|             Type = [VoidType] void
# 3690|             ValueCategory = prvalue
# 3690|           getQualifier(): [VariableAccess] x326
# 3690|               Type = [Struct] String
# 3690|               ValueCategory = lvalue
# 3690|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3690|           Conversion = [BoolConversion] conversion to bool
# 3690|           Type = [BoolType] bool
# 3690|           Value = [CStyleCast] 0
# 3690|           ValueCategory = prvalue
# 3691|     getStmt(327): [DoStmt] do (...) ...
# 3693|       getCondition(): [Literal] 0
# 3693|           Type = [IntType] int
# 3693|           Value = [Literal] 0
# 3693|           ValueCategory = prvalue
# 3691|       getStmt(): [BlockStmt] { ... }
# 3692|         getStmt(0): [DeclStmt] declaration
# 3692|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x327
# 3692|               Type = [Struct] String
# 3692|             getVariable().getInitializer(): [Initializer] initializer for x327
# 3692|               getExpr(): [ConstructorCall] call to String
# 3692|                   Type = [VoidType] void
# 3692|                   ValueCategory = prvalue
# 3693|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3693|             Type = [VoidType] void
# 3693|             ValueCategory = prvalue
# 3693|           getQualifier(): [VariableAccess] x327
# 3693|               Type = [Struct] String
# 3693|               ValueCategory = lvalue
# 3693|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3693|           Conversion = [BoolConversion] conversion to bool
# 3693|           Type = [BoolType] bool
# 3693|           Value = [CStyleCast] 0
# 3693|           ValueCategory = prvalue
# 3694|     getStmt(328): [DoStmt] do (...) ...
# 3696|       getCondition(): [Literal] 0
# 3696|           Type = [IntType] int
# 3696|           Value = [Literal] 0
# 3696|           ValueCategory = prvalue
# 3694|       getStmt(): [BlockStmt] { ... }
# 3695|         getStmt(0): [DeclStmt] declaration
# 3695|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x328
# 3695|               Type = [Struct] String
# 3695|             getVariable().getInitializer(): [Initializer] initializer for x328
# 3695|               getExpr(): [ConstructorCall] call to String
# 3695|                   Type = [VoidType] void
# 3695|                   ValueCategory = prvalue
# 3696|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3696|             Type = [VoidType] void
# 3696|             ValueCategory = prvalue
# 3696|           getQualifier(): [VariableAccess] x328
# 3696|               Type = [Struct] String
# 3696|               ValueCategory = lvalue
# 3696|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3696|           Conversion = [BoolConversion] conversion to bool
# 3696|           Type = [BoolType] bool
# 3696|           Value = [CStyleCast] 0
# 3696|           ValueCategory = prvalue
# 3697|     getStmt(329): [DoStmt] do (...) ...
# 3699|       getCondition(): [Literal] 0
# 3699|           Type = [IntType] int
# 3699|           Value = [Literal] 0
# 3699|           ValueCategory = prvalue
# 3697|       getStmt(): [BlockStmt] { ... }
# 3698|         getStmt(0): [DeclStmt] declaration
# 3698|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x329
# 3698|               Type = [Struct] String
# 3698|             getVariable().getInitializer(): [Initializer] initializer for x329
# 3698|               getExpr(): [ConstructorCall] call to String
# 3698|                   Type = [VoidType] void
# 3698|                   ValueCategory = prvalue
# 3699|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3699|             Type = [VoidType] void
# 3699|             ValueCategory = prvalue
# 3699|           getQualifier(): [VariableAccess] x329
# 3699|               Type = [Struct] String
# 3699|               ValueCategory = lvalue
# 3699|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3699|           Conversion = [BoolConversion] conversion to bool
# 3699|           Type = [BoolType] bool
# 3699|           Value = [CStyleCast] 0
# 3699|           ValueCategory = prvalue
# 3700|     getStmt(330): [DoStmt] do (...) ...
# 3702|       getCondition(): [Literal] 0
# 3702|           Type = [IntType] int
# 3702|           Value = [Literal] 0
# 3702|           ValueCategory = prvalue
# 3700|       getStmt(): [BlockStmt] { ... }
# 3701|         getStmt(0): [DeclStmt] declaration
# 3701|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x330
# 3701|               Type = [Struct] String
# 3701|             getVariable().getInitializer(): [Initializer] initializer for x330
# 3701|               getExpr(): [ConstructorCall] call to String
# 3701|                   Type = [VoidType] void
# 3701|                   ValueCategory = prvalue
# 3702|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3702|             Type = [VoidType] void
# 3702|             ValueCategory = prvalue
# 3702|           getQualifier(): [VariableAccess] x330
# 3702|               Type = [Struct] String
# 3702|               ValueCategory = lvalue
# 3702|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3702|           Conversion = [BoolConversion] conversion to bool
# 3702|           Type = [BoolType] bool
# 3702|           Value = [CStyleCast] 0
# 3702|           ValueCategory = prvalue
# 3703|     getStmt(331): [DoStmt] do (...) ...
# 3705|       getCondition(): [Literal] 0
# 3705|           Type = [IntType] int
# 3705|           Value = [Literal] 0
# 3705|           ValueCategory = prvalue
# 3703|       getStmt(): [BlockStmt] { ... }
# 3704|         getStmt(0): [DeclStmt] declaration
# 3704|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x331
# 3704|               Type = [Struct] String
# 3704|             getVariable().getInitializer(): [Initializer] initializer for x331
# 3704|               getExpr(): [ConstructorCall] call to String
# 3704|                   Type = [VoidType] void
# 3704|                   ValueCategory = prvalue
# 3705|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3705|             Type = [VoidType] void
# 3705|             ValueCategory = prvalue
# 3705|           getQualifier(): [VariableAccess] x331
# 3705|               Type = [Struct] String
# 3705|               ValueCategory = lvalue
# 3705|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3705|           Conversion = [BoolConversion] conversion to bool
# 3705|           Type = [BoolType] bool
# 3705|           Value = [CStyleCast] 0
# 3705|           ValueCategory = prvalue
# 3706|     getStmt(332): [DoStmt] do (...) ...
# 3708|       getCondition(): [Literal] 0
# 3708|           Type = [IntType] int
# 3708|           Value = [Literal] 0
# 3708|           ValueCategory = prvalue
# 3706|       getStmt(): [BlockStmt] { ... }
# 3707|         getStmt(0): [DeclStmt] declaration
# 3707|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x332
# 3707|               Type = [Struct] String
# 3707|             getVariable().getInitializer(): [Initializer] initializer for x332
# 3707|               getExpr(): [ConstructorCall] call to String
# 3707|                   Type = [VoidType] void
# 3707|                   ValueCategory = prvalue
# 3708|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3708|             Type = [VoidType] void
# 3708|             ValueCategory = prvalue
# 3708|           getQualifier(): [VariableAccess] x332
# 3708|               Type = [Struct] String
# 3708|               ValueCategory = lvalue
# 3708|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3708|           Conversion = [BoolConversion] conversion to bool
# 3708|           Type = [BoolType] bool
# 3708|           Value = [CStyleCast] 0
# 3708|           ValueCategory = prvalue
# 3709|     getStmt(333): [DoStmt] do (...) ...
# 3711|       getCondition(): [Literal] 0
# 3711|           Type = [IntType] int
# 3711|           Value = [Literal] 0
# 3711|           ValueCategory = prvalue
# 3709|       getStmt(): [BlockStmt] { ... }
# 3710|         getStmt(0): [DeclStmt] declaration
# 3710|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x333
# 3710|               Type = [Struct] String
# 3710|             getVariable().getInitializer(): [Initializer] initializer for x333
# 3710|               getExpr(): [ConstructorCall] call to String
# 3710|                   Type = [VoidType] void
# 3710|                   ValueCategory = prvalue
# 3711|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3711|             Type = [VoidType] void
# 3711|             ValueCategory = prvalue
# 3711|           getQualifier(): [VariableAccess] x333
# 3711|               Type = [Struct] String
# 3711|               ValueCategory = lvalue
# 3711|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3711|           Conversion = [BoolConversion] conversion to bool
# 3711|           Type = [BoolType] bool
# 3711|           Value = [CStyleCast] 0
# 3711|           ValueCategory = prvalue
# 3712|     getStmt(334): [DoStmt] do (...) ...
# 3714|       getCondition(): [Literal] 0
# 3714|           Type = [IntType] int
# 3714|           Value = [Literal] 0
# 3714|           ValueCategory = prvalue
# 3712|       getStmt(): [BlockStmt] { ... }
# 3713|         getStmt(0): [DeclStmt] declaration
# 3713|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x334
# 3713|               Type = [Struct] String
# 3713|             getVariable().getInitializer(): [Initializer] initializer for x334
# 3713|               getExpr(): [ConstructorCall] call to String
# 3713|                   Type = [VoidType] void
# 3713|                   ValueCategory = prvalue
# 3714|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3714|             Type = [VoidType] void
# 3714|             ValueCategory = prvalue
# 3714|           getQualifier(): [VariableAccess] x334
# 3714|               Type = [Struct] String
# 3714|               ValueCategory = lvalue
# 3714|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3714|           Conversion = [BoolConversion] conversion to bool
# 3714|           Type = [BoolType] bool
# 3714|           Value = [CStyleCast] 0
# 3714|           ValueCategory = prvalue
# 3715|     getStmt(335): [DoStmt] do (...) ...
# 3717|       getCondition(): [Literal] 0
# 3717|           Type = [IntType] int
# 3717|           Value = [Literal] 0
# 3717|           ValueCategory = prvalue
# 3715|       getStmt(): [BlockStmt] { ... }
# 3716|         getStmt(0): [DeclStmt] declaration
# 3716|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x335
# 3716|               Type = [Struct] String
# 3716|             getVariable().getInitializer(): [Initializer] initializer for x335
# 3716|               getExpr(): [ConstructorCall] call to String
# 3716|                   Type = [VoidType] void
# 3716|                   ValueCategory = prvalue
# 3717|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3717|             Type = [VoidType] void
# 3717|             ValueCategory = prvalue
# 3717|           getQualifier(): [VariableAccess] x335
# 3717|               Type = [Struct] String
# 3717|               ValueCategory = lvalue
# 3717|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3717|           Conversion = [BoolConversion] conversion to bool
# 3717|           Type = [BoolType] bool
# 3717|           Value = [CStyleCast] 0
# 3717|           ValueCategory = prvalue
# 3718|     getStmt(336): [DoStmt] do (...) ...
# 3720|       getCondition(): [Literal] 0
# 3720|           Type = [IntType] int
# 3720|           Value = [Literal] 0
# 3720|           ValueCategory = prvalue
# 3718|       getStmt(): [BlockStmt] { ... }
# 3719|         getStmt(0): [DeclStmt] declaration
# 3719|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x336
# 3719|               Type = [Struct] String
# 3719|             getVariable().getInitializer(): [Initializer] initializer for x336
# 3719|               getExpr(): [ConstructorCall] call to String
# 3719|                   Type = [VoidType] void
# 3719|                   ValueCategory = prvalue
# 3720|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3720|             Type = [VoidType] void
# 3720|             ValueCategory = prvalue
# 3720|           getQualifier(): [VariableAccess] x336
# 3720|               Type = [Struct] String
# 3720|               ValueCategory = lvalue
# 3720|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3720|           Conversion = [BoolConversion] conversion to bool
# 3720|           Type = [BoolType] bool
# 3720|           Value = [CStyleCast] 0
# 3720|           ValueCategory = prvalue
# 3721|     getStmt(337): [DoStmt] do (...) ...
# 3723|       getCondition(): [Literal] 0
# 3723|           Type = [IntType] int
# 3723|           Value = [Literal] 0
# 3723|           ValueCategory = prvalue
# 3721|       getStmt(): [BlockStmt] { ... }
# 3722|         getStmt(0): [DeclStmt] declaration
# 3722|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x337
# 3722|               Type = [Struct] String
# 3722|             getVariable().getInitializer(): [Initializer] initializer for x337
# 3722|               getExpr(): [ConstructorCall] call to String
# 3722|                   Type = [VoidType] void
# 3722|                   ValueCategory = prvalue
# 3723|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3723|             Type = [VoidType] void
# 3723|             ValueCategory = prvalue
# 3723|           getQualifier(): [VariableAccess] x337
# 3723|               Type = [Struct] String
# 3723|               ValueCategory = lvalue
# 3723|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3723|           Conversion = [BoolConversion] conversion to bool
# 3723|           Type = [BoolType] bool
# 3723|           Value = [CStyleCast] 0
# 3723|           ValueCategory = prvalue
# 3724|     getStmt(338): [DoStmt] do (...) ...
# 3726|       getCondition(): [Literal] 0
# 3726|           Type = [IntType] int
# 3726|           Value = [Literal] 0
# 3726|           ValueCategory = prvalue
# 3724|       getStmt(): [BlockStmt] { ... }
# 3725|         getStmt(0): [DeclStmt] declaration
# 3725|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x338
# 3725|               Type = [Struct] String
# 3725|             getVariable().getInitializer(): [Initializer] initializer for x338
# 3725|               getExpr(): [ConstructorCall] call to String
# 3725|                   Type = [VoidType] void
# 3725|                   ValueCategory = prvalue
# 3726|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3726|             Type = [VoidType] void
# 3726|             ValueCategory = prvalue
# 3726|           getQualifier(): [VariableAccess] x338
# 3726|               Type = [Struct] String
# 3726|               ValueCategory = lvalue
# 3726|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3726|           Conversion = [BoolConversion] conversion to bool
# 3726|           Type = [BoolType] bool
# 3726|           Value = [CStyleCast] 0
# 3726|           ValueCategory = prvalue
# 3727|     getStmt(339): [DoStmt] do (...) ...
# 3729|       getCondition(): [Literal] 0
# 3729|           Type = [IntType] int
# 3729|           Value = [Literal] 0
# 3729|           ValueCategory = prvalue
# 3727|       getStmt(): [BlockStmt] { ... }
# 3728|         getStmt(0): [DeclStmt] declaration
# 3728|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x339
# 3728|               Type = [Struct] String
# 3728|             getVariable().getInitializer(): [Initializer] initializer for x339
# 3728|               getExpr(): [ConstructorCall] call to String
# 3728|                   Type = [VoidType] void
# 3728|                   ValueCategory = prvalue
# 3729|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3729|             Type = [VoidType] void
# 3729|             ValueCategory = prvalue
# 3729|           getQualifier(): [VariableAccess] x339
# 3729|               Type = [Struct] String
# 3729|               ValueCategory = lvalue
# 3729|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3729|           Conversion = [BoolConversion] conversion to bool
# 3729|           Type = [BoolType] bool
# 3729|           Value = [CStyleCast] 0
# 3729|           ValueCategory = prvalue
# 3730|     getStmt(340): [DoStmt] do (...) ...
# 3732|       getCondition(): [Literal] 0
# 3732|           Type = [IntType] int
# 3732|           Value = [Literal] 0
# 3732|           ValueCategory = prvalue
# 3730|       getStmt(): [BlockStmt] { ... }
# 3731|         getStmt(0): [DeclStmt] declaration
# 3731|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x340
# 3731|               Type = [Struct] String
# 3731|             getVariable().getInitializer(): [Initializer] initializer for x340
# 3731|               getExpr(): [ConstructorCall] call to String
# 3731|                   Type = [VoidType] void
# 3731|                   ValueCategory = prvalue
# 3732|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3732|             Type = [VoidType] void
# 3732|             ValueCategory = prvalue
# 3732|           getQualifier(): [VariableAccess] x340
# 3732|               Type = [Struct] String
# 3732|               ValueCategory = lvalue
# 3732|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3732|           Conversion = [BoolConversion] conversion to bool
# 3732|           Type = [BoolType] bool
# 3732|           Value = [CStyleCast] 0
# 3732|           ValueCategory = prvalue
# 3733|     getStmt(341): [DoStmt] do (...) ...
# 3735|       getCondition(): [Literal] 0
# 3735|           Type = [IntType] int
# 3735|           Value = [Literal] 0
# 3735|           ValueCategory = prvalue
# 3733|       getStmt(): [BlockStmt] { ... }
# 3734|         getStmt(0): [DeclStmt] declaration
# 3734|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x341
# 3734|               Type = [Struct] String
# 3734|             getVariable().getInitializer(): [Initializer] initializer for x341
# 3734|               getExpr(): [ConstructorCall] call to String
# 3734|                   Type = [VoidType] void
# 3734|                   ValueCategory = prvalue
# 3735|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3735|             Type = [VoidType] void
# 3735|             ValueCategory = prvalue
# 3735|           getQualifier(): [VariableAccess] x341
# 3735|               Type = [Struct] String
# 3735|               ValueCategory = lvalue
# 3735|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3735|           Conversion = [BoolConversion] conversion to bool
# 3735|           Type = [BoolType] bool
# 3735|           Value = [CStyleCast] 0
# 3735|           ValueCategory = prvalue
# 3736|     getStmt(342): [DoStmt] do (...) ...
# 3738|       getCondition(): [Literal] 0
# 3738|           Type = [IntType] int
# 3738|           Value = [Literal] 0
# 3738|           ValueCategory = prvalue
# 3736|       getStmt(): [BlockStmt] { ... }
# 3737|         getStmt(0): [DeclStmt] declaration
# 3737|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x342
# 3737|               Type = [Struct] String
# 3737|             getVariable().getInitializer(): [Initializer] initializer for x342
# 3737|               getExpr(): [ConstructorCall] call to String
# 3737|                   Type = [VoidType] void
# 3737|                   ValueCategory = prvalue
# 3738|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3738|             Type = [VoidType] void
# 3738|             ValueCategory = prvalue
# 3738|           getQualifier(): [VariableAccess] x342
# 3738|               Type = [Struct] String
# 3738|               ValueCategory = lvalue
# 3738|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3738|           Conversion = [BoolConversion] conversion to bool
# 3738|           Type = [BoolType] bool
# 3738|           Value = [CStyleCast] 0
# 3738|           ValueCategory = prvalue
# 3739|     getStmt(343): [DoStmt] do (...) ...
# 3741|       getCondition(): [Literal] 0
# 3741|           Type = [IntType] int
# 3741|           Value = [Literal] 0
# 3741|           ValueCategory = prvalue
# 3739|       getStmt(): [BlockStmt] { ... }
# 3740|         getStmt(0): [DeclStmt] declaration
# 3740|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x343
# 3740|               Type = [Struct] String
# 3740|             getVariable().getInitializer(): [Initializer] initializer for x343
# 3740|               getExpr(): [ConstructorCall] call to String
# 3740|                   Type = [VoidType] void
# 3740|                   ValueCategory = prvalue
# 3741|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3741|             Type = [VoidType] void
# 3741|             ValueCategory = prvalue
# 3741|           getQualifier(): [VariableAccess] x343
# 3741|               Type = [Struct] String
# 3741|               ValueCategory = lvalue
# 3741|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3741|           Conversion = [BoolConversion] conversion to bool
# 3741|           Type = [BoolType] bool
# 3741|           Value = [CStyleCast] 0
# 3741|           ValueCategory = prvalue
# 3742|     getStmt(344): [DoStmt] do (...) ...
# 3744|       getCondition(): [Literal] 0
# 3744|           Type = [IntType] int
# 3744|           Value = [Literal] 0
# 3744|           ValueCategory = prvalue
# 3742|       getStmt(): [BlockStmt] { ... }
# 3743|         getStmt(0): [DeclStmt] declaration
# 3743|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x344
# 3743|               Type = [Struct] String
# 3743|             getVariable().getInitializer(): [Initializer] initializer for x344
# 3743|               getExpr(): [ConstructorCall] call to String
# 3743|                   Type = [VoidType] void
# 3743|                   ValueCategory = prvalue
# 3744|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3744|             Type = [VoidType] void
# 3744|             ValueCategory = prvalue
# 3744|           getQualifier(): [VariableAccess] x344
# 3744|               Type = [Struct] String
# 3744|               ValueCategory = lvalue
# 3744|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3744|           Conversion = [BoolConversion] conversion to bool
# 3744|           Type = [BoolType] bool
# 3744|           Value = [CStyleCast] 0
# 3744|           ValueCategory = prvalue
# 3745|     getStmt(345): [DoStmt] do (...) ...
# 3747|       getCondition(): [Literal] 0
# 3747|           Type = [IntType] int
# 3747|           Value = [Literal] 0
# 3747|           ValueCategory = prvalue
# 3745|       getStmt(): [BlockStmt] { ... }
# 3746|         getStmt(0): [DeclStmt] declaration
# 3746|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x345
# 3746|               Type = [Struct] String
# 3746|             getVariable().getInitializer(): [Initializer] initializer for x345
# 3746|               getExpr(): [ConstructorCall] call to String
# 3746|                   Type = [VoidType] void
# 3746|                   ValueCategory = prvalue
# 3747|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3747|             Type = [VoidType] void
# 3747|             ValueCategory = prvalue
# 3747|           getQualifier(): [VariableAccess] x345
# 3747|               Type = [Struct] String
# 3747|               ValueCategory = lvalue
# 3747|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3747|           Conversion = [BoolConversion] conversion to bool
# 3747|           Type = [BoolType] bool
# 3747|           Value = [CStyleCast] 0
# 3747|           ValueCategory = prvalue
# 3748|     getStmt(346): [DoStmt] do (...) ...
# 3750|       getCondition(): [Literal] 0
# 3750|           Type = [IntType] int
# 3750|           Value = [Literal] 0
# 3750|           ValueCategory = prvalue
# 3748|       getStmt(): [BlockStmt] { ... }
# 3749|         getStmt(0): [DeclStmt] declaration
# 3749|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x346
# 3749|               Type = [Struct] String
# 3749|             getVariable().getInitializer(): [Initializer] initializer for x346
# 3749|               getExpr(): [ConstructorCall] call to String
# 3749|                   Type = [VoidType] void
# 3749|                   ValueCategory = prvalue
# 3750|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3750|             Type = [VoidType] void
# 3750|             ValueCategory = prvalue
# 3750|           getQualifier(): [VariableAccess] x346
# 3750|               Type = [Struct] String
# 3750|               ValueCategory = lvalue
# 3750|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3750|           Conversion = [BoolConversion] conversion to bool
# 3750|           Type = [BoolType] bool
# 3750|           Value = [CStyleCast] 0
# 3750|           ValueCategory = prvalue
# 3751|     getStmt(347): [DoStmt] do (...) ...
# 3753|       getCondition(): [Literal] 0
# 3753|           Type = [IntType] int
# 3753|           Value = [Literal] 0
# 3753|           ValueCategory = prvalue
# 3751|       getStmt(): [BlockStmt] { ... }
# 3752|         getStmt(0): [DeclStmt] declaration
# 3752|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x347
# 3752|               Type = [Struct] String
# 3752|             getVariable().getInitializer(): [Initializer] initializer for x347
# 3752|               getExpr(): [ConstructorCall] call to String
# 3752|                   Type = [VoidType] void
# 3752|                   ValueCategory = prvalue
# 3753|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3753|             Type = [VoidType] void
# 3753|             ValueCategory = prvalue
# 3753|           getQualifier(): [VariableAccess] x347
# 3753|               Type = [Struct] String
# 3753|               ValueCategory = lvalue
# 3753|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3753|           Conversion = [BoolConversion] conversion to bool
# 3753|           Type = [BoolType] bool
# 3753|           Value = [CStyleCast] 0
# 3753|           ValueCategory = prvalue
# 3754|     getStmt(348): [DoStmt] do (...) ...
# 3756|       getCondition(): [Literal] 0
# 3756|           Type = [IntType] int
# 3756|           Value = [Literal] 0
# 3756|           ValueCategory = prvalue
# 3754|       getStmt(): [BlockStmt] { ... }
# 3755|         getStmt(0): [DeclStmt] declaration
# 3755|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x348
# 3755|               Type = [Struct] String
# 3755|             getVariable().getInitializer(): [Initializer] initializer for x348
# 3755|               getExpr(): [ConstructorCall] call to String
# 3755|                   Type = [VoidType] void
# 3755|                   ValueCategory = prvalue
# 3756|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3756|             Type = [VoidType] void
# 3756|             ValueCategory = prvalue
# 3756|           getQualifier(): [VariableAccess] x348
# 3756|               Type = [Struct] String
# 3756|               ValueCategory = lvalue
# 3756|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3756|           Conversion = [BoolConversion] conversion to bool
# 3756|           Type = [BoolType] bool
# 3756|           Value = [CStyleCast] 0
# 3756|           ValueCategory = prvalue
# 3757|     getStmt(349): [DoStmt] do (...) ...
# 3759|       getCondition(): [Literal] 0
# 3759|           Type = [IntType] int
# 3759|           Value = [Literal] 0
# 3759|           ValueCategory = prvalue
# 3757|       getStmt(): [BlockStmt] { ... }
# 3758|         getStmt(0): [DeclStmt] declaration
# 3758|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x349
# 3758|               Type = [Struct] String
# 3758|             getVariable().getInitializer(): [Initializer] initializer for x349
# 3758|               getExpr(): [ConstructorCall] call to String
# 3758|                   Type = [VoidType] void
# 3758|                   ValueCategory = prvalue
# 3759|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3759|             Type = [VoidType] void
# 3759|             ValueCategory = prvalue
# 3759|           getQualifier(): [VariableAccess] x349
# 3759|               Type = [Struct] String
# 3759|               ValueCategory = lvalue
# 3759|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3759|           Conversion = [BoolConversion] conversion to bool
# 3759|           Type = [BoolType] bool
# 3759|           Value = [CStyleCast] 0
# 3759|           ValueCategory = prvalue
# 3760|     getStmt(350): [DoStmt] do (...) ...
# 3762|       getCondition(): [Literal] 0
# 3762|           Type = [IntType] int
# 3762|           Value = [Literal] 0
# 3762|           ValueCategory = prvalue
# 3760|       getStmt(): [BlockStmt] { ... }
# 3761|         getStmt(0): [DeclStmt] declaration
# 3761|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x350
# 3761|               Type = [Struct] String
# 3761|             getVariable().getInitializer(): [Initializer] initializer for x350
# 3761|               getExpr(): [ConstructorCall] call to String
# 3761|                   Type = [VoidType] void
# 3761|                   ValueCategory = prvalue
# 3762|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3762|             Type = [VoidType] void
# 3762|             ValueCategory = prvalue
# 3762|           getQualifier(): [VariableAccess] x350
# 3762|               Type = [Struct] String
# 3762|               ValueCategory = lvalue
# 3762|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3762|           Conversion = [BoolConversion] conversion to bool
# 3762|           Type = [BoolType] bool
# 3762|           Value = [CStyleCast] 0
# 3762|           ValueCategory = prvalue
# 3763|     getStmt(351): [DoStmt] do (...) ...
# 3765|       getCondition(): [Literal] 0
# 3765|           Type = [IntType] int
# 3765|           Value = [Literal] 0
# 3765|           ValueCategory = prvalue
# 3763|       getStmt(): [BlockStmt] { ... }
# 3764|         getStmt(0): [DeclStmt] declaration
# 3764|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x351
# 3764|               Type = [Struct] String
# 3764|             getVariable().getInitializer(): [Initializer] initializer for x351
# 3764|               getExpr(): [ConstructorCall] call to String
# 3764|                   Type = [VoidType] void
# 3764|                   ValueCategory = prvalue
# 3765|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3765|             Type = [VoidType] void
# 3765|             ValueCategory = prvalue
# 3765|           getQualifier(): [VariableAccess] x351
# 3765|               Type = [Struct] String
# 3765|               ValueCategory = lvalue
# 3765|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3765|           Conversion = [BoolConversion] conversion to bool
# 3765|           Type = [BoolType] bool
# 3765|           Value = [CStyleCast] 0
# 3765|           ValueCategory = prvalue
# 3766|     getStmt(352): [DoStmt] do (...) ...
# 3768|       getCondition(): [Literal] 0
# 3768|           Type = [IntType] int
# 3768|           Value = [Literal] 0
# 3768|           ValueCategory = prvalue
# 3766|       getStmt(): [BlockStmt] { ... }
# 3767|         getStmt(0): [DeclStmt] declaration
# 3767|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x352
# 3767|               Type = [Struct] String
# 3767|             getVariable().getInitializer(): [Initializer] initializer for x352
# 3767|               getExpr(): [ConstructorCall] call to String
# 3767|                   Type = [VoidType] void
# 3767|                   ValueCategory = prvalue
# 3768|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3768|             Type = [VoidType] void
# 3768|             ValueCategory = prvalue
# 3768|           getQualifier(): [VariableAccess] x352
# 3768|               Type = [Struct] String
# 3768|               ValueCategory = lvalue
# 3768|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3768|           Conversion = [BoolConversion] conversion to bool
# 3768|           Type = [BoolType] bool
# 3768|           Value = [CStyleCast] 0
# 3768|           ValueCategory = prvalue
# 3769|     getStmt(353): [DoStmt] do (...) ...
# 3771|       getCondition(): [Literal] 0
# 3771|           Type = [IntType] int
# 3771|           Value = [Literal] 0
# 3771|           ValueCategory = prvalue
# 3769|       getStmt(): [BlockStmt] { ... }
# 3770|         getStmt(0): [DeclStmt] declaration
# 3770|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x353
# 3770|               Type = [Struct] String
# 3770|             getVariable().getInitializer(): [Initializer] initializer for x353
# 3770|               getExpr(): [ConstructorCall] call to String
# 3770|                   Type = [VoidType] void
# 3770|                   ValueCategory = prvalue
# 3771|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3771|             Type = [VoidType] void
# 3771|             ValueCategory = prvalue
# 3771|           getQualifier(): [VariableAccess] x353
# 3771|               Type = [Struct] String
# 3771|               ValueCategory = lvalue
# 3771|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3771|           Conversion = [BoolConversion] conversion to bool
# 3771|           Type = [BoolType] bool
# 3771|           Value = [CStyleCast] 0
# 3771|           ValueCategory = prvalue
# 3772|     getStmt(354): [DoStmt] do (...) ...
# 3774|       getCondition(): [Literal] 0
# 3774|           Type = [IntType] int
# 3774|           Value = [Literal] 0
# 3774|           ValueCategory = prvalue
# 3772|       getStmt(): [BlockStmt] { ... }
# 3773|         getStmt(0): [DeclStmt] declaration
# 3773|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x354
# 3773|               Type = [Struct] String
# 3773|             getVariable().getInitializer(): [Initializer] initializer for x354
# 3773|               getExpr(): [ConstructorCall] call to String
# 3773|                   Type = [VoidType] void
# 3773|                   ValueCategory = prvalue
# 3774|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3774|             Type = [VoidType] void
# 3774|             ValueCategory = prvalue
# 3774|           getQualifier(): [VariableAccess] x354
# 3774|               Type = [Struct] String
# 3774|               ValueCategory = lvalue
# 3774|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3774|           Conversion = [BoolConversion] conversion to bool
# 3774|           Type = [BoolType] bool
# 3774|           Value = [CStyleCast] 0
# 3774|           ValueCategory = prvalue
# 3775|     getStmt(355): [DoStmt] do (...) ...
# 3777|       getCondition(): [Literal] 0
# 3777|           Type = [IntType] int
# 3777|           Value = [Literal] 0
# 3777|           ValueCategory = prvalue
# 3775|       getStmt(): [BlockStmt] { ... }
# 3776|         getStmt(0): [DeclStmt] declaration
# 3776|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x355
# 3776|               Type = [Struct] String
# 3776|             getVariable().getInitializer(): [Initializer] initializer for x355
# 3776|               getExpr(): [ConstructorCall] call to String
# 3776|                   Type = [VoidType] void
# 3776|                   ValueCategory = prvalue
# 3777|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3777|             Type = [VoidType] void
# 3777|             ValueCategory = prvalue
# 3777|           getQualifier(): [VariableAccess] x355
# 3777|               Type = [Struct] String
# 3777|               ValueCategory = lvalue
# 3777|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3777|           Conversion = [BoolConversion] conversion to bool
# 3777|           Type = [BoolType] bool
# 3777|           Value = [CStyleCast] 0
# 3777|           ValueCategory = prvalue
# 3778|     getStmt(356): [DoStmt] do (...) ...
# 3780|       getCondition(): [Literal] 0
# 3780|           Type = [IntType] int
# 3780|           Value = [Literal] 0
# 3780|           ValueCategory = prvalue
# 3778|       getStmt(): [BlockStmt] { ... }
# 3779|         getStmt(0): [DeclStmt] declaration
# 3779|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x356
# 3779|               Type = [Struct] String
# 3779|             getVariable().getInitializer(): [Initializer] initializer for x356
# 3779|               getExpr(): [ConstructorCall] call to String
# 3779|                   Type = [VoidType] void
# 3779|                   ValueCategory = prvalue
# 3780|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3780|             Type = [VoidType] void
# 3780|             ValueCategory = prvalue
# 3780|           getQualifier(): [VariableAccess] x356
# 3780|               Type = [Struct] String
# 3780|               ValueCategory = lvalue
# 3780|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3780|           Conversion = [BoolConversion] conversion to bool
# 3780|           Type = [BoolType] bool
# 3780|           Value = [CStyleCast] 0
# 3780|           ValueCategory = prvalue
# 3781|     getStmt(357): [DoStmt] do (...) ...
# 3783|       getCondition(): [Literal] 0
# 3783|           Type = [IntType] int
# 3783|           Value = [Literal] 0
# 3783|           ValueCategory = prvalue
# 3781|       getStmt(): [BlockStmt] { ... }
# 3782|         getStmt(0): [DeclStmt] declaration
# 3782|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x357
# 3782|               Type = [Struct] String
# 3782|             getVariable().getInitializer(): [Initializer] initializer for x357
# 3782|               getExpr(): [ConstructorCall] call to String
# 3782|                   Type = [VoidType] void
# 3782|                   ValueCategory = prvalue
# 3783|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3783|             Type = [VoidType] void
# 3783|             ValueCategory = prvalue
# 3783|           getQualifier(): [VariableAccess] x357
# 3783|               Type = [Struct] String
# 3783|               ValueCategory = lvalue
# 3783|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3783|           Conversion = [BoolConversion] conversion to bool
# 3783|           Type = [BoolType] bool
# 3783|           Value = [CStyleCast] 0
# 3783|           ValueCategory = prvalue
# 3784|     getStmt(358): [DoStmt] do (...) ...
# 3786|       getCondition(): [Literal] 0
# 3786|           Type = [IntType] int
# 3786|           Value = [Literal] 0
# 3786|           ValueCategory = prvalue
# 3784|       getStmt(): [BlockStmt] { ... }
# 3785|         getStmt(0): [DeclStmt] declaration
# 3785|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x358
# 3785|               Type = [Struct] String
# 3785|             getVariable().getInitializer(): [Initializer] initializer for x358
# 3785|               getExpr(): [ConstructorCall] call to String
# 3785|                   Type = [VoidType] void
# 3785|                   ValueCategory = prvalue
# 3786|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3786|             Type = [VoidType] void
# 3786|             ValueCategory = prvalue
# 3786|           getQualifier(): [VariableAccess] x358
# 3786|               Type = [Struct] String
# 3786|               ValueCategory = lvalue
# 3786|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3786|           Conversion = [BoolConversion] conversion to bool
# 3786|           Type = [BoolType] bool
# 3786|           Value = [CStyleCast] 0
# 3786|           ValueCategory = prvalue
# 3787|     getStmt(359): [DoStmt] do (...) ...
# 3789|       getCondition(): [Literal] 0
# 3789|           Type = [IntType] int
# 3789|           Value = [Literal] 0
# 3789|           ValueCategory = prvalue
# 3787|       getStmt(): [BlockStmt] { ... }
# 3788|         getStmt(0): [DeclStmt] declaration
# 3788|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x359
# 3788|               Type = [Struct] String
# 3788|             getVariable().getInitializer(): [Initializer] initializer for x359
# 3788|               getExpr(): [ConstructorCall] call to String
# 3788|                   Type = [VoidType] void
# 3788|                   ValueCategory = prvalue
# 3789|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3789|             Type = [VoidType] void
# 3789|             ValueCategory = prvalue
# 3789|           getQualifier(): [VariableAccess] x359
# 3789|               Type = [Struct] String
# 3789|               ValueCategory = lvalue
# 3789|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3789|           Conversion = [BoolConversion] conversion to bool
# 3789|           Type = [BoolType] bool
# 3789|           Value = [CStyleCast] 0
# 3789|           ValueCategory = prvalue
# 3790|     getStmt(360): [DoStmt] do (...) ...
# 3792|       getCondition(): [Literal] 0
# 3792|           Type = [IntType] int
# 3792|           Value = [Literal] 0
# 3792|           ValueCategory = prvalue
# 3790|       getStmt(): [BlockStmt] { ... }
# 3791|         getStmt(0): [DeclStmt] declaration
# 3791|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x360
# 3791|               Type = [Struct] String
# 3791|             getVariable().getInitializer(): [Initializer] initializer for x360
# 3791|               getExpr(): [ConstructorCall] call to String
# 3791|                   Type = [VoidType] void
# 3791|                   ValueCategory = prvalue
# 3792|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3792|             Type = [VoidType] void
# 3792|             ValueCategory = prvalue
# 3792|           getQualifier(): [VariableAccess] x360
# 3792|               Type = [Struct] String
# 3792|               ValueCategory = lvalue
# 3792|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3792|           Conversion = [BoolConversion] conversion to bool
# 3792|           Type = [BoolType] bool
# 3792|           Value = [CStyleCast] 0
# 3792|           ValueCategory = prvalue
# 3793|     getStmt(361): [DoStmt] do (...) ...
# 3795|       getCondition(): [Literal] 0
# 3795|           Type = [IntType] int
# 3795|           Value = [Literal] 0
# 3795|           ValueCategory = prvalue
# 3793|       getStmt(): [BlockStmt] { ... }
# 3794|         getStmt(0): [DeclStmt] declaration
# 3794|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x361
# 3794|               Type = [Struct] String
# 3794|             getVariable().getInitializer(): [Initializer] initializer for x361
# 3794|               getExpr(): [ConstructorCall] call to String
# 3794|                   Type = [VoidType] void
# 3794|                   ValueCategory = prvalue
# 3795|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3795|             Type = [VoidType] void
# 3795|             ValueCategory = prvalue
# 3795|           getQualifier(): [VariableAccess] x361
# 3795|               Type = [Struct] String
# 3795|               ValueCategory = lvalue
# 3795|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3795|           Conversion = [BoolConversion] conversion to bool
# 3795|           Type = [BoolType] bool
# 3795|           Value = [CStyleCast] 0
# 3795|           ValueCategory = prvalue
# 3796|     getStmt(362): [DoStmt] do (...) ...
# 3798|       getCondition(): [Literal] 0
# 3798|           Type = [IntType] int
# 3798|           Value = [Literal] 0
# 3798|           ValueCategory = prvalue
# 3796|       getStmt(): [BlockStmt] { ... }
# 3797|         getStmt(0): [DeclStmt] declaration
# 3797|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x362
# 3797|               Type = [Struct] String
# 3797|             getVariable().getInitializer(): [Initializer] initializer for x362
# 3797|               getExpr(): [ConstructorCall] call to String
# 3797|                   Type = [VoidType] void
# 3797|                   ValueCategory = prvalue
# 3798|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3798|             Type = [VoidType] void
# 3798|             ValueCategory = prvalue
# 3798|           getQualifier(): [VariableAccess] x362
# 3798|               Type = [Struct] String
# 3798|               ValueCategory = lvalue
# 3798|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3798|           Conversion = [BoolConversion] conversion to bool
# 3798|           Type = [BoolType] bool
# 3798|           Value = [CStyleCast] 0
# 3798|           ValueCategory = prvalue
# 3799|     getStmt(363): [DoStmt] do (...) ...
# 3801|       getCondition(): [Literal] 0
# 3801|           Type = [IntType] int
# 3801|           Value = [Literal] 0
# 3801|           ValueCategory = prvalue
# 3799|       getStmt(): [BlockStmt] { ... }
# 3800|         getStmt(0): [DeclStmt] declaration
# 3800|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x363
# 3800|               Type = [Struct] String
# 3800|             getVariable().getInitializer(): [Initializer] initializer for x363
# 3800|               getExpr(): [ConstructorCall] call to String
# 3800|                   Type = [VoidType] void
# 3800|                   ValueCategory = prvalue
# 3801|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3801|             Type = [VoidType] void
# 3801|             ValueCategory = prvalue
# 3801|           getQualifier(): [VariableAccess] x363
# 3801|               Type = [Struct] String
# 3801|               ValueCategory = lvalue
# 3801|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3801|           Conversion = [BoolConversion] conversion to bool
# 3801|           Type = [BoolType] bool
# 3801|           Value = [CStyleCast] 0
# 3801|           ValueCategory = prvalue
# 3802|     getStmt(364): [DoStmt] do (...) ...
# 3804|       getCondition(): [Literal] 0
# 3804|           Type = [IntType] int
# 3804|           Value = [Literal] 0
# 3804|           ValueCategory = prvalue
# 3802|       getStmt(): [BlockStmt] { ... }
# 3803|         getStmt(0): [DeclStmt] declaration
# 3803|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x364
# 3803|               Type = [Struct] String
# 3803|             getVariable().getInitializer(): [Initializer] initializer for x364
# 3803|               getExpr(): [ConstructorCall] call to String
# 3803|                   Type = [VoidType] void
# 3803|                   ValueCategory = prvalue
# 3804|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3804|             Type = [VoidType] void
# 3804|             ValueCategory = prvalue
# 3804|           getQualifier(): [VariableAccess] x364
# 3804|               Type = [Struct] String
# 3804|               ValueCategory = lvalue
# 3804|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3804|           Conversion = [BoolConversion] conversion to bool
# 3804|           Type = [BoolType] bool
# 3804|           Value = [CStyleCast] 0
# 3804|           ValueCategory = prvalue
# 3805|     getStmt(365): [DoStmt] do (...) ...
# 3807|       getCondition(): [Literal] 0
# 3807|           Type = [IntType] int
# 3807|           Value = [Literal] 0
# 3807|           ValueCategory = prvalue
# 3805|       getStmt(): [BlockStmt] { ... }
# 3806|         getStmt(0): [DeclStmt] declaration
# 3806|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x365
# 3806|               Type = [Struct] String
# 3806|             getVariable().getInitializer(): [Initializer] initializer for x365
# 3806|               getExpr(): [ConstructorCall] call to String
# 3806|                   Type = [VoidType] void
# 3806|                   ValueCategory = prvalue
# 3807|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3807|             Type = [VoidType] void
# 3807|             ValueCategory = prvalue
# 3807|           getQualifier(): [VariableAccess] x365
# 3807|               Type = [Struct] String
# 3807|               ValueCategory = lvalue
# 3807|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3807|           Conversion = [BoolConversion] conversion to bool
# 3807|           Type = [BoolType] bool
# 3807|           Value = [CStyleCast] 0
# 3807|           ValueCategory = prvalue
# 3808|     getStmt(366): [DoStmt] do (...) ...
# 3810|       getCondition(): [Literal] 0
# 3810|           Type = [IntType] int
# 3810|           Value = [Literal] 0
# 3810|           ValueCategory = prvalue
# 3808|       getStmt(): [BlockStmt] { ... }
# 3809|         getStmt(0): [DeclStmt] declaration
# 3809|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x366
# 3809|               Type = [Struct] String
# 3809|             getVariable().getInitializer(): [Initializer] initializer for x366
# 3809|               getExpr(): [ConstructorCall] call to String
# 3809|                   Type = [VoidType] void
# 3809|                   ValueCategory = prvalue
# 3810|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3810|             Type = [VoidType] void
# 3810|             ValueCategory = prvalue
# 3810|           getQualifier(): [VariableAccess] x366
# 3810|               Type = [Struct] String
# 3810|               ValueCategory = lvalue
# 3810|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3810|           Conversion = [BoolConversion] conversion to bool
# 3810|           Type = [BoolType] bool
# 3810|           Value = [CStyleCast] 0
# 3810|           ValueCategory = prvalue
# 3811|     getStmt(367): [DoStmt] do (...) ...
# 3813|       getCondition(): [Literal] 0
# 3813|           Type = [IntType] int
# 3813|           Value = [Literal] 0
# 3813|           ValueCategory = prvalue
# 3811|       getStmt(): [BlockStmt] { ... }
# 3812|         getStmt(0): [DeclStmt] declaration
# 3812|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x367
# 3812|               Type = [Struct] String
# 3812|             getVariable().getInitializer(): [Initializer] initializer for x367
# 3812|               getExpr(): [ConstructorCall] call to String
# 3812|                   Type = [VoidType] void
# 3812|                   ValueCategory = prvalue
# 3813|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3813|             Type = [VoidType] void
# 3813|             ValueCategory = prvalue
# 3813|           getQualifier(): [VariableAccess] x367
# 3813|               Type = [Struct] String
# 3813|               ValueCategory = lvalue
# 3813|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3813|           Conversion = [BoolConversion] conversion to bool
# 3813|           Type = [BoolType] bool
# 3813|           Value = [CStyleCast] 0
# 3813|           ValueCategory = prvalue
# 3814|     getStmt(368): [DoStmt] do (...) ...
# 3816|       getCondition(): [Literal] 0
# 3816|           Type = [IntType] int
# 3816|           Value = [Literal] 0
# 3816|           ValueCategory = prvalue
# 3814|       getStmt(): [BlockStmt] { ... }
# 3815|         getStmt(0): [DeclStmt] declaration
# 3815|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x368
# 3815|               Type = [Struct] String
# 3815|             getVariable().getInitializer(): [Initializer] initializer for x368
# 3815|               getExpr(): [ConstructorCall] call to String
# 3815|                   Type = [VoidType] void
# 3815|                   ValueCategory = prvalue
# 3816|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3816|             Type = [VoidType] void
# 3816|             ValueCategory = prvalue
# 3816|           getQualifier(): [VariableAccess] x368
# 3816|               Type = [Struct] String
# 3816|               ValueCategory = lvalue
# 3816|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3816|           Conversion = [BoolConversion] conversion to bool
# 3816|           Type = [BoolType] bool
# 3816|           Value = [CStyleCast] 0
# 3816|           ValueCategory = prvalue
# 3817|     getStmt(369): [DoStmt] do (...) ...
# 3819|       getCondition(): [Literal] 0
# 3819|           Type = [IntType] int
# 3819|           Value = [Literal] 0
# 3819|           ValueCategory = prvalue
# 3817|       getStmt(): [BlockStmt] { ... }
# 3818|         getStmt(0): [DeclStmt] declaration
# 3818|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x369
# 3818|               Type = [Struct] String
# 3818|             getVariable().getInitializer(): [Initializer] initializer for x369
# 3818|               getExpr(): [ConstructorCall] call to String
# 3818|                   Type = [VoidType] void
# 3818|                   ValueCategory = prvalue
# 3819|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3819|             Type = [VoidType] void
# 3819|             ValueCategory = prvalue
# 3819|           getQualifier(): [VariableAccess] x369
# 3819|               Type = [Struct] String
# 3819|               ValueCategory = lvalue
# 3819|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3819|           Conversion = [BoolConversion] conversion to bool
# 3819|           Type = [BoolType] bool
# 3819|           Value = [CStyleCast] 0
# 3819|           ValueCategory = prvalue
# 3820|     getStmt(370): [DoStmt] do (...) ...
# 3822|       getCondition(): [Literal] 0
# 3822|           Type = [IntType] int
# 3822|           Value = [Literal] 0
# 3822|           ValueCategory = prvalue
# 3820|       getStmt(): [BlockStmt] { ... }
# 3821|         getStmt(0): [DeclStmt] declaration
# 3821|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x370
# 3821|               Type = [Struct] String
# 3821|             getVariable().getInitializer(): [Initializer] initializer for x370
# 3821|               getExpr(): [ConstructorCall] call to String
# 3821|                   Type = [VoidType] void
# 3821|                   ValueCategory = prvalue
# 3822|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3822|             Type = [VoidType] void
# 3822|             ValueCategory = prvalue
# 3822|           getQualifier(): [VariableAccess] x370
# 3822|               Type = [Struct] String
# 3822|               ValueCategory = lvalue
# 3822|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3822|           Conversion = [BoolConversion] conversion to bool
# 3822|           Type = [BoolType] bool
# 3822|           Value = [CStyleCast] 0
# 3822|           ValueCategory = prvalue
# 3823|     getStmt(371): [DoStmt] do (...) ...
# 3825|       getCondition(): [Literal] 0
# 3825|           Type = [IntType] int
# 3825|           Value = [Literal] 0
# 3825|           ValueCategory = prvalue
# 3823|       getStmt(): [BlockStmt] { ... }
# 3824|         getStmt(0): [DeclStmt] declaration
# 3824|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x371
# 3824|               Type = [Struct] String
# 3824|             getVariable().getInitializer(): [Initializer] initializer for x371
# 3824|               getExpr(): [ConstructorCall] call to String
# 3824|                   Type = [VoidType] void
# 3824|                   ValueCategory = prvalue
# 3825|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3825|             Type = [VoidType] void
# 3825|             ValueCategory = prvalue
# 3825|           getQualifier(): [VariableAccess] x371
# 3825|               Type = [Struct] String
# 3825|               ValueCategory = lvalue
# 3825|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3825|           Conversion = [BoolConversion] conversion to bool
# 3825|           Type = [BoolType] bool
# 3825|           Value = [CStyleCast] 0
# 3825|           ValueCategory = prvalue
# 3826|     getStmt(372): [DoStmt] do (...) ...
# 3828|       getCondition(): [Literal] 0
# 3828|           Type = [IntType] int
# 3828|           Value = [Literal] 0
# 3828|           ValueCategory = prvalue
# 3826|       getStmt(): [BlockStmt] { ... }
# 3827|         getStmt(0): [DeclStmt] declaration
# 3827|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x372
# 3827|               Type = [Struct] String
# 3827|             getVariable().getInitializer(): [Initializer] initializer for x372
# 3827|               getExpr(): [ConstructorCall] call to String
# 3827|                   Type = [VoidType] void
# 3827|                   ValueCategory = prvalue
# 3828|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3828|             Type = [VoidType] void
# 3828|             ValueCategory = prvalue
# 3828|           getQualifier(): [VariableAccess] x372
# 3828|               Type = [Struct] String
# 3828|               ValueCategory = lvalue
# 3828|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3828|           Conversion = [BoolConversion] conversion to bool
# 3828|           Type = [BoolType] bool
# 3828|           Value = [CStyleCast] 0
# 3828|           ValueCategory = prvalue
# 3829|     getStmt(373): [DoStmt] do (...) ...
# 3831|       getCondition(): [Literal] 0
# 3831|           Type = [IntType] int
# 3831|           Value = [Literal] 0
# 3831|           ValueCategory = prvalue
# 3829|       getStmt(): [BlockStmt] { ... }
# 3830|         getStmt(0): [DeclStmt] declaration
# 3830|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x373
# 3830|               Type = [Struct] String
# 3830|             getVariable().getInitializer(): [Initializer] initializer for x373
# 3830|               getExpr(): [ConstructorCall] call to String
# 3830|                   Type = [VoidType] void
# 3830|                   ValueCategory = prvalue
# 3831|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3831|             Type = [VoidType] void
# 3831|             ValueCategory = prvalue
# 3831|           getQualifier(): [VariableAccess] x373
# 3831|               Type = [Struct] String
# 3831|               ValueCategory = lvalue
# 3831|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3831|           Conversion = [BoolConversion] conversion to bool
# 3831|           Type = [BoolType] bool
# 3831|           Value = [CStyleCast] 0
# 3831|           ValueCategory = prvalue
# 3832|     getStmt(374): [DoStmt] do (...) ...
# 3834|       getCondition(): [Literal] 0
# 3834|           Type = [IntType] int
# 3834|           Value = [Literal] 0
# 3834|           ValueCategory = prvalue
# 3832|       getStmt(): [BlockStmt] { ... }
# 3833|         getStmt(0): [DeclStmt] declaration
# 3833|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x374
# 3833|               Type = [Struct] String
# 3833|             getVariable().getInitializer(): [Initializer] initializer for x374
# 3833|               getExpr(): [ConstructorCall] call to String
# 3833|                   Type = [VoidType] void
# 3833|                   ValueCategory = prvalue
# 3834|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3834|             Type = [VoidType] void
# 3834|             ValueCategory = prvalue
# 3834|           getQualifier(): [VariableAccess] x374
# 3834|               Type = [Struct] String
# 3834|               ValueCategory = lvalue
# 3834|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3834|           Conversion = [BoolConversion] conversion to bool
# 3834|           Type = [BoolType] bool
# 3834|           Value = [CStyleCast] 0
# 3834|           ValueCategory = prvalue
# 3835|     getStmt(375): [DoStmt] do (...) ...
# 3837|       getCondition(): [Literal] 0
# 3837|           Type = [IntType] int
# 3837|           Value = [Literal] 0
# 3837|           ValueCategory = prvalue
# 3835|       getStmt(): [BlockStmt] { ... }
# 3836|         getStmt(0): [DeclStmt] declaration
# 3836|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x375
# 3836|               Type = [Struct] String
# 3836|             getVariable().getInitializer(): [Initializer] initializer for x375
# 3836|               getExpr(): [ConstructorCall] call to String
# 3836|                   Type = [VoidType] void
# 3836|                   ValueCategory = prvalue
# 3837|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3837|             Type = [VoidType] void
# 3837|             ValueCategory = prvalue
# 3837|           getQualifier(): [VariableAccess] x375
# 3837|               Type = [Struct] String
# 3837|               ValueCategory = lvalue
# 3837|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3837|           Conversion = [BoolConversion] conversion to bool
# 3837|           Type = [BoolType] bool
# 3837|           Value = [CStyleCast] 0
# 3837|           ValueCategory = prvalue
# 3838|     getStmt(376): [DoStmt] do (...) ...
# 3840|       getCondition(): [Literal] 0
# 3840|           Type = [IntType] int
# 3840|           Value = [Literal] 0
# 3840|           ValueCategory = prvalue
# 3838|       getStmt(): [BlockStmt] { ... }
# 3839|         getStmt(0): [DeclStmt] declaration
# 3839|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x376
# 3839|               Type = [Struct] String
# 3839|             getVariable().getInitializer(): [Initializer] initializer for x376
# 3839|               getExpr(): [ConstructorCall] call to String
# 3839|                   Type = [VoidType] void
# 3839|                   ValueCategory = prvalue
# 3840|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3840|             Type = [VoidType] void
# 3840|             ValueCategory = prvalue
# 3840|           getQualifier(): [VariableAccess] x376
# 3840|               Type = [Struct] String
# 3840|               ValueCategory = lvalue
# 3840|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3840|           Conversion = [BoolConversion] conversion to bool
# 3840|           Type = [BoolType] bool
# 3840|           Value = [CStyleCast] 0
# 3840|           ValueCategory = prvalue
# 3841|     getStmt(377): [DoStmt] do (...) ...
# 3843|       getCondition(): [Literal] 0
# 3843|           Type = [IntType] int
# 3843|           Value = [Literal] 0
# 3843|           ValueCategory = prvalue
# 3841|       getStmt(): [BlockStmt] { ... }
# 3842|         getStmt(0): [DeclStmt] declaration
# 3842|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x377
# 3842|               Type = [Struct] String
# 3842|             getVariable().getInitializer(): [Initializer] initializer for x377
# 3842|               getExpr(): [ConstructorCall] call to String
# 3842|                   Type = [VoidType] void
# 3842|                   ValueCategory = prvalue
# 3843|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3843|             Type = [VoidType] void
# 3843|             ValueCategory = prvalue
# 3843|           getQualifier(): [VariableAccess] x377
# 3843|               Type = [Struct] String
# 3843|               ValueCategory = lvalue
# 3843|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3843|           Conversion = [BoolConversion] conversion to bool
# 3843|           Type = [BoolType] bool
# 3843|           Value = [CStyleCast] 0
# 3843|           ValueCategory = prvalue
# 3844|     getStmt(378): [DoStmt] do (...) ...
# 3846|       getCondition(): [Literal] 0
# 3846|           Type = [IntType] int
# 3846|           Value = [Literal] 0
# 3846|           ValueCategory = prvalue
# 3844|       getStmt(): [BlockStmt] { ... }
# 3845|         getStmt(0): [DeclStmt] declaration
# 3845|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x378
# 3845|               Type = [Struct] String
# 3845|             getVariable().getInitializer(): [Initializer] initializer for x378
# 3845|               getExpr(): [ConstructorCall] call to String
# 3845|                   Type = [VoidType] void
# 3845|                   ValueCategory = prvalue
# 3846|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3846|             Type = [VoidType] void
# 3846|             ValueCategory = prvalue
# 3846|           getQualifier(): [VariableAccess] x378
# 3846|               Type = [Struct] String
# 3846|               ValueCategory = lvalue
# 3846|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3846|           Conversion = [BoolConversion] conversion to bool
# 3846|           Type = [BoolType] bool
# 3846|           Value = [CStyleCast] 0
# 3846|           ValueCategory = prvalue
# 3847|     getStmt(379): [DoStmt] do (...) ...
# 3849|       getCondition(): [Literal] 0
# 3849|           Type = [IntType] int
# 3849|           Value = [Literal] 0
# 3849|           ValueCategory = prvalue
# 3847|       getStmt(): [BlockStmt] { ... }
# 3848|         getStmt(0): [DeclStmt] declaration
# 3848|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x379
# 3848|               Type = [Struct] String
# 3848|             getVariable().getInitializer(): [Initializer] initializer for x379
# 3848|               getExpr(): [ConstructorCall] call to String
# 3848|                   Type = [VoidType] void
# 3848|                   ValueCategory = prvalue
# 3849|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3849|             Type = [VoidType] void
# 3849|             ValueCategory = prvalue
# 3849|           getQualifier(): [VariableAccess] x379
# 3849|               Type = [Struct] String
# 3849|               ValueCategory = lvalue
# 3849|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3849|           Conversion = [BoolConversion] conversion to bool
# 3849|           Type = [BoolType] bool
# 3849|           Value = [CStyleCast] 0
# 3849|           ValueCategory = prvalue
# 3850|     getStmt(380): [DoStmt] do (...) ...
# 3852|       getCondition(): [Literal] 0
# 3852|           Type = [IntType] int
# 3852|           Value = [Literal] 0
# 3852|           ValueCategory = prvalue
# 3850|       getStmt(): [BlockStmt] { ... }
# 3851|         getStmt(0): [DeclStmt] declaration
# 3851|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x380
# 3851|               Type = [Struct] String
# 3851|             getVariable().getInitializer(): [Initializer] initializer for x380
# 3851|               getExpr(): [ConstructorCall] call to String
# 3851|                   Type = [VoidType] void
# 3851|                   ValueCategory = prvalue
# 3852|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3852|             Type = [VoidType] void
# 3852|             ValueCategory = prvalue
# 3852|           getQualifier(): [VariableAccess] x380
# 3852|               Type = [Struct] String
# 3852|               ValueCategory = lvalue
# 3852|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3852|           Conversion = [BoolConversion] conversion to bool
# 3852|           Type = [BoolType] bool
# 3852|           Value = [CStyleCast] 0
# 3852|           ValueCategory = prvalue
# 3853|     getStmt(381): [DoStmt] do (...) ...
# 3855|       getCondition(): [Literal] 0
# 3855|           Type = [IntType] int
# 3855|           Value = [Literal] 0
# 3855|           ValueCategory = prvalue
# 3853|       getStmt(): [BlockStmt] { ... }
# 3854|         getStmt(0): [DeclStmt] declaration
# 3854|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x381
# 3854|               Type = [Struct] String
# 3854|             getVariable().getInitializer(): [Initializer] initializer for x381
# 3854|               getExpr(): [ConstructorCall] call to String
# 3854|                   Type = [VoidType] void
# 3854|                   ValueCategory = prvalue
# 3855|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3855|             Type = [VoidType] void
# 3855|             ValueCategory = prvalue
# 3855|           getQualifier(): [VariableAccess] x381
# 3855|               Type = [Struct] String
# 3855|               ValueCategory = lvalue
# 3855|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3855|           Conversion = [BoolConversion] conversion to bool
# 3855|           Type = [BoolType] bool
# 3855|           Value = [CStyleCast] 0
# 3855|           ValueCategory = prvalue
# 3856|     getStmt(382): [DoStmt] do (...) ...
# 3858|       getCondition(): [Literal] 0
# 3858|           Type = [IntType] int
# 3858|           Value = [Literal] 0
# 3858|           ValueCategory = prvalue
# 3856|       getStmt(): [BlockStmt] { ... }
# 3857|         getStmt(0): [DeclStmt] declaration
# 3857|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x382
# 3857|               Type = [Struct] String
# 3857|             getVariable().getInitializer(): [Initializer] initializer for x382
# 3857|               getExpr(): [ConstructorCall] call to String
# 3857|                   Type = [VoidType] void
# 3857|                   ValueCategory = prvalue
# 3858|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3858|             Type = [VoidType] void
# 3858|             ValueCategory = prvalue
# 3858|           getQualifier(): [VariableAccess] x382
# 3858|               Type = [Struct] String
# 3858|               ValueCategory = lvalue
# 3858|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3858|           Conversion = [BoolConversion] conversion to bool
# 3858|           Type = [BoolType] bool
# 3858|           Value = [CStyleCast] 0
# 3858|           ValueCategory = prvalue
# 3859|     getStmt(383): [DoStmt] do (...) ...
# 3861|       getCondition(): [Literal] 0
# 3861|           Type = [IntType] int
# 3861|           Value = [Literal] 0
# 3861|           ValueCategory = prvalue
# 3859|       getStmt(): [BlockStmt] { ... }
# 3860|         getStmt(0): [DeclStmt] declaration
# 3860|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x383
# 3860|               Type = [Struct] String
# 3860|             getVariable().getInitializer(): [Initializer] initializer for x383
# 3860|               getExpr(): [ConstructorCall] call to String
# 3860|                   Type = [VoidType] void
# 3860|                   ValueCategory = prvalue
# 3861|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3861|             Type = [VoidType] void
# 3861|             ValueCategory = prvalue
# 3861|           getQualifier(): [VariableAccess] x383
# 3861|               Type = [Struct] String
# 3861|               ValueCategory = lvalue
# 3861|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3861|           Conversion = [BoolConversion] conversion to bool
# 3861|           Type = [BoolType] bool
# 3861|           Value = [CStyleCast] 0
# 3861|           ValueCategory = prvalue
# 3862|     getStmt(384): [DoStmt] do (...) ...
# 3864|       getCondition(): [Literal] 0
# 3864|           Type = [IntType] int
# 3864|           Value = [Literal] 0
# 3864|           ValueCategory = prvalue
# 3862|       getStmt(): [BlockStmt] { ... }
# 3863|         getStmt(0): [DeclStmt] declaration
# 3863|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x384
# 3863|               Type = [Struct] String
# 3863|             getVariable().getInitializer(): [Initializer] initializer for x384
# 3863|               getExpr(): [ConstructorCall] call to String
# 3863|                   Type = [VoidType] void
# 3863|                   ValueCategory = prvalue
# 3864|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3864|             Type = [VoidType] void
# 3864|             ValueCategory = prvalue
# 3864|           getQualifier(): [VariableAccess] x384
# 3864|               Type = [Struct] String
# 3864|               ValueCategory = lvalue
# 3864|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3864|           Conversion = [BoolConversion] conversion to bool
# 3864|           Type = [BoolType] bool
# 3864|           Value = [CStyleCast] 0
# 3864|           ValueCategory = prvalue
# 3865|     getStmt(385): [DoStmt] do (...) ...
# 3867|       getCondition(): [Literal] 0
# 3867|           Type = [IntType] int
# 3867|           Value = [Literal] 0
# 3867|           ValueCategory = prvalue
# 3865|       getStmt(): [BlockStmt] { ... }
# 3866|         getStmt(0): [DeclStmt] declaration
# 3866|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x385
# 3866|               Type = [Struct] String
# 3866|             getVariable().getInitializer(): [Initializer] initializer for x385
# 3866|               getExpr(): [ConstructorCall] call to String
# 3866|                   Type = [VoidType] void
# 3866|                   ValueCategory = prvalue
# 3867|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3867|             Type = [VoidType] void
# 3867|             ValueCategory = prvalue
# 3867|           getQualifier(): [VariableAccess] x385
# 3867|               Type = [Struct] String
# 3867|               ValueCategory = lvalue
# 3867|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3867|           Conversion = [BoolConversion] conversion to bool
# 3867|           Type = [BoolType] bool
# 3867|           Value = [CStyleCast] 0
# 3867|           ValueCategory = prvalue
# 3868|     getStmt(386): [DoStmt] do (...) ...
# 3870|       getCondition(): [Literal] 0
# 3870|           Type = [IntType] int
# 3870|           Value = [Literal] 0
# 3870|           ValueCategory = prvalue
# 3868|       getStmt(): [BlockStmt] { ... }
# 3869|         getStmt(0): [DeclStmt] declaration
# 3869|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x386
# 3869|               Type = [Struct] String
# 3869|             getVariable().getInitializer(): [Initializer] initializer for x386
# 3869|               getExpr(): [ConstructorCall] call to String
# 3869|                   Type = [VoidType] void
# 3869|                   ValueCategory = prvalue
# 3870|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3870|             Type = [VoidType] void
# 3870|             ValueCategory = prvalue
# 3870|           getQualifier(): [VariableAccess] x386
# 3870|               Type = [Struct] String
# 3870|               ValueCategory = lvalue
# 3870|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3870|           Conversion = [BoolConversion] conversion to bool
# 3870|           Type = [BoolType] bool
# 3870|           Value = [CStyleCast] 0
# 3870|           ValueCategory = prvalue
# 3871|     getStmt(387): [DoStmt] do (...) ...
# 3873|       getCondition(): [Literal] 0
# 3873|           Type = [IntType] int
# 3873|           Value = [Literal] 0
# 3873|           ValueCategory = prvalue
# 3871|       getStmt(): [BlockStmt] { ... }
# 3872|         getStmt(0): [DeclStmt] declaration
# 3872|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x387
# 3872|               Type = [Struct] String
# 3872|             getVariable().getInitializer(): [Initializer] initializer for x387
# 3872|               getExpr(): [ConstructorCall] call to String
# 3872|                   Type = [VoidType] void
# 3872|                   ValueCategory = prvalue
# 3873|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3873|             Type = [VoidType] void
# 3873|             ValueCategory = prvalue
# 3873|           getQualifier(): [VariableAccess] x387
# 3873|               Type = [Struct] String
# 3873|               ValueCategory = lvalue
# 3873|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3873|           Conversion = [BoolConversion] conversion to bool
# 3873|           Type = [BoolType] bool
# 3873|           Value = [CStyleCast] 0
# 3873|           ValueCategory = prvalue
# 3874|     getStmt(388): [DoStmt] do (...) ...
# 3876|       getCondition(): [Literal] 0
# 3876|           Type = [IntType] int
# 3876|           Value = [Literal] 0
# 3876|           ValueCategory = prvalue
# 3874|       getStmt(): [BlockStmt] { ... }
# 3875|         getStmt(0): [DeclStmt] declaration
# 3875|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x388
# 3875|               Type = [Struct] String
# 3875|             getVariable().getInitializer(): [Initializer] initializer for x388
# 3875|               getExpr(): [ConstructorCall] call to String
# 3875|                   Type = [VoidType] void
# 3875|                   ValueCategory = prvalue
# 3876|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3876|             Type = [VoidType] void
# 3876|             ValueCategory = prvalue
# 3876|           getQualifier(): [VariableAccess] x388
# 3876|               Type = [Struct] String
# 3876|               ValueCategory = lvalue
# 3876|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3876|           Conversion = [BoolConversion] conversion to bool
# 3876|           Type = [BoolType] bool
# 3876|           Value = [CStyleCast] 0
# 3876|           ValueCategory = prvalue
# 3877|     getStmt(389): [DoStmt] do (...) ...
# 3879|       getCondition(): [Literal] 0
# 3879|           Type = [IntType] int
# 3879|           Value = [Literal] 0
# 3879|           ValueCategory = prvalue
# 3877|       getStmt(): [BlockStmt] { ... }
# 3878|         getStmt(0): [DeclStmt] declaration
# 3878|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x389
# 3878|               Type = [Struct] String
# 3878|             getVariable().getInitializer(): [Initializer] initializer for x389
# 3878|               getExpr(): [ConstructorCall] call to String
# 3878|                   Type = [VoidType] void
# 3878|                   ValueCategory = prvalue
# 3879|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3879|             Type = [VoidType] void
# 3879|             ValueCategory = prvalue
# 3879|           getQualifier(): [VariableAccess] x389
# 3879|               Type = [Struct] String
# 3879|               ValueCategory = lvalue
# 3879|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3879|           Conversion = [BoolConversion] conversion to bool
# 3879|           Type = [BoolType] bool
# 3879|           Value = [CStyleCast] 0
# 3879|           ValueCategory = prvalue
# 3880|     getStmt(390): [DoStmt] do (...) ...
# 3882|       getCondition(): [Literal] 0
# 3882|           Type = [IntType] int
# 3882|           Value = [Literal] 0
# 3882|           ValueCategory = prvalue
# 3880|       getStmt(): [BlockStmt] { ... }
# 3881|         getStmt(0): [DeclStmt] declaration
# 3881|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x390
# 3881|               Type = [Struct] String
# 3881|             getVariable().getInitializer(): [Initializer] initializer for x390
# 3881|               getExpr(): [ConstructorCall] call to String
# 3881|                   Type = [VoidType] void
# 3881|                   ValueCategory = prvalue
# 3882|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3882|             Type = [VoidType] void
# 3882|             ValueCategory = prvalue
# 3882|           getQualifier(): [VariableAccess] x390
# 3882|               Type = [Struct] String
# 3882|               ValueCategory = lvalue
# 3882|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3882|           Conversion = [BoolConversion] conversion to bool
# 3882|           Type = [BoolType] bool
# 3882|           Value = [CStyleCast] 0
# 3882|           ValueCategory = prvalue
# 3883|     getStmt(391): [DoStmt] do (...) ...
# 3885|       getCondition(): [Literal] 0
# 3885|           Type = [IntType] int
# 3885|           Value = [Literal] 0
# 3885|           ValueCategory = prvalue
# 3883|       getStmt(): [BlockStmt] { ... }
# 3884|         getStmt(0): [DeclStmt] declaration
# 3884|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x391
# 3884|               Type = [Struct] String
# 3884|             getVariable().getInitializer(): [Initializer] initializer for x391
# 3884|               getExpr(): [ConstructorCall] call to String
# 3884|                   Type = [VoidType] void
# 3884|                   ValueCategory = prvalue
# 3885|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3885|             Type = [VoidType] void
# 3885|             ValueCategory = prvalue
# 3885|           getQualifier(): [VariableAccess] x391
# 3885|               Type = [Struct] String
# 3885|               ValueCategory = lvalue
# 3885|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3885|           Conversion = [BoolConversion] conversion to bool
# 3885|           Type = [BoolType] bool
# 3885|           Value = [CStyleCast] 0
# 3885|           ValueCategory = prvalue
# 3886|     getStmt(392): [DoStmt] do (...) ...
# 3888|       getCondition(): [Literal] 0
# 3888|           Type = [IntType] int
# 3888|           Value = [Literal] 0
# 3888|           ValueCategory = prvalue
# 3886|       getStmt(): [BlockStmt] { ... }
# 3887|         getStmt(0): [DeclStmt] declaration
# 3887|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x392
# 3887|               Type = [Struct] String
# 3887|             getVariable().getInitializer(): [Initializer] initializer for x392
# 3887|               getExpr(): [ConstructorCall] call to String
# 3887|                   Type = [VoidType] void
# 3887|                   ValueCategory = prvalue
# 3888|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3888|             Type = [VoidType] void
# 3888|             ValueCategory = prvalue
# 3888|           getQualifier(): [VariableAccess] x392
# 3888|               Type = [Struct] String
# 3888|               ValueCategory = lvalue
# 3888|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3888|           Conversion = [BoolConversion] conversion to bool
# 3888|           Type = [BoolType] bool
# 3888|           Value = [CStyleCast] 0
# 3888|           ValueCategory = prvalue
# 3889|     getStmt(393): [DoStmt] do (...) ...
# 3891|       getCondition(): [Literal] 0
# 3891|           Type = [IntType] int
# 3891|           Value = [Literal] 0
# 3891|           ValueCategory = prvalue
# 3889|       getStmt(): [BlockStmt] { ... }
# 3890|         getStmt(0): [DeclStmt] declaration
# 3890|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x393
# 3890|               Type = [Struct] String
# 3890|             getVariable().getInitializer(): [Initializer] initializer for x393
# 3890|               getExpr(): [ConstructorCall] call to String
# 3890|                   Type = [VoidType] void
# 3890|                   ValueCategory = prvalue
# 3891|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3891|             Type = [VoidType] void
# 3891|             ValueCategory = prvalue
# 3891|           getQualifier(): [VariableAccess] x393
# 3891|               Type = [Struct] String
# 3891|               ValueCategory = lvalue
# 3891|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3891|           Conversion = [BoolConversion] conversion to bool
# 3891|           Type = [BoolType] bool
# 3891|           Value = [CStyleCast] 0
# 3891|           ValueCategory = prvalue
# 3892|     getStmt(394): [DoStmt] do (...) ...
# 3894|       getCondition(): [Literal] 0
# 3894|           Type = [IntType] int
# 3894|           Value = [Literal] 0
# 3894|           ValueCategory = prvalue
# 3892|       getStmt(): [BlockStmt] { ... }
# 3893|         getStmt(0): [DeclStmt] declaration
# 3893|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x394
# 3893|               Type = [Struct] String
# 3893|             getVariable().getInitializer(): [Initializer] initializer for x394
# 3893|               getExpr(): [ConstructorCall] call to String
# 3893|                   Type = [VoidType] void
# 3893|                   ValueCategory = prvalue
# 3894|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3894|             Type = [VoidType] void
# 3894|             ValueCategory = prvalue
# 3894|           getQualifier(): [VariableAccess] x394
# 3894|               Type = [Struct] String
# 3894|               ValueCategory = lvalue
# 3894|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3894|           Conversion = [BoolConversion] conversion to bool
# 3894|           Type = [BoolType] bool
# 3894|           Value = [CStyleCast] 0
# 3894|           ValueCategory = prvalue
# 3895|     getStmt(395): [DoStmt] do (...) ...
# 3897|       getCondition(): [Literal] 0
# 3897|           Type = [IntType] int
# 3897|           Value = [Literal] 0
# 3897|           ValueCategory = prvalue
# 3895|       getStmt(): [BlockStmt] { ... }
# 3896|         getStmt(0): [DeclStmt] declaration
# 3896|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x395
# 3896|               Type = [Struct] String
# 3896|             getVariable().getInitializer(): [Initializer] initializer for x395
# 3896|               getExpr(): [ConstructorCall] call to String
# 3896|                   Type = [VoidType] void
# 3896|                   ValueCategory = prvalue
# 3897|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3897|             Type = [VoidType] void
# 3897|             ValueCategory = prvalue
# 3897|           getQualifier(): [VariableAccess] x395
# 3897|               Type = [Struct] String
# 3897|               ValueCategory = lvalue
# 3897|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3897|           Conversion = [BoolConversion] conversion to bool
# 3897|           Type = [BoolType] bool
# 3897|           Value = [CStyleCast] 0
# 3897|           ValueCategory = prvalue
# 3898|     getStmt(396): [DoStmt] do (...) ...
# 3900|       getCondition(): [Literal] 0
# 3900|           Type = [IntType] int
# 3900|           Value = [Literal] 0
# 3900|           ValueCategory = prvalue
# 3898|       getStmt(): [BlockStmt] { ... }
# 3899|         getStmt(0): [DeclStmt] declaration
# 3899|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x396
# 3899|               Type = [Struct] String
# 3899|             getVariable().getInitializer(): [Initializer] initializer for x396
# 3899|               getExpr(): [ConstructorCall] call to String
# 3899|                   Type = [VoidType] void
# 3899|                   ValueCategory = prvalue
# 3900|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3900|             Type = [VoidType] void
# 3900|             ValueCategory = prvalue
# 3900|           getQualifier(): [VariableAccess] x396
# 3900|               Type = [Struct] String
# 3900|               ValueCategory = lvalue
# 3900|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3900|           Conversion = [BoolConversion] conversion to bool
# 3900|           Type = [BoolType] bool
# 3900|           Value = [CStyleCast] 0
# 3900|           ValueCategory = prvalue
# 3901|     getStmt(397): [DoStmt] do (...) ...
# 3903|       getCondition(): [Literal] 0
# 3903|           Type = [IntType] int
# 3903|           Value = [Literal] 0
# 3903|           ValueCategory = prvalue
# 3901|       getStmt(): [BlockStmt] { ... }
# 3902|         getStmt(0): [DeclStmt] declaration
# 3902|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x397
# 3902|               Type = [Struct] String
# 3902|             getVariable().getInitializer(): [Initializer] initializer for x397
# 3902|               getExpr(): [ConstructorCall] call to String
# 3902|                   Type = [VoidType] void
# 3902|                   ValueCategory = prvalue
# 3903|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3903|             Type = [VoidType] void
# 3903|             ValueCategory = prvalue
# 3903|           getQualifier(): [VariableAccess] x397
# 3903|               Type = [Struct] String
# 3903|               ValueCategory = lvalue
# 3903|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3903|           Conversion = [BoolConversion] conversion to bool
# 3903|           Type = [BoolType] bool
# 3903|           Value = [CStyleCast] 0
# 3903|           ValueCategory = prvalue
# 3904|     getStmt(398): [DoStmt] do (...) ...
# 3906|       getCondition(): [Literal] 0
# 3906|           Type = [IntType] int
# 3906|           Value = [Literal] 0
# 3906|           ValueCategory = prvalue
# 3904|       getStmt(): [BlockStmt] { ... }
# 3905|         getStmt(0): [DeclStmt] declaration
# 3905|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x398
# 3905|               Type = [Struct] String
# 3905|             getVariable().getInitializer(): [Initializer] initializer for x398
# 3905|               getExpr(): [ConstructorCall] call to String
# 3905|                   Type = [VoidType] void
# 3905|                   ValueCategory = prvalue
# 3906|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3906|             Type = [VoidType] void
# 3906|             ValueCategory = prvalue
# 3906|           getQualifier(): [VariableAccess] x398
# 3906|               Type = [Struct] String
# 3906|               ValueCategory = lvalue
# 3906|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3906|           Conversion = [BoolConversion] conversion to bool
# 3906|           Type = [BoolType] bool
# 3906|           Value = [CStyleCast] 0
# 3906|           ValueCategory = prvalue
# 3907|     getStmt(399): [DoStmt] do (...) ...
# 3909|       getCondition(): [Literal] 0
# 3909|           Type = [IntType] int
# 3909|           Value = [Literal] 0
# 3909|           ValueCategory = prvalue
# 3907|       getStmt(): [BlockStmt] { ... }
# 3908|         getStmt(0): [DeclStmt] declaration
# 3908|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x399
# 3908|               Type = [Struct] String
# 3908|             getVariable().getInitializer(): [Initializer] initializer for x399
# 3908|               getExpr(): [ConstructorCall] call to String
# 3908|                   Type = [VoidType] void
# 3908|                   ValueCategory = prvalue
# 3909|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3909|             Type = [VoidType] void
# 3909|             ValueCategory = prvalue
# 3909|           getQualifier(): [VariableAccess] x399
# 3909|               Type = [Struct] String
# 3909|               ValueCategory = lvalue
# 3909|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3909|           Conversion = [BoolConversion] conversion to bool
# 3909|           Type = [BoolType] bool
# 3909|           Value = [CStyleCast] 0
# 3909|           ValueCategory = prvalue
# 3910|     getStmt(400): [DoStmt] do (...) ...
# 3912|       getCondition(): [Literal] 0
# 3912|           Type = [IntType] int
# 3912|           Value = [Literal] 0
# 3912|           ValueCategory = prvalue
# 3910|       getStmt(): [BlockStmt] { ... }
# 3911|         getStmt(0): [DeclStmt] declaration
# 3911|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x400
# 3911|               Type = [Struct] String
# 3911|             getVariable().getInitializer(): [Initializer] initializer for x400
# 3911|               getExpr(): [ConstructorCall] call to String
# 3911|                   Type = [VoidType] void
# 3911|                   ValueCategory = prvalue
# 3912|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3912|             Type = [VoidType] void
# 3912|             ValueCategory = prvalue
# 3912|           getQualifier(): [VariableAccess] x400
# 3912|               Type = [Struct] String
# 3912|               ValueCategory = lvalue
# 3912|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3912|           Conversion = [BoolConversion] conversion to bool
# 3912|           Type = [BoolType] bool
# 3912|           Value = [CStyleCast] 0
# 3912|           ValueCategory = prvalue
# 3913|     getStmt(401): [DoStmt] do (...) ...
# 3915|       getCondition(): [Literal] 0
# 3915|           Type = [IntType] int
# 3915|           Value = [Literal] 0
# 3915|           ValueCategory = prvalue
# 3913|       getStmt(): [BlockStmt] { ... }
# 3914|         getStmt(0): [DeclStmt] declaration
# 3914|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x401
# 3914|               Type = [Struct] String
# 3914|             getVariable().getInitializer(): [Initializer] initializer for x401
# 3914|               getExpr(): [ConstructorCall] call to String
# 3914|                   Type = [VoidType] void
# 3914|                   ValueCategory = prvalue
# 3915|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3915|             Type = [VoidType] void
# 3915|             ValueCategory = prvalue
# 3915|           getQualifier(): [VariableAccess] x401
# 3915|               Type = [Struct] String
# 3915|               ValueCategory = lvalue
# 3915|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3915|           Conversion = [BoolConversion] conversion to bool
# 3915|           Type = [BoolType] bool
# 3915|           Value = [CStyleCast] 0
# 3915|           ValueCategory = prvalue
# 3916|     getStmt(402): [DoStmt] do (...) ...
# 3918|       getCondition(): [Literal] 0
# 3918|           Type = [IntType] int
# 3918|           Value = [Literal] 0
# 3918|           ValueCategory = prvalue
# 3916|       getStmt(): [BlockStmt] { ... }
# 3917|         getStmt(0): [DeclStmt] declaration
# 3917|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x402
# 3917|               Type = [Struct] String
# 3917|             getVariable().getInitializer(): [Initializer] initializer for x402
# 3917|               getExpr(): [ConstructorCall] call to String
# 3917|                   Type = [VoidType] void
# 3917|                   ValueCategory = prvalue
# 3918|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3918|             Type = [VoidType] void
# 3918|             ValueCategory = prvalue
# 3918|           getQualifier(): [VariableAccess] x402
# 3918|               Type = [Struct] String
# 3918|               ValueCategory = lvalue
# 3918|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3918|           Conversion = [BoolConversion] conversion to bool
# 3918|           Type = [BoolType] bool
# 3918|           Value = [CStyleCast] 0
# 3918|           ValueCategory = prvalue
# 3919|     getStmt(403): [DoStmt] do (...) ...
# 3921|       getCondition(): [Literal] 0
# 3921|           Type = [IntType] int
# 3921|           Value = [Literal] 0
# 3921|           ValueCategory = prvalue
# 3919|       getStmt(): [BlockStmt] { ... }
# 3920|         getStmt(0): [DeclStmt] declaration
# 3920|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x403
# 3920|               Type = [Struct] String
# 3920|             getVariable().getInitializer(): [Initializer] initializer for x403
# 3920|               getExpr(): [ConstructorCall] call to String
# 3920|                   Type = [VoidType] void
# 3920|                   ValueCategory = prvalue
# 3921|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3921|             Type = [VoidType] void
# 3921|             ValueCategory = prvalue
# 3921|           getQualifier(): [VariableAccess] x403
# 3921|               Type = [Struct] String
# 3921|               ValueCategory = lvalue
# 3921|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3921|           Conversion = [BoolConversion] conversion to bool
# 3921|           Type = [BoolType] bool
# 3921|           Value = [CStyleCast] 0
# 3921|           ValueCategory = prvalue
# 3922|     getStmt(404): [DoStmt] do (...) ...
# 3924|       getCondition(): [Literal] 0
# 3924|           Type = [IntType] int
# 3924|           Value = [Literal] 0
# 3924|           ValueCategory = prvalue
# 3922|       getStmt(): [BlockStmt] { ... }
# 3923|         getStmt(0): [DeclStmt] declaration
# 3923|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x404
# 3923|               Type = [Struct] String
# 3923|             getVariable().getInitializer(): [Initializer] initializer for x404
# 3923|               getExpr(): [ConstructorCall] call to String
# 3923|                   Type = [VoidType] void
# 3923|                   ValueCategory = prvalue
# 3924|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3924|             Type = [VoidType] void
# 3924|             ValueCategory = prvalue
# 3924|           getQualifier(): [VariableAccess] x404
# 3924|               Type = [Struct] String
# 3924|               ValueCategory = lvalue
# 3924|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3924|           Conversion = [BoolConversion] conversion to bool
# 3924|           Type = [BoolType] bool
# 3924|           Value = [CStyleCast] 0
# 3924|           ValueCategory = prvalue
# 3925|     getStmt(405): [DoStmt] do (...) ...
# 3927|       getCondition(): [Literal] 0
# 3927|           Type = [IntType] int
# 3927|           Value = [Literal] 0
# 3927|           ValueCategory = prvalue
# 3925|       getStmt(): [BlockStmt] { ... }
# 3926|         getStmt(0): [DeclStmt] declaration
# 3926|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x405
# 3926|               Type = [Struct] String
# 3926|             getVariable().getInitializer(): [Initializer] initializer for x405
# 3926|               getExpr(): [ConstructorCall] call to String
# 3926|                   Type = [VoidType] void
# 3926|                   ValueCategory = prvalue
# 3927|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3927|             Type = [VoidType] void
# 3927|             ValueCategory = prvalue
# 3927|           getQualifier(): [VariableAccess] x405
# 3927|               Type = [Struct] String
# 3927|               ValueCategory = lvalue
# 3927|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3927|           Conversion = [BoolConversion] conversion to bool
# 3927|           Type = [BoolType] bool
# 3927|           Value = [CStyleCast] 0
# 3927|           ValueCategory = prvalue
# 3928|     getStmt(406): [DoStmt] do (...) ...
# 3930|       getCondition(): [Literal] 0
# 3930|           Type = [IntType] int
# 3930|           Value = [Literal] 0
# 3930|           ValueCategory = prvalue
# 3928|       getStmt(): [BlockStmt] { ... }
# 3929|         getStmt(0): [DeclStmt] declaration
# 3929|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x406
# 3929|               Type = [Struct] String
# 3929|             getVariable().getInitializer(): [Initializer] initializer for x406
# 3929|               getExpr(): [ConstructorCall] call to String
# 3929|                   Type = [VoidType] void
# 3929|                   ValueCategory = prvalue
# 3930|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3930|             Type = [VoidType] void
# 3930|             ValueCategory = prvalue
# 3930|           getQualifier(): [VariableAccess] x406
# 3930|               Type = [Struct] String
# 3930|               ValueCategory = lvalue
# 3930|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3930|           Conversion = [BoolConversion] conversion to bool
# 3930|           Type = [BoolType] bool
# 3930|           Value = [CStyleCast] 0
# 3930|           ValueCategory = prvalue
# 3931|     getStmt(407): [DoStmt] do (...) ...
# 3933|       getCondition(): [Literal] 0
# 3933|           Type = [IntType] int
# 3933|           Value = [Literal] 0
# 3933|           ValueCategory = prvalue
# 3931|       getStmt(): [BlockStmt] { ... }
# 3932|         getStmt(0): [DeclStmt] declaration
# 3932|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x407
# 3932|               Type = [Struct] String
# 3932|             getVariable().getInitializer(): [Initializer] initializer for x407
# 3932|               getExpr(): [ConstructorCall] call to String
# 3932|                   Type = [VoidType] void
# 3932|                   ValueCategory = prvalue
# 3933|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3933|             Type = [VoidType] void
# 3933|             ValueCategory = prvalue
# 3933|           getQualifier(): [VariableAccess] x407
# 3933|               Type = [Struct] String
# 3933|               ValueCategory = lvalue
# 3933|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3933|           Conversion = [BoolConversion] conversion to bool
# 3933|           Type = [BoolType] bool
# 3933|           Value = [CStyleCast] 0
# 3933|           ValueCategory = prvalue
# 3934|     getStmt(408): [DoStmt] do (...) ...
# 3936|       getCondition(): [Literal] 0
# 3936|           Type = [IntType] int
# 3936|           Value = [Literal] 0
# 3936|           ValueCategory = prvalue
# 3934|       getStmt(): [BlockStmt] { ... }
# 3935|         getStmt(0): [DeclStmt] declaration
# 3935|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x408
# 3935|               Type = [Struct] String
# 3935|             getVariable().getInitializer(): [Initializer] initializer for x408
# 3935|               getExpr(): [ConstructorCall] call to String
# 3935|                   Type = [VoidType] void
# 3935|                   ValueCategory = prvalue
# 3936|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3936|             Type = [VoidType] void
# 3936|             ValueCategory = prvalue
# 3936|           getQualifier(): [VariableAccess] x408
# 3936|               Type = [Struct] String
# 3936|               ValueCategory = lvalue
# 3936|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3936|           Conversion = [BoolConversion] conversion to bool
# 3936|           Type = [BoolType] bool
# 3936|           Value = [CStyleCast] 0
# 3936|           ValueCategory = prvalue
# 3937|     getStmt(409): [DoStmt] do (...) ...
# 3939|       getCondition(): [Literal] 0
# 3939|           Type = [IntType] int
# 3939|           Value = [Literal] 0
# 3939|           ValueCategory = prvalue
# 3937|       getStmt(): [BlockStmt] { ... }
# 3938|         getStmt(0): [DeclStmt] declaration
# 3938|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x409
# 3938|               Type = [Struct] String
# 3938|             getVariable().getInitializer(): [Initializer] initializer for x409
# 3938|               getExpr(): [ConstructorCall] call to String
# 3938|                   Type = [VoidType] void
# 3938|                   ValueCategory = prvalue
# 3939|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3939|             Type = [VoidType] void
# 3939|             ValueCategory = prvalue
# 3939|           getQualifier(): [VariableAccess] x409
# 3939|               Type = [Struct] String
# 3939|               ValueCategory = lvalue
# 3939|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3939|           Conversion = [BoolConversion] conversion to bool
# 3939|           Type = [BoolType] bool
# 3939|           Value = [CStyleCast] 0
# 3939|           ValueCategory = prvalue
# 3940|     getStmt(410): [DoStmt] do (...) ...
# 3942|       getCondition(): [Literal] 0
# 3942|           Type = [IntType] int
# 3942|           Value = [Literal] 0
# 3942|           ValueCategory = prvalue
# 3940|       getStmt(): [BlockStmt] { ... }
# 3941|         getStmt(0): [DeclStmt] declaration
# 3941|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x410
# 3941|               Type = [Struct] String
# 3941|             getVariable().getInitializer(): [Initializer] initializer for x410
# 3941|               getExpr(): [ConstructorCall] call to String
# 3941|                   Type = [VoidType] void
# 3941|                   ValueCategory = prvalue
# 3942|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3942|             Type = [VoidType] void
# 3942|             ValueCategory = prvalue
# 3942|           getQualifier(): [VariableAccess] x410
# 3942|               Type = [Struct] String
# 3942|               ValueCategory = lvalue
# 3942|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3942|           Conversion = [BoolConversion] conversion to bool
# 3942|           Type = [BoolType] bool
# 3942|           Value = [CStyleCast] 0
# 3942|           ValueCategory = prvalue
# 3943|     getStmt(411): [DoStmt] do (...) ...
# 3945|       getCondition(): [Literal] 0
# 3945|           Type = [IntType] int
# 3945|           Value = [Literal] 0
# 3945|           ValueCategory = prvalue
# 3943|       getStmt(): [BlockStmt] { ... }
# 3944|         getStmt(0): [DeclStmt] declaration
# 3944|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x411
# 3944|               Type = [Struct] String
# 3944|             getVariable().getInitializer(): [Initializer] initializer for x411
# 3944|               getExpr(): [ConstructorCall] call to String
# 3944|                   Type = [VoidType] void
# 3944|                   ValueCategory = prvalue
# 3945|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3945|             Type = [VoidType] void
# 3945|             ValueCategory = prvalue
# 3945|           getQualifier(): [VariableAccess] x411
# 3945|               Type = [Struct] String
# 3945|               ValueCategory = lvalue
# 3945|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3945|           Conversion = [BoolConversion] conversion to bool
# 3945|           Type = [BoolType] bool
# 3945|           Value = [CStyleCast] 0
# 3945|           ValueCategory = prvalue
# 3946|     getStmt(412): [DoStmt] do (...) ...
# 3948|       getCondition(): [Literal] 0
# 3948|           Type = [IntType] int
# 3948|           Value = [Literal] 0
# 3948|           ValueCategory = prvalue
# 3946|       getStmt(): [BlockStmt] { ... }
# 3947|         getStmt(0): [DeclStmt] declaration
# 3947|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x412
# 3947|               Type = [Struct] String
# 3947|             getVariable().getInitializer(): [Initializer] initializer for x412
# 3947|               getExpr(): [ConstructorCall] call to String
# 3947|                   Type = [VoidType] void
# 3947|                   ValueCategory = prvalue
# 3948|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3948|             Type = [VoidType] void
# 3948|             ValueCategory = prvalue
# 3948|           getQualifier(): [VariableAccess] x412
# 3948|               Type = [Struct] String
# 3948|               ValueCategory = lvalue
# 3948|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3948|           Conversion = [BoolConversion] conversion to bool
# 3948|           Type = [BoolType] bool
# 3948|           Value = [CStyleCast] 0
# 3948|           ValueCategory = prvalue
# 3949|     getStmt(413): [DoStmt] do (...) ...
# 3951|       getCondition(): [Literal] 0
# 3951|           Type = [IntType] int
# 3951|           Value = [Literal] 0
# 3951|           ValueCategory = prvalue
# 3949|       getStmt(): [BlockStmt] { ... }
# 3950|         getStmt(0): [DeclStmt] declaration
# 3950|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x413
# 3950|               Type = [Struct] String
# 3950|             getVariable().getInitializer(): [Initializer] initializer for x413
# 3950|               getExpr(): [ConstructorCall] call to String
# 3950|                   Type = [VoidType] void
# 3950|                   ValueCategory = prvalue
# 3951|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3951|             Type = [VoidType] void
# 3951|             ValueCategory = prvalue
# 3951|           getQualifier(): [VariableAccess] x413
# 3951|               Type = [Struct] String
# 3951|               ValueCategory = lvalue
# 3951|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3951|           Conversion = [BoolConversion] conversion to bool
# 3951|           Type = [BoolType] bool
# 3951|           Value = [CStyleCast] 0
# 3951|           ValueCategory = prvalue
# 3952|     getStmt(414): [DoStmt] do (...) ...
# 3954|       getCondition(): [Literal] 0
# 3954|           Type = [IntType] int
# 3954|           Value = [Literal] 0
# 3954|           ValueCategory = prvalue
# 3952|       getStmt(): [BlockStmt] { ... }
# 3953|         getStmt(0): [DeclStmt] declaration
# 3953|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x414
# 3953|               Type = [Struct] String
# 3953|             getVariable().getInitializer(): [Initializer] initializer for x414
# 3953|               getExpr(): [ConstructorCall] call to String
# 3953|                   Type = [VoidType] void
# 3953|                   ValueCategory = prvalue
# 3954|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3954|             Type = [VoidType] void
# 3954|             ValueCategory = prvalue
# 3954|           getQualifier(): [VariableAccess] x414
# 3954|               Type = [Struct] String
# 3954|               ValueCategory = lvalue
# 3954|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3954|           Conversion = [BoolConversion] conversion to bool
# 3954|           Type = [BoolType] bool
# 3954|           Value = [CStyleCast] 0
# 3954|           ValueCategory = prvalue
# 3955|     getStmt(415): [DoStmt] do (...) ...
# 3957|       getCondition(): [Literal] 0
# 3957|           Type = [IntType] int
# 3957|           Value = [Literal] 0
# 3957|           ValueCategory = prvalue
# 3955|       getStmt(): [BlockStmt] { ... }
# 3956|         getStmt(0): [DeclStmt] declaration
# 3956|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x415
# 3956|               Type = [Struct] String
# 3956|             getVariable().getInitializer(): [Initializer] initializer for x415
# 3956|               getExpr(): [ConstructorCall] call to String
# 3956|                   Type = [VoidType] void
# 3956|                   ValueCategory = prvalue
# 3957|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3957|             Type = [VoidType] void
# 3957|             ValueCategory = prvalue
# 3957|           getQualifier(): [VariableAccess] x415
# 3957|               Type = [Struct] String
# 3957|               ValueCategory = lvalue
# 3957|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3957|           Conversion = [BoolConversion] conversion to bool
# 3957|           Type = [BoolType] bool
# 3957|           Value = [CStyleCast] 0
# 3957|           ValueCategory = prvalue
# 3958|     getStmt(416): [DoStmt] do (...) ...
# 3960|       getCondition(): [Literal] 0
# 3960|           Type = [IntType] int
# 3960|           Value = [Literal] 0
# 3960|           ValueCategory = prvalue
# 3958|       getStmt(): [BlockStmt] { ... }
# 3959|         getStmt(0): [DeclStmt] declaration
# 3959|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x416
# 3959|               Type = [Struct] String
# 3959|             getVariable().getInitializer(): [Initializer] initializer for x416
# 3959|               getExpr(): [ConstructorCall] call to String
# 3959|                   Type = [VoidType] void
# 3959|                   ValueCategory = prvalue
# 3960|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3960|             Type = [VoidType] void
# 3960|             ValueCategory = prvalue
# 3960|           getQualifier(): [VariableAccess] x416
# 3960|               Type = [Struct] String
# 3960|               ValueCategory = lvalue
# 3960|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3960|           Conversion = [BoolConversion] conversion to bool
# 3960|           Type = [BoolType] bool
# 3960|           Value = [CStyleCast] 0
# 3960|           ValueCategory = prvalue
# 3961|     getStmt(417): [DoStmt] do (...) ...
# 3963|       getCondition(): [Literal] 0
# 3963|           Type = [IntType] int
# 3963|           Value = [Literal] 0
# 3963|           ValueCategory = prvalue
# 3961|       getStmt(): [BlockStmt] { ... }
# 3962|         getStmt(0): [DeclStmt] declaration
# 3962|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x417
# 3962|               Type = [Struct] String
# 3962|             getVariable().getInitializer(): [Initializer] initializer for x417
# 3962|               getExpr(): [ConstructorCall] call to String
# 3962|                   Type = [VoidType] void
# 3962|                   ValueCategory = prvalue
# 3963|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3963|             Type = [VoidType] void
# 3963|             ValueCategory = prvalue
# 3963|           getQualifier(): [VariableAccess] x417
# 3963|               Type = [Struct] String
# 3963|               ValueCategory = lvalue
# 3963|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3963|           Conversion = [BoolConversion] conversion to bool
# 3963|           Type = [BoolType] bool
# 3963|           Value = [CStyleCast] 0
# 3963|           ValueCategory = prvalue
# 3964|     getStmt(418): [DoStmt] do (...) ...
# 3966|       getCondition(): [Literal] 0
# 3966|           Type = [IntType] int
# 3966|           Value = [Literal] 0
# 3966|           ValueCategory = prvalue
# 3964|       getStmt(): [BlockStmt] { ... }
# 3965|         getStmt(0): [DeclStmt] declaration
# 3965|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x418
# 3965|               Type = [Struct] String
# 3965|             getVariable().getInitializer(): [Initializer] initializer for x418
# 3965|               getExpr(): [ConstructorCall] call to String
# 3965|                   Type = [VoidType] void
# 3965|                   ValueCategory = prvalue
# 3966|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3966|             Type = [VoidType] void
# 3966|             ValueCategory = prvalue
# 3966|           getQualifier(): [VariableAccess] x418
# 3966|               Type = [Struct] String
# 3966|               ValueCategory = lvalue
# 3966|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3966|           Conversion = [BoolConversion] conversion to bool
# 3966|           Type = [BoolType] bool
# 3966|           Value = [CStyleCast] 0
# 3966|           ValueCategory = prvalue
# 3967|     getStmt(419): [DoStmt] do (...) ...
# 3969|       getCondition(): [Literal] 0
# 3969|           Type = [IntType] int
# 3969|           Value = [Literal] 0
# 3969|           ValueCategory = prvalue
# 3967|       getStmt(): [BlockStmt] { ... }
# 3968|         getStmt(0): [DeclStmt] declaration
# 3968|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x419
# 3968|               Type = [Struct] String
# 3968|             getVariable().getInitializer(): [Initializer] initializer for x419
# 3968|               getExpr(): [ConstructorCall] call to String
# 3968|                   Type = [VoidType] void
# 3968|                   ValueCategory = prvalue
# 3969|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3969|             Type = [VoidType] void
# 3969|             ValueCategory = prvalue
# 3969|           getQualifier(): [VariableAccess] x419
# 3969|               Type = [Struct] String
# 3969|               ValueCategory = lvalue
# 3969|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3969|           Conversion = [BoolConversion] conversion to bool
# 3969|           Type = [BoolType] bool
# 3969|           Value = [CStyleCast] 0
# 3969|           ValueCategory = prvalue
# 3970|     getStmt(420): [DoStmt] do (...) ...
# 3972|       getCondition(): [Literal] 0
# 3972|           Type = [IntType] int
# 3972|           Value = [Literal] 0
# 3972|           ValueCategory = prvalue
# 3970|       getStmt(): [BlockStmt] { ... }
# 3971|         getStmt(0): [DeclStmt] declaration
# 3971|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x420
# 3971|               Type = [Struct] String
# 3971|             getVariable().getInitializer(): [Initializer] initializer for x420
# 3971|               getExpr(): [ConstructorCall] call to String
# 3971|                   Type = [VoidType] void
# 3971|                   ValueCategory = prvalue
# 3972|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3972|             Type = [VoidType] void
# 3972|             ValueCategory = prvalue
# 3972|           getQualifier(): [VariableAccess] x420
# 3972|               Type = [Struct] String
# 3972|               ValueCategory = lvalue
# 3972|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3972|           Conversion = [BoolConversion] conversion to bool
# 3972|           Type = [BoolType] bool
# 3972|           Value = [CStyleCast] 0
# 3972|           ValueCategory = prvalue
# 3973|     getStmt(421): [DoStmt] do (...) ...
# 3975|       getCondition(): [Literal] 0
# 3975|           Type = [IntType] int
# 3975|           Value = [Literal] 0
# 3975|           ValueCategory = prvalue
# 3973|       getStmt(): [BlockStmt] { ... }
# 3974|         getStmt(0): [DeclStmt] declaration
# 3974|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x421
# 3974|               Type = [Struct] String
# 3974|             getVariable().getInitializer(): [Initializer] initializer for x421
# 3974|               getExpr(): [ConstructorCall] call to String
# 3974|                   Type = [VoidType] void
# 3974|                   ValueCategory = prvalue
# 3975|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3975|             Type = [VoidType] void
# 3975|             ValueCategory = prvalue
# 3975|           getQualifier(): [VariableAccess] x421
# 3975|               Type = [Struct] String
# 3975|               ValueCategory = lvalue
# 3975|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3975|           Conversion = [BoolConversion] conversion to bool
# 3975|           Type = [BoolType] bool
# 3975|           Value = [CStyleCast] 0
# 3975|           ValueCategory = prvalue
# 3976|     getStmt(422): [DoStmt] do (...) ...
# 3978|       getCondition(): [Literal] 0
# 3978|           Type = [IntType] int
# 3978|           Value = [Literal] 0
# 3978|           ValueCategory = prvalue
# 3976|       getStmt(): [BlockStmt] { ... }
# 3977|         getStmt(0): [DeclStmt] declaration
# 3977|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x422
# 3977|               Type = [Struct] String
# 3977|             getVariable().getInitializer(): [Initializer] initializer for x422
# 3977|               getExpr(): [ConstructorCall] call to String
# 3977|                   Type = [VoidType] void
# 3977|                   ValueCategory = prvalue
# 3978|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3978|             Type = [VoidType] void
# 3978|             ValueCategory = prvalue
# 3978|           getQualifier(): [VariableAccess] x422
# 3978|               Type = [Struct] String
# 3978|               ValueCategory = lvalue
# 3978|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3978|           Conversion = [BoolConversion] conversion to bool
# 3978|           Type = [BoolType] bool
# 3978|           Value = [CStyleCast] 0
# 3978|           ValueCategory = prvalue
# 3979|     getStmt(423): [DoStmt] do (...) ...
# 3981|       getCondition(): [Literal] 0
# 3981|           Type = [IntType] int
# 3981|           Value = [Literal] 0
# 3981|           ValueCategory = prvalue
# 3979|       getStmt(): [BlockStmt] { ... }
# 3980|         getStmt(0): [DeclStmt] declaration
# 3980|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x423
# 3980|               Type = [Struct] String
# 3980|             getVariable().getInitializer(): [Initializer] initializer for x423
# 3980|               getExpr(): [ConstructorCall] call to String
# 3980|                   Type = [VoidType] void
# 3980|                   ValueCategory = prvalue
# 3981|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3981|             Type = [VoidType] void
# 3981|             ValueCategory = prvalue
# 3981|           getQualifier(): [VariableAccess] x423
# 3981|               Type = [Struct] String
# 3981|               ValueCategory = lvalue
# 3981|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3981|           Conversion = [BoolConversion] conversion to bool
# 3981|           Type = [BoolType] bool
# 3981|           Value = [CStyleCast] 0
# 3981|           ValueCategory = prvalue
# 3982|     getStmt(424): [DoStmt] do (...) ...
# 3984|       getCondition(): [Literal] 0
# 3984|           Type = [IntType] int
# 3984|           Value = [Literal] 0
# 3984|           ValueCategory = prvalue
# 3982|       getStmt(): [BlockStmt] { ... }
# 3983|         getStmt(0): [DeclStmt] declaration
# 3983|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x424
# 3983|               Type = [Struct] String
# 3983|             getVariable().getInitializer(): [Initializer] initializer for x424
# 3983|               getExpr(): [ConstructorCall] call to String
# 3983|                   Type = [VoidType] void
# 3983|                   ValueCategory = prvalue
# 3984|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3984|             Type = [VoidType] void
# 3984|             ValueCategory = prvalue
# 3984|           getQualifier(): [VariableAccess] x424
# 3984|               Type = [Struct] String
# 3984|               ValueCategory = lvalue
# 3984|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3984|           Conversion = [BoolConversion] conversion to bool
# 3984|           Type = [BoolType] bool
# 3984|           Value = [CStyleCast] 0
# 3984|           ValueCategory = prvalue
# 3985|     getStmt(425): [DoStmt] do (...) ...
# 3987|       getCondition(): [Literal] 0
# 3987|           Type = [IntType] int
# 3987|           Value = [Literal] 0
# 3987|           ValueCategory = prvalue
# 3985|       getStmt(): [BlockStmt] { ... }
# 3986|         getStmt(0): [DeclStmt] declaration
# 3986|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x425
# 3986|               Type = [Struct] String
# 3986|             getVariable().getInitializer(): [Initializer] initializer for x425
# 3986|               getExpr(): [ConstructorCall] call to String
# 3986|                   Type = [VoidType] void
# 3986|                   ValueCategory = prvalue
# 3987|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3987|             Type = [VoidType] void
# 3987|             ValueCategory = prvalue
# 3987|           getQualifier(): [VariableAccess] x425
# 3987|               Type = [Struct] String
# 3987|               ValueCategory = lvalue
# 3987|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3987|           Conversion = [BoolConversion] conversion to bool
# 3987|           Type = [BoolType] bool
# 3987|           Value = [CStyleCast] 0
# 3987|           ValueCategory = prvalue
# 3988|     getStmt(426): [DoStmt] do (...) ...
# 3990|       getCondition(): [Literal] 0
# 3990|           Type = [IntType] int
# 3990|           Value = [Literal] 0
# 3990|           ValueCategory = prvalue
# 3988|       getStmt(): [BlockStmt] { ... }
# 3989|         getStmt(0): [DeclStmt] declaration
# 3989|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x426
# 3989|               Type = [Struct] String
# 3989|             getVariable().getInitializer(): [Initializer] initializer for x426
# 3989|               getExpr(): [ConstructorCall] call to String
# 3989|                   Type = [VoidType] void
# 3989|                   ValueCategory = prvalue
# 3990|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3990|             Type = [VoidType] void
# 3990|             ValueCategory = prvalue
# 3990|           getQualifier(): [VariableAccess] x426
# 3990|               Type = [Struct] String
# 3990|               ValueCategory = lvalue
# 3990|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3990|           Conversion = [BoolConversion] conversion to bool
# 3990|           Type = [BoolType] bool
# 3990|           Value = [CStyleCast] 0
# 3990|           ValueCategory = prvalue
# 3991|     getStmt(427): [DoStmt] do (...) ...
# 3993|       getCondition(): [Literal] 0
# 3993|           Type = [IntType] int
# 3993|           Value = [Literal] 0
# 3993|           ValueCategory = prvalue
# 3991|       getStmt(): [BlockStmt] { ... }
# 3992|         getStmt(0): [DeclStmt] declaration
# 3992|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x427
# 3992|               Type = [Struct] String
# 3992|             getVariable().getInitializer(): [Initializer] initializer for x427
# 3992|               getExpr(): [ConstructorCall] call to String
# 3992|                   Type = [VoidType] void
# 3992|                   ValueCategory = prvalue
# 3993|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3993|             Type = [VoidType] void
# 3993|             ValueCategory = prvalue
# 3993|           getQualifier(): [VariableAccess] x427
# 3993|               Type = [Struct] String
# 3993|               ValueCategory = lvalue
# 3993|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3993|           Conversion = [BoolConversion] conversion to bool
# 3993|           Type = [BoolType] bool
# 3993|           Value = [CStyleCast] 0
# 3993|           ValueCategory = prvalue
# 3994|     getStmt(428): [DoStmt] do (...) ...
# 3996|       getCondition(): [Literal] 0
# 3996|           Type = [IntType] int
# 3996|           Value = [Literal] 0
# 3996|           ValueCategory = prvalue
# 3994|       getStmt(): [BlockStmt] { ... }
# 3995|         getStmt(0): [DeclStmt] declaration
# 3995|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x428
# 3995|               Type = [Struct] String
# 3995|             getVariable().getInitializer(): [Initializer] initializer for x428
# 3995|               getExpr(): [ConstructorCall] call to String
# 3995|                   Type = [VoidType] void
# 3995|                   ValueCategory = prvalue
# 3996|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3996|             Type = [VoidType] void
# 3996|             ValueCategory = prvalue
# 3996|           getQualifier(): [VariableAccess] x428
# 3996|               Type = [Struct] String
# 3996|               ValueCategory = lvalue
# 3996|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3996|           Conversion = [BoolConversion] conversion to bool
# 3996|           Type = [BoolType] bool
# 3996|           Value = [CStyleCast] 0
# 3996|           ValueCategory = prvalue
# 3997|     getStmt(429): [DoStmt] do (...) ...
# 3999|       getCondition(): [Literal] 0
# 3999|           Type = [IntType] int
# 3999|           Value = [Literal] 0
# 3999|           ValueCategory = prvalue
# 3997|       getStmt(): [BlockStmt] { ... }
# 3998|         getStmt(0): [DeclStmt] declaration
# 3998|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x429
# 3998|               Type = [Struct] String
# 3998|             getVariable().getInitializer(): [Initializer] initializer for x429
# 3998|               getExpr(): [ConstructorCall] call to String
# 3998|                   Type = [VoidType] void
# 3998|                   ValueCategory = prvalue
# 3999|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 3999|             Type = [VoidType] void
# 3999|             ValueCategory = prvalue
# 3999|           getQualifier(): [VariableAccess] x429
# 3999|               Type = [Struct] String
# 3999|               ValueCategory = lvalue
# 3999|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 3999|           Conversion = [BoolConversion] conversion to bool
# 3999|           Type = [BoolType] bool
# 3999|           Value = [CStyleCast] 0
# 3999|           ValueCategory = prvalue
# 4000|     getStmt(430): [DoStmt] do (...) ...
# 4002|       getCondition(): [Literal] 0
# 4002|           Type = [IntType] int
# 4002|           Value = [Literal] 0
# 4002|           ValueCategory = prvalue
# 4000|       getStmt(): [BlockStmt] { ... }
# 4001|         getStmt(0): [DeclStmt] declaration
# 4001|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x430
# 4001|               Type = [Struct] String
# 4001|             getVariable().getInitializer(): [Initializer] initializer for x430
# 4001|               getExpr(): [ConstructorCall] call to String
# 4001|                   Type = [VoidType] void
# 4001|                   ValueCategory = prvalue
# 4002|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4002|             Type = [VoidType] void
# 4002|             ValueCategory = prvalue
# 4002|           getQualifier(): [VariableAccess] x430
# 4002|               Type = [Struct] String
# 4002|               ValueCategory = lvalue
# 4002|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4002|           Conversion = [BoolConversion] conversion to bool
# 4002|           Type = [BoolType] bool
# 4002|           Value = [CStyleCast] 0
# 4002|           ValueCategory = prvalue
# 4003|     getStmt(431): [DoStmt] do (...) ...
# 4005|       getCondition(): [Literal] 0
# 4005|           Type = [IntType] int
# 4005|           Value = [Literal] 0
# 4005|           ValueCategory = prvalue
# 4003|       getStmt(): [BlockStmt] { ... }
# 4004|         getStmt(0): [DeclStmt] declaration
# 4004|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x431
# 4004|               Type = [Struct] String
# 4004|             getVariable().getInitializer(): [Initializer] initializer for x431
# 4004|               getExpr(): [ConstructorCall] call to String
# 4004|                   Type = [VoidType] void
# 4004|                   ValueCategory = prvalue
# 4005|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4005|             Type = [VoidType] void
# 4005|             ValueCategory = prvalue
# 4005|           getQualifier(): [VariableAccess] x431
# 4005|               Type = [Struct] String
# 4005|               ValueCategory = lvalue
# 4005|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4005|           Conversion = [BoolConversion] conversion to bool
# 4005|           Type = [BoolType] bool
# 4005|           Value = [CStyleCast] 0
# 4005|           ValueCategory = prvalue
# 4006|     getStmt(432): [DoStmt] do (...) ...
# 4008|       getCondition(): [Literal] 0
# 4008|           Type = [IntType] int
# 4008|           Value = [Literal] 0
# 4008|           ValueCategory = prvalue
# 4006|       getStmt(): [BlockStmt] { ... }
# 4007|         getStmt(0): [DeclStmt] declaration
# 4007|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x432
# 4007|               Type = [Struct] String
# 4007|             getVariable().getInitializer(): [Initializer] initializer for x432
# 4007|               getExpr(): [ConstructorCall] call to String
# 4007|                   Type = [VoidType] void
# 4007|                   ValueCategory = prvalue
# 4008|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4008|             Type = [VoidType] void
# 4008|             ValueCategory = prvalue
# 4008|           getQualifier(): [VariableAccess] x432
# 4008|               Type = [Struct] String
# 4008|               ValueCategory = lvalue
# 4008|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4008|           Conversion = [BoolConversion] conversion to bool
# 4008|           Type = [BoolType] bool
# 4008|           Value = [CStyleCast] 0
# 4008|           ValueCategory = prvalue
# 4009|     getStmt(433): [DoStmt] do (...) ...
# 4011|       getCondition(): [Literal] 0
# 4011|           Type = [IntType] int
# 4011|           Value = [Literal] 0
# 4011|           ValueCategory = prvalue
# 4009|       getStmt(): [BlockStmt] { ... }
# 4010|         getStmt(0): [DeclStmt] declaration
# 4010|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x433
# 4010|               Type = [Struct] String
# 4010|             getVariable().getInitializer(): [Initializer] initializer for x433
# 4010|               getExpr(): [ConstructorCall] call to String
# 4010|                   Type = [VoidType] void
# 4010|                   ValueCategory = prvalue
# 4011|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4011|             Type = [VoidType] void
# 4011|             ValueCategory = prvalue
# 4011|           getQualifier(): [VariableAccess] x433
# 4011|               Type = [Struct] String
# 4011|               ValueCategory = lvalue
# 4011|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4011|           Conversion = [BoolConversion] conversion to bool
# 4011|           Type = [BoolType] bool
# 4011|           Value = [CStyleCast] 0
# 4011|           ValueCategory = prvalue
# 4012|     getStmt(434): [DoStmt] do (...) ...
# 4014|       getCondition(): [Literal] 0
# 4014|           Type = [IntType] int
# 4014|           Value = [Literal] 0
# 4014|           ValueCategory = prvalue
# 4012|       getStmt(): [BlockStmt] { ... }
# 4013|         getStmt(0): [DeclStmt] declaration
# 4013|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x434
# 4013|               Type = [Struct] String
# 4013|             getVariable().getInitializer(): [Initializer] initializer for x434
# 4013|               getExpr(): [ConstructorCall] call to String
# 4013|                   Type = [VoidType] void
# 4013|                   ValueCategory = prvalue
# 4014|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4014|             Type = [VoidType] void
# 4014|             ValueCategory = prvalue
# 4014|           getQualifier(): [VariableAccess] x434
# 4014|               Type = [Struct] String
# 4014|               ValueCategory = lvalue
# 4014|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4014|           Conversion = [BoolConversion] conversion to bool
# 4014|           Type = [BoolType] bool
# 4014|           Value = [CStyleCast] 0
# 4014|           ValueCategory = prvalue
# 4015|     getStmt(435): [DoStmt] do (...) ...
# 4017|       getCondition(): [Literal] 0
# 4017|           Type = [IntType] int
# 4017|           Value = [Literal] 0
# 4017|           ValueCategory = prvalue
# 4015|       getStmt(): [BlockStmt] { ... }
# 4016|         getStmt(0): [DeclStmt] declaration
# 4016|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x435
# 4016|               Type = [Struct] String
# 4016|             getVariable().getInitializer(): [Initializer] initializer for x435
# 4016|               getExpr(): [ConstructorCall] call to String
# 4016|                   Type = [VoidType] void
# 4016|                   ValueCategory = prvalue
# 4017|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4017|             Type = [VoidType] void
# 4017|             ValueCategory = prvalue
# 4017|           getQualifier(): [VariableAccess] x435
# 4017|               Type = [Struct] String
# 4017|               ValueCategory = lvalue
# 4017|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4017|           Conversion = [BoolConversion] conversion to bool
# 4017|           Type = [BoolType] bool
# 4017|           Value = [CStyleCast] 0
# 4017|           ValueCategory = prvalue
# 4018|     getStmt(436): [DoStmt] do (...) ...
# 4020|       getCondition(): [Literal] 0
# 4020|           Type = [IntType] int
# 4020|           Value = [Literal] 0
# 4020|           ValueCategory = prvalue
# 4018|       getStmt(): [BlockStmt] { ... }
# 4019|         getStmt(0): [DeclStmt] declaration
# 4019|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x436
# 4019|               Type = [Struct] String
# 4019|             getVariable().getInitializer(): [Initializer] initializer for x436
# 4019|               getExpr(): [ConstructorCall] call to String
# 4019|                   Type = [VoidType] void
# 4019|                   ValueCategory = prvalue
# 4020|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4020|             Type = [VoidType] void
# 4020|             ValueCategory = prvalue
# 4020|           getQualifier(): [VariableAccess] x436
# 4020|               Type = [Struct] String
# 4020|               ValueCategory = lvalue
# 4020|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4020|           Conversion = [BoolConversion] conversion to bool
# 4020|           Type = [BoolType] bool
# 4020|           Value = [CStyleCast] 0
# 4020|           ValueCategory = prvalue
# 4021|     getStmt(437): [DoStmt] do (...) ...
# 4023|       getCondition(): [Literal] 0
# 4023|           Type = [IntType] int
# 4023|           Value = [Literal] 0
# 4023|           ValueCategory = prvalue
# 4021|       getStmt(): [BlockStmt] { ... }
# 4022|         getStmt(0): [DeclStmt] declaration
# 4022|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x437
# 4022|               Type = [Struct] String
# 4022|             getVariable().getInitializer(): [Initializer] initializer for x437
# 4022|               getExpr(): [ConstructorCall] call to String
# 4022|                   Type = [VoidType] void
# 4022|                   ValueCategory = prvalue
# 4023|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4023|             Type = [VoidType] void
# 4023|             ValueCategory = prvalue
# 4023|           getQualifier(): [VariableAccess] x437
# 4023|               Type = [Struct] String
# 4023|               ValueCategory = lvalue
# 4023|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4023|           Conversion = [BoolConversion] conversion to bool
# 4023|           Type = [BoolType] bool
# 4023|           Value = [CStyleCast] 0
# 4023|           ValueCategory = prvalue
# 4024|     getStmt(438): [DoStmt] do (...) ...
# 4026|       getCondition(): [Literal] 0
# 4026|           Type = [IntType] int
# 4026|           Value = [Literal] 0
# 4026|           ValueCategory = prvalue
# 4024|       getStmt(): [BlockStmt] { ... }
# 4025|         getStmt(0): [DeclStmt] declaration
# 4025|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x438
# 4025|               Type = [Struct] String
# 4025|             getVariable().getInitializer(): [Initializer] initializer for x438
# 4025|               getExpr(): [ConstructorCall] call to String
# 4025|                   Type = [VoidType] void
# 4025|                   ValueCategory = prvalue
# 4026|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4026|             Type = [VoidType] void
# 4026|             ValueCategory = prvalue
# 4026|           getQualifier(): [VariableAccess] x438
# 4026|               Type = [Struct] String
# 4026|               ValueCategory = lvalue
# 4026|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4026|           Conversion = [BoolConversion] conversion to bool
# 4026|           Type = [BoolType] bool
# 4026|           Value = [CStyleCast] 0
# 4026|           ValueCategory = prvalue
# 4027|     getStmt(439): [DoStmt] do (...) ...
# 4029|       getCondition(): [Literal] 0
# 4029|           Type = [IntType] int
# 4029|           Value = [Literal] 0
# 4029|           ValueCategory = prvalue
# 4027|       getStmt(): [BlockStmt] { ... }
# 4028|         getStmt(0): [DeclStmt] declaration
# 4028|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x439
# 4028|               Type = [Struct] String
# 4028|             getVariable().getInitializer(): [Initializer] initializer for x439
# 4028|               getExpr(): [ConstructorCall] call to String
# 4028|                   Type = [VoidType] void
# 4028|                   ValueCategory = prvalue
# 4029|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4029|             Type = [VoidType] void
# 4029|             ValueCategory = prvalue
# 4029|           getQualifier(): [VariableAccess] x439
# 4029|               Type = [Struct] String
# 4029|               ValueCategory = lvalue
# 4029|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4029|           Conversion = [BoolConversion] conversion to bool
# 4029|           Type = [BoolType] bool
# 4029|           Value = [CStyleCast] 0
# 4029|           ValueCategory = prvalue
# 4030|     getStmt(440): [DoStmt] do (...) ...
# 4032|       getCondition(): [Literal] 0
# 4032|           Type = [IntType] int
# 4032|           Value = [Literal] 0
# 4032|           ValueCategory = prvalue
# 4030|       getStmt(): [BlockStmt] { ... }
# 4031|         getStmt(0): [DeclStmt] declaration
# 4031|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x440
# 4031|               Type = [Struct] String
# 4031|             getVariable().getInitializer(): [Initializer] initializer for x440
# 4031|               getExpr(): [ConstructorCall] call to String
# 4031|                   Type = [VoidType] void
# 4031|                   ValueCategory = prvalue
# 4032|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4032|             Type = [VoidType] void
# 4032|             ValueCategory = prvalue
# 4032|           getQualifier(): [VariableAccess] x440
# 4032|               Type = [Struct] String
# 4032|               ValueCategory = lvalue
# 4032|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4032|           Conversion = [BoolConversion] conversion to bool
# 4032|           Type = [BoolType] bool
# 4032|           Value = [CStyleCast] 0
# 4032|           ValueCategory = prvalue
# 4033|     getStmt(441): [DoStmt] do (...) ...
# 4035|       getCondition(): [Literal] 0
# 4035|           Type = [IntType] int
# 4035|           Value = [Literal] 0
# 4035|           ValueCategory = prvalue
# 4033|       getStmt(): [BlockStmt] { ... }
# 4034|         getStmt(0): [DeclStmt] declaration
# 4034|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x441
# 4034|               Type = [Struct] String
# 4034|             getVariable().getInitializer(): [Initializer] initializer for x441
# 4034|               getExpr(): [ConstructorCall] call to String
# 4034|                   Type = [VoidType] void
# 4034|                   ValueCategory = prvalue
# 4035|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4035|             Type = [VoidType] void
# 4035|             ValueCategory = prvalue
# 4035|           getQualifier(): [VariableAccess] x441
# 4035|               Type = [Struct] String
# 4035|               ValueCategory = lvalue
# 4035|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4035|           Conversion = [BoolConversion] conversion to bool
# 4035|           Type = [BoolType] bool
# 4035|           Value = [CStyleCast] 0
# 4035|           ValueCategory = prvalue
# 4036|     getStmt(442): [DoStmt] do (...) ...
# 4038|       getCondition(): [Literal] 0
# 4038|           Type = [IntType] int
# 4038|           Value = [Literal] 0
# 4038|           ValueCategory = prvalue
# 4036|       getStmt(): [BlockStmt] { ... }
# 4037|         getStmt(0): [DeclStmt] declaration
# 4037|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x442
# 4037|               Type = [Struct] String
# 4037|             getVariable().getInitializer(): [Initializer] initializer for x442
# 4037|               getExpr(): [ConstructorCall] call to String
# 4037|                   Type = [VoidType] void
# 4037|                   ValueCategory = prvalue
# 4038|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4038|             Type = [VoidType] void
# 4038|             ValueCategory = prvalue
# 4038|           getQualifier(): [VariableAccess] x442
# 4038|               Type = [Struct] String
# 4038|               ValueCategory = lvalue
# 4038|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4038|           Conversion = [BoolConversion] conversion to bool
# 4038|           Type = [BoolType] bool
# 4038|           Value = [CStyleCast] 0
# 4038|           ValueCategory = prvalue
# 4039|     getStmt(443): [DoStmt] do (...) ...
# 4041|       getCondition(): [Literal] 0
# 4041|           Type = [IntType] int
# 4041|           Value = [Literal] 0
# 4041|           ValueCategory = prvalue
# 4039|       getStmt(): [BlockStmt] { ... }
# 4040|         getStmt(0): [DeclStmt] declaration
# 4040|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x443
# 4040|               Type = [Struct] String
# 4040|             getVariable().getInitializer(): [Initializer] initializer for x443
# 4040|               getExpr(): [ConstructorCall] call to String
# 4040|                   Type = [VoidType] void
# 4040|                   ValueCategory = prvalue
# 4041|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4041|             Type = [VoidType] void
# 4041|             ValueCategory = prvalue
# 4041|           getQualifier(): [VariableAccess] x443
# 4041|               Type = [Struct] String
# 4041|               ValueCategory = lvalue
# 4041|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4041|           Conversion = [BoolConversion] conversion to bool
# 4041|           Type = [BoolType] bool
# 4041|           Value = [CStyleCast] 0
# 4041|           ValueCategory = prvalue
# 4042|     getStmt(444): [DoStmt] do (...) ...
# 4044|       getCondition(): [Literal] 0
# 4044|           Type = [IntType] int
# 4044|           Value = [Literal] 0
# 4044|           ValueCategory = prvalue
# 4042|       getStmt(): [BlockStmt] { ... }
# 4043|         getStmt(0): [DeclStmt] declaration
# 4043|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x444
# 4043|               Type = [Struct] String
# 4043|             getVariable().getInitializer(): [Initializer] initializer for x444
# 4043|               getExpr(): [ConstructorCall] call to String
# 4043|                   Type = [VoidType] void
# 4043|                   ValueCategory = prvalue
# 4044|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4044|             Type = [VoidType] void
# 4044|             ValueCategory = prvalue
# 4044|           getQualifier(): [VariableAccess] x444
# 4044|               Type = [Struct] String
# 4044|               ValueCategory = lvalue
# 4044|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4044|           Conversion = [BoolConversion] conversion to bool
# 4044|           Type = [BoolType] bool
# 4044|           Value = [CStyleCast] 0
# 4044|           ValueCategory = prvalue
# 4045|     getStmt(445): [DoStmt] do (...) ...
# 4047|       getCondition(): [Literal] 0
# 4047|           Type = [IntType] int
# 4047|           Value = [Literal] 0
# 4047|           ValueCategory = prvalue
# 4045|       getStmt(): [BlockStmt] { ... }
# 4046|         getStmt(0): [DeclStmt] declaration
# 4046|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x445
# 4046|               Type = [Struct] String
# 4046|             getVariable().getInitializer(): [Initializer] initializer for x445
# 4046|               getExpr(): [ConstructorCall] call to String
# 4046|                   Type = [VoidType] void
# 4046|                   ValueCategory = prvalue
# 4047|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4047|             Type = [VoidType] void
# 4047|             ValueCategory = prvalue
# 4047|           getQualifier(): [VariableAccess] x445
# 4047|               Type = [Struct] String
# 4047|               ValueCategory = lvalue
# 4047|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4047|           Conversion = [BoolConversion] conversion to bool
# 4047|           Type = [BoolType] bool
# 4047|           Value = [CStyleCast] 0
# 4047|           ValueCategory = prvalue
# 4048|     getStmt(446): [DoStmt] do (...) ...
# 4050|       getCondition(): [Literal] 0
# 4050|           Type = [IntType] int
# 4050|           Value = [Literal] 0
# 4050|           ValueCategory = prvalue
# 4048|       getStmt(): [BlockStmt] { ... }
# 4049|         getStmt(0): [DeclStmt] declaration
# 4049|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x446
# 4049|               Type = [Struct] String
# 4049|             getVariable().getInitializer(): [Initializer] initializer for x446
# 4049|               getExpr(): [ConstructorCall] call to String
# 4049|                   Type = [VoidType] void
# 4049|                   ValueCategory = prvalue
# 4050|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4050|             Type = [VoidType] void
# 4050|             ValueCategory = prvalue
# 4050|           getQualifier(): [VariableAccess] x446
# 4050|               Type = [Struct] String
# 4050|               ValueCategory = lvalue
# 4050|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4050|           Conversion = [BoolConversion] conversion to bool
# 4050|           Type = [BoolType] bool
# 4050|           Value = [CStyleCast] 0
# 4050|           ValueCategory = prvalue
# 4051|     getStmt(447): [DoStmt] do (...) ...
# 4053|       getCondition(): [Literal] 0
# 4053|           Type = [IntType] int
# 4053|           Value = [Literal] 0
# 4053|           ValueCategory = prvalue
# 4051|       getStmt(): [BlockStmt] { ... }
# 4052|         getStmt(0): [DeclStmt] declaration
# 4052|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x447
# 4052|               Type = [Struct] String
# 4052|             getVariable().getInitializer(): [Initializer] initializer for x447
# 4052|               getExpr(): [ConstructorCall] call to String
# 4052|                   Type = [VoidType] void
# 4052|                   ValueCategory = prvalue
# 4053|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4053|             Type = [VoidType] void
# 4053|             ValueCategory = prvalue
# 4053|           getQualifier(): [VariableAccess] x447
# 4053|               Type = [Struct] String
# 4053|               ValueCategory = lvalue
# 4053|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4053|           Conversion = [BoolConversion] conversion to bool
# 4053|           Type = [BoolType] bool
# 4053|           Value = [CStyleCast] 0
# 4053|           ValueCategory = prvalue
# 4054|     getStmt(448): [DoStmt] do (...) ...
# 4056|       getCondition(): [Literal] 0
# 4056|           Type = [IntType] int
# 4056|           Value = [Literal] 0
# 4056|           ValueCategory = prvalue
# 4054|       getStmt(): [BlockStmt] { ... }
# 4055|         getStmt(0): [DeclStmt] declaration
# 4055|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x448
# 4055|               Type = [Struct] String
# 4055|             getVariable().getInitializer(): [Initializer] initializer for x448
# 4055|               getExpr(): [ConstructorCall] call to String
# 4055|                   Type = [VoidType] void
# 4055|                   ValueCategory = prvalue
# 4056|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4056|             Type = [VoidType] void
# 4056|             ValueCategory = prvalue
# 4056|           getQualifier(): [VariableAccess] x448
# 4056|               Type = [Struct] String
# 4056|               ValueCategory = lvalue
# 4056|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4056|           Conversion = [BoolConversion] conversion to bool
# 4056|           Type = [BoolType] bool
# 4056|           Value = [CStyleCast] 0
# 4056|           ValueCategory = prvalue
# 4057|     getStmt(449): [DoStmt] do (...) ...
# 4059|       getCondition(): [Literal] 0
# 4059|           Type = [IntType] int
# 4059|           Value = [Literal] 0
# 4059|           ValueCategory = prvalue
# 4057|       getStmt(): [BlockStmt] { ... }
# 4058|         getStmt(0): [DeclStmt] declaration
# 4058|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x449
# 4058|               Type = [Struct] String
# 4058|             getVariable().getInitializer(): [Initializer] initializer for x449
# 4058|               getExpr(): [ConstructorCall] call to String
# 4058|                   Type = [VoidType] void
# 4058|                   ValueCategory = prvalue
# 4059|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4059|             Type = [VoidType] void
# 4059|             ValueCategory = prvalue
# 4059|           getQualifier(): [VariableAccess] x449
# 4059|               Type = [Struct] String
# 4059|               ValueCategory = lvalue
# 4059|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4059|           Conversion = [BoolConversion] conversion to bool
# 4059|           Type = [BoolType] bool
# 4059|           Value = [CStyleCast] 0
# 4059|           ValueCategory = prvalue
# 4060|     getStmt(450): [DoStmt] do (...) ...
# 4062|       getCondition(): [Literal] 0
# 4062|           Type = [IntType] int
# 4062|           Value = [Literal] 0
# 4062|           ValueCategory = prvalue
# 4060|       getStmt(): [BlockStmt] { ... }
# 4061|         getStmt(0): [DeclStmt] declaration
# 4061|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x450
# 4061|               Type = [Struct] String
# 4061|             getVariable().getInitializer(): [Initializer] initializer for x450
# 4061|               getExpr(): [ConstructorCall] call to String
# 4061|                   Type = [VoidType] void
# 4061|                   ValueCategory = prvalue
# 4062|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4062|             Type = [VoidType] void
# 4062|             ValueCategory = prvalue
# 4062|           getQualifier(): [VariableAccess] x450
# 4062|               Type = [Struct] String
# 4062|               ValueCategory = lvalue
# 4062|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4062|           Conversion = [BoolConversion] conversion to bool
# 4062|           Type = [BoolType] bool
# 4062|           Value = [CStyleCast] 0
# 4062|           ValueCategory = prvalue
# 4063|     getStmt(451): [DoStmt] do (...) ...
# 4065|       getCondition(): [Literal] 0
# 4065|           Type = [IntType] int
# 4065|           Value = [Literal] 0
# 4065|           ValueCategory = prvalue
# 4063|       getStmt(): [BlockStmt] { ... }
# 4064|         getStmt(0): [DeclStmt] declaration
# 4064|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x451
# 4064|               Type = [Struct] String
# 4064|             getVariable().getInitializer(): [Initializer] initializer for x451
# 4064|               getExpr(): [ConstructorCall] call to String
# 4064|                   Type = [VoidType] void
# 4064|                   ValueCategory = prvalue
# 4065|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4065|             Type = [VoidType] void
# 4065|             ValueCategory = prvalue
# 4065|           getQualifier(): [VariableAccess] x451
# 4065|               Type = [Struct] String
# 4065|               ValueCategory = lvalue
# 4065|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4065|           Conversion = [BoolConversion] conversion to bool
# 4065|           Type = [BoolType] bool
# 4065|           Value = [CStyleCast] 0
# 4065|           ValueCategory = prvalue
# 4066|     getStmt(452): [DoStmt] do (...) ...
# 4068|       getCondition(): [Literal] 0
# 4068|           Type = [IntType] int
# 4068|           Value = [Literal] 0
# 4068|           ValueCategory = prvalue
# 4066|       getStmt(): [BlockStmt] { ... }
# 4067|         getStmt(0): [DeclStmt] declaration
# 4067|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x452
# 4067|               Type = [Struct] String
# 4067|             getVariable().getInitializer(): [Initializer] initializer for x452
# 4067|               getExpr(): [ConstructorCall] call to String
# 4067|                   Type = [VoidType] void
# 4067|                   ValueCategory = prvalue
# 4068|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4068|             Type = [VoidType] void
# 4068|             ValueCategory = prvalue
# 4068|           getQualifier(): [VariableAccess] x452
# 4068|               Type = [Struct] String
# 4068|               ValueCategory = lvalue
# 4068|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4068|           Conversion = [BoolConversion] conversion to bool
# 4068|           Type = [BoolType] bool
# 4068|           Value = [CStyleCast] 0
# 4068|           ValueCategory = prvalue
# 4069|     getStmt(453): [DoStmt] do (...) ...
# 4071|       getCondition(): [Literal] 0
# 4071|           Type = [IntType] int
# 4071|           Value = [Literal] 0
# 4071|           ValueCategory = prvalue
# 4069|       getStmt(): [BlockStmt] { ... }
# 4070|         getStmt(0): [DeclStmt] declaration
# 4070|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x453
# 4070|               Type = [Struct] String
# 4070|             getVariable().getInitializer(): [Initializer] initializer for x453
# 4070|               getExpr(): [ConstructorCall] call to String
# 4070|                   Type = [VoidType] void
# 4070|                   ValueCategory = prvalue
# 4071|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4071|             Type = [VoidType] void
# 4071|             ValueCategory = prvalue
# 4071|           getQualifier(): [VariableAccess] x453
# 4071|               Type = [Struct] String
# 4071|               ValueCategory = lvalue
# 4071|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4071|           Conversion = [BoolConversion] conversion to bool
# 4071|           Type = [BoolType] bool
# 4071|           Value = [CStyleCast] 0
# 4071|           ValueCategory = prvalue
# 4072|     getStmt(454): [DoStmt] do (...) ...
# 4074|       getCondition(): [Literal] 0
# 4074|           Type = [IntType] int
# 4074|           Value = [Literal] 0
# 4074|           ValueCategory = prvalue
# 4072|       getStmt(): [BlockStmt] { ... }
# 4073|         getStmt(0): [DeclStmt] declaration
# 4073|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x454
# 4073|               Type = [Struct] String
# 4073|             getVariable().getInitializer(): [Initializer] initializer for x454
# 4073|               getExpr(): [ConstructorCall] call to String
# 4073|                   Type = [VoidType] void
# 4073|                   ValueCategory = prvalue
# 4074|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4074|             Type = [VoidType] void
# 4074|             ValueCategory = prvalue
# 4074|           getQualifier(): [VariableAccess] x454
# 4074|               Type = [Struct] String
# 4074|               ValueCategory = lvalue
# 4074|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4074|           Conversion = [BoolConversion] conversion to bool
# 4074|           Type = [BoolType] bool
# 4074|           Value = [CStyleCast] 0
# 4074|           ValueCategory = prvalue
# 4075|     getStmt(455): [DoStmt] do (...) ...
# 4077|       getCondition(): [Literal] 0
# 4077|           Type = [IntType] int
# 4077|           Value = [Literal] 0
# 4077|           ValueCategory = prvalue
# 4075|       getStmt(): [BlockStmt] { ... }
# 4076|         getStmt(0): [DeclStmt] declaration
# 4076|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x455
# 4076|               Type = [Struct] String
# 4076|             getVariable().getInitializer(): [Initializer] initializer for x455
# 4076|               getExpr(): [ConstructorCall] call to String
# 4076|                   Type = [VoidType] void
# 4076|                   ValueCategory = prvalue
# 4077|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4077|             Type = [VoidType] void
# 4077|             ValueCategory = prvalue
# 4077|           getQualifier(): [VariableAccess] x455
# 4077|               Type = [Struct] String
# 4077|               ValueCategory = lvalue
# 4077|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4077|           Conversion = [BoolConversion] conversion to bool
# 4077|           Type = [BoolType] bool
# 4077|           Value = [CStyleCast] 0
# 4077|           ValueCategory = prvalue
# 4078|     getStmt(456): [DoStmt] do (...) ...
# 4080|       getCondition(): [Literal] 0
# 4080|           Type = [IntType] int
# 4080|           Value = [Literal] 0
# 4080|           ValueCategory = prvalue
# 4078|       getStmt(): [BlockStmt] { ... }
# 4079|         getStmt(0): [DeclStmt] declaration
# 4079|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x456
# 4079|               Type = [Struct] String
# 4079|             getVariable().getInitializer(): [Initializer] initializer for x456
# 4079|               getExpr(): [ConstructorCall] call to String
# 4079|                   Type = [VoidType] void
# 4079|                   ValueCategory = prvalue
# 4080|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4080|             Type = [VoidType] void
# 4080|             ValueCategory = prvalue
# 4080|           getQualifier(): [VariableAccess] x456
# 4080|               Type = [Struct] String
# 4080|               ValueCategory = lvalue
# 4080|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4080|           Conversion = [BoolConversion] conversion to bool
# 4080|           Type = [BoolType] bool
# 4080|           Value = [CStyleCast] 0
# 4080|           ValueCategory = prvalue
# 4081|     getStmt(457): [DoStmt] do (...) ...
# 4083|       getCondition(): [Literal] 0
# 4083|           Type = [IntType] int
# 4083|           Value = [Literal] 0
# 4083|           ValueCategory = prvalue
# 4081|       getStmt(): [BlockStmt] { ... }
# 4082|         getStmt(0): [DeclStmt] declaration
# 4082|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x457
# 4082|               Type = [Struct] String
# 4082|             getVariable().getInitializer(): [Initializer] initializer for x457
# 4082|               getExpr(): [ConstructorCall] call to String
# 4082|                   Type = [VoidType] void
# 4082|                   ValueCategory = prvalue
# 4083|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4083|             Type = [VoidType] void
# 4083|             ValueCategory = prvalue
# 4083|           getQualifier(): [VariableAccess] x457
# 4083|               Type = [Struct] String
# 4083|               ValueCategory = lvalue
# 4083|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4083|           Conversion = [BoolConversion] conversion to bool
# 4083|           Type = [BoolType] bool
# 4083|           Value = [CStyleCast] 0
# 4083|           ValueCategory = prvalue
# 4084|     getStmt(458): [DoStmt] do (...) ...
# 4086|       getCondition(): [Literal] 0
# 4086|           Type = [IntType] int
# 4086|           Value = [Literal] 0
# 4086|           ValueCategory = prvalue
# 4084|       getStmt(): [BlockStmt] { ... }
# 4085|         getStmt(0): [DeclStmt] declaration
# 4085|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x458
# 4085|               Type = [Struct] String
# 4085|             getVariable().getInitializer(): [Initializer] initializer for x458
# 4085|               getExpr(): [ConstructorCall] call to String
# 4085|                   Type = [VoidType] void
# 4085|                   ValueCategory = prvalue
# 4086|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4086|             Type = [VoidType] void
# 4086|             ValueCategory = prvalue
# 4086|           getQualifier(): [VariableAccess] x458
# 4086|               Type = [Struct] String
# 4086|               ValueCategory = lvalue
# 4086|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4086|           Conversion = [BoolConversion] conversion to bool
# 4086|           Type = [BoolType] bool
# 4086|           Value = [CStyleCast] 0
# 4086|           ValueCategory = prvalue
# 4087|     getStmt(459): [DoStmt] do (...) ...
# 4089|       getCondition(): [Literal] 0
# 4089|           Type = [IntType] int
# 4089|           Value = [Literal] 0
# 4089|           ValueCategory = prvalue
# 4087|       getStmt(): [BlockStmt] { ... }
# 4088|         getStmt(0): [DeclStmt] declaration
# 4088|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x459
# 4088|               Type = [Struct] String
# 4088|             getVariable().getInitializer(): [Initializer] initializer for x459
# 4088|               getExpr(): [ConstructorCall] call to String
# 4088|                   Type = [VoidType] void
# 4088|                   ValueCategory = prvalue
# 4089|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4089|             Type = [VoidType] void
# 4089|             ValueCategory = prvalue
# 4089|           getQualifier(): [VariableAccess] x459
# 4089|               Type = [Struct] String
# 4089|               ValueCategory = lvalue
# 4089|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4089|           Conversion = [BoolConversion] conversion to bool
# 4089|           Type = [BoolType] bool
# 4089|           Value = [CStyleCast] 0
# 4089|           ValueCategory = prvalue
# 4090|     getStmt(460): [DoStmt] do (...) ...
# 4092|       getCondition(): [Literal] 0
# 4092|           Type = [IntType] int
# 4092|           Value = [Literal] 0
# 4092|           ValueCategory = prvalue
# 4090|       getStmt(): [BlockStmt] { ... }
# 4091|         getStmt(0): [DeclStmt] declaration
# 4091|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x460
# 4091|               Type = [Struct] String
# 4091|             getVariable().getInitializer(): [Initializer] initializer for x460
# 4091|               getExpr(): [ConstructorCall] call to String
# 4091|                   Type = [VoidType] void
# 4091|                   ValueCategory = prvalue
# 4092|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4092|             Type = [VoidType] void
# 4092|             ValueCategory = prvalue
# 4092|           getQualifier(): [VariableAccess] x460
# 4092|               Type = [Struct] String
# 4092|               ValueCategory = lvalue
# 4092|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4092|           Conversion = [BoolConversion] conversion to bool
# 4092|           Type = [BoolType] bool
# 4092|           Value = [CStyleCast] 0
# 4092|           ValueCategory = prvalue
# 4093|     getStmt(461): [DoStmt] do (...) ...
# 4095|       getCondition(): [Literal] 0
# 4095|           Type = [IntType] int
# 4095|           Value = [Literal] 0
# 4095|           ValueCategory = prvalue
# 4093|       getStmt(): [BlockStmt] { ... }
# 4094|         getStmt(0): [DeclStmt] declaration
# 4094|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x461
# 4094|               Type = [Struct] String
# 4094|             getVariable().getInitializer(): [Initializer] initializer for x461
# 4094|               getExpr(): [ConstructorCall] call to String
# 4094|                   Type = [VoidType] void
# 4094|                   ValueCategory = prvalue
# 4095|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4095|             Type = [VoidType] void
# 4095|             ValueCategory = prvalue
# 4095|           getQualifier(): [VariableAccess] x461
# 4095|               Type = [Struct] String
# 4095|               ValueCategory = lvalue
# 4095|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4095|           Conversion = [BoolConversion] conversion to bool
# 4095|           Type = [BoolType] bool
# 4095|           Value = [CStyleCast] 0
# 4095|           ValueCategory = prvalue
# 4096|     getStmt(462): [DoStmt] do (...) ...
# 4098|       getCondition(): [Literal] 0
# 4098|           Type = [IntType] int
# 4098|           Value = [Literal] 0
# 4098|           ValueCategory = prvalue
# 4096|       getStmt(): [BlockStmt] { ... }
# 4097|         getStmt(0): [DeclStmt] declaration
# 4097|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x462
# 4097|               Type = [Struct] String
# 4097|             getVariable().getInitializer(): [Initializer] initializer for x462
# 4097|               getExpr(): [ConstructorCall] call to String
# 4097|                   Type = [VoidType] void
# 4097|                   ValueCategory = prvalue
# 4098|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4098|             Type = [VoidType] void
# 4098|             ValueCategory = prvalue
# 4098|           getQualifier(): [VariableAccess] x462
# 4098|               Type = [Struct] String
# 4098|               ValueCategory = lvalue
# 4098|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4098|           Conversion = [BoolConversion] conversion to bool
# 4098|           Type = [BoolType] bool
# 4098|           Value = [CStyleCast] 0
# 4098|           ValueCategory = prvalue
# 4099|     getStmt(463): [DoStmt] do (...) ...
# 4101|       getCondition(): [Literal] 0
# 4101|           Type = [IntType] int
# 4101|           Value = [Literal] 0
# 4101|           ValueCategory = prvalue
# 4099|       getStmt(): [BlockStmt] { ... }
# 4100|         getStmt(0): [DeclStmt] declaration
# 4100|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x463
# 4100|               Type = [Struct] String
# 4100|             getVariable().getInitializer(): [Initializer] initializer for x463
# 4100|               getExpr(): [ConstructorCall] call to String
# 4100|                   Type = [VoidType] void
# 4100|                   ValueCategory = prvalue
# 4101|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4101|             Type = [VoidType] void
# 4101|             ValueCategory = prvalue
# 4101|           getQualifier(): [VariableAccess] x463
# 4101|               Type = [Struct] String
# 4101|               ValueCategory = lvalue
# 4101|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4101|           Conversion = [BoolConversion] conversion to bool
# 4101|           Type = [BoolType] bool
# 4101|           Value = [CStyleCast] 0
# 4101|           ValueCategory = prvalue
# 4102|     getStmt(464): [DoStmt] do (...) ...
# 4104|       getCondition(): [Literal] 0
# 4104|           Type = [IntType] int
# 4104|           Value = [Literal] 0
# 4104|           ValueCategory = prvalue
# 4102|       getStmt(): [BlockStmt] { ... }
# 4103|         getStmt(0): [DeclStmt] declaration
# 4103|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x464
# 4103|               Type = [Struct] String
# 4103|             getVariable().getInitializer(): [Initializer] initializer for x464
# 4103|               getExpr(): [ConstructorCall] call to String
# 4103|                   Type = [VoidType] void
# 4103|                   ValueCategory = prvalue
# 4104|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4104|             Type = [VoidType] void
# 4104|             ValueCategory = prvalue
# 4104|           getQualifier(): [VariableAccess] x464
# 4104|               Type = [Struct] String
# 4104|               ValueCategory = lvalue
# 4104|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4104|           Conversion = [BoolConversion] conversion to bool
# 4104|           Type = [BoolType] bool
# 4104|           Value = [CStyleCast] 0
# 4104|           ValueCategory = prvalue
# 4105|     getStmt(465): [DoStmt] do (...) ...
# 4107|       getCondition(): [Literal] 0
# 4107|           Type = [IntType] int
# 4107|           Value = [Literal] 0
# 4107|           ValueCategory = prvalue
# 4105|       getStmt(): [BlockStmt] { ... }
# 4106|         getStmt(0): [DeclStmt] declaration
# 4106|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x465
# 4106|               Type = [Struct] String
# 4106|             getVariable().getInitializer(): [Initializer] initializer for x465
# 4106|               getExpr(): [ConstructorCall] call to String
# 4106|                   Type = [VoidType] void
# 4106|                   ValueCategory = prvalue
# 4107|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4107|             Type = [VoidType] void
# 4107|             ValueCategory = prvalue
# 4107|           getQualifier(): [VariableAccess] x465
# 4107|               Type = [Struct] String
# 4107|               ValueCategory = lvalue
# 4107|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4107|           Conversion = [BoolConversion] conversion to bool
# 4107|           Type = [BoolType] bool
# 4107|           Value = [CStyleCast] 0
# 4107|           ValueCategory = prvalue
# 4108|     getStmt(466): [DoStmt] do (...) ...
# 4110|       getCondition(): [Literal] 0
# 4110|           Type = [IntType] int
# 4110|           Value = [Literal] 0
# 4110|           ValueCategory = prvalue
# 4108|       getStmt(): [BlockStmt] { ... }
# 4109|         getStmt(0): [DeclStmt] declaration
# 4109|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x466
# 4109|               Type = [Struct] String
# 4109|             getVariable().getInitializer(): [Initializer] initializer for x466
# 4109|               getExpr(): [ConstructorCall] call to String
# 4109|                   Type = [VoidType] void
# 4109|                   ValueCategory = prvalue
# 4110|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4110|             Type = [VoidType] void
# 4110|             ValueCategory = prvalue
# 4110|           getQualifier(): [VariableAccess] x466
# 4110|               Type = [Struct] String
# 4110|               ValueCategory = lvalue
# 4110|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4110|           Conversion = [BoolConversion] conversion to bool
# 4110|           Type = [BoolType] bool
# 4110|           Value = [CStyleCast] 0
# 4110|           ValueCategory = prvalue
# 4111|     getStmt(467): [DoStmt] do (...) ...
# 4113|       getCondition(): [Literal] 0
# 4113|           Type = [IntType] int
# 4113|           Value = [Literal] 0
# 4113|           ValueCategory = prvalue
# 4111|       getStmt(): [BlockStmt] { ... }
# 4112|         getStmt(0): [DeclStmt] declaration
# 4112|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x467
# 4112|               Type = [Struct] String
# 4112|             getVariable().getInitializer(): [Initializer] initializer for x467
# 4112|               getExpr(): [ConstructorCall] call to String
# 4112|                   Type = [VoidType] void
# 4112|                   ValueCategory = prvalue
# 4113|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4113|             Type = [VoidType] void
# 4113|             ValueCategory = prvalue
# 4113|           getQualifier(): [VariableAccess] x467
# 4113|               Type = [Struct] String
# 4113|               ValueCategory = lvalue
# 4113|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4113|           Conversion = [BoolConversion] conversion to bool
# 4113|           Type = [BoolType] bool
# 4113|           Value = [CStyleCast] 0
# 4113|           ValueCategory = prvalue
# 4114|     getStmt(468): [DoStmt] do (...) ...
# 4116|       getCondition(): [Literal] 0
# 4116|           Type = [IntType] int
# 4116|           Value = [Literal] 0
# 4116|           ValueCategory = prvalue
# 4114|       getStmt(): [BlockStmt] { ... }
# 4115|         getStmt(0): [DeclStmt] declaration
# 4115|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x468
# 4115|               Type = [Struct] String
# 4115|             getVariable().getInitializer(): [Initializer] initializer for x468
# 4115|               getExpr(): [ConstructorCall] call to String
# 4115|                   Type = [VoidType] void
# 4115|                   ValueCategory = prvalue
# 4116|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4116|             Type = [VoidType] void
# 4116|             ValueCategory = prvalue
# 4116|           getQualifier(): [VariableAccess] x468
# 4116|               Type = [Struct] String
# 4116|               ValueCategory = lvalue
# 4116|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4116|           Conversion = [BoolConversion] conversion to bool
# 4116|           Type = [BoolType] bool
# 4116|           Value = [CStyleCast] 0
# 4116|           ValueCategory = prvalue
# 4117|     getStmt(469): [DoStmt] do (...) ...
# 4119|       getCondition(): [Literal] 0
# 4119|           Type = [IntType] int
# 4119|           Value = [Literal] 0
# 4119|           ValueCategory = prvalue
# 4117|       getStmt(): [BlockStmt] { ... }
# 4118|         getStmt(0): [DeclStmt] declaration
# 4118|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x469
# 4118|               Type = [Struct] String
# 4118|             getVariable().getInitializer(): [Initializer] initializer for x469
# 4118|               getExpr(): [ConstructorCall] call to String
# 4118|                   Type = [VoidType] void
# 4118|                   ValueCategory = prvalue
# 4119|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4119|             Type = [VoidType] void
# 4119|             ValueCategory = prvalue
# 4119|           getQualifier(): [VariableAccess] x469
# 4119|               Type = [Struct] String
# 4119|               ValueCategory = lvalue
# 4119|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4119|           Conversion = [BoolConversion] conversion to bool
# 4119|           Type = [BoolType] bool
# 4119|           Value = [CStyleCast] 0
# 4119|           ValueCategory = prvalue
# 4120|     getStmt(470): [DoStmt] do (...) ...
# 4122|       getCondition(): [Literal] 0
# 4122|           Type = [IntType] int
# 4122|           Value = [Literal] 0
# 4122|           ValueCategory = prvalue
# 4120|       getStmt(): [BlockStmt] { ... }
# 4121|         getStmt(0): [DeclStmt] declaration
# 4121|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x470
# 4121|               Type = [Struct] String
# 4121|             getVariable().getInitializer(): [Initializer] initializer for x470
# 4121|               getExpr(): [ConstructorCall] call to String
# 4121|                   Type = [VoidType] void
# 4121|                   ValueCategory = prvalue
# 4122|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4122|             Type = [VoidType] void
# 4122|             ValueCategory = prvalue
# 4122|           getQualifier(): [VariableAccess] x470
# 4122|               Type = [Struct] String
# 4122|               ValueCategory = lvalue
# 4122|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4122|           Conversion = [BoolConversion] conversion to bool
# 4122|           Type = [BoolType] bool
# 4122|           Value = [CStyleCast] 0
# 4122|           ValueCategory = prvalue
# 4123|     getStmt(471): [DoStmt] do (...) ...
# 4125|       getCondition(): [Literal] 0
# 4125|           Type = [IntType] int
# 4125|           Value = [Literal] 0
# 4125|           ValueCategory = prvalue
# 4123|       getStmt(): [BlockStmt] { ... }
# 4124|         getStmt(0): [DeclStmt] declaration
# 4124|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x471
# 4124|               Type = [Struct] String
# 4124|             getVariable().getInitializer(): [Initializer] initializer for x471
# 4124|               getExpr(): [ConstructorCall] call to String
# 4124|                   Type = [VoidType] void
# 4124|                   ValueCategory = prvalue
# 4125|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4125|             Type = [VoidType] void
# 4125|             ValueCategory = prvalue
# 4125|           getQualifier(): [VariableAccess] x471
# 4125|               Type = [Struct] String
# 4125|               ValueCategory = lvalue
# 4125|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4125|           Conversion = [BoolConversion] conversion to bool
# 4125|           Type = [BoolType] bool
# 4125|           Value = [CStyleCast] 0
# 4125|           ValueCategory = prvalue
# 4126|     getStmt(472): [DoStmt] do (...) ...
# 4128|       getCondition(): [Literal] 0
# 4128|           Type = [IntType] int
# 4128|           Value = [Literal] 0
# 4128|           ValueCategory = prvalue
# 4126|       getStmt(): [BlockStmt] { ... }
# 4127|         getStmt(0): [DeclStmt] declaration
# 4127|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x472
# 4127|               Type = [Struct] String
# 4127|             getVariable().getInitializer(): [Initializer] initializer for x472
# 4127|               getExpr(): [ConstructorCall] call to String
# 4127|                   Type = [VoidType] void
# 4127|                   ValueCategory = prvalue
# 4128|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4128|             Type = [VoidType] void
# 4128|             ValueCategory = prvalue
# 4128|           getQualifier(): [VariableAccess] x472
# 4128|               Type = [Struct] String
# 4128|               ValueCategory = lvalue
# 4128|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4128|           Conversion = [BoolConversion] conversion to bool
# 4128|           Type = [BoolType] bool
# 4128|           Value = [CStyleCast] 0
# 4128|           ValueCategory = prvalue
# 4129|     getStmt(473): [DoStmt] do (...) ...
# 4131|       getCondition(): [Literal] 0
# 4131|           Type = [IntType] int
# 4131|           Value = [Literal] 0
# 4131|           ValueCategory = prvalue
# 4129|       getStmt(): [BlockStmt] { ... }
# 4130|         getStmt(0): [DeclStmt] declaration
# 4130|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x473
# 4130|               Type = [Struct] String
# 4130|             getVariable().getInitializer(): [Initializer] initializer for x473
# 4130|               getExpr(): [ConstructorCall] call to String
# 4130|                   Type = [VoidType] void
# 4130|                   ValueCategory = prvalue
# 4131|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4131|             Type = [VoidType] void
# 4131|             ValueCategory = prvalue
# 4131|           getQualifier(): [VariableAccess] x473
# 4131|               Type = [Struct] String
# 4131|               ValueCategory = lvalue
# 4131|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4131|           Conversion = [BoolConversion] conversion to bool
# 4131|           Type = [BoolType] bool
# 4131|           Value = [CStyleCast] 0
# 4131|           ValueCategory = prvalue
# 4132|     getStmt(474): [DoStmt] do (...) ...
# 4134|       getCondition(): [Literal] 0
# 4134|           Type = [IntType] int
# 4134|           Value = [Literal] 0
# 4134|           ValueCategory = prvalue
# 4132|       getStmt(): [BlockStmt] { ... }
# 4133|         getStmt(0): [DeclStmt] declaration
# 4133|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x474
# 4133|               Type = [Struct] String
# 4133|             getVariable().getInitializer(): [Initializer] initializer for x474
# 4133|               getExpr(): [ConstructorCall] call to String
# 4133|                   Type = [VoidType] void
# 4133|                   ValueCategory = prvalue
# 4134|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4134|             Type = [VoidType] void
# 4134|             ValueCategory = prvalue
# 4134|           getQualifier(): [VariableAccess] x474
# 4134|               Type = [Struct] String
# 4134|               ValueCategory = lvalue
# 4134|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4134|           Conversion = [BoolConversion] conversion to bool
# 4134|           Type = [BoolType] bool
# 4134|           Value = [CStyleCast] 0
# 4134|           ValueCategory = prvalue
# 4135|     getStmt(475): [DoStmt] do (...) ...
# 4137|       getCondition(): [Literal] 0
# 4137|           Type = [IntType] int
# 4137|           Value = [Literal] 0
# 4137|           ValueCategory = prvalue
# 4135|       getStmt(): [BlockStmt] { ... }
# 4136|         getStmt(0): [DeclStmt] declaration
# 4136|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x475
# 4136|               Type = [Struct] String
# 4136|             getVariable().getInitializer(): [Initializer] initializer for x475
# 4136|               getExpr(): [ConstructorCall] call to String
# 4136|                   Type = [VoidType] void
# 4136|                   ValueCategory = prvalue
# 4137|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4137|             Type = [VoidType] void
# 4137|             ValueCategory = prvalue
# 4137|           getQualifier(): [VariableAccess] x475
# 4137|               Type = [Struct] String
# 4137|               ValueCategory = lvalue
# 4137|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4137|           Conversion = [BoolConversion] conversion to bool
# 4137|           Type = [BoolType] bool
# 4137|           Value = [CStyleCast] 0
# 4137|           ValueCategory = prvalue
# 4138|     getStmt(476): [DoStmt] do (...) ...
# 4140|       getCondition(): [Literal] 0
# 4140|           Type = [IntType] int
# 4140|           Value = [Literal] 0
# 4140|           ValueCategory = prvalue
# 4138|       getStmt(): [BlockStmt] { ... }
# 4139|         getStmt(0): [DeclStmt] declaration
# 4139|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x476
# 4139|               Type = [Struct] String
# 4139|             getVariable().getInitializer(): [Initializer] initializer for x476
# 4139|               getExpr(): [ConstructorCall] call to String
# 4139|                   Type = [VoidType] void
# 4139|                   ValueCategory = prvalue
# 4140|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4140|             Type = [VoidType] void
# 4140|             ValueCategory = prvalue
# 4140|           getQualifier(): [VariableAccess] x476
# 4140|               Type = [Struct] String
# 4140|               ValueCategory = lvalue
# 4140|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4140|           Conversion = [BoolConversion] conversion to bool
# 4140|           Type = [BoolType] bool
# 4140|           Value = [CStyleCast] 0
# 4140|           ValueCategory = prvalue
# 4141|     getStmt(477): [DoStmt] do (...) ...
# 4143|       getCondition(): [Literal] 0
# 4143|           Type = [IntType] int
# 4143|           Value = [Literal] 0
# 4143|           ValueCategory = prvalue
# 4141|       getStmt(): [BlockStmt] { ... }
# 4142|         getStmt(0): [DeclStmt] declaration
# 4142|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x477
# 4142|               Type = [Struct] String
# 4142|             getVariable().getInitializer(): [Initializer] initializer for x477
# 4142|               getExpr(): [ConstructorCall] call to String
# 4142|                   Type = [VoidType] void
# 4142|                   ValueCategory = prvalue
# 4143|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4143|             Type = [VoidType] void
# 4143|             ValueCategory = prvalue
# 4143|           getQualifier(): [VariableAccess] x477
# 4143|               Type = [Struct] String
# 4143|               ValueCategory = lvalue
# 4143|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4143|           Conversion = [BoolConversion] conversion to bool
# 4143|           Type = [BoolType] bool
# 4143|           Value = [CStyleCast] 0
# 4143|           ValueCategory = prvalue
# 4144|     getStmt(478): [DoStmt] do (...) ...
# 4146|       getCondition(): [Literal] 0
# 4146|           Type = [IntType] int
# 4146|           Value = [Literal] 0
# 4146|           ValueCategory = prvalue
# 4144|       getStmt(): [BlockStmt] { ... }
# 4145|         getStmt(0): [DeclStmt] declaration
# 4145|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x478
# 4145|               Type = [Struct] String
# 4145|             getVariable().getInitializer(): [Initializer] initializer for x478
# 4145|               getExpr(): [ConstructorCall] call to String
# 4145|                   Type = [VoidType] void
# 4145|                   ValueCategory = prvalue
# 4146|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4146|             Type = [VoidType] void
# 4146|             ValueCategory = prvalue
# 4146|           getQualifier(): [VariableAccess] x478
# 4146|               Type = [Struct] String
# 4146|               ValueCategory = lvalue
# 4146|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4146|           Conversion = [BoolConversion] conversion to bool
# 4146|           Type = [BoolType] bool
# 4146|           Value = [CStyleCast] 0
# 4146|           ValueCategory = prvalue
# 4147|     getStmt(479): [DoStmt] do (...) ...
# 4149|       getCondition(): [Literal] 0
# 4149|           Type = [IntType] int
# 4149|           Value = [Literal] 0
# 4149|           ValueCategory = prvalue
# 4147|       getStmt(): [BlockStmt] { ... }
# 4148|         getStmt(0): [DeclStmt] declaration
# 4148|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x479
# 4148|               Type = [Struct] String
# 4148|             getVariable().getInitializer(): [Initializer] initializer for x479
# 4148|               getExpr(): [ConstructorCall] call to String
# 4148|                   Type = [VoidType] void
# 4148|                   ValueCategory = prvalue
# 4149|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4149|             Type = [VoidType] void
# 4149|             ValueCategory = prvalue
# 4149|           getQualifier(): [VariableAccess] x479
# 4149|               Type = [Struct] String
# 4149|               ValueCategory = lvalue
# 4149|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4149|           Conversion = [BoolConversion] conversion to bool
# 4149|           Type = [BoolType] bool
# 4149|           Value = [CStyleCast] 0
# 4149|           ValueCategory = prvalue
# 4150|     getStmt(480): [DoStmt] do (...) ...
# 4152|       getCondition(): [Literal] 0
# 4152|           Type = [IntType] int
# 4152|           Value = [Literal] 0
# 4152|           ValueCategory = prvalue
# 4150|       getStmt(): [BlockStmt] { ... }
# 4151|         getStmt(0): [DeclStmt] declaration
# 4151|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x480
# 4151|               Type = [Struct] String
# 4151|             getVariable().getInitializer(): [Initializer] initializer for x480
# 4151|               getExpr(): [ConstructorCall] call to String
# 4151|                   Type = [VoidType] void
# 4151|                   ValueCategory = prvalue
# 4152|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4152|             Type = [VoidType] void
# 4152|             ValueCategory = prvalue
# 4152|           getQualifier(): [VariableAccess] x480
# 4152|               Type = [Struct] String
# 4152|               ValueCategory = lvalue
# 4152|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4152|           Conversion = [BoolConversion] conversion to bool
# 4152|           Type = [BoolType] bool
# 4152|           Value = [CStyleCast] 0
# 4152|           ValueCategory = prvalue
# 4153|     getStmt(481): [DoStmt] do (...) ...
# 4155|       getCondition(): [Literal] 0
# 4155|           Type = [IntType] int
# 4155|           Value = [Literal] 0
# 4155|           ValueCategory = prvalue
# 4153|       getStmt(): [BlockStmt] { ... }
# 4154|         getStmt(0): [DeclStmt] declaration
# 4154|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x481
# 4154|               Type = [Struct] String
# 4154|             getVariable().getInitializer(): [Initializer] initializer for x481
# 4154|               getExpr(): [ConstructorCall] call to String
# 4154|                   Type = [VoidType] void
# 4154|                   ValueCategory = prvalue
# 4155|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4155|             Type = [VoidType] void
# 4155|             ValueCategory = prvalue
# 4155|           getQualifier(): [VariableAccess] x481
# 4155|               Type = [Struct] String
# 4155|               ValueCategory = lvalue
# 4155|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4155|           Conversion = [BoolConversion] conversion to bool
# 4155|           Type = [BoolType] bool
# 4155|           Value = [CStyleCast] 0
# 4155|           ValueCategory = prvalue
# 4156|     getStmt(482): [DoStmt] do (...) ...
# 4158|       getCondition(): [Literal] 0
# 4158|           Type = [IntType] int
# 4158|           Value = [Literal] 0
# 4158|           ValueCategory = prvalue
# 4156|       getStmt(): [BlockStmt] { ... }
# 4157|         getStmt(0): [DeclStmt] declaration
# 4157|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x482
# 4157|               Type = [Struct] String
# 4157|             getVariable().getInitializer(): [Initializer] initializer for x482
# 4157|               getExpr(): [ConstructorCall] call to String
# 4157|                   Type = [VoidType] void
# 4157|                   ValueCategory = prvalue
# 4158|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4158|             Type = [VoidType] void
# 4158|             ValueCategory = prvalue
# 4158|           getQualifier(): [VariableAccess] x482
# 4158|               Type = [Struct] String
# 4158|               ValueCategory = lvalue
# 4158|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4158|           Conversion = [BoolConversion] conversion to bool
# 4158|           Type = [BoolType] bool
# 4158|           Value = [CStyleCast] 0
# 4158|           ValueCategory = prvalue
# 4159|     getStmt(483): [DoStmt] do (...) ...
# 4161|       getCondition(): [Literal] 0
# 4161|           Type = [IntType] int
# 4161|           Value = [Literal] 0
# 4161|           ValueCategory = prvalue
# 4159|       getStmt(): [BlockStmt] { ... }
# 4160|         getStmt(0): [DeclStmt] declaration
# 4160|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x483
# 4160|               Type = [Struct] String
# 4160|             getVariable().getInitializer(): [Initializer] initializer for x483
# 4160|               getExpr(): [ConstructorCall] call to String
# 4160|                   Type = [VoidType] void
# 4160|                   ValueCategory = prvalue
# 4161|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4161|             Type = [VoidType] void
# 4161|             ValueCategory = prvalue
# 4161|           getQualifier(): [VariableAccess] x483
# 4161|               Type = [Struct] String
# 4161|               ValueCategory = lvalue
# 4161|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4161|           Conversion = [BoolConversion] conversion to bool
# 4161|           Type = [BoolType] bool
# 4161|           Value = [CStyleCast] 0
# 4161|           ValueCategory = prvalue
# 4162|     getStmt(484): [DoStmt] do (...) ...
# 4164|       getCondition(): [Literal] 0
# 4164|           Type = [IntType] int
# 4164|           Value = [Literal] 0
# 4164|           ValueCategory = prvalue
# 4162|       getStmt(): [BlockStmt] { ... }
# 4163|         getStmt(0): [DeclStmt] declaration
# 4163|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x484
# 4163|               Type = [Struct] String
# 4163|             getVariable().getInitializer(): [Initializer] initializer for x484
# 4163|               getExpr(): [ConstructorCall] call to String
# 4163|                   Type = [VoidType] void
# 4163|                   ValueCategory = prvalue
# 4164|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4164|             Type = [VoidType] void
# 4164|             ValueCategory = prvalue
# 4164|           getQualifier(): [VariableAccess] x484
# 4164|               Type = [Struct] String
# 4164|               ValueCategory = lvalue
# 4164|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4164|           Conversion = [BoolConversion] conversion to bool
# 4164|           Type = [BoolType] bool
# 4164|           Value = [CStyleCast] 0
# 4164|           ValueCategory = prvalue
# 4165|     getStmt(485): [DoStmt] do (...) ...
# 4167|       getCondition(): [Literal] 0
# 4167|           Type = [IntType] int
# 4167|           Value = [Literal] 0
# 4167|           ValueCategory = prvalue
# 4165|       getStmt(): [BlockStmt] { ... }
# 4166|         getStmt(0): [DeclStmt] declaration
# 4166|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x485
# 4166|               Type = [Struct] String
# 4166|             getVariable().getInitializer(): [Initializer] initializer for x485
# 4166|               getExpr(): [ConstructorCall] call to String
# 4166|                   Type = [VoidType] void
# 4166|                   ValueCategory = prvalue
# 4167|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4167|             Type = [VoidType] void
# 4167|             ValueCategory = prvalue
# 4167|           getQualifier(): [VariableAccess] x485
# 4167|               Type = [Struct] String
# 4167|               ValueCategory = lvalue
# 4167|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4167|           Conversion = [BoolConversion] conversion to bool
# 4167|           Type = [BoolType] bool
# 4167|           Value = [CStyleCast] 0
# 4167|           ValueCategory = prvalue
# 4168|     getStmt(486): [DoStmt] do (...) ...
# 4170|       getCondition(): [Literal] 0
# 4170|           Type = [IntType] int
# 4170|           Value = [Literal] 0
# 4170|           ValueCategory = prvalue
# 4168|       getStmt(): [BlockStmt] { ... }
# 4169|         getStmt(0): [DeclStmt] declaration
# 4169|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x486
# 4169|               Type = [Struct] String
# 4169|             getVariable().getInitializer(): [Initializer] initializer for x486
# 4169|               getExpr(): [ConstructorCall] call to String
# 4169|                   Type = [VoidType] void
# 4169|                   ValueCategory = prvalue
# 4170|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4170|             Type = [VoidType] void
# 4170|             ValueCategory = prvalue
# 4170|           getQualifier(): [VariableAccess] x486
# 4170|               Type = [Struct] String
# 4170|               ValueCategory = lvalue
# 4170|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4170|           Conversion = [BoolConversion] conversion to bool
# 4170|           Type = [BoolType] bool
# 4170|           Value = [CStyleCast] 0
# 4170|           ValueCategory = prvalue
# 4171|     getStmt(487): [DoStmt] do (...) ...
# 4173|       getCondition(): [Literal] 0
# 4173|           Type = [IntType] int
# 4173|           Value = [Literal] 0
# 4173|           ValueCategory = prvalue
# 4171|       getStmt(): [BlockStmt] { ... }
# 4172|         getStmt(0): [DeclStmt] declaration
# 4172|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x487
# 4172|               Type = [Struct] String
# 4172|             getVariable().getInitializer(): [Initializer] initializer for x487
# 4172|               getExpr(): [ConstructorCall] call to String
# 4172|                   Type = [VoidType] void
# 4172|                   ValueCategory = prvalue
# 4173|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4173|             Type = [VoidType] void
# 4173|             ValueCategory = prvalue
# 4173|           getQualifier(): [VariableAccess] x487
# 4173|               Type = [Struct] String
# 4173|               ValueCategory = lvalue
# 4173|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4173|           Conversion = [BoolConversion] conversion to bool
# 4173|           Type = [BoolType] bool
# 4173|           Value = [CStyleCast] 0
# 4173|           ValueCategory = prvalue
# 4174|     getStmt(488): [DoStmt] do (...) ...
# 4176|       getCondition(): [Literal] 0
# 4176|           Type = [IntType] int
# 4176|           Value = [Literal] 0
# 4176|           ValueCategory = prvalue
# 4174|       getStmt(): [BlockStmt] { ... }
# 4175|         getStmt(0): [DeclStmt] declaration
# 4175|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x488
# 4175|               Type = [Struct] String
# 4175|             getVariable().getInitializer(): [Initializer] initializer for x488
# 4175|               getExpr(): [ConstructorCall] call to String
# 4175|                   Type = [VoidType] void
# 4175|                   ValueCategory = prvalue
# 4176|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4176|             Type = [VoidType] void
# 4176|             ValueCategory = prvalue
# 4176|           getQualifier(): [VariableAccess] x488
# 4176|               Type = [Struct] String
# 4176|               ValueCategory = lvalue
# 4176|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4176|           Conversion = [BoolConversion] conversion to bool
# 4176|           Type = [BoolType] bool
# 4176|           Value = [CStyleCast] 0
# 4176|           ValueCategory = prvalue
# 4177|     getStmt(489): [DoStmt] do (...) ...
# 4179|       getCondition(): [Literal] 0
# 4179|           Type = [IntType] int
# 4179|           Value = [Literal] 0
# 4179|           ValueCategory = prvalue
# 4177|       getStmt(): [BlockStmt] { ... }
# 4178|         getStmt(0): [DeclStmt] declaration
# 4178|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x489
# 4178|               Type = [Struct] String
# 4178|             getVariable().getInitializer(): [Initializer] initializer for x489
# 4178|               getExpr(): [ConstructorCall] call to String
# 4178|                   Type = [VoidType] void
# 4178|                   ValueCategory = prvalue
# 4179|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4179|             Type = [VoidType] void
# 4179|             ValueCategory = prvalue
# 4179|           getQualifier(): [VariableAccess] x489
# 4179|               Type = [Struct] String
# 4179|               ValueCategory = lvalue
# 4179|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4179|           Conversion = [BoolConversion] conversion to bool
# 4179|           Type = [BoolType] bool
# 4179|           Value = [CStyleCast] 0
# 4179|           ValueCategory = prvalue
# 4180|     getStmt(490): [DoStmt] do (...) ...
# 4182|       getCondition(): [Literal] 0
# 4182|           Type = [IntType] int
# 4182|           Value = [Literal] 0
# 4182|           ValueCategory = prvalue
# 4180|       getStmt(): [BlockStmt] { ... }
# 4181|         getStmt(0): [DeclStmt] declaration
# 4181|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x490
# 4181|               Type = [Struct] String
# 4181|             getVariable().getInitializer(): [Initializer] initializer for x490
# 4181|               getExpr(): [ConstructorCall] call to String
# 4181|                   Type = [VoidType] void
# 4181|                   ValueCategory = prvalue
# 4182|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4182|             Type = [VoidType] void
# 4182|             ValueCategory = prvalue
# 4182|           getQualifier(): [VariableAccess] x490
# 4182|               Type = [Struct] String
# 4182|               ValueCategory = lvalue
# 4182|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4182|           Conversion = [BoolConversion] conversion to bool
# 4182|           Type = [BoolType] bool
# 4182|           Value = [CStyleCast] 0
# 4182|           ValueCategory = prvalue
# 4183|     getStmt(491): [DoStmt] do (...) ...
# 4185|       getCondition(): [Literal] 0
# 4185|           Type = [IntType] int
# 4185|           Value = [Literal] 0
# 4185|           ValueCategory = prvalue
# 4183|       getStmt(): [BlockStmt] { ... }
# 4184|         getStmt(0): [DeclStmt] declaration
# 4184|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x491
# 4184|               Type = [Struct] String
# 4184|             getVariable().getInitializer(): [Initializer] initializer for x491
# 4184|               getExpr(): [ConstructorCall] call to String
# 4184|                   Type = [VoidType] void
# 4184|                   ValueCategory = prvalue
# 4185|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4185|             Type = [VoidType] void
# 4185|             ValueCategory = prvalue
# 4185|           getQualifier(): [VariableAccess] x491
# 4185|               Type = [Struct] String
# 4185|               ValueCategory = lvalue
# 4185|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4185|           Conversion = [BoolConversion] conversion to bool
# 4185|           Type = [BoolType] bool
# 4185|           Value = [CStyleCast] 0
# 4185|           ValueCategory = prvalue
# 4186|     getStmt(492): [DoStmt] do (...) ...
# 4188|       getCondition(): [Literal] 0
# 4188|           Type = [IntType] int
# 4188|           Value = [Literal] 0
# 4188|           ValueCategory = prvalue
# 4186|       getStmt(): [BlockStmt] { ... }
# 4187|         getStmt(0): [DeclStmt] declaration
# 4187|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x492
# 4187|               Type = [Struct] String
# 4187|             getVariable().getInitializer(): [Initializer] initializer for x492
# 4187|               getExpr(): [ConstructorCall] call to String
# 4187|                   Type = [VoidType] void
# 4187|                   ValueCategory = prvalue
# 4188|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4188|             Type = [VoidType] void
# 4188|             ValueCategory = prvalue
# 4188|           getQualifier(): [VariableAccess] x492
# 4188|               Type = [Struct] String
# 4188|               ValueCategory = lvalue
# 4188|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4188|           Conversion = [BoolConversion] conversion to bool
# 4188|           Type = [BoolType] bool
# 4188|           Value = [CStyleCast] 0
# 4188|           ValueCategory = prvalue
# 4189|     getStmt(493): [DoStmt] do (...) ...
# 4191|       getCondition(): [Literal] 0
# 4191|           Type = [IntType] int
# 4191|           Value = [Literal] 0
# 4191|           ValueCategory = prvalue
# 4189|       getStmt(): [BlockStmt] { ... }
# 4190|         getStmt(0): [DeclStmt] declaration
# 4190|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x493
# 4190|               Type = [Struct] String
# 4190|             getVariable().getInitializer(): [Initializer] initializer for x493
# 4190|               getExpr(): [ConstructorCall] call to String
# 4190|                   Type = [VoidType] void
# 4190|                   ValueCategory = prvalue
# 4191|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4191|             Type = [VoidType] void
# 4191|             ValueCategory = prvalue
# 4191|           getQualifier(): [VariableAccess] x493
# 4191|               Type = [Struct] String
# 4191|               ValueCategory = lvalue
# 4191|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4191|           Conversion = [BoolConversion] conversion to bool
# 4191|           Type = [BoolType] bool
# 4191|           Value = [CStyleCast] 0
# 4191|           ValueCategory = prvalue
# 4192|     getStmt(494): [DoStmt] do (...) ...
# 4194|       getCondition(): [Literal] 0
# 4194|           Type = [IntType] int
# 4194|           Value = [Literal] 0
# 4194|           ValueCategory = prvalue
# 4192|       getStmt(): [BlockStmt] { ... }
# 4193|         getStmt(0): [DeclStmt] declaration
# 4193|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x494
# 4193|               Type = [Struct] String
# 4193|             getVariable().getInitializer(): [Initializer] initializer for x494
# 4193|               getExpr(): [ConstructorCall] call to String
# 4193|                   Type = [VoidType] void
# 4193|                   ValueCategory = prvalue
# 4194|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4194|             Type = [VoidType] void
# 4194|             ValueCategory = prvalue
# 4194|           getQualifier(): [VariableAccess] x494
# 4194|               Type = [Struct] String
# 4194|               ValueCategory = lvalue
# 4194|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4194|           Conversion = [BoolConversion] conversion to bool
# 4194|           Type = [BoolType] bool
# 4194|           Value = [CStyleCast] 0
# 4194|           ValueCategory = prvalue
# 4195|     getStmt(495): [DoStmt] do (...) ...
# 4197|       getCondition(): [Literal] 0
# 4197|           Type = [IntType] int
# 4197|           Value = [Literal] 0
# 4197|           ValueCategory = prvalue
# 4195|       getStmt(): [BlockStmt] { ... }
# 4196|         getStmt(0): [DeclStmt] declaration
# 4196|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x495
# 4196|               Type = [Struct] String
# 4196|             getVariable().getInitializer(): [Initializer] initializer for x495
# 4196|               getExpr(): [ConstructorCall] call to String
# 4196|                   Type = [VoidType] void
# 4196|                   ValueCategory = prvalue
# 4197|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4197|             Type = [VoidType] void
# 4197|             ValueCategory = prvalue
# 4197|           getQualifier(): [VariableAccess] x495
# 4197|               Type = [Struct] String
# 4197|               ValueCategory = lvalue
# 4197|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4197|           Conversion = [BoolConversion] conversion to bool
# 4197|           Type = [BoolType] bool
# 4197|           Value = [CStyleCast] 0
# 4197|           ValueCategory = prvalue
# 4198|     getStmt(496): [DoStmt] do (...) ...
# 4200|       getCondition(): [Literal] 0
# 4200|           Type = [IntType] int
# 4200|           Value = [Literal] 0
# 4200|           ValueCategory = prvalue
# 4198|       getStmt(): [BlockStmt] { ... }
# 4199|         getStmt(0): [DeclStmt] declaration
# 4199|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x496
# 4199|               Type = [Struct] String
# 4199|             getVariable().getInitializer(): [Initializer] initializer for x496
# 4199|               getExpr(): [ConstructorCall] call to String
# 4199|                   Type = [VoidType] void
# 4199|                   ValueCategory = prvalue
# 4200|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4200|             Type = [VoidType] void
# 4200|             ValueCategory = prvalue
# 4200|           getQualifier(): [VariableAccess] x496
# 4200|               Type = [Struct] String
# 4200|               ValueCategory = lvalue
# 4200|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4200|           Conversion = [BoolConversion] conversion to bool
# 4200|           Type = [BoolType] bool
# 4200|           Value = [CStyleCast] 0
# 4200|           ValueCategory = prvalue
# 4201|     getStmt(497): [DoStmt] do (...) ...
# 4203|       getCondition(): [Literal] 0
# 4203|           Type = [IntType] int
# 4203|           Value = [Literal] 0
# 4203|           ValueCategory = prvalue
# 4201|       getStmt(): [BlockStmt] { ... }
# 4202|         getStmt(0): [DeclStmt] declaration
# 4202|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x497
# 4202|               Type = [Struct] String
# 4202|             getVariable().getInitializer(): [Initializer] initializer for x497
# 4202|               getExpr(): [ConstructorCall] call to String
# 4202|                   Type = [VoidType] void
# 4202|                   ValueCategory = prvalue
# 4203|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4203|             Type = [VoidType] void
# 4203|             ValueCategory = prvalue
# 4203|           getQualifier(): [VariableAccess] x497
# 4203|               Type = [Struct] String
# 4203|               ValueCategory = lvalue
# 4203|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4203|           Conversion = [BoolConversion] conversion to bool
# 4203|           Type = [BoolType] bool
# 4203|           Value = [CStyleCast] 0
# 4203|           ValueCategory = prvalue
# 4204|     getStmt(498): [DoStmt] do (...) ...
# 4206|       getCondition(): [Literal] 0
# 4206|           Type = [IntType] int
# 4206|           Value = [Literal] 0
# 4206|           ValueCategory = prvalue
# 4204|       getStmt(): [BlockStmt] { ... }
# 4205|         getStmt(0): [DeclStmt] declaration
# 4205|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x498
# 4205|               Type = [Struct] String
# 4205|             getVariable().getInitializer(): [Initializer] initializer for x498
# 4205|               getExpr(): [ConstructorCall] call to String
# 4205|                   Type = [VoidType] void
# 4205|                   ValueCategory = prvalue
# 4206|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4206|             Type = [VoidType] void
# 4206|             ValueCategory = prvalue
# 4206|           getQualifier(): [VariableAccess] x498
# 4206|               Type = [Struct] String
# 4206|               ValueCategory = lvalue
# 4206|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4206|           Conversion = [BoolConversion] conversion to bool
# 4206|           Type = [BoolType] bool
# 4206|           Value = [CStyleCast] 0
# 4206|           ValueCategory = prvalue
# 4207|     getStmt(499): [DoStmt] do (...) ...
# 4209|       getCondition(): [Literal] 0
# 4209|           Type = [IntType] int
# 4209|           Value = [Literal] 0
# 4209|           ValueCategory = prvalue
# 4207|       getStmt(): [BlockStmt] { ... }
# 4208|         getStmt(0): [DeclStmt] declaration
# 4208|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x499
# 4208|               Type = [Struct] String
# 4208|             getVariable().getInitializer(): [Initializer] initializer for x499
# 4208|               getExpr(): [ConstructorCall] call to String
# 4208|                   Type = [VoidType] void
# 4208|                   ValueCategory = prvalue
# 4209|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4209|             Type = [VoidType] void
# 4209|             ValueCategory = prvalue
# 4209|           getQualifier(): [VariableAccess] x499
# 4209|               Type = [Struct] String
# 4209|               ValueCategory = lvalue
# 4209|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4209|           Conversion = [BoolConversion] conversion to bool
# 4209|           Type = [BoolType] bool
# 4209|           Value = [CStyleCast] 0
# 4209|           ValueCategory = prvalue
# 4210|     getStmt(500): [DoStmt] do (...) ...
# 4212|       getCondition(): [Literal] 0
# 4212|           Type = [IntType] int
# 4212|           Value = [Literal] 0
# 4212|           ValueCategory = prvalue
# 4210|       getStmt(): [BlockStmt] { ... }
# 4211|         getStmt(0): [DeclStmt] declaration
# 4211|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x500
# 4211|               Type = [Struct] String
# 4211|             getVariable().getInitializer(): [Initializer] initializer for x500
# 4211|               getExpr(): [ConstructorCall] call to String
# 4211|                   Type = [VoidType] void
# 4211|                   ValueCategory = prvalue
# 4212|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4212|             Type = [VoidType] void
# 4212|             ValueCategory = prvalue
# 4212|           getQualifier(): [VariableAccess] x500
# 4212|               Type = [Struct] String
# 4212|               ValueCategory = lvalue
# 4212|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4212|           Conversion = [BoolConversion] conversion to bool
# 4212|           Type = [BoolType] bool
# 4212|           Value = [CStyleCast] 0
# 4212|           ValueCategory = prvalue
# 4213|     getStmt(501): [DoStmt] do (...) ...
# 4215|       getCondition(): [Literal] 0
# 4215|           Type = [IntType] int
# 4215|           Value = [Literal] 0
# 4215|           ValueCategory = prvalue
# 4213|       getStmt(): [BlockStmt] { ... }
# 4214|         getStmt(0): [DeclStmt] declaration
# 4214|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x501
# 4214|               Type = [Struct] String
# 4214|             getVariable().getInitializer(): [Initializer] initializer for x501
# 4214|               getExpr(): [ConstructorCall] call to String
# 4214|                   Type = [VoidType] void
# 4214|                   ValueCategory = prvalue
# 4215|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4215|             Type = [VoidType] void
# 4215|             ValueCategory = prvalue
# 4215|           getQualifier(): [VariableAccess] x501
# 4215|               Type = [Struct] String
# 4215|               ValueCategory = lvalue
# 4215|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4215|           Conversion = [BoolConversion] conversion to bool
# 4215|           Type = [BoolType] bool
# 4215|           Value = [CStyleCast] 0
# 4215|           ValueCategory = prvalue
# 4216|     getStmt(502): [DoStmt] do (...) ...
# 4218|       getCondition(): [Literal] 0
# 4218|           Type = [IntType] int
# 4218|           Value = [Literal] 0
# 4218|           ValueCategory = prvalue
# 4216|       getStmt(): [BlockStmt] { ... }
# 4217|         getStmt(0): [DeclStmt] declaration
# 4217|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x502
# 4217|               Type = [Struct] String
# 4217|             getVariable().getInitializer(): [Initializer] initializer for x502
# 4217|               getExpr(): [ConstructorCall] call to String
# 4217|                   Type = [VoidType] void
# 4217|                   ValueCategory = prvalue
# 4218|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4218|             Type = [VoidType] void
# 4218|             ValueCategory = prvalue
# 4218|           getQualifier(): [VariableAccess] x502
# 4218|               Type = [Struct] String
# 4218|               ValueCategory = lvalue
# 4218|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4218|           Conversion = [BoolConversion] conversion to bool
# 4218|           Type = [BoolType] bool
# 4218|           Value = [CStyleCast] 0
# 4218|           ValueCategory = prvalue
# 4219|     getStmt(503): [DoStmt] do (...) ...
# 4221|       getCondition(): [Literal] 0
# 4221|           Type = [IntType] int
# 4221|           Value = [Literal] 0
# 4221|           ValueCategory = prvalue
# 4219|       getStmt(): [BlockStmt] { ... }
# 4220|         getStmt(0): [DeclStmt] declaration
# 4220|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x503
# 4220|               Type = [Struct] String
# 4220|             getVariable().getInitializer(): [Initializer] initializer for x503
# 4220|               getExpr(): [ConstructorCall] call to String
# 4220|                   Type = [VoidType] void
# 4220|                   ValueCategory = prvalue
# 4221|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4221|             Type = [VoidType] void
# 4221|             ValueCategory = prvalue
# 4221|           getQualifier(): [VariableAccess] x503
# 4221|               Type = [Struct] String
# 4221|               ValueCategory = lvalue
# 4221|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4221|           Conversion = [BoolConversion] conversion to bool
# 4221|           Type = [BoolType] bool
# 4221|           Value = [CStyleCast] 0
# 4221|           ValueCategory = prvalue
# 4222|     getStmt(504): [DoStmt] do (...) ...
# 4224|       getCondition(): [Literal] 0
# 4224|           Type = [IntType] int
# 4224|           Value = [Literal] 0
# 4224|           ValueCategory = prvalue
# 4222|       getStmt(): [BlockStmt] { ... }
# 4223|         getStmt(0): [DeclStmt] declaration
# 4223|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x504
# 4223|               Type = [Struct] String
# 4223|             getVariable().getInitializer(): [Initializer] initializer for x504
# 4223|               getExpr(): [ConstructorCall] call to String
# 4223|                   Type = [VoidType] void
# 4223|                   ValueCategory = prvalue
# 4224|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4224|             Type = [VoidType] void
# 4224|             ValueCategory = prvalue
# 4224|           getQualifier(): [VariableAccess] x504
# 4224|               Type = [Struct] String
# 4224|               ValueCategory = lvalue
# 4224|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4224|           Conversion = [BoolConversion] conversion to bool
# 4224|           Type = [BoolType] bool
# 4224|           Value = [CStyleCast] 0
# 4224|           ValueCategory = prvalue
# 4225|     getStmt(505): [DoStmt] do (...) ...
# 4227|       getCondition(): [Literal] 0
# 4227|           Type = [IntType] int
# 4227|           Value = [Literal] 0
# 4227|           ValueCategory = prvalue
# 4225|       getStmt(): [BlockStmt] { ... }
# 4226|         getStmt(0): [DeclStmt] declaration
# 4226|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x505
# 4226|               Type = [Struct] String
# 4226|             getVariable().getInitializer(): [Initializer] initializer for x505
# 4226|               getExpr(): [ConstructorCall] call to String
# 4226|                   Type = [VoidType] void
# 4226|                   ValueCategory = prvalue
# 4227|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4227|             Type = [VoidType] void
# 4227|             ValueCategory = prvalue
# 4227|           getQualifier(): [VariableAccess] x505
# 4227|               Type = [Struct] String
# 4227|               ValueCategory = lvalue
# 4227|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4227|           Conversion = [BoolConversion] conversion to bool
# 4227|           Type = [BoolType] bool
# 4227|           Value = [CStyleCast] 0
# 4227|           ValueCategory = prvalue
# 4228|     getStmt(506): [DoStmt] do (...) ...
# 4230|       getCondition(): [Literal] 0
# 4230|           Type = [IntType] int
# 4230|           Value = [Literal] 0
# 4230|           ValueCategory = prvalue
# 4228|       getStmt(): [BlockStmt] { ... }
# 4229|         getStmt(0): [DeclStmt] declaration
# 4229|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x506
# 4229|               Type = [Struct] String
# 4229|             getVariable().getInitializer(): [Initializer] initializer for x506
# 4229|               getExpr(): [ConstructorCall] call to String
# 4229|                   Type = [VoidType] void
# 4229|                   ValueCategory = prvalue
# 4230|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4230|             Type = [VoidType] void
# 4230|             ValueCategory = prvalue
# 4230|           getQualifier(): [VariableAccess] x506
# 4230|               Type = [Struct] String
# 4230|               ValueCategory = lvalue
# 4230|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4230|           Conversion = [BoolConversion] conversion to bool
# 4230|           Type = [BoolType] bool
# 4230|           Value = [CStyleCast] 0
# 4230|           ValueCategory = prvalue
# 4231|     getStmt(507): [DoStmt] do (...) ...
# 4233|       getCondition(): [Literal] 0
# 4233|           Type = [IntType] int
# 4233|           Value = [Literal] 0
# 4233|           ValueCategory = prvalue
# 4231|       getStmt(): [BlockStmt] { ... }
# 4232|         getStmt(0): [DeclStmt] declaration
# 4232|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x507
# 4232|               Type = [Struct] String
# 4232|             getVariable().getInitializer(): [Initializer] initializer for x507
# 4232|               getExpr(): [ConstructorCall] call to String
# 4232|                   Type = [VoidType] void
# 4232|                   ValueCategory = prvalue
# 4233|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4233|             Type = [VoidType] void
# 4233|             ValueCategory = prvalue
# 4233|           getQualifier(): [VariableAccess] x507
# 4233|               Type = [Struct] String
# 4233|               ValueCategory = lvalue
# 4233|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4233|           Conversion = [BoolConversion] conversion to bool
# 4233|           Type = [BoolType] bool
# 4233|           Value = [CStyleCast] 0
# 4233|           ValueCategory = prvalue
# 4234|     getStmt(508): [DoStmt] do (...) ...
# 4236|       getCondition(): [Literal] 0
# 4236|           Type = [IntType] int
# 4236|           Value = [Literal] 0
# 4236|           ValueCategory = prvalue
# 4234|       getStmt(): [BlockStmt] { ... }
# 4235|         getStmt(0): [DeclStmt] declaration
# 4235|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x508
# 4235|               Type = [Struct] String
# 4235|             getVariable().getInitializer(): [Initializer] initializer for x508
# 4235|               getExpr(): [ConstructorCall] call to String
# 4235|                   Type = [VoidType] void
# 4235|                   ValueCategory = prvalue
# 4236|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4236|             Type = [VoidType] void
# 4236|             ValueCategory = prvalue
# 4236|           getQualifier(): [VariableAccess] x508
# 4236|               Type = [Struct] String
# 4236|               ValueCategory = lvalue
# 4236|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4236|           Conversion = [BoolConversion] conversion to bool
# 4236|           Type = [BoolType] bool
# 4236|           Value = [CStyleCast] 0
# 4236|           ValueCategory = prvalue
# 4237|     getStmt(509): [DoStmt] do (...) ...
# 4239|       getCondition(): [Literal] 0
# 4239|           Type = [IntType] int
# 4239|           Value = [Literal] 0
# 4239|           ValueCategory = prvalue
# 4237|       getStmt(): [BlockStmt] { ... }
# 4238|         getStmt(0): [DeclStmt] declaration
# 4238|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x509
# 4238|               Type = [Struct] String
# 4238|             getVariable().getInitializer(): [Initializer] initializer for x509
# 4238|               getExpr(): [ConstructorCall] call to String
# 4238|                   Type = [VoidType] void
# 4238|                   ValueCategory = prvalue
# 4239|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4239|             Type = [VoidType] void
# 4239|             ValueCategory = prvalue
# 4239|           getQualifier(): [VariableAccess] x509
# 4239|               Type = [Struct] String
# 4239|               ValueCategory = lvalue
# 4239|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4239|           Conversion = [BoolConversion] conversion to bool
# 4239|           Type = [BoolType] bool
# 4239|           Value = [CStyleCast] 0
# 4239|           ValueCategory = prvalue
# 4240|     getStmt(510): [DoStmt] do (...) ...
# 4242|       getCondition(): [Literal] 0
# 4242|           Type = [IntType] int
# 4242|           Value = [Literal] 0
# 4242|           ValueCategory = prvalue
# 4240|       getStmt(): [BlockStmt] { ... }
# 4241|         getStmt(0): [DeclStmt] declaration
# 4241|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x510
# 4241|               Type = [Struct] String
# 4241|             getVariable().getInitializer(): [Initializer] initializer for x510
# 4241|               getExpr(): [ConstructorCall] call to String
# 4241|                   Type = [VoidType] void
# 4241|                   ValueCategory = prvalue
# 4242|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4242|             Type = [VoidType] void
# 4242|             ValueCategory = prvalue
# 4242|           getQualifier(): [VariableAccess] x510
# 4242|               Type = [Struct] String
# 4242|               ValueCategory = lvalue
# 4242|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4242|           Conversion = [BoolConversion] conversion to bool
# 4242|           Type = [BoolType] bool
# 4242|           Value = [CStyleCast] 0
# 4242|           ValueCategory = prvalue
# 4243|     getStmt(511): [DoStmt] do (...) ...
# 4245|       getCondition(): [Literal] 0
# 4245|           Type = [IntType] int
# 4245|           Value = [Literal] 0
# 4245|           ValueCategory = prvalue
# 4243|       getStmt(): [BlockStmt] { ... }
# 4244|         getStmt(0): [DeclStmt] declaration
# 4244|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x511
# 4244|               Type = [Struct] String
# 4244|             getVariable().getInitializer(): [Initializer] initializer for x511
# 4244|               getExpr(): [ConstructorCall] call to String
# 4244|                   Type = [VoidType] void
# 4244|                   ValueCategory = prvalue
# 4245|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4245|             Type = [VoidType] void
# 4245|             ValueCategory = prvalue
# 4245|           getQualifier(): [VariableAccess] x511
# 4245|               Type = [Struct] String
# 4245|               ValueCategory = lvalue
# 4245|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4245|           Conversion = [BoolConversion] conversion to bool
# 4245|           Type = [BoolType] bool
# 4245|           Value = [CStyleCast] 0
# 4245|           ValueCategory = prvalue
# 4246|     getStmt(512): [DoStmt] do (...) ...
# 4248|       getCondition(): [Literal] 0
# 4248|           Type = [IntType] int
# 4248|           Value = [Literal] 0
# 4248|           ValueCategory = prvalue
# 4246|       getStmt(): [BlockStmt] { ... }
# 4247|         getStmt(0): [DeclStmt] declaration
# 4247|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x512
# 4247|               Type = [Struct] String
# 4247|             getVariable().getInitializer(): [Initializer] initializer for x512
# 4247|               getExpr(): [ConstructorCall] call to String
# 4247|                   Type = [VoidType] void
# 4247|                   ValueCategory = prvalue
# 4248|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4248|             Type = [VoidType] void
# 4248|             ValueCategory = prvalue
# 4248|           getQualifier(): [VariableAccess] x512
# 4248|               Type = [Struct] String
# 4248|               ValueCategory = lvalue
# 4248|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4248|           Conversion = [BoolConversion] conversion to bool
# 4248|           Type = [BoolType] bool
# 4248|           Value = [CStyleCast] 0
# 4248|           ValueCategory = prvalue
# 4249|     getStmt(513): [DoStmt] do (...) ...
# 4251|       getCondition(): [Literal] 0
# 4251|           Type = [IntType] int
# 4251|           Value = [Literal] 0
# 4251|           ValueCategory = prvalue
# 4249|       getStmt(): [BlockStmt] { ... }
# 4250|         getStmt(0): [DeclStmt] declaration
# 4250|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x513
# 4250|               Type = [Struct] String
# 4250|             getVariable().getInitializer(): [Initializer] initializer for x513
# 4250|               getExpr(): [ConstructorCall] call to String
# 4250|                   Type = [VoidType] void
# 4250|                   ValueCategory = prvalue
# 4251|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4251|             Type = [VoidType] void
# 4251|             ValueCategory = prvalue
# 4251|           getQualifier(): [VariableAccess] x513
# 4251|               Type = [Struct] String
# 4251|               ValueCategory = lvalue
# 4251|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4251|           Conversion = [BoolConversion] conversion to bool
# 4251|           Type = [BoolType] bool
# 4251|           Value = [CStyleCast] 0
# 4251|           ValueCategory = prvalue
# 4252|     getStmt(514): [DoStmt] do (...) ...
# 4254|       getCondition(): [Literal] 0
# 4254|           Type = [IntType] int
# 4254|           Value = [Literal] 0
# 4254|           ValueCategory = prvalue
# 4252|       getStmt(): [BlockStmt] { ... }
# 4253|         getStmt(0): [DeclStmt] declaration
# 4253|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x514
# 4253|               Type = [Struct] String
# 4253|             getVariable().getInitializer(): [Initializer] initializer for x514
# 4253|               getExpr(): [ConstructorCall] call to String
# 4253|                   Type = [VoidType] void
# 4253|                   ValueCategory = prvalue
# 4254|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4254|             Type = [VoidType] void
# 4254|             ValueCategory = prvalue
# 4254|           getQualifier(): [VariableAccess] x514
# 4254|               Type = [Struct] String
# 4254|               ValueCategory = lvalue
# 4254|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4254|           Conversion = [BoolConversion] conversion to bool
# 4254|           Type = [BoolType] bool
# 4254|           Value = [CStyleCast] 0
# 4254|           ValueCategory = prvalue
# 4255|     getStmt(515): [DoStmt] do (...) ...
# 4257|       getCondition(): [Literal] 0
# 4257|           Type = [IntType] int
# 4257|           Value = [Literal] 0
# 4257|           ValueCategory = prvalue
# 4255|       getStmt(): [BlockStmt] { ... }
# 4256|         getStmt(0): [DeclStmt] declaration
# 4256|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x515
# 4256|               Type = [Struct] String
# 4256|             getVariable().getInitializer(): [Initializer] initializer for x515
# 4256|               getExpr(): [ConstructorCall] call to String
# 4256|                   Type = [VoidType] void
# 4256|                   ValueCategory = prvalue
# 4257|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4257|             Type = [VoidType] void
# 4257|             ValueCategory = prvalue
# 4257|           getQualifier(): [VariableAccess] x515
# 4257|               Type = [Struct] String
# 4257|               ValueCategory = lvalue
# 4257|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4257|           Conversion = [BoolConversion] conversion to bool
# 4257|           Type = [BoolType] bool
# 4257|           Value = [CStyleCast] 0
# 4257|           ValueCategory = prvalue
# 4258|     getStmt(516): [DoStmt] do (...) ...
# 4260|       getCondition(): [Literal] 0
# 4260|           Type = [IntType] int
# 4260|           Value = [Literal] 0
# 4260|           ValueCategory = prvalue
# 4258|       getStmt(): [BlockStmt] { ... }
# 4259|         getStmt(0): [DeclStmt] declaration
# 4259|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x516
# 4259|               Type = [Struct] String
# 4259|             getVariable().getInitializer(): [Initializer] initializer for x516
# 4259|               getExpr(): [ConstructorCall] call to String
# 4259|                   Type = [VoidType] void
# 4259|                   ValueCategory = prvalue
# 4260|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4260|             Type = [VoidType] void
# 4260|             ValueCategory = prvalue
# 4260|           getQualifier(): [VariableAccess] x516
# 4260|               Type = [Struct] String
# 4260|               ValueCategory = lvalue
# 4260|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4260|           Conversion = [BoolConversion] conversion to bool
# 4260|           Type = [BoolType] bool
# 4260|           Value = [CStyleCast] 0
# 4260|           ValueCategory = prvalue
# 4261|     getStmt(517): [DoStmt] do (...) ...
# 4263|       getCondition(): [Literal] 0
# 4263|           Type = [IntType] int
# 4263|           Value = [Literal] 0
# 4263|           ValueCategory = prvalue
# 4261|       getStmt(): [BlockStmt] { ... }
# 4262|         getStmt(0): [DeclStmt] declaration
# 4262|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x517
# 4262|               Type = [Struct] String
# 4262|             getVariable().getInitializer(): [Initializer] initializer for x517
# 4262|               getExpr(): [ConstructorCall] call to String
# 4262|                   Type = [VoidType] void
# 4262|                   ValueCategory = prvalue
# 4263|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4263|             Type = [VoidType] void
# 4263|             ValueCategory = prvalue
# 4263|           getQualifier(): [VariableAccess] x517
# 4263|               Type = [Struct] String
# 4263|               ValueCategory = lvalue
# 4263|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4263|           Conversion = [BoolConversion] conversion to bool
# 4263|           Type = [BoolType] bool
# 4263|           Value = [CStyleCast] 0
# 4263|           ValueCategory = prvalue
# 4264|     getStmt(518): [DoStmt] do (...) ...
# 4266|       getCondition(): [Literal] 0
# 4266|           Type = [IntType] int
# 4266|           Value = [Literal] 0
# 4266|           ValueCategory = prvalue
# 4264|       getStmt(): [BlockStmt] { ... }
# 4265|         getStmt(0): [DeclStmt] declaration
# 4265|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x518
# 4265|               Type = [Struct] String
# 4265|             getVariable().getInitializer(): [Initializer] initializer for x518
# 4265|               getExpr(): [ConstructorCall] call to String
# 4265|                   Type = [VoidType] void
# 4265|                   ValueCategory = prvalue
# 4266|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4266|             Type = [VoidType] void
# 4266|             ValueCategory = prvalue
# 4266|           getQualifier(): [VariableAccess] x518
# 4266|               Type = [Struct] String
# 4266|               ValueCategory = lvalue
# 4266|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4266|           Conversion = [BoolConversion] conversion to bool
# 4266|           Type = [BoolType] bool
# 4266|           Value = [CStyleCast] 0
# 4266|           ValueCategory = prvalue
# 4267|     getStmt(519): [DoStmt] do (...) ...
# 4269|       getCondition(): [Literal] 0
# 4269|           Type = [IntType] int
# 4269|           Value = [Literal] 0
# 4269|           ValueCategory = prvalue
# 4267|       getStmt(): [BlockStmt] { ... }
# 4268|         getStmt(0): [DeclStmt] declaration
# 4268|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x519
# 4268|               Type = [Struct] String
# 4268|             getVariable().getInitializer(): [Initializer] initializer for x519
# 4268|               getExpr(): [ConstructorCall] call to String
# 4268|                   Type = [VoidType] void
# 4268|                   ValueCategory = prvalue
# 4269|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4269|             Type = [VoidType] void
# 4269|             ValueCategory = prvalue
# 4269|           getQualifier(): [VariableAccess] x519
# 4269|               Type = [Struct] String
# 4269|               ValueCategory = lvalue
# 4269|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4269|           Conversion = [BoolConversion] conversion to bool
# 4269|           Type = [BoolType] bool
# 4269|           Value = [CStyleCast] 0
# 4269|           ValueCategory = prvalue
# 4270|     getStmt(520): [DoStmt] do (...) ...
# 4272|       getCondition(): [Literal] 0
# 4272|           Type = [IntType] int
# 4272|           Value = [Literal] 0
# 4272|           ValueCategory = prvalue
# 4270|       getStmt(): [BlockStmt] { ... }
# 4271|         getStmt(0): [DeclStmt] declaration
# 4271|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x520
# 4271|               Type = [Struct] String
# 4271|             getVariable().getInitializer(): [Initializer] initializer for x520
# 4271|               getExpr(): [ConstructorCall] call to String
# 4271|                   Type = [VoidType] void
# 4271|                   ValueCategory = prvalue
# 4272|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4272|             Type = [VoidType] void
# 4272|             ValueCategory = prvalue
# 4272|           getQualifier(): [VariableAccess] x520
# 4272|               Type = [Struct] String
# 4272|               ValueCategory = lvalue
# 4272|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4272|           Conversion = [BoolConversion] conversion to bool
# 4272|           Type = [BoolType] bool
# 4272|           Value = [CStyleCast] 0
# 4272|           ValueCategory = prvalue
# 4273|     getStmt(521): [DoStmt] do (...) ...
# 4275|       getCondition(): [Literal] 0
# 4275|           Type = [IntType] int
# 4275|           Value = [Literal] 0
# 4275|           ValueCategory = prvalue
# 4273|       getStmt(): [BlockStmt] { ... }
# 4274|         getStmt(0): [DeclStmt] declaration
# 4274|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x521
# 4274|               Type = [Struct] String
# 4274|             getVariable().getInitializer(): [Initializer] initializer for x521
# 4274|               getExpr(): [ConstructorCall] call to String
# 4274|                   Type = [VoidType] void
# 4274|                   ValueCategory = prvalue
# 4275|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4275|             Type = [VoidType] void
# 4275|             ValueCategory = prvalue
# 4275|           getQualifier(): [VariableAccess] x521
# 4275|               Type = [Struct] String
# 4275|               ValueCategory = lvalue
# 4275|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4275|           Conversion = [BoolConversion] conversion to bool
# 4275|           Type = [BoolType] bool
# 4275|           Value = [CStyleCast] 0
# 4275|           ValueCategory = prvalue
# 4276|     getStmt(522): [DoStmt] do (...) ...
# 4278|       getCondition(): [Literal] 0
# 4278|           Type = [IntType] int
# 4278|           Value = [Literal] 0
# 4278|           ValueCategory = prvalue
# 4276|       getStmt(): [BlockStmt] { ... }
# 4277|         getStmt(0): [DeclStmt] declaration
# 4277|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x522
# 4277|               Type = [Struct] String
# 4277|             getVariable().getInitializer(): [Initializer] initializer for x522
# 4277|               getExpr(): [ConstructorCall] call to String
# 4277|                   Type = [VoidType] void
# 4277|                   ValueCategory = prvalue
# 4278|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4278|             Type = [VoidType] void
# 4278|             ValueCategory = prvalue
# 4278|           getQualifier(): [VariableAccess] x522
# 4278|               Type = [Struct] String
# 4278|               ValueCategory = lvalue
# 4278|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4278|           Conversion = [BoolConversion] conversion to bool
# 4278|           Type = [BoolType] bool
# 4278|           Value = [CStyleCast] 0
# 4278|           ValueCategory = prvalue
# 4279|     getStmt(523): [DoStmt] do (...) ...
# 4281|       getCondition(): [Literal] 0
# 4281|           Type = [IntType] int
# 4281|           Value = [Literal] 0
# 4281|           ValueCategory = prvalue
# 4279|       getStmt(): [BlockStmt] { ... }
# 4280|         getStmt(0): [DeclStmt] declaration
# 4280|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x523
# 4280|               Type = [Struct] String
# 4280|             getVariable().getInitializer(): [Initializer] initializer for x523
# 4280|               getExpr(): [ConstructorCall] call to String
# 4280|                   Type = [VoidType] void
# 4280|                   ValueCategory = prvalue
# 4281|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4281|             Type = [VoidType] void
# 4281|             ValueCategory = prvalue
# 4281|           getQualifier(): [VariableAccess] x523
# 4281|               Type = [Struct] String
# 4281|               ValueCategory = lvalue
# 4281|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4281|           Conversion = [BoolConversion] conversion to bool
# 4281|           Type = [BoolType] bool
# 4281|           Value = [CStyleCast] 0
# 4281|           ValueCategory = prvalue
# 4282|     getStmt(524): [DoStmt] do (...) ...
# 4284|       getCondition(): [Literal] 0
# 4284|           Type = [IntType] int
# 4284|           Value = [Literal] 0
# 4284|           ValueCategory = prvalue
# 4282|       getStmt(): [BlockStmt] { ... }
# 4283|         getStmt(0): [DeclStmt] declaration
# 4283|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x524
# 4283|               Type = [Struct] String
# 4283|             getVariable().getInitializer(): [Initializer] initializer for x524
# 4283|               getExpr(): [ConstructorCall] call to String
# 4283|                   Type = [VoidType] void
# 4283|                   ValueCategory = prvalue
# 4284|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4284|             Type = [VoidType] void
# 4284|             ValueCategory = prvalue
# 4284|           getQualifier(): [VariableAccess] x524
# 4284|               Type = [Struct] String
# 4284|               ValueCategory = lvalue
# 4284|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4284|           Conversion = [BoolConversion] conversion to bool
# 4284|           Type = [BoolType] bool
# 4284|           Value = [CStyleCast] 0
# 4284|           ValueCategory = prvalue
# 4285|     getStmt(525): [DoStmt] do (...) ...
# 4287|       getCondition(): [Literal] 0
# 4287|           Type = [IntType] int
# 4287|           Value = [Literal] 0
# 4287|           ValueCategory = prvalue
# 4285|       getStmt(): [BlockStmt] { ... }
# 4286|         getStmt(0): [DeclStmt] declaration
# 4286|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x525
# 4286|               Type = [Struct] String
# 4286|             getVariable().getInitializer(): [Initializer] initializer for x525
# 4286|               getExpr(): [ConstructorCall] call to String
# 4286|                   Type = [VoidType] void
# 4286|                   ValueCategory = prvalue
# 4287|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4287|             Type = [VoidType] void
# 4287|             ValueCategory = prvalue
# 4287|           getQualifier(): [VariableAccess] x525
# 4287|               Type = [Struct] String
# 4287|               ValueCategory = lvalue
# 4287|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4287|           Conversion = [BoolConversion] conversion to bool
# 4287|           Type = [BoolType] bool
# 4287|           Value = [CStyleCast] 0
# 4287|           ValueCategory = prvalue
# 4288|     getStmt(526): [DoStmt] do (...) ...
# 4290|       getCondition(): [Literal] 0
# 4290|           Type = [IntType] int
# 4290|           Value = [Literal] 0
# 4290|           ValueCategory = prvalue
# 4288|       getStmt(): [BlockStmt] { ... }
# 4289|         getStmt(0): [DeclStmt] declaration
# 4289|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x526
# 4289|               Type = [Struct] String
# 4289|             getVariable().getInitializer(): [Initializer] initializer for x526
# 4289|               getExpr(): [ConstructorCall] call to String
# 4289|                   Type = [VoidType] void
# 4289|                   ValueCategory = prvalue
# 4290|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4290|             Type = [VoidType] void
# 4290|             ValueCategory = prvalue
# 4290|           getQualifier(): [VariableAccess] x526
# 4290|               Type = [Struct] String
# 4290|               ValueCategory = lvalue
# 4290|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4290|           Conversion = [BoolConversion] conversion to bool
# 4290|           Type = [BoolType] bool
# 4290|           Value = [CStyleCast] 0
# 4290|           ValueCategory = prvalue
# 4291|     getStmt(527): [DoStmt] do (...) ...
# 4293|       getCondition(): [Literal] 0
# 4293|           Type = [IntType] int
# 4293|           Value = [Literal] 0
# 4293|           ValueCategory = prvalue
# 4291|       getStmt(): [BlockStmt] { ... }
# 4292|         getStmt(0): [DeclStmt] declaration
# 4292|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x527
# 4292|               Type = [Struct] String
# 4292|             getVariable().getInitializer(): [Initializer] initializer for x527
# 4292|               getExpr(): [ConstructorCall] call to String
# 4292|                   Type = [VoidType] void
# 4292|                   ValueCategory = prvalue
# 4293|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4293|             Type = [VoidType] void
# 4293|             ValueCategory = prvalue
# 4293|           getQualifier(): [VariableAccess] x527
# 4293|               Type = [Struct] String
# 4293|               ValueCategory = lvalue
# 4293|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4293|           Conversion = [BoolConversion] conversion to bool
# 4293|           Type = [BoolType] bool
# 4293|           Value = [CStyleCast] 0
# 4293|           ValueCategory = prvalue
# 4294|     getStmt(528): [DoStmt] do (...) ...
# 4296|       getCondition(): [Literal] 0
# 4296|           Type = [IntType] int
# 4296|           Value = [Literal] 0
# 4296|           ValueCategory = prvalue
# 4294|       getStmt(): [BlockStmt] { ... }
# 4295|         getStmt(0): [DeclStmt] declaration
# 4295|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x528
# 4295|               Type = [Struct] String
# 4295|             getVariable().getInitializer(): [Initializer] initializer for x528
# 4295|               getExpr(): [ConstructorCall] call to String
# 4295|                   Type = [VoidType] void
# 4295|                   ValueCategory = prvalue
# 4296|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4296|             Type = [VoidType] void
# 4296|             ValueCategory = prvalue
# 4296|           getQualifier(): [VariableAccess] x528
# 4296|               Type = [Struct] String
# 4296|               ValueCategory = lvalue
# 4296|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4296|           Conversion = [BoolConversion] conversion to bool
# 4296|           Type = [BoolType] bool
# 4296|           Value = [CStyleCast] 0
# 4296|           ValueCategory = prvalue
# 4297|     getStmt(529): [DoStmt] do (...) ...
# 4299|       getCondition(): [Literal] 0
# 4299|           Type = [IntType] int
# 4299|           Value = [Literal] 0
# 4299|           ValueCategory = prvalue
# 4297|       getStmt(): [BlockStmt] { ... }
# 4298|         getStmt(0): [DeclStmt] declaration
# 4298|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x529
# 4298|               Type = [Struct] String
# 4298|             getVariable().getInitializer(): [Initializer] initializer for x529
# 4298|               getExpr(): [ConstructorCall] call to String
# 4298|                   Type = [VoidType] void
# 4298|                   ValueCategory = prvalue
# 4299|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4299|             Type = [VoidType] void
# 4299|             ValueCategory = prvalue
# 4299|           getQualifier(): [VariableAccess] x529
# 4299|               Type = [Struct] String
# 4299|               ValueCategory = lvalue
# 4299|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4299|           Conversion = [BoolConversion] conversion to bool
# 4299|           Type = [BoolType] bool
# 4299|           Value = [CStyleCast] 0
# 4299|           ValueCategory = prvalue
# 4300|     getStmt(530): [DoStmt] do (...) ...
# 4302|       getCondition(): [Literal] 0
# 4302|           Type = [IntType] int
# 4302|           Value = [Literal] 0
# 4302|           ValueCategory = prvalue
# 4300|       getStmt(): [BlockStmt] { ... }
# 4301|         getStmt(0): [DeclStmt] declaration
# 4301|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x530
# 4301|               Type = [Struct] String
# 4301|             getVariable().getInitializer(): [Initializer] initializer for x530
# 4301|               getExpr(): [ConstructorCall] call to String
# 4301|                   Type = [VoidType] void
# 4301|                   ValueCategory = prvalue
# 4302|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4302|             Type = [VoidType] void
# 4302|             ValueCategory = prvalue
# 4302|           getQualifier(): [VariableAccess] x530
# 4302|               Type = [Struct] String
# 4302|               ValueCategory = lvalue
# 4302|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4302|           Conversion = [BoolConversion] conversion to bool
# 4302|           Type = [BoolType] bool
# 4302|           Value = [CStyleCast] 0
# 4302|           ValueCategory = prvalue
# 4303|     getStmt(531): [DoStmt] do (...) ...
# 4305|       getCondition(): [Literal] 0
# 4305|           Type = [IntType] int
# 4305|           Value = [Literal] 0
# 4305|           ValueCategory = prvalue
# 4303|       getStmt(): [BlockStmt] { ... }
# 4304|         getStmt(0): [DeclStmt] declaration
# 4304|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x531
# 4304|               Type = [Struct] String
# 4304|             getVariable().getInitializer(): [Initializer] initializer for x531
# 4304|               getExpr(): [ConstructorCall] call to String
# 4304|                   Type = [VoidType] void
# 4304|                   ValueCategory = prvalue
# 4305|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4305|             Type = [VoidType] void
# 4305|             ValueCategory = prvalue
# 4305|           getQualifier(): [VariableAccess] x531
# 4305|               Type = [Struct] String
# 4305|               ValueCategory = lvalue
# 4305|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4305|           Conversion = [BoolConversion] conversion to bool
# 4305|           Type = [BoolType] bool
# 4305|           Value = [CStyleCast] 0
# 4305|           ValueCategory = prvalue
# 4306|     getStmt(532): [DoStmt] do (...) ...
# 4308|       getCondition(): [Literal] 0
# 4308|           Type = [IntType] int
# 4308|           Value = [Literal] 0
# 4308|           ValueCategory = prvalue
# 4306|       getStmt(): [BlockStmt] { ... }
# 4307|         getStmt(0): [DeclStmt] declaration
# 4307|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x532
# 4307|               Type = [Struct] String
# 4307|             getVariable().getInitializer(): [Initializer] initializer for x532
# 4307|               getExpr(): [ConstructorCall] call to String
# 4307|                   Type = [VoidType] void
# 4307|                   ValueCategory = prvalue
# 4308|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4308|             Type = [VoidType] void
# 4308|             ValueCategory = prvalue
# 4308|           getQualifier(): [VariableAccess] x532
# 4308|               Type = [Struct] String
# 4308|               ValueCategory = lvalue
# 4308|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4308|           Conversion = [BoolConversion] conversion to bool
# 4308|           Type = [BoolType] bool
# 4308|           Value = [CStyleCast] 0
# 4308|           ValueCategory = prvalue
# 4309|     getStmt(533): [DoStmt] do (...) ...
# 4311|       getCondition(): [Literal] 0
# 4311|           Type = [IntType] int
# 4311|           Value = [Literal] 0
# 4311|           ValueCategory = prvalue
# 4309|       getStmt(): [BlockStmt] { ... }
# 4310|         getStmt(0): [DeclStmt] declaration
# 4310|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x533
# 4310|               Type = [Struct] String
# 4310|             getVariable().getInitializer(): [Initializer] initializer for x533
# 4310|               getExpr(): [ConstructorCall] call to String
# 4310|                   Type = [VoidType] void
# 4310|                   ValueCategory = prvalue
# 4311|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4311|             Type = [VoidType] void
# 4311|             ValueCategory = prvalue
# 4311|           getQualifier(): [VariableAccess] x533
# 4311|               Type = [Struct] String
# 4311|               ValueCategory = lvalue
# 4311|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4311|           Conversion = [BoolConversion] conversion to bool
# 4311|           Type = [BoolType] bool
# 4311|           Value = [CStyleCast] 0
# 4311|           ValueCategory = prvalue
# 4312|     getStmt(534): [DoStmt] do (...) ...
# 4314|       getCondition(): [Literal] 0
# 4314|           Type = [IntType] int
# 4314|           Value = [Literal] 0
# 4314|           ValueCategory = prvalue
# 4312|       getStmt(): [BlockStmt] { ... }
# 4313|         getStmt(0): [DeclStmt] declaration
# 4313|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x534
# 4313|               Type = [Struct] String
# 4313|             getVariable().getInitializer(): [Initializer] initializer for x534
# 4313|               getExpr(): [ConstructorCall] call to String
# 4313|                   Type = [VoidType] void
# 4313|                   ValueCategory = prvalue
# 4314|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4314|             Type = [VoidType] void
# 4314|             ValueCategory = prvalue
# 4314|           getQualifier(): [VariableAccess] x534
# 4314|               Type = [Struct] String
# 4314|               ValueCategory = lvalue
# 4314|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4314|           Conversion = [BoolConversion] conversion to bool
# 4314|           Type = [BoolType] bool
# 4314|           Value = [CStyleCast] 0
# 4314|           ValueCategory = prvalue
# 4315|     getStmt(535): [DoStmt] do (...) ...
# 4317|       getCondition(): [Literal] 0
# 4317|           Type = [IntType] int
# 4317|           Value = [Literal] 0
# 4317|           ValueCategory = prvalue
# 4315|       getStmt(): [BlockStmt] { ... }
# 4316|         getStmt(0): [DeclStmt] declaration
# 4316|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x535
# 4316|               Type = [Struct] String
# 4316|             getVariable().getInitializer(): [Initializer] initializer for x535
# 4316|               getExpr(): [ConstructorCall] call to String
# 4316|                   Type = [VoidType] void
# 4316|                   ValueCategory = prvalue
# 4317|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4317|             Type = [VoidType] void
# 4317|             ValueCategory = prvalue
# 4317|           getQualifier(): [VariableAccess] x535
# 4317|               Type = [Struct] String
# 4317|               ValueCategory = lvalue
# 4317|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4317|           Conversion = [BoolConversion] conversion to bool
# 4317|           Type = [BoolType] bool
# 4317|           Value = [CStyleCast] 0
# 4317|           ValueCategory = prvalue
# 4318|     getStmt(536): [DoStmt] do (...) ...
# 4320|       getCondition(): [Literal] 0
# 4320|           Type = [IntType] int
# 4320|           Value = [Literal] 0
# 4320|           ValueCategory = prvalue
# 4318|       getStmt(): [BlockStmt] { ... }
# 4319|         getStmt(0): [DeclStmt] declaration
# 4319|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x536
# 4319|               Type = [Struct] String
# 4319|             getVariable().getInitializer(): [Initializer] initializer for x536
# 4319|               getExpr(): [ConstructorCall] call to String
# 4319|                   Type = [VoidType] void
# 4319|                   ValueCategory = prvalue
# 4320|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4320|             Type = [VoidType] void
# 4320|             ValueCategory = prvalue
# 4320|           getQualifier(): [VariableAccess] x536
# 4320|               Type = [Struct] String
# 4320|               ValueCategory = lvalue
# 4320|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4320|           Conversion = [BoolConversion] conversion to bool
# 4320|           Type = [BoolType] bool
# 4320|           Value = [CStyleCast] 0
# 4320|           ValueCategory = prvalue
# 4321|     getStmt(537): [DoStmt] do (...) ...
# 4323|       getCondition(): [Literal] 0
# 4323|           Type = [IntType] int
# 4323|           Value = [Literal] 0
# 4323|           ValueCategory = prvalue
# 4321|       getStmt(): [BlockStmt] { ... }
# 4322|         getStmt(0): [DeclStmt] declaration
# 4322|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x537
# 4322|               Type = [Struct] String
# 4322|             getVariable().getInitializer(): [Initializer] initializer for x537
# 4322|               getExpr(): [ConstructorCall] call to String
# 4322|                   Type = [VoidType] void
# 4322|                   ValueCategory = prvalue
# 4323|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4323|             Type = [VoidType] void
# 4323|             ValueCategory = prvalue
# 4323|           getQualifier(): [VariableAccess] x537
# 4323|               Type = [Struct] String
# 4323|               ValueCategory = lvalue
# 4323|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4323|           Conversion = [BoolConversion] conversion to bool
# 4323|           Type = [BoolType] bool
# 4323|           Value = [CStyleCast] 0
# 4323|           ValueCategory = prvalue
# 4324|     getStmt(538): [DoStmt] do (...) ...
# 4326|       getCondition(): [Literal] 0
# 4326|           Type = [IntType] int
# 4326|           Value = [Literal] 0
# 4326|           ValueCategory = prvalue
# 4324|       getStmt(): [BlockStmt] { ... }
# 4325|         getStmt(0): [DeclStmt] declaration
# 4325|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x538
# 4325|               Type = [Struct] String
# 4325|             getVariable().getInitializer(): [Initializer] initializer for x538
# 4325|               getExpr(): [ConstructorCall] call to String
# 4325|                   Type = [VoidType] void
# 4325|                   ValueCategory = prvalue
# 4326|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4326|             Type = [VoidType] void
# 4326|             ValueCategory = prvalue
# 4326|           getQualifier(): [VariableAccess] x538
# 4326|               Type = [Struct] String
# 4326|               ValueCategory = lvalue
# 4326|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4326|           Conversion = [BoolConversion] conversion to bool
# 4326|           Type = [BoolType] bool
# 4326|           Value = [CStyleCast] 0
# 4326|           ValueCategory = prvalue
# 4327|     getStmt(539): [DoStmt] do (...) ...
# 4329|       getCondition(): [Literal] 0
# 4329|           Type = [IntType] int
# 4329|           Value = [Literal] 0
# 4329|           ValueCategory = prvalue
# 4327|       getStmt(): [BlockStmt] { ... }
# 4328|         getStmt(0): [DeclStmt] declaration
# 4328|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x539
# 4328|               Type = [Struct] String
# 4328|             getVariable().getInitializer(): [Initializer] initializer for x539
# 4328|               getExpr(): [ConstructorCall] call to String
# 4328|                   Type = [VoidType] void
# 4328|                   ValueCategory = prvalue
# 4329|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4329|             Type = [VoidType] void
# 4329|             ValueCategory = prvalue
# 4329|           getQualifier(): [VariableAccess] x539
# 4329|               Type = [Struct] String
# 4329|               ValueCategory = lvalue
# 4329|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4329|           Conversion = [BoolConversion] conversion to bool
# 4329|           Type = [BoolType] bool
# 4329|           Value = [CStyleCast] 0
# 4329|           ValueCategory = prvalue
# 4330|     getStmt(540): [DoStmt] do (...) ...
# 4332|       getCondition(): [Literal] 0
# 4332|           Type = [IntType] int
# 4332|           Value = [Literal] 0
# 4332|           ValueCategory = prvalue
# 4330|       getStmt(): [BlockStmt] { ... }
# 4331|         getStmt(0): [DeclStmt] declaration
# 4331|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x540
# 4331|               Type = [Struct] String
# 4331|             getVariable().getInitializer(): [Initializer] initializer for x540
# 4331|               getExpr(): [ConstructorCall] call to String
# 4331|                   Type = [VoidType] void
# 4331|                   ValueCategory = prvalue
# 4332|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4332|             Type = [VoidType] void
# 4332|             ValueCategory = prvalue
# 4332|           getQualifier(): [VariableAccess] x540
# 4332|               Type = [Struct] String
# 4332|               ValueCategory = lvalue
# 4332|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4332|           Conversion = [BoolConversion] conversion to bool
# 4332|           Type = [BoolType] bool
# 4332|           Value = [CStyleCast] 0
# 4332|           ValueCategory = prvalue
# 4333|     getStmt(541): [DoStmt] do (...) ...
# 4335|       getCondition(): [Literal] 0
# 4335|           Type = [IntType] int
# 4335|           Value = [Literal] 0
# 4335|           ValueCategory = prvalue
# 4333|       getStmt(): [BlockStmt] { ... }
# 4334|         getStmt(0): [DeclStmt] declaration
# 4334|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x541
# 4334|               Type = [Struct] String
# 4334|             getVariable().getInitializer(): [Initializer] initializer for x541
# 4334|               getExpr(): [ConstructorCall] call to String
# 4334|                   Type = [VoidType] void
# 4334|                   ValueCategory = prvalue
# 4335|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4335|             Type = [VoidType] void
# 4335|             ValueCategory = prvalue
# 4335|           getQualifier(): [VariableAccess] x541
# 4335|               Type = [Struct] String
# 4335|               ValueCategory = lvalue
# 4335|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4335|           Conversion = [BoolConversion] conversion to bool
# 4335|           Type = [BoolType] bool
# 4335|           Value = [CStyleCast] 0
# 4335|           ValueCategory = prvalue
# 4336|     getStmt(542): [DoStmt] do (...) ...
# 4338|       getCondition(): [Literal] 0
# 4338|           Type = [IntType] int
# 4338|           Value = [Literal] 0
# 4338|           ValueCategory = prvalue
# 4336|       getStmt(): [BlockStmt] { ... }
# 4337|         getStmt(0): [DeclStmt] declaration
# 4337|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x542
# 4337|               Type = [Struct] String
# 4337|             getVariable().getInitializer(): [Initializer] initializer for x542
# 4337|               getExpr(): [ConstructorCall] call to String
# 4337|                   Type = [VoidType] void
# 4337|                   ValueCategory = prvalue
# 4338|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4338|             Type = [VoidType] void
# 4338|             ValueCategory = prvalue
# 4338|           getQualifier(): [VariableAccess] x542
# 4338|               Type = [Struct] String
# 4338|               ValueCategory = lvalue
# 4338|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4338|           Conversion = [BoolConversion] conversion to bool
# 4338|           Type = [BoolType] bool
# 4338|           Value = [CStyleCast] 0
# 4338|           ValueCategory = prvalue
# 4339|     getStmt(543): [DoStmt] do (...) ...
# 4341|       getCondition(): [Literal] 0
# 4341|           Type = [IntType] int
# 4341|           Value = [Literal] 0
# 4341|           ValueCategory = prvalue
# 4339|       getStmt(): [BlockStmt] { ... }
# 4340|         getStmt(0): [DeclStmt] declaration
# 4340|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x543
# 4340|               Type = [Struct] String
# 4340|             getVariable().getInitializer(): [Initializer] initializer for x543
# 4340|               getExpr(): [ConstructorCall] call to String
# 4340|                   Type = [VoidType] void
# 4340|                   ValueCategory = prvalue
# 4341|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4341|             Type = [VoidType] void
# 4341|             ValueCategory = prvalue
# 4341|           getQualifier(): [VariableAccess] x543
# 4341|               Type = [Struct] String
# 4341|               ValueCategory = lvalue
# 4341|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4341|           Conversion = [BoolConversion] conversion to bool
# 4341|           Type = [BoolType] bool
# 4341|           Value = [CStyleCast] 0
# 4341|           ValueCategory = prvalue
# 4342|     getStmt(544): [DoStmt] do (...) ...
# 4344|       getCondition(): [Literal] 0
# 4344|           Type = [IntType] int
# 4344|           Value = [Literal] 0
# 4344|           ValueCategory = prvalue
# 4342|       getStmt(): [BlockStmt] { ... }
# 4343|         getStmt(0): [DeclStmt] declaration
# 4343|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x544
# 4343|               Type = [Struct] String
# 4343|             getVariable().getInitializer(): [Initializer] initializer for x544
# 4343|               getExpr(): [ConstructorCall] call to String
# 4343|                   Type = [VoidType] void
# 4343|                   ValueCategory = prvalue
# 4344|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4344|             Type = [VoidType] void
# 4344|             ValueCategory = prvalue
# 4344|           getQualifier(): [VariableAccess] x544
# 4344|               Type = [Struct] String
# 4344|               ValueCategory = lvalue
# 4344|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4344|           Conversion = [BoolConversion] conversion to bool
# 4344|           Type = [BoolType] bool
# 4344|           Value = [CStyleCast] 0
# 4344|           ValueCategory = prvalue
# 4345|     getStmt(545): [DoStmt] do (...) ...
# 4347|       getCondition(): [Literal] 0
# 4347|           Type = [IntType] int
# 4347|           Value = [Literal] 0
# 4347|           ValueCategory = prvalue
# 4345|       getStmt(): [BlockStmt] { ... }
# 4346|         getStmt(0): [DeclStmt] declaration
# 4346|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x545
# 4346|               Type = [Struct] String
# 4346|             getVariable().getInitializer(): [Initializer] initializer for x545
# 4346|               getExpr(): [ConstructorCall] call to String
# 4346|                   Type = [VoidType] void
# 4346|                   ValueCategory = prvalue
# 4347|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4347|             Type = [VoidType] void
# 4347|             ValueCategory = prvalue
# 4347|           getQualifier(): [VariableAccess] x545
# 4347|               Type = [Struct] String
# 4347|               ValueCategory = lvalue
# 4347|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4347|           Conversion = [BoolConversion] conversion to bool
# 4347|           Type = [BoolType] bool
# 4347|           Value = [CStyleCast] 0
# 4347|           ValueCategory = prvalue
# 4348|     getStmt(546): [DoStmt] do (...) ...
# 4350|       getCondition(): [Literal] 0
# 4350|           Type = [IntType] int
# 4350|           Value = [Literal] 0
# 4350|           ValueCategory = prvalue
# 4348|       getStmt(): [BlockStmt] { ... }
# 4349|         getStmt(0): [DeclStmt] declaration
# 4349|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x546
# 4349|               Type = [Struct] String
# 4349|             getVariable().getInitializer(): [Initializer] initializer for x546
# 4349|               getExpr(): [ConstructorCall] call to String
# 4349|                   Type = [VoidType] void
# 4349|                   ValueCategory = prvalue
# 4350|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4350|             Type = [VoidType] void
# 4350|             ValueCategory = prvalue
# 4350|           getQualifier(): [VariableAccess] x546
# 4350|               Type = [Struct] String
# 4350|               ValueCategory = lvalue
# 4350|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4350|           Conversion = [BoolConversion] conversion to bool
# 4350|           Type = [BoolType] bool
# 4350|           Value = [CStyleCast] 0
# 4350|           ValueCategory = prvalue
# 4351|     getStmt(547): [DoStmt] do (...) ...
# 4353|       getCondition(): [Literal] 0
# 4353|           Type = [IntType] int
# 4353|           Value = [Literal] 0
# 4353|           ValueCategory = prvalue
# 4351|       getStmt(): [BlockStmt] { ... }
# 4352|         getStmt(0): [DeclStmt] declaration
# 4352|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x547
# 4352|               Type = [Struct] String
# 4352|             getVariable().getInitializer(): [Initializer] initializer for x547
# 4352|               getExpr(): [ConstructorCall] call to String
# 4352|                   Type = [VoidType] void
# 4352|                   ValueCategory = prvalue
# 4353|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4353|             Type = [VoidType] void
# 4353|             ValueCategory = prvalue
# 4353|           getQualifier(): [VariableAccess] x547
# 4353|               Type = [Struct] String
# 4353|               ValueCategory = lvalue
# 4353|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4353|           Conversion = [BoolConversion] conversion to bool
# 4353|           Type = [BoolType] bool
# 4353|           Value = [CStyleCast] 0
# 4353|           ValueCategory = prvalue
# 4354|     getStmt(548): [DoStmt] do (...) ...
# 4356|       getCondition(): [Literal] 0
# 4356|           Type = [IntType] int
# 4356|           Value = [Literal] 0
# 4356|           ValueCategory = prvalue
# 4354|       getStmt(): [BlockStmt] { ... }
# 4355|         getStmt(0): [DeclStmt] declaration
# 4355|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x548
# 4355|               Type = [Struct] String
# 4355|             getVariable().getInitializer(): [Initializer] initializer for x548
# 4355|               getExpr(): [ConstructorCall] call to String
# 4355|                   Type = [VoidType] void
# 4355|                   ValueCategory = prvalue
# 4356|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4356|             Type = [VoidType] void
# 4356|             ValueCategory = prvalue
# 4356|           getQualifier(): [VariableAccess] x548
# 4356|               Type = [Struct] String
# 4356|               ValueCategory = lvalue
# 4356|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4356|           Conversion = [BoolConversion] conversion to bool
# 4356|           Type = [BoolType] bool
# 4356|           Value = [CStyleCast] 0
# 4356|           ValueCategory = prvalue
# 4357|     getStmt(549): [DoStmt] do (...) ...
# 4359|       getCondition(): [Literal] 0
# 4359|           Type = [IntType] int
# 4359|           Value = [Literal] 0
# 4359|           ValueCategory = prvalue
# 4357|       getStmt(): [BlockStmt] { ... }
# 4358|         getStmt(0): [DeclStmt] declaration
# 4358|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x549
# 4358|               Type = [Struct] String
# 4358|             getVariable().getInitializer(): [Initializer] initializer for x549
# 4358|               getExpr(): [ConstructorCall] call to String
# 4358|                   Type = [VoidType] void
# 4358|                   ValueCategory = prvalue
# 4359|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4359|             Type = [VoidType] void
# 4359|             ValueCategory = prvalue
# 4359|           getQualifier(): [VariableAccess] x549
# 4359|               Type = [Struct] String
# 4359|               ValueCategory = lvalue
# 4359|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4359|           Conversion = [BoolConversion] conversion to bool
# 4359|           Type = [BoolType] bool
# 4359|           Value = [CStyleCast] 0
# 4359|           ValueCategory = prvalue
# 4360|     getStmt(550): [DoStmt] do (...) ...
# 4362|       getCondition(): [Literal] 0
# 4362|           Type = [IntType] int
# 4362|           Value = [Literal] 0
# 4362|           ValueCategory = prvalue
# 4360|       getStmt(): [BlockStmt] { ... }
# 4361|         getStmt(0): [DeclStmt] declaration
# 4361|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x550
# 4361|               Type = [Struct] String
# 4361|             getVariable().getInitializer(): [Initializer] initializer for x550
# 4361|               getExpr(): [ConstructorCall] call to String
# 4361|                   Type = [VoidType] void
# 4361|                   ValueCategory = prvalue
# 4362|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4362|             Type = [VoidType] void
# 4362|             ValueCategory = prvalue
# 4362|           getQualifier(): [VariableAccess] x550
# 4362|               Type = [Struct] String
# 4362|               ValueCategory = lvalue
# 4362|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4362|           Conversion = [BoolConversion] conversion to bool
# 4362|           Type = [BoolType] bool
# 4362|           Value = [CStyleCast] 0
# 4362|           ValueCategory = prvalue
# 4363|     getStmt(551): [DoStmt] do (...) ...
# 4365|       getCondition(): [Literal] 0
# 4365|           Type = [IntType] int
# 4365|           Value = [Literal] 0
# 4365|           ValueCategory = prvalue
# 4363|       getStmt(): [BlockStmt] { ... }
# 4364|         getStmt(0): [DeclStmt] declaration
# 4364|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x551
# 4364|               Type = [Struct] String
# 4364|             getVariable().getInitializer(): [Initializer] initializer for x551
# 4364|               getExpr(): [ConstructorCall] call to String
# 4364|                   Type = [VoidType] void
# 4364|                   ValueCategory = prvalue
# 4365|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4365|             Type = [VoidType] void
# 4365|             ValueCategory = prvalue
# 4365|           getQualifier(): [VariableAccess] x551
# 4365|               Type = [Struct] String
# 4365|               ValueCategory = lvalue
# 4365|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4365|           Conversion = [BoolConversion] conversion to bool
# 4365|           Type = [BoolType] bool
# 4365|           Value = [CStyleCast] 0
# 4365|           ValueCategory = prvalue
# 4366|     getStmt(552): [DoStmt] do (...) ...
# 4368|       getCondition(): [Literal] 0
# 4368|           Type = [IntType] int
# 4368|           Value = [Literal] 0
# 4368|           ValueCategory = prvalue
# 4366|       getStmt(): [BlockStmt] { ... }
# 4367|         getStmt(0): [DeclStmt] declaration
# 4367|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x552
# 4367|               Type = [Struct] String
# 4367|             getVariable().getInitializer(): [Initializer] initializer for x552
# 4367|               getExpr(): [ConstructorCall] call to String
# 4367|                   Type = [VoidType] void
# 4367|                   ValueCategory = prvalue
# 4368|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4368|             Type = [VoidType] void
# 4368|             ValueCategory = prvalue
# 4368|           getQualifier(): [VariableAccess] x552
# 4368|               Type = [Struct] String
# 4368|               ValueCategory = lvalue
# 4368|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4368|           Conversion = [BoolConversion] conversion to bool
# 4368|           Type = [BoolType] bool
# 4368|           Value = [CStyleCast] 0
# 4368|           ValueCategory = prvalue
# 4369|     getStmt(553): [DoStmt] do (...) ...
# 4371|       getCondition(): [Literal] 0
# 4371|           Type = [IntType] int
# 4371|           Value = [Literal] 0
# 4371|           ValueCategory = prvalue
# 4369|       getStmt(): [BlockStmt] { ... }
# 4370|         getStmt(0): [DeclStmt] declaration
# 4370|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x553
# 4370|               Type = [Struct] String
# 4370|             getVariable().getInitializer(): [Initializer] initializer for x553
# 4370|               getExpr(): [ConstructorCall] call to String
# 4370|                   Type = [VoidType] void
# 4370|                   ValueCategory = prvalue
# 4371|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4371|             Type = [VoidType] void
# 4371|             ValueCategory = prvalue
# 4371|           getQualifier(): [VariableAccess] x553
# 4371|               Type = [Struct] String
# 4371|               ValueCategory = lvalue
# 4371|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4371|           Conversion = [BoolConversion] conversion to bool
# 4371|           Type = [BoolType] bool
# 4371|           Value = [CStyleCast] 0
# 4371|           ValueCategory = prvalue
# 4372|     getStmt(554): [DoStmt] do (...) ...
# 4374|       getCondition(): [Literal] 0
# 4374|           Type = [IntType] int
# 4374|           Value = [Literal] 0
# 4374|           ValueCategory = prvalue
# 4372|       getStmt(): [BlockStmt] { ... }
# 4373|         getStmt(0): [DeclStmt] declaration
# 4373|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x554
# 4373|               Type = [Struct] String
# 4373|             getVariable().getInitializer(): [Initializer] initializer for x554
# 4373|               getExpr(): [ConstructorCall] call to String
# 4373|                   Type = [VoidType] void
# 4373|                   ValueCategory = prvalue
# 4374|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4374|             Type = [VoidType] void
# 4374|             ValueCategory = prvalue
# 4374|           getQualifier(): [VariableAccess] x554
# 4374|               Type = [Struct] String
# 4374|               ValueCategory = lvalue
# 4374|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4374|           Conversion = [BoolConversion] conversion to bool
# 4374|           Type = [BoolType] bool
# 4374|           Value = [CStyleCast] 0
# 4374|           ValueCategory = prvalue
# 4375|     getStmt(555): [DoStmt] do (...) ...
# 4377|       getCondition(): [Literal] 0
# 4377|           Type = [IntType] int
# 4377|           Value = [Literal] 0
# 4377|           ValueCategory = prvalue
# 4375|       getStmt(): [BlockStmt] { ... }
# 4376|         getStmt(0): [DeclStmt] declaration
# 4376|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x555
# 4376|               Type = [Struct] String
# 4376|             getVariable().getInitializer(): [Initializer] initializer for x555
# 4376|               getExpr(): [ConstructorCall] call to String
# 4376|                   Type = [VoidType] void
# 4376|                   ValueCategory = prvalue
# 4377|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4377|             Type = [VoidType] void
# 4377|             ValueCategory = prvalue
# 4377|           getQualifier(): [VariableAccess] x555
# 4377|               Type = [Struct] String
# 4377|               ValueCategory = lvalue
# 4377|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4377|           Conversion = [BoolConversion] conversion to bool
# 4377|           Type = [BoolType] bool
# 4377|           Value = [CStyleCast] 0
# 4377|           ValueCategory = prvalue
# 4378|     getStmt(556): [DoStmt] do (...) ...
# 4380|       getCondition(): [Literal] 0
# 4380|           Type = [IntType] int
# 4380|           Value = [Literal] 0
# 4380|           ValueCategory = prvalue
# 4378|       getStmt(): [BlockStmt] { ... }
# 4379|         getStmt(0): [DeclStmt] declaration
# 4379|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x556
# 4379|               Type = [Struct] String
# 4379|             getVariable().getInitializer(): [Initializer] initializer for x556
# 4379|               getExpr(): [ConstructorCall] call to String
# 4379|                   Type = [VoidType] void
# 4379|                   ValueCategory = prvalue
# 4380|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4380|             Type = [VoidType] void
# 4380|             ValueCategory = prvalue
# 4380|           getQualifier(): [VariableAccess] x556
# 4380|               Type = [Struct] String
# 4380|               ValueCategory = lvalue
# 4380|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4380|           Conversion = [BoolConversion] conversion to bool
# 4380|           Type = [BoolType] bool
# 4380|           Value = [CStyleCast] 0
# 4380|           ValueCategory = prvalue
# 4381|     getStmt(557): [DoStmt] do (...) ...
# 4383|       getCondition(): [Literal] 0
# 4383|           Type = [IntType] int
# 4383|           Value = [Literal] 0
# 4383|           ValueCategory = prvalue
# 4381|       getStmt(): [BlockStmt] { ... }
# 4382|         getStmt(0): [DeclStmt] declaration
# 4382|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x557
# 4382|               Type = [Struct] String
# 4382|             getVariable().getInitializer(): [Initializer] initializer for x557
# 4382|               getExpr(): [ConstructorCall] call to String
# 4382|                   Type = [VoidType] void
# 4382|                   ValueCategory = prvalue
# 4383|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4383|             Type = [VoidType] void
# 4383|             ValueCategory = prvalue
# 4383|           getQualifier(): [VariableAccess] x557
# 4383|               Type = [Struct] String
# 4383|               ValueCategory = lvalue
# 4383|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4383|           Conversion = [BoolConversion] conversion to bool
# 4383|           Type = [BoolType] bool
# 4383|           Value = [CStyleCast] 0
# 4383|           ValueCategory = prvalue
# 4384|     getStmt(558): [DoStmt] do (...) ...
# 4386|       getCondition(): [Literal] 0
# 4386|           Type = [IntType] int
# 4386|           Value = [Literal] 0
# 4386|           ValueCategory = prvalue
# 4384|       getStmt(): [BlockStmt] { ... }
# 4385|         getStmt(0): [DeclStmt] declaration
# 4385|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x558
# 4385|               Type = [Struct] String
# 4385|             getVariable().getInitializer(): [Initializer] initializer for x558
# 4385|               getExpr(): [ConstructorCall] call to String
# 4385|                   Type = [VoidType] void
# 4385|                   ValueCategory = prvalue
# 4386|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4386|             Type = [VoidType] void
# 4386|             ValueCategory = prvalue
# 4386|           getQualifier(): [VariableAccess] x558
# 4386|               Type = [Struct] String
# 4386|               ValueCategory = lvalue
# 4386|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4386|           Conversion = [BoolConversion] conversion to bool
# 4386|           Type = [BoolType] bool
# 4386|           Value = [CStyleCast] 0
# 4386|           ValueCategory = prvalue
# 4387|     getStmt(559): [DoStmt] do (...) ...
# 4389|       getCondition(): [Literal] 0
# 4389|           Type = [IntType] int
# 4389|           Value = [Literal] 0
# 4389|           ValueCategory = prvalue
# 4387|       getStmt(): [BlockStmt] { ... }
# 4388|         getStmt(0): [DeclStmt] declaration
# 4388|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x559
# 4388|               Type = [Struct] String
# 4388|             getVariable().getInitializer(): [Initializer] initializer for x559
# 4388|               getExpr(): [ConstructorCall] call to String
# 4388|                   Type = [VoidType] void
# 4388|                   ValueCategory = prvalue
# 4389|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4389|             Type = [VoidType] void
# 4389|             ValueCategory = prvalue
# 4389|           getQualifier(): [VariableAccess] x559
# 4389|               Type = [Struct] String
# 4389|               ValueCategory = lvalue
# 4389|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4389|           Conversion = [BoolConversion] conversion to bool
# 4389|           Type = [BoolType] bool
# 4389|           Value = [CStyleCast] 0
# 4389|           ValueCategory = prvalue
# 4390|     getStmt(560): [DoStmt] do (...) ...
# 4392|       getCondition(): [Literal] 0
# 4392|           Type = [IntType] int
# 4392|           Value = [Literal] 0
# 4392|           ValueCategory = prvalue
# 4390|       getStmt(): [BlockStmt] { ... }
# 4391|         getStmt(0): [DeclStmt] declaration
# 4391|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x560
# 4391|               Type = [Struct] String
# 4391|             getVariable().getInitializer(): [Initializer] initializer for x560
# 4391|               getExpr(): [ConstructorCall] call to String
# 4391|                   Type = [VoidType] void
# 4391|                   ValueCategory = prvalue
# 4392|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4392|             Type = [VoidType] void
# 4392|             ValueCategory = prvalue
# 4392|           getQualifier(): [VariableAccess] x560
# 4392|               Type = [Struct] String
# 4392|               ValueCategory = lvalue
# 4392|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4392|           Conversion = [BoolConversion] conversion to bool
# 4392|           Type = [BoolType] bool
# 4392|           Value = [CStyleCast] 0
# 4392|           ValueCategory = prvalue
# 4393|     getStmt(561): [DoStmt] do (...) ...
# 4395|       getCondition(): [Literal] 0
# 4395|           Type = [IntType] int
# 4395|           Value = [Literal] 0
# 4395|           ValueCategory = prvalue
# 4393|       getStmt(): [BlockStmt] { ... }
# 4394|         getStmt(0): [DeclStmt] declaration
# 4394|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x561
# 4394|               Type = [Struct] String
# 4394|             getVariable().getInitializer(): [Initializer] initializer for x561
# 4394|               getExpr(): [ConstructorCall] call to String
# 4394|                   Type = [VoidType] void
# 4394|                   ValueCategory = prvalue
# 4395|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4395|             Type = [VoidType] void
# 4395|             ValueCategory = prvalue
# 4395|           getQualifier(): [VariableAccess] x561
# 4395|               Type = [Struct] String
# 4395|               ValueCategory = lvalue
# 4395|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4395|           Conversion = [BoolConversion] conversion to bool
# 4395|           Type = [BoolType] bool
# 4395|           Value = [CStyleCast] 0
# 4395|           ValueCategory = prvalue
# 4396|     getStmt(562): [DoStmt] do (...) ...
# 4398|       getCondition(): [Literal] 0
# 4398|           Type = [IntType] int
# 4398|           Value = [Literal] 0
# 4398|           ValueCategory = prvalue
# 4396|       getStmt(): [BlockStmt] { ... }
# 4397|         getStmt(0): [DeclStmt] declaration
# 4397|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x562
# 4397|               Type = [Struct] String
# 4397|             getVariable().getInitializer(): [Initializer] initializer for x562
# 4397|               getExpr(): [ConstructorCall] call to String
# 4397|                   Type = [VoidType] void
# 4397|                   ValueCategory = prvalue
# 4398|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4398|             Type = [VoidType] void
# 4398|             ValueCategory = prvalue
# 4398|           getQualifier(): [VariableAccess] x562
# 4398|               Type = [Struct] String
# 4398|               ValueCategory = lvalue
# 4398|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4398|           Conversion = [BoolConversion] conversion to bool
# 4398|           Type = [BoolType] bool
# 4398|           Value = [CStyleCast] 0
# 4398|           ValueCategory = prvalue
# 4399|     getStmt(563): [DoStmt] do (...) ...
# 4401|       getCondition(): [Literal] 0
# 4401|           Type = [IntType] int
# 4401|           Value = [Literal] 0
# 4401|           ValueCategory = prvalue
# 4399|       getStmt(): [BlockStmt] { ... }
# 4400|         getStmt(0): [DeclStmt] declaration
# 4400|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x563
# 4400|               Type = [Struct] String
# 4400|             getVariable().getInitializer(): [Initializer] initializer for x563
# 4400|               getExpr(): [ConstructorCall] call to String
# 4400|                   Type = [VoidType] void
# 4400|                   ValueCategory = prvalue
# 4401|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4401|             Type = [VoidType] void
# 4401|             ValueCategory = prvalue
# 4401|           getQualifier(): [VariableAccess] x563
# 4401|               Type = [Struct] String
# 4401|               ValueCategory = lvalue
# 4401|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4401|           Conversion = [BoolConversion] conversion to bool
# 4401|           Type = [BoolType] bool
# 4401|           Value = [CStyleCast] 0
# 4401|           ValueCategory = prvalue
# 4402|     getStmt(564): [DoStmt] do (...) ...
# 4404|       getCondition(): [Literal] 0
# 4404|           Type = [IntType] int
# 4404|           Value = [Literal] 0
# 4404|           ValueCategory = prvalue
# 4402|       getStmt(): [BlockStmt] { ... }
# 4403|         getStmt(0): [DeclStmt] declaration
# 4403|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x564
# 4403|               Type = [Struct] String
# 4403|             getVariable().getInitializer(): [Initializer] initializer for x564
# 4403|               getExpr(): [ConstructorCall] call to String
# 4403|                   Type = [VoidType] void
# 4403|                   ValueCategory = prvalue
# 4404|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4404|             Type = [VoidType] void
# 4404|             ValueCategory = prvalue
# 4404|           getQualifier(): [VariableAccess] x564
# 4404|               Type = [Struct] String
# 4404|               ValueCategory = lvalue
# 4404|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4404|           Conversion = [BoolConversion] conversion to bool
# 4404|           Type = [BoolType] bool
# 4404|           Value = [CStyleCast] 0
# 4404|           ValueCategory = prvalue
# 4405|     getStmt(565): [DoStmt] do (...) ...
# 4407|       getCondition(): [Literal] 0
# 4407|           Type = [IntType] int
# 4407|           Value = [Literal] 0
# 4407|           ValueCategory = prvalue
# 4405|       getStmt(): [BlockStmt] { ... }
# 4406|         getStmt(0): [DeclStmt] declaration
# 4406|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x565
# 4406|               Type = [Struct] String
# 4406|             getVariable().getInitializer(): [Initializer] initializer for x565
# 4406|               getExpr(): [ConstructorCall] call to String
# 4406|                   Type = [VoidType] void
# 4406|                   ValueCategory = prvalue
# 4407|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4407|             Type = [VoidType] void
# 4407|             ValueCategory = prvalue
# 4407|           getQualifier(): [VariableAccess] x565
# 4407|               Type = [Struct] String
# 4407|               ValueCategory = lvalue
# 4407|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4407|           Conversion = [BoolConversion] conversion to bool
# 4407|           Type = [BoolType] bool
# 4407|           Value = [CStyleCast] 0
# 4407|           ValueCategory = prvalue
# 4408|     getStmt(566): [DoStmt] do (...) ...
# 4410|       getCondition(): [Literal] 0
# 4410|           Type = [IntType] int
# 4410|           Value = [Literal] 0
# 4410|           ValueCategory = prvalue
# 4408|       getStmt(): [BlockStmt] { ... }
# 4409|         getStmt(0): [DeclStmt] declaration
# 4409|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x566
# 4409|               Type = [Struct] String
# 4409|             getVariable().getInitializer(): [Initializer] initializer for x566
# 4409|               getExpr(): [ConstructorCall] call to String
# 4409|                   Type = [VoidType] void
# 4409|                   ValueCategory = prvalue
# 4410|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4410|             Type = [VoidType] void
# 4410|             ValueCategory = prvalue
# 4410|           getQualifier(): [VariableAccess] x566
# 4410|               Type = [Struct] String
# 4410|               ValueCategory = lvalue
# 4410|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4410|           Conversion = [BoolConversion] conversion to bool
# 4410|           Type = [BoolType] bool
# 4410|           Value = [CStyleCast] 0
# 4410|           ValueCategory = prvalue
# 4411|     getStmt(567): [DoStmt] do (...) ...
# 4413|       getCondition(): [Literal] 0
# 4413|           Type = [IntType] int
# 4413|           Value = [Literal] 0
# 4413|           ValueCategory = prvalue
# 4411|       getStmt(): [BlockStmt] { ... }
# 4412|         getStmt(0): [DeclStmt] declaration
# 4412|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x567
# 4412|               Type = [Struct] String
# 4412|             getVariable().getInitializer(): [Initializer] initializer for x567
# 4412|               getExpr(): [ConstructorCall] call to String
# 4412|                   Type = [VoidType] void
# 4412|                   ValueCategory = prvalue
# 4413|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4413|             Type = [VoidType] void
# 4413|             ValueCategory = prvalue
# 4413|           getQualifier(): [VariableAccess] x567
# 4413|               Type = [Struct] String
# 4413|               ValueCategory = lvalue
# 4413|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4413|           Conversion = [BoolConversion] conversion to bool
# 4413|           Type = [BoolType] bool
# 4413|           Value = [CStyleCast] 0
# 4413|           ValueCategory = prvalue
# 4414|     getStmt(568): [DoStmt] do (...) ...
# 4416|       getCondition(): [Literal] 0
# 4416|           Type = [IntType] int
# 4416|           Value = [Literal] 0
# 4416|           ValueCategory = prvalue
# 4414|       getStmt(): [BlockStmt] { ... }
# 4415|         getStmt(0): [DeclStmt] declaration
# 4415|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x568
# 4415|               Type = [Struct] String
# 4415|             getVariable().getInitializer(): [Initializer] initializer for x568
# 4415|               getExpr(): [ConstructorCall] call to String
# 4415|                   Type = [VoidType] void
# 4415|                   ValueCategory = prvalue
# 4416|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4416|             Type = [VoidType] void
# 4416|             ValueCategory = prvalue
# 4416|           getQualifier(): [VariableAccess] x568
# 4416|               Type = [Struct] String
# 4416|               ValueCategory = lvalue
# 4416|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4416|           Conversion = [BoolConversion] conversion to bool
# 4416|           Type = [BoolType] bool
# 4416|           Value = [CStyleCast] 0
# 4416|           ValueCategory = prvalue
# 4417|     getStmt(569): [DoStmt] do (...) ...
# 4419|       getCondition(): [Literal] 0
# 4419|           Type = [IntType] int
# 4419|           Value = [Literal] 0
# 4419|           ValueCategory = prvalue
# 4417|       getStmt(): [BlockStmt] { ... }
# 4418|         getStmt(0): [DeclStmt] declaration
# 4418|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x569
# 4418|               Type = [Struct] String
# 4418|             getVariable().getInitializer(): [Initializer] initializer for x569
# 4418|               getExpr(): [ConstructorCall] call to String
# 4418|                   Type = [VoidType] void
# 4418|                   ValueCategory = prvalue
# 4419|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4419|             Type = [VoidType] void
# 4419|             ValueCategory = prvalue
# 4419|           getQualifier(): [VariableAccess] x569
# 4419|               Type = [Struct] String
# 4419|               ValueCategory = lvalue
# 4419|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4419|           Conversion = [BoolConversion] conversion to bool
# 4419|           Type = [BoolType] bool
# 4419|           Value = [CStyleCast] 0
# 4419|           ValueCategory = prvalue
# 4420|     getStmt(570): [DoStmt] do (...) ...
# 4422|       getCondition(): [Literal] 0
# 4422|           Type = [IntType] int
# 4422|           Value = [Literal] 0
# 4422|           ValueCategory = prvalue
# 4420|       getStmt(): [BlockStmt] { ... }
# 4421|         getStmt(0): [DeclStmt] declaration
# 4421|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x570
# 4421|               Type = [Struct] String
# 4421|             getVariable().getInitializer(): [Initializer] initializer for x570
# 4421|               getExpr(): [ConstructorCall] call to String
# 4421|                   Type = [VoidType] void
# 4421|                   ValueCategory = prvalue
# 4422|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4422|             Type = [VoidType] void
# 4422|             ValueCategory = prvalue
# 4422|           getQualifier(): [VariableAccess] x570
# 4422|               Type = [Struct] String
# 4422|               ValueCategory = lvalue
# 4422|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4422|           Conversion = [BoolConversion] conversion to bool
# 4422|           Type = [BoolType] bool
# 4422|           Value = [CStyleCast] 0
# 4422|           ValueCategory = prvalue
# 4423|     getStmt(571): [DoStmt] do (...) ...
# 4425|       getCondition(): [Literal] 0
# 4425|           Type = [IntType] int
# 4425|           Value = [Literal] 0
# 4425|           ValueCategory = prvalue
# 4423|       getStmt(): [BlockStmt] { ... }
# 4424|         getStmt(0): [DeclStmt] declaration
# 4424|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x571
# 4424|               Type = [Struct] String
# 4424|             getVariable().getInitializer(): [Initializer] initializer for x571
# 4424|               getExpr(): [ConstructorCall] call to String
# 4424|                   Type = [VoidType] void
# 4424|                   ValueCategory = prvalue
# 4425|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4425|             Type = [VoidType] void
# 4425|             ValueCategory = prvalue
# 4425|           getQualifier(): [VariableAccess] x571
# 4425|               Type = [Struct] String
# 4425|               ValueCategory = lvalue
# 4425|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4425|           Conversion = [BoolConversion] conversion to bool
# 4425|           Type = [BoolType] bool
# 4425|           Value = [CStyleCast] 0
# 4425|           ValueCategory = prvalue
# 4426|     getStmt(572): [DoStmt] do (...) ...
# 4428|       getCondition(): [Literal] 0
# 4428|           Type = [IntType] int
# 4428|           Value = [Literal] 0
# 4428|           ValueCategory = prvalue
# 4426|       getStmt(): [BlockStmt] { ... }
# 4427|         getStmt(0): [DeclStmt] declaration
# 4427|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x572
# 4427|               Type = [Struct] String
# 4427|             getVariable().getInitializer(): [Initializer] initializer for x572
# 4427|               getExpr(): [ConstructorCall] call to String
# 4427|                   Type = [VoidType] void
# 4427|                   ValueCategory = prvalue
# 4428|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4428|             Type = [VoidType] void
# 4428|             ValueCategory = prvalue
# 4428|           getQualifier(): [VariableAccess] x572
# 4428|               Type = [Struct] String
# 4428|               ValueCategory = lvalue
# 4428|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4428|           Conversion = [BoolConversion] conversion to bool
# 4428|           Type = [BoolType] bool
# 4428|           Value = [CStyleCast] 0
# 4428|           ValueCategory = prvalue
# 4429|     getStmt(573): [DoStmt] do (...) ...
# 4431|       getCondition(): [Literal] 0
# 4431|           Type = [IntType] int
# 4431|           Value = [Literal] 0
# 4431|           ValueCategory = prvalue
# 4429|       getStmt(): [BlockStmt] { ... }
# 4430|         getStmt(0): [DeclStmt] declaration
# 4430|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x573
# 4430|               Type = [Struct] String
# 4430|             getVariable().getInitializer(): [Initializer] initializer for x573
# 4430|               getExpr(): [ConstructorCall] call to String
# 4430|                   Type = [VoidType] void
# 4430|                   ValueCategory = prvalue
# 4431|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4431|             Type = [VoidType] void
# 4431|             ValueCategory = prvalue
# 4431|           getQualifier(): [VariableAccess] x573
# 4431|               Type = [Struct] String
# 4431|               ValueCategory = lvalue
# 4431|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4431|           Conversion = [BoolConversion] conversion to bool
# 4431|           Type = [BoolType] bool
# 4431|           Value = [CStyleCast] 0
# 4431|           ValueCategory = prvalue
# 4432|     getStmt(574): [DoStmt] do (...) ...
# 4434|       getCondition(): [Literal] 0
# 4434|           Type = [IntType] int
# 4434|           Value = [Literal] 0
# 4434|           ValueCategory = prvalue
# 4432|       getStmt(): [BlockStmt] { ... }
# 4433|         getStmt(0): [DeclStmt] declaration
# 4433|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x574
# 4433|               Type = [Struct] String
# 4433|             getVariable().getInitializer(): [Initializer] initializer for x574
# 4433|               getExpr(): [ConstructorCall] call to String
# 4433|                   Type = [VoidType] void
# 4433|                   ValueCategory = prvalue
# 4434|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4434|             Type = [VoidType] void
# 4434|             ValueCategory = prvalue
# 4434|           getQualifier(): [VariableAccess] x574
# 4434|               Type = [Struct] String
# 4434|               ValueCategory = lvalue
# 4434|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4434|           Conversion = [BoolConversion] conversion to bool
# 4434|           Type = [BoolType] bool
# 4434|           Value = [CStyleCast] 0
# 4434|           ValueCategory = prvalue
# 4435|     getStmt(575): [DoStmt] do (...) ...
# 4437|       getCondition(): [Literal] 0
# 4437|           Type = [IntType] int
# 4437|           Value = [Literal] 0
# 4437|           ValueCategory = prvalue
# 4435|       getStmt(): [BlockStmt] { ... }
# 4436|         getStmt(0): [DeclStmt] declaration
# 4436|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x575
# 4436|               Type = [Struct] String
# 4436|             getVariable().getInitializer(): [Initializer] initializer for x575
# 4436|               getExpr(): [ConstructorCall] call to String
# 4436|                   Type = [VoidType] void
# 4436|                   ValueCategory = prvalue
# 4437|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4437|             Type = [VoidType] void
# 4437|             ValueCategory = prvalue
# 4437|           getQualifier(): [VariableAccess] x575
# 4437|               Type = [Struct] String
# 4437|               ValueCategory = lvalue
# 4437|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4437|           Conversion = [BoolConversion] conversion to bool
# 4437|           Type = [BoolType] bool
# 4437|           Value = [CStyleCast] 0
# 4437|           ValueCategory = prvalue
# 4438|     getStmt(576): [DoStmt] do (...) ...
# 4440|       getCondition(): [Literal] 0
# 4440|           Type = [IntType] int
# 4440|           Value = [Literal] 0
# 4440|           ValueCategory = prvalue
# 4438|       getStmt(): [BlockStmt] { ... }
# 4439|         getStmt(0): [DeclStmt] declaration
# 4439|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x576
# 4439|               Type = [Struct] String
# 4439|             getVariable().getInitializer(): [Initializer] initializer for x576
# 4439|               getExpr(): [ConstructorCall] call to String
# 4439|                   Type = [VoidType] void
# 4439|                   ValueCategory = prvalue
# 4440|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4440|             Type = [VoidType] void
# 4440|             ValueCategory = prvalue
# 4440|           getQualifier(): [VariableAccess] x576
# 4440|               Type = [Struct] String
# 4440|               ValueCategory = lvalue
# 4440|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4440|           Conversion = [BoolConversion] conversion to bool
# 4440|           Type = [BoolType] bool
# 4440|           Value = [CStyleCast] 0
# 4440|           ValueCategory = prvalue
# 4441|     getStmt(577): [DoStmt] do (...) ...
# 4443|       getCondition(): [Literal] 0
# 4443|           Type = [IntType] int
# 4443|           Value = [Literal] 0
# 4443|           ValueCategory = prvalue
# 4441|       getStmt(): [BlockStmt] { ... }
# 4442|         getStmt(0): [DeclStmt] declaration
# 4442|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x577
# 4442|               Type = [Struct] String
# 4442|             getVariable().getInitializer(): [Initializer] initializer for x577
# 4442|               getExpr(): [ConstructorCall] call to String
# 4442|                   Type = [VoidType] void
# 4442|                   ValueCategory = prvalue
# 4443|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4443|             Type = [VoidType] void
# 4443|             ValueCategory = prvalue
# 4443|           getQualifier(): [VariableAccess] x577
# 4443|               Type = [Struct] String
# 4443|               ValueCategory = lvalue
# 4443|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4443|           Conversion = [BoolConversion] conversion to bool
# 4443|           Type = [BoolType] bool
# 4443|           Value = [CStyleCast] 0
# 4443|           ValueCategory = prvalue
# 4444|     getStmt(578): [DoStmt] do (...) ...
# 4446|       getCondition(): [Literal] 0
# 4446|           Type = [IntType] int
# 4446|           Value = [Literal] 0
# 4446|           ValueCategory = prvalue
# 4444|       getStmt(): [BlockStmt] { ... }
# 4445|         getStmt(0): [DeclStmt] declaration
# 4445|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x578
# 4445|               Type = [Struct] String
# 4445|             getVariable().getInitializer(): [Initializer] initializer for x578
# 4445|               getExpr(): [ConstructorCall] call to String
# 4445|                   Type = [VoidType] void
# 4445|                   ValueCategory = prvalue
# 4446|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4446|             Type = [VoidType] void
# 4446|             ValueCategory = prvalue
# 4446|           getQualifier(): [VariableAccess] x578
# 4446|               Type = [Struct] String
# 4446|               ValueCategory = lvalue
# 4446|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4446|           Conversion = [BoolConversion] conversion to bool
# 4446|           Type = [BoolType] bool
# 4446|           Value = [CStyleCast] 0
# 4446|           ValueCategory = prvalue
# 4447|     getStmt(579): [DoStmt] do (...) ...
# 4449|       getCondition(): [Literal] 0
# 4449|           Type = [IntType] int
# 4449|           Value = [Literal] 0
# 4449|           ValueCategory = prvalue
# 4447|       getStmt(): [BlockStmt] { ... }
# 4448|         getStmt(0): [DeclStmt] declaration
# 4448|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x579
# 4448|               Type = [Struct] String
# 4448|             getVariable().getInitializer(): [Initializer] initializer for x579
# 4448|               getExpr(): [ConstructorCall] call to String
# 4448|                   Type = [VoidType] void
# 4448|                   ValueCategory = prvalue
# 4449|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4449|             Type = [VoidType] void
# 4449|             ValueCategory = prvalue
# 4449|           getQualifier(): [VariableAccess] x579
# 4449|               Type = [Struct] String
# 4449|               ValueCategory = lvalue
# 4449|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4449|           Conversion = [BoolConversion] conversion to bool
# 4449|           Type = [BoolType] bool
# 4449|           Value = [CStyleCast] 0
# 4449|           ValueCategory = prvalue
# 4450|     getStmt(580): [DoStmt] do (...) ...
# 4452|       getCondition(): [Literal] 0
# 4452|           Type = [IntType] int
# 4452|           Value = [Literal] 0
# 4452|           ValueCategory = prvalue
# 4450|       getStmt(): [BlockStmt] { ... }
# 4451|         getStmt(0): [DeclStmt] declaration
# 4451|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x580
# 4451|               Type = [Struct] String
# 4451|             getVariable().getInitializer(): [Initializer] initializer for x580
# 4451|               getExpr(): [ConstructorCall] call to String
# 4451|                   Type = [VoidType] void
# 4451|                   ValueCategory = prvalue
# 4452|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4452|             Type = [VoidType] void
# 4452|             ValueCategory = prvalue
# 4452|           getQualifier(): [VariableAccess] x580
# 4452|               Type = [Struct] String
# 4452|               ValueCategory = lvalue
# 4452|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4452|           Conversion = [BoolConversion] conversion to bool
# 4452|           Type = [BoolType] bool
# 4452|           Value = [CStyleCast] 0
# 4452|           ValueCategory = prvalue
# 4453|     getStmt(581): [DoStmt] do (...) ...
# 4455|       getCondition(): [Literal] 0
# 4455|           Type = [IntType] int
# 4455|           Value = [Literal] 0
# 4455|           ValueCategory = prvalue
# 4453|       getStmt(): [BlockStmt] { ... }
# 4454|         getStmt(0): [DeclStmt] declaration
# 4454|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x581
# 4454|               Type = [Struct] String
# 4454|             getVariable().getInitializer(): [Initializer] initializer for x581
# 4454|               getExpr(): [ConstructorCall] call to String
# 4454|                   Type = [VoidType] void
# 4454|                   ValueCategory = prvalue
# 4455|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4455|             Type = [VoidType] void
# 4455|             ValueCategory = prvalue
# 4455|           getQualifier(): [VariableAccess] x581
# 4455|               Type = [Struct] String
# 4455|               ValueCategory = lvalue
# 4455|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4455|           Conversion = [BoolConversion] conversion to bool
# 4455|           Type = [BoolType] bool
# 4455|           Value = [CStyleCast] 0
# 4455|           ValueCategory = prvalue
# 4456|     getStmt(582): [DoStmt] do (...) ...
# 4458|       getCondition(): [Literal] 0
# 4458|           Type = [IntType] int
# 4458|           Value = [Literal] 0
# 4458|           ValueCategory = prvalue
# 4456|       getStmt(): [BlockStmt] { ... }
# 4457|         getStmt(0): [DeclStmt] declaration
# 4457|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x582
# 4457|               Type = [Struct] String
# 4457|             getVariable().getInitializer(): [Initializer] initializer for x582
# 4457|               getExpr(): [ConstructorCall] call to String
# 4457|                   Type = [VoidType] void
# 4457|                   ValueCategory = prvalue
# 4458|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4458|             Type = [VoidType] void
# 4458|             ValueCategory = prvalue
# 4458|           getQualifier(): [VariableAccess] x582
# 4458|               Type = [Struct] String
# 4458|               ValueCategory = lvalue
# 4458|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4458|           Conversion = [BoolConversion] conversion to bool
# 4458|           Type = [BoolType] bool
# 4458|           Value = [CStyleCast] 0
# 4458|           ValueCategory = prvalue
# 4459|     getStmt(583): [DoStmt] do (...) ...
# 4461|       getCondition(): [Literal] 0
# 4461|           Type = [IntType] int
# 4461|           Value = [Literal] 0
# 4461|           ValueCategory = prvalue
# 4459|       getStmt(): [BlockStmt] { ... }
# 4460|         getStmt(0): [DeclStmt] declaration
# 4460|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x583
# 4460|               Type = [Struct] String
# 4460|             getVariable().getInitializer(): [Initializer] initializer for x583
# 4460|               getExpr(): [ConstructorCall] call to String
# 4460|                   Type = [VoidType] void
# 4460|                   ValueCategory = prvalue
# 4461|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4461|             Type = [VoidType] void
# 4461|             ValueCategory = prvalue
# 4461|           getQualifier(): [VariableAccess] x583
# 4461|               Type = [Struct] String
# 4461|               ValueCategory = lvalue
# 4461|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4461|           Conversion = [BoolConversion] conversion to bool
# 4461|           Type = [BoolType] bool
# 4461|           Value = [CStyleCast] 0
# 4461|           ValueCategory = prvalue
# 4462|     getStmt(584): [DoStmt] do (...) ...
# 4464|       getCondition(): [Literal] 0
# 4464|           Type = [IntType] int
# 4464|           Value = [Literal] 0
# 4464|           ValueCategory = prvalue
# 4462|       getStmt(): [BlockStmt] { ... }
# 4463|         getStmt(0): [DeclStmt] declaration
# 4463|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x584
# 4463|               Type = [Struct] String
# 4463|             getVariable().getInitializer(): [Initializer] initializer for x584
# 4463|               getExpr(): [ConstructorCall] call to String
# 4463|                   Type = [VoidType] void
# 4463|                   ValueCategory = prvalue
# 4464|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4464|             Type = [VoidType] void
# 4464|             ValueCategory = prvalue
# 4464|           getQualifier(): [VariableAccess] x584
# 4464|               Type = [Struct] String
# 4464|               ValueCategory = lvalue
# 4464|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4464|           Conversion = [BoolConversion] conversion to bool
# 4464|           Type = [BoolType] bool
# 4464|           Value = [CStyleCast] 0
# 4464|           ValueCategory = prvalue
# 4465|     getStmt(585): [DoStmt] do (...) ...
# 4467|       getCondition(): [Literal] 0
# 4467|           Type = [IntType] int
# 4467|           Value = [Literal] 0
# 4467|           ValueCategory = prvalue
# 4465|       getStmt(): [BlockStmt] { ... }
# 4466|         getStmt(0): [DeclStmt] declaration
# 4466|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x585
# 4466|               Type = [Struct] String
# 4466|             getVariable().getInitializer(): [Initializer] initializer for x585
# 4466|               getExpr(): [ConstructorCall] call to String
# 4466|                   Type = [VoidType] void
# 4466|                   ValueCategory = prvalue
# 4467|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4467|             Type = [VoidType] void
# 4467|             ValueCategory = prvalue
# 4467|           getQualifier(): [VariableAccess] x585
# 4467|               Type = [Struct] String
# 4467|               ValueCategory = lvalue
# 4467|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4467|           Conversion = [BoolConversion] conversion to bool
# 4467|           Type = [BoolType] bool
# 4467|           Value = [CStyleCast] 0
# 4467|           ValueCategory = prvalue
# 4468|     getStmt(586): [DoStmt] do (...) ...
# 4470|       getCondition(): [Literal] 0
# 4470|           Type = [IntType] int
# 4470|           Value = [Literal] 0
# 4470|           ValueCategory = prvalue
# 4468|       getStmt(): [BlockStmt] { ... }
# 4469|         getStmt(0): [DeclStmt] declaration
# 4469|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x586
# 4469|               Type = [Struct] String
# 4469|             getVariable().getInitializer(): [Initializer] initializer for x586
# 4469|               getExpr(): [ConstructorCall] call to String
# 4469|                   Type = [VoidType] void
# 4469|                   ValueCategory = prvalue
# 4470|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4470|             Type = [VoidType] void
# 4470|             ValueCategory = prvalue
# 4470|           getQualifier(): [VariableAccess] x586
# 4470|               Type = [Struct] String
# 4470|               ValueCategory = lvalue
# 4470|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4470|           Conversion = [BoolConversion] conversion to bool
# 4470|           Type = [BoolType] bool
# 4470|           Value = [CStyleCast] 0
# 4470|           ValueCategory = prvalue
# 4471|     getStmt(587): [DoStmt] do (...) ...
# 4473|       getCondition(): [Literal] 0
# 4473|           Type = [IntType] int
# 4473|           Value = [Literal] 0
# 4473|           ValueCategory = prvalue
# 4471|       getStmt(): [BlockStmt] { ... }
# 4472|         getStmt(0): [DeclStmt] declaration
# 4472|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x587
# 4472|               Type = [Struct] String
# 4472|             getVariable().getInitializer(): [Initializer] initializer for x587
# 4472|               getExpr(): [ConstructorCall] call to String
# 4472|                   Type = [VoidType] void
# 4472|                   ValueCategory = prvalue
# 4473|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4473|             Type = [VoidType] void
# 4473|             ValueCategory = prvalue
# 4473|           getQualifier(): [VariableAccess] x587
# 4473|               Type = [Struct] String
# 4473|               ValueCategory = lvalue
# 4473|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4473|           Conversion = [BoolConversion] conversion to bool
# 4473|           Type = [BoolType] bool
# 4473|           Value = [CStyleCast] 0
# 4473|           ValueCategory = prvalue
# 4474|     getStmt(588): [DoStmt] do (...) ...
# 4476|       getCondition(): [Literal] 0
# 4476|           Type = [IntType] int
# 4476|           Value = [Literal] 0
# 4476|           ValueCategory = prvalue
# 4474|       getStmt(): [BlockStmt] { ... }
# 4475|         getStmt(0): [DeclStmt] declaration
# 4475|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x588
# 4475|               Type = [Struct] String
# 4475|             getVariable().getInitializer(): [Initializer] initializer for x588
# 4475|               getExpr(): [ConstructorCall] call to String
# 4475|                   Type = [VoidType] void
# 4475|                   ValueCategory = prvalue
# 4476|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4476|             Type = [VoidType] void
# 4476|             ValueCategory = prvalue
# 4476|           getQualifier(): [VariableAccess] x588
# 4476|               Type = [Struct] String
# 4476|               ValueCategory = lvalue
# 4476|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4476|           Conversion = [BoolConversion] conversion to bool
# 4476|           Type = [BoolType] bool
# 4476|           Value = [CStyleCast] 0
# 4476|           ValueCategory = prvalue
# 4477|     getStmt(589): [DoStmt] do (...) ...
# 4479|       getCondition(): [Literal] 0
# 4479|           Type = [IntType] int
# 4479|           Value = [Literal] 0
# 4479|           ValueCategory = prvalue
# 4477|       getStmt(): [BlockStmt] { ... }
# 4478|         getStmt(0): [DeclStmt] declaration
# 4478|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x589
# 4478|               Type = [Struct] String
# 4478|             getVariable().getInitializer(): [Initializer] initializer for x589
# 4478|               getExpr(): [ConstructorCall] call to String
# 4478|                   Type = [VoidType] void
# 4478|                   ValueCategory = prvalue
# 4479|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4479|             Type = [VoidType] void
# 4479|             ValueCategory = prvalue
# 4479|           getQualifier(): [VariableAccess] x589
# 4479|               Type = [Struct] String
# 4479|               ValueCategory = lvalue
# 4479|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4479|           Conversion = [BoolConversion] conversion to bool
# 4479|           Type = [BoolType] bool
# 4479|           Value = [CStyleCast] 0
# 4479|           ValueCategory = prvalue
# 4480|     getStmt(590): [DoStmt] do (...) ...
# 4482|       getCondition(): [Literal] 0
# 4482|           Type = [IntType] int
# 4482|           Value = [Literal] 0
# 4482|           ValueCategory = prvalue
# 4480|       getStmt(): [BlockStmt] { ... }
# 4481|         getStmt(0): [DeclStmt] declaration
# 4481|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x590
# 4481|               Type = [Struct] String
# 4481|             getVariable().getInitializer(): [Initializer] initializer for x590
# 4481|               getExpr(): [ConstructorCall] call to String
# 4481|                   Type = [VoidType] void
# 4481|                   ValueCategory = prvalue
# 4482|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4482|             Type = [VoidType] void
# 4482|             ValueCategory = prvalue
# 4482|           getQualifier(): [VariableAccess] x590
# 4482|               Type = [Struct] String
# 4482|               ValueCategory = lvalue
# 4482|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4482|           Conversion = [BoolConversion] conversion to bool
# 4482|           Type = [BoolType] bool
# 4482|           Value = [CStyleCast] 0
# 4482|           ValueCategory = prvalue
# 4483|     getStmt(591): [DoStmt] do (...) ...
# 4485|       getCondition(): [Literal] 0
# 4485|           Type = [IntType] int
# 4485|           Value = [Literal] 0
# 4485|           ValueCategory = prvalue
# 4483|       getStmt(): [BlockStmt] { ... }
# 4484|         getStmt(0): [DeclStmt] declaration
# 4484|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x591
# 4484|               Type = [Struct] String
# 4484|             getVariable().getInitializer(): [Initializer] initializer for x591
# 4484|               getExpr(): [ConstructorCall] call to String
# 4484|                   Type = [VoidType] void
# 4484|                   ValueCategory = prvalue
# 4485|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4485|             Type = [VoidType] void
# 4485|             ValueCategory = prvalue
# 4485|           getQualifier(): [VariableAccess] x591
# 4485|               Type = [Struct] String
# 4485|               ValueCategory = lvalue
# 4485|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4485|           Conversion = [BoolConversion] conversion to bool
# 4485|           Type = [BoolType] bool
# 4485|           Value = [CStyleCast] 0
# 4485|           ValueCategory = prvalue
# 4486|     getStmt(592): [DoStmt] do (...) ...
# 4488|       getCondition(): [Literal] 0
# 4488|           Type = [IntType] int
# 4488|           Value = [Literal] 0
# 4488|           ValueCategory = prvalue
# 4486|       getStmt(): [BlockStmt] { ... }
# 4487|         getStmt(0): [DeclStmt] declaration
# 4487|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x592
# 4487|               Type = [Struct] String
# 4487|             getVariable().getInitializer(): [Initializer] initializer for x592
# 4487|               getExpr(): [ConstructorCall] call to String
# 4487|                   Type = [VoidType] void
# 4487|                   ValueCategory = prvalue
# 4488|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4488|             Type = [VoidType] void
# 4488|             ValueCategory = prvalue
# 4488|           getQualifier(): [VariableAccess] x592
# 4488|               Type = [Struct] String
# 4488|               ValueCategory = lvalue
# 4488|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4488|           Conversion = [BoolConversion] conversion to bool
# 4488|           Type = [BoolType] bool
# 4488|           Value = [CStyleCast] 0
# 4488|           ValueCategory = prvalue
# 4489|     getStmt(593): [DoStmt] do (...) ...
# 4491|       getCondition(): [Literal] 0
# 4491|           Type = [IntType] int
# 4491|           Value = [Literal] 0
# 4491|           ValueCategory = prvalue
# 4489|       getStmt(): [BlockStmt] { ... }
# 4490|         getStmt(0): [DeclStmt] declaration
# 4490|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x593
# 4490|               Type = [Struct] String
# 4490|             getVariable().getInitializer(): [Initializer] initializer for x593
# 4490|               getExpr(): [ConstructorCall] call to String
# 4490|                   Type = [VoidType] void
# 4490|                   ValueCategory = prvalue
# 4491|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4491|             Type = [VoidType] void
# 4491|             ValueCategory = prvalue
# 4491|           getQualifier(): [VariableAccess] x593
# 4491|               Type = [Struct] String
# 4491|               ValueCategory = lvalue
# 4491|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4491|           Conversion = [BoolConversion] conversion to bool
# 4491|           Type = [BoolType] bool
# 4491|           Value = [CStyleCast] 0
# 4491|           ValueCategory = prvalue
# 4492|     getStmt(594): [DoStmt] do (...) ...
# 4494|       getCondition(): [Literal] 0
# 4494|           Type = [IntType] int
# 4494|           Value = [Literal] 0
# 4494|           ValueCategory = prvalue
# 4492|       getStmt(): [BlockStmt] { ... }
# 4493|         getStmt(0): [DeclStmt] declaration
# 4493|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x594
# 4493|               Type = [Struct] String
# 4493|             getVariable().getInitializer(): [Initializer] initializer for x594
# 4493|               getExpr(): [ConstructorCall] call to String
# 4493|                   Type = [VoidType] void
# 4493|                   ValueCategory = prvalue
# 4494|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4494|             Type = [VoidType] void
# 4494|             ValueCategory = prvalue
# 4494|           getQualifier(): [VariableAccess] x594
# 4494|               Type = [Struct] String
# 4494|               ValueCategory = lvalue
# 4494|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4494|           Conversion = [BoolConversion] conversion to bool
# 4494|           Type = [BoolType] bool
# 4494|           Value = [CStyleCast] 0
# 4494|           ValueCategory = prvalue
# 4495|     getStmt(595): [DoStmt] do (...) ...
# 4497|       getCondition(): [Literal] 0
# 4497|           Type = [IntType] int
# 4497|           Value = [Literal] 0
# 4497|           ValueCategory = prvalue
# 4495|       getStmt(): [BlockStmt] { ... }
# 4496|         getStmt(0): [DeclStmt] declaration
# 4496|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x595
# 4496|               Type = [Struct] String
# 4496|             getVariable().getInitializer(): [Initializer] initializer for x595
# 4496|               getExpr(): [ConstructorCall] call to String
# 4496|                   Type = [VoidType] void
# 4496|                   ValueCategory = prvalue
# 4497|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4497|             Type = [VoidType] void
# 4497|             ValueCategory = prvalue
# 4497|           getQualifier(): [VariableAccess] x595
# 4497|               Type = [Struct] String
# 4497|               ValueCategory = lvalue
# 4497|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4497|           Conversion = [BoolConversion] conversion to bool
# 4497|           Type = [BoolType] bool
# 4497|           Value = [CStyleCast] 0
# 4497|           ValueCategory = prvalue
# 4498|     getStmt(596): [DoStmt] do (...) ...
# 4500|       getCondition(): [Literal] 0
# 4500|           Type = [IntType] int
# 4500|           Value = [Literal] 0
# 4500|           ValueCategory = prvalue
# 4498|       getStmt(): [BlockStmt] { ... }
# 4499|         getStmt(0): [DeclStmt] declaration
# 4499|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x596
# 4499|               Type = [Struct] String
# 4499|             getVariable().getInitializer(): [Initializer] initializer for x596
# 4499|               getExpr(): [ConstructorCall] call to String
# 4499|                   Type = [VoidType] void
# 4499|                   ValueCategory = prvalue
# 4500|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4500|             Type = [VoidType] void
# 4500|             ValueCategory = prvalue
# 4500|           getQualifier(): [VariableAccess] x596
# 4500|               Type = [Struct] String
# 4500|               ValueCategory = lvalue
# 4500|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4500|           Conversion = [BoolConversion] conversion to bool
# 4500|           Type = [BoolType] bool
# 4500|           Value = [CStyleCast] 0
# 4500|           ValueCategory = prvalue
# 4501|     getStmt(597): [DoStmt] do (...) ...
# 4503|       getCondition(): [Literal] 0
# 4503|           Type = [IntType] int
# 4503|           Value = [Literal] 0
# 4503|           ValueCategory = prvalue
# 4501|       getStmt(): [BlockStmt] { ... }
# 4502|         getStmt(0): [DeclStmt] declaration
# 4502|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x597
# 4502|               Type = [Struct] String
# 4502|             getVariable().getInitializer(): [Initializer] initializer for x597
# 4502|               getExpr(): [ConstructorCall] call to String
# 4502|                   Type = [VoidType] void
# 4502|                   ValueCategory = prvalue
# 4503|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4503|             Type = [VoidType] void
# 4503|             ValueCategory = prvalue
# 4503|           getQualifier(): [VariableAccess] x597
# 4503|               Type = [Struct] String
# 4503|               ValueCategory = lvalue
# 4503|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4503|           Conversion = [BoolConversion] conversion to bool
# 4503|           Type = [BoolType] bool
# 4503|           Value = [CStyleCast] 0
# 4503|           ValueCategory = prvalue
# 4504|     getStmt(598): [DoStmt] do (...) ...
# 4506|       getCondition(): [Literal] 0
# 4506|           Type = [IntType] int
# 4506|           Value = [Literal] 0
# 4506|           ValueCategory = prvalue
# 4504|       getStmt(): [BlockStmt] { ... }
# 4505|         getStmt(0): [DeclStmt] declaration
# 4505|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x598
# 4505|               Type = [Struct] String
# 4505|             getVariable().getInitializer(): [Initializer] initializer for x598
# 4505|               getExpr(): [ConstructorCall] call to String
# 4505|                   Type = [VoidType] void
# 4505|                   ValueCategory = prvalue
# 4506|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4506|             Type = [VoidType] void
# 4506|             ValueCategory = prvalue
# 4506|           getQualifier(): [VariableAccess] x598
# 4506|               Type = [Struct] String
# 4506|               ValueCategory = lvalue
# 4506|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4506|           Conversion = [BoolConversion] conversion to bool
# 4506|           Type = [BoolType] bool
# 4506|           Value = [CStyleCast] 0
# 4506|           ValueCategory = prvalue
# 4507|     getStmt(599): [DoStmt] do (...) ...
# 4509|       getCondition(): [Literal] 0
# 4509|           Type = [IntType] int
# 4509|           Value = [Literal] 0
# 4509|           ValueCategory = prvalue
# 4507|       getStmt(): [BlockStmt] { ... }
# 4508|         getStmt(0): [DeclStmt] declaration
# 4508|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x599
# 4508|               Type = [Struct] String
# 4508|             getVariable().getInitializer(): [Initializer] initializer for x599
# 4508|               getExpr(): [ConstructorCall] call to String
# 4508|                   Type = [VoidType] void
# 4508|                   ValueCategory = prvalue
# 4509|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4509|             Type = [VoidType] void
# 4509|             ValueCategory = prvalue
# 4509|           getQualifier(): [VariableAccess] x599
# 4509|               Type = [Struct] String
# 4509|               ValueCategory = lvalue
# 4509|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4509|           Conversion = [BoolConversion] conversion to bool
# 4509|           Type = [BoolType] bool
# 4509|           Value = [CStyleCast] 0
# 4509|           ValueCategory = prvalue
# 4510|     getStmt(600): [DoStmt] do (...) ...
# 4512|       getCondition(): [Literal] 0
# 4512|           Type = [IntType] int
# 4512|           Value = [Literal] 0
# 4512|           ValueCategory = prvalue
# 4510|       getStmt(): [BlockStmt] { ... }
# 4511|         getStmt(0): [DeclStmt] declaration
# 4511|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x600
# 4511|               Type = [Struct] String
# 4511|             getVariable().getInitializer(): [Initializer] initializer for x600
# 4511|               getExpr(): [ConstructorCall] call to String
# 4511|                   Type = [VoidType] void
# 4511|                   ValueCategory = prvalue
# 4512|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4512|             Type = [VoidType] void
# 4512|             ValueCategory = prvalue
# 4512|           getQualifier(): [VariableAccess] x600
# 4512|               Type = [Struct] String
# 4512|               ValueCategory = lvalue
# 4512|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4512|           Conversion = [BoolConversion] conversion to bool
# 4512|           Type = [BoolType] bool
# 4512|           Value = [CStyleCast] 0
# 4512|           ValueCategory = prvalue
# 4513|     getStmt(601): [DoStmt] do (...) ...
# 4515|       getCondition(): [Literal] 0
# 4515|           Type = [IntType] int
# 4515|           Value = [Literal] 0
# 4515|           ValueCategory = prvalue
# 4513|       getStmt(): [BlockStmt] { ... }
# 4514|         getStmt(0): [DeclStmt] declaration
# 4514|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x601
# 4514|               Type = [Struct] String
# 4514|             getVariable().getInitializer(): [Initializer] initializer for x601
# 4514|               getExpr(): [ConstructorCall] call to String
# 4514|                   Type = [VoidType] void
# 4514|                   ValueCategory = prvalue
# 4515|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4515|             Type = [VoidType] void
# 4515|             ValueCategory = prvalue
# 4515|           getQualifier(): [VariableAccess] x601
# 4515|               Type = [Struct] String
# 4515|               ValueCategory = lvalue
# 4515|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4515|           Conversion = [BoolConversion] conversion to bool
# 4515|           Type = [BoolType] bool
# 4515|           Value = [CStyleCast] 0
# 4515|           ValueCategory = prvalue
# 4516|     getStmt(602): [DoStmt] do (...) ...
# 4518|       getCondition(): [Literal] 0
# 4518|           Type = [IntType] int
# 4518|           Value = [Literal] 0
# 4518|           ValueCategory = prvalue
# 4516|       getStmt(): [BlockStmt] { ... }
# 4517|         getStmt(0): [DeclStmt] declaration
# 4517|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x602
# 4517|               Type = [Struct] String
# 4517|             getVariable().getInitializer(): [Initializer] initializer for x602
# 4517|               getExpr(): [ConstructorCall] call to String
# 4517|                   Type = [VoidType] void
# 4517|                   ValueCategory = prvalue
# 4518|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4518|             Type = [VoidType] void
# 4518|             ValueCategory = prvalue
# 4518|           getQualifier(): [VariableAccess] x602
# 4518|               Type = [Struct] String
# 4518|               ValueCategory = lvalue
# 4518|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4518|           Conversion = [BoolConversion] conversion to bool
# 4518|           Type = [BoolType] bool
# 4518|           Value = [CStyleCast] 0
# 4518|           ValueCategory = prvalue
# 4519|     getStmt(603): [DoStmt] do (...) ...
# 4521|       getCondition(): [Literal] 0
# 4521|           Type = [IntType] int
# 4521|           Value = [Literal] 0
# 4521|           ValueCategory = prvalue
# 4519|       getStmt(): [BlockStmt] { ... }
# 4520|         getStmt(0): [DeclStmt] declaration
# 4520|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x603
# 4520|               Type = [Struct] String
# 4520|             getVariable().getInitializer(): [Initializer] initializer for x603
# 4520|               getExpr(): [ConstructorCall] call to String
# 4520|                   Type = [VoidType] void
# 4520|                   ValueCategory = prvalue
# 4521|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4521|             Type = [VoidType] void
# 4521|             ValueCategory = prvalue
# 4521|           getQualifier(): [VariableAccess] x603
# 4521|               Type = [Struct] String
# 4521|               ValueCategory = lvalue
# 4521|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4521|           Conversion = [BoolConversion] conversion to bool
# 4521|           Type = [BoolType] bool
# 4521|           Value = [CStyleCast] 0
# 4521|           ValueCategory = prvalue
# 4522|     getStmt(604): [DoStmt] do (...) ...
# 4524|       getCondition(): [Literal] 0
# 4524|           Type = [IntType] int
# 4524|           Value = [Literal] 0
# 4524|           ValueCategory = prvalue
# 4522|       getStmt(): [BlockStmt] { ... }
# 4523|         getStmt(0): [DeclStmt] declaration
# 4523|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x604
# 4523|               Type = [Struct] String
# 4523|             getVariable().getInitializer(): [Initializer] initializer for x604
# 4523|               getExpr(): [ConstructorCall] call to String
# 4523|                   Type = [VoidType] void
# 4523|                   ValueCategory = prvalue
# 4524|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4524|             Type = [VoidType] void
# 4524|             ValueCategory = prvalue
# 4524|           getQualifier(): [VariableAccess] x604
# 4524|               Type = [Struct] String
# 4524|               ValueCategory = lvalue
# 4524|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4524|           Conversion = [BoolConversion] conversion to bool
# 4524|           Type = [BoolType] bool
# 4524|           Value = [CStyleCast] 0
# 4524|           ValueCategory = prvalue
# 4525|     getStmt(605): [DoStmt] do (...) ...
# 4527|       getCondition(): [Literal] 0
# 4527|           Type = [IntType] int
# 4527|           Value = [Literal] 0
# 4527|           ValueCategory = prvalue
# 4525|       getStmt(): [BlockStmt] { ... }
# 4526|         getStmt(0): [DeclStmt] declaration
# 4526|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x605
# 4526|               Type = [Struct] String
# 4526|             getVariable().getInitializer(): [Initializer] initializer for x605
# 4526|               getExpr(): [ConstructorCall] call to String
# 4526|                   Type = [VoidType] void
# 4526|                   ValueCategory = prvalue
# 4527|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4527|             Type = [VoidType] void
# 4527|             ValueCategory = prvalue
# 4527|           getQualifier(): [VariableAccess] x605
# 4527|               Type = [Struct] String
# 4527|               ValueCategory = lvalue
# 4527|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4527|           Conversion = [BoolConversion] conversion to bool
# 4527|           Type = [BoolType] bool
# 4527|           Value = [CStyleCast] 0
# 4527|           ValueCategory = prvalue
# 4528|     getStmt(606): [DoStmt] do (...) ...
# 4530|       getCondition(): [Literal] 0
# 4530|           Type = [IntType] int
# 4530|           Value = [Literal] 0
# 4530|           ValueCategory = prvalue
# 4528|       getStmt(): [BlockStmt] { ... }
# 4529|         getStmt(0): [DeclStmt] declaration
# 4529|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x606
# 4529|               Type = [Struct] String
# 4529|             getVariable().getInitializer(): [Initializer] initializer for x606
# 4529|               getExpr(): [ConstructorCall] call to String
# 4529|                   Type = [VoidType] void
# 4529|                   ValueCategory = prvalue
# 4530|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4530|             Type = [VoidType] void
# 4530|             ValueCategory = prvalue
# 4530|           getQualifier(): [VariableAccess] x606
# 4530|               Type = [Struct] String
# 4530|               ValueCategory = lvalue
# 4530|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4530|           Conversion = [BoolConversion] conversion to bool
# 4530|           Type = [BoolType] bool
# 4530|           Value = [CStyleCast] 0
# 4530|           ValueCategory = prvalue
# 4531|     getStmt(607): [DoStmt] do (...) ...
# 4533|       getCondition(): [Literal] 0
# 4533|           Type = [IntType] int
# 4533|           Value = [Literal] 0
# 4533|           ValueCategory = prvalue
# 4531|       getStmt(): [BlockStmt] { ... }
# 4532|         getStmt(0): [DeclStmt] declaration
# 4532|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x607
# 4532|               Type = [Struct] String
# 4532|             getVariable().getInitializer(): [Initializer] initializer for x607
# 4532|               getExpr(): [ConstructorCall] call to String
# 4532|                   Type = [VoidType] void
# 4532|                   ValueCategory = prvalue
# 4533|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4533|             Type = [VoidType] void
# 4533|             ValueCategory = prvalue
# 4533|           getQualifier(): [VariableAccess] x607
# 4533|               Type = [Struct] String
# 4533|               ValueCategory = lvalue
# 4533|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4533|           Conversion = [BoolConversion] conversion to bool
# 4533|           Type = [BoolType] bool
# 4533|           Value = [CStyleCast] 0
# 4533|           ValueCategory = prvalue
# 4534|     getStmt(608): [DoStmt] do (...) ...
# 4536|       getCondition(): [Literal] 0
# 4536|           Type = [IntType] int
# 4536|           Value = [Literal] 0
# 4536|           ValueCategory = prvalue
# 4534|       getStmt(): [BlockStmt] { ... }
# 4535|         getStmt(0): [DeclStmt] declaration
# 4535|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x608
# 4535|               Type = [Struct] String
# 4535|             getVariable().getInitializer(): [Initializer] initializer for x608
# 4535|               getExpr(): [ConstructorCall] call to String
# 4535|                   Type = [VoidType] void
# 4535|                   ValueCategory = prvalue
# 4536|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4536|             Type = [VoidType] void
# 4536|             ValueCategory = prvalue
# 4536|           getQualifier(): [VariableAccess] x608
# 4536|               Type = [Struct] String
# 4536|               ValueCategory = lvalue
# 4536|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4536|           Conversion = [BoolConversion] conversion to bool
# 4536|           Type = [BoolType] bool
# 4536|           Value = [CStyleCast] 0
# 4536|           ValueCategory = prvalue
# 4537|     getStmt(609): [DoStmt] do (...) ...
# 4539|       getCondition(): [Literal] 0
# 4539|           Type = [IntType] int
# 4539|           Value = [Literal] 0
# 4539|           ValueCategory = prvalue
# 4537|       getStmt(): [BlockStmt] { ... }
# 4538|         getStmt(0): [DeclStmt] declaration
# 4538|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x609
# 4538|               Type = [Struct] String
# 4538|             getVariable().getInitializer(): [Initializer] initializer for x609
# 4538|               getExpr(): [ConstructorCall] call to String
# 4538|                   Type = [VoidType] void
# 4538|                   ValueCategory = prvalue
# 4539|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4539|             Type = [VoidType] void
# 4539|             ValueCategory = prvalue
# 4539|           getQualifier(): [VariableAccess] x609
# 4539|               Type = [Struct] String
# 4539|               ValueCategory = lvalue
# 4539|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4539|           Conversion = [BoolConversion] conversion to bool
# 4539|           Type = [BoolType] bool
# 4539|           Value = [CStyleCast] 0
# 4539|           ValueCategory = prvalue
# 4540|     getStmt(610): [DoStmt] do (...) ...
# 4542|       getCondition(): [Literal] 0
# 4542|           Type = [IntType] int
# 4542|           Value = [Literal] 0
# 4542|           ValueCategory = prvalue
# 4540|       getStmt(): [BlockStmt] { ... }
# 4541|         getStmt(0): [DeclStmt] declaration
# 4541|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x610
# 4541|               Type = [Struct] String
# 4541|             getVariable().getInitializer(): [Initializer] initializer for x610
# 4541|               getExpr(): [ConstructorCall] call to String
# 4541|                   Type = [VoidType] void
# 4541|                   ValueCategory = prvalue
# 4542|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4542|             Type = [VoidType] void
# 4542|             ValueCategory = prvalue
# 4542|           getQualifier(): [VariableAccess] x610
# 4542|               Type = [Struct] String
# 4542|               ValueCategory = lvalue
# 4542|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4542|           Conversion = [BoolConversion] conversion to bool
# 4542|           Type = [BoolType] bool
# 4542|           Value = [CStyleCast] 0
# 4542|           ValueCategory = prvalue
# 4543|     getStmt(611): [DoStmt] do (...) ...
# 4545|       getCondition(): [Literal] 0
# 4545|           Type = [IntType] int
# 4545|           Value = [Literal] 0
# 4545|           ValueCategory = prvalue
# 4543|       getStmt(): [BlockStmt] { ... }
# 4544|         getStmt(0): [DeclStmt] declaration
# 4544|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x611
# 4544|               Type = [Struct] String
# 4544|             getVariable().getInitializer(): [Initializer] initializer for x611
# 4544|               getExpr(): [ConstructorCall] call to String
# 4544|                   Type = [VoidType] void
# 4544|                   ValueCategory = prvalue
# 4545|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4545|             Type = [VoidType] void
# 4545|             ValueCategory = prvalue
# 4545|           getQualifier(): [VariableAccess] x611
# 4545|               Type = [Struct] String
# 4545|               ValueCategory = lvalue
# 4545|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4545|           Conversion = [BoolConversion] conversion to bool
# 4545|           Type = [BoolType] bool
# 4545|           Value = [CStyleCast] 0
# 4545|           ValueCategory = prvalue
# 4546|     getStmt(612): [DoStmt] do (...) ...
# 4548|       getCondition(): [Literal] 0
# 4548|           Type = [IntType] int
# 4548|           Value = [Literal] 0
# 4548|           ValueCategory = prvalue
# 4546|       getStmt(): [BlockStmt] { ... }
# 4547|         getStmt(0): [DeclStmt] declaration
# 4547|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x612
# 4547|               Type = [Struct] String
# 4547|             getVariable().getInitializer(): [Initializer] initializer for x612
# 4547|               getExpr(): [ConstructorCall] call to String
# 4547|                   Type = [VoidType] void
# 4547|                   ValueCategory = prvalue
# 4548|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4548|             Type = [VoidType] void
# 4548|             ValueCategory = prvalue
# 4548|           getQualifier(): [VariableAccess] x612
# 4548|               Type = [Struct] String
# 4548|               ValueCategory = lvalue
# 4548|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4548|           Conversion = [BoolConversion] conversion to bool
# 4548|           Type = [BoolType] bool
# 4548|           Value = [CStyleCast] 0
# 4548|           ValueCategory = prvalue
# 4549|     getStmt(613): [DoStmt] do (...) ...
# 4551|       getCondition(): [Literal] 0
# 4551|           Type = [IntType] int
# 4551|           Value = [Literal] 0
# 4551|           ValueCategory = prvalue
# 4549|       getStmt(): [BlockStmt] { ... }
# 4550|         getStmt(0): [DeclStmt] declaration
# 4550|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x613
# 4550|               Type = [Struct] String
# 4550|             getVariable().getInitializer(): [Initializer] initializer for x613
# 4550|               getExpr(): [ConstructorCall] call to String
# 4550|                   Type = [VoidType] void
# 4550|                   ValueCategory = prvalue
# 4551|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4551|             Type = [VoidType] void
# 4551|             ValueCategory = prvalue
# 4551|           getQualifier(): [VariableAccess] x613
# 4551|               Type = [Struct] String
# 4551|               ValueCategory = lvalue
# 4551|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4551|           Conversion = [BoolConversion] conversion to bool
# 4551|           Type = [BoolType] bool
# 4551|           Value = [CStyleCast] 0
# 4551|           ValueCategory = prvalue
# 4552|     getStmt(614): [DoStmt] do (...) ...
# 4554|       getCondition(): [Literal] 0
# 4554|           Type = [IntType] int
# 4554|           Value = [Literal] 0
# 4554|           ValueCategory = prvalue
# 4552|       getStmt(): [BlockStmt] { ... }
# 4553|         getStmt(0): [DeclStmt] declaration
# 4553|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x614
# 4553|               Type = [Struct] String
# 4553|             getVariable().getInitializer(): [Initializer] initializer for x614
# 4553|               getExpr(): [ConstructorCall] call to String
# 4553|                   Type = [VoidType] void
# 4553|                   ValueCategory = prvalue
# 4554|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4554|             Type = [VoidType] void
# 4554|             ValueCategory = prvalue
# 4554|           getQualifier(): [VariableAccess] x614
# 4554|               Type = [Struct] String
# 4554|               ValueCategory = lvalue
# 4554|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4554|           Conversion = [BoolConversion] conversion to bool
# 4554|           Type = [BoolType] bool
# 4554|           Value = [CStyleCast] 0
# 4554|           ValueCategory = prvalue
# 4555|     getStmt(615): [DoStmt] do (...) ...
# 4557|       getCondition(): [Literal] 0
# 4557|           Type = [IntType] int
# 4557|           Value = [Literal] 0
# 4557|           ValueCategory = prvalue
# 4555|       getStmt(): [BlockStmt] { ... }
# 4556|         getStmt(0): [DeclStmt] declaration
# 4556|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x615
# 4556|               Type = [Struct] String
# 4556|             getVariable().getInitializer(): [Initializer] initializer for x615
# 4556|               getExpr(): [ConstructorCall] call to String
# 4556|                   Type = [VoidType] void
# 4556|                   ValueCategory = prvalue
# 4557|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4557|             Type = [VoidType] void
# 4557|             ValueCategory = prvalue
# 4557|           getQualifier(): [VariableAccess] x615
# 4557|               Type = [Struct] String
# 4557|               ValueCategory = lvalue
# 4557|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4557|           Conversion = [BoolConversion] conversion to bool
# 4557|           Type = [BoolType] bool
# 4557|           Value = [CStyleCast] 0
# 4557|           ValueCategory = prvalue
# 4558|     getStmt(616): [DoStmt] do (...) ...
# 4560|       getCondition(): [Literal] 0
# 4560|           Type = [IntType] int
# 4560|           Value = [Literal] 0
# 4560|           ValueCategory = prvalue
# 4558|       getStmt(): [BlockStmt] { ... }
# 4559|         getStmt(0): [DeclStmt] declaration
# 4559|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x616
# 4559|               Type = [Struct] String
# 4559|             getVariable().getInitializer(): [Initializer] initializer for x616
# 4559|               getExpr(): [ConstructorCall] call to String
# 4559|                   Type = [VoidType] void
# 4559|                   ValueCategory = prvalue
# 4560|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4560|             Type = [VoidType] void
# 4560|             ValueCategory = prvalue
# 4560|           getQualifier(): [VariableAccess] x616
# 4560|               Type = [Struct] String
# 4560|               ValueCategory = lvalue
# 4560|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4560|           Conversion = [BoolConversion] conversion to bool
# 4560|           Type = [BoolType] bool
# 4560|           Value = [CStyleCast] 0
# 4560|           ValueCategory = prvalue
# 4561|     getStmt(617): [DoStmt] do (...) ...
# 4563|       getCondition(): [Literal] 0
# 4563|           Type = [IntType] int
# 4563|           Value = [Literal] 0
# 4563|           ValueCategory = prvalue
# 4561|       getStmt(): [BlockStmt] { ... }
# 4562|         getStmt(0): [DeclStmt] declaration
# 4562|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x617
# 4562|               Type = [Struct] String
# 4562|             getVariable().getInitializer(): [Initializer] initializer for x617
# 4562|               getExpr(): [ConstructorCall] call to String
# 4562|                   Type = [VoidType] void
# 4562|                   ValueCategory = prvalue
# 4563|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4563|             Type = [VoidType] void
# 4563|             ValueCategory = prvalue
# 4563|           getQualifier(): [VariableAccess] x617
# 4563|               Type = [Struct] String
# 4563|               ValueCategory = lvalue
# 4563|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4563|           Conversion = [BoolConversion] conversion to bool
# 4563|           Type = [BoolType] bool
# 4563|           Value = [CStyleCast] 0
# 4563|           ValueCategory = prvalue
# 4564|     getStmt(618): [DoStmt] do (...) ...
# 4566|       getCondition(): [Literal] 0
# 4566|           Type = [IntType] int
# 4566|           Value = [Literal] 0
# 4566|           ValueCategory = prvalue
# 4564|       getStmt(): [BlockStmt] { ... }
# 4565|         getStmt(0): [DeclStmt] declaration
# 4565|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x618
# 4565|               Type = [Struct] String
# 4565|             getVariable().getInitializer(): [Initializer] initializer for x618
# 4565|               getExpr(): [ConstructorCall] call to String
# 4565|                   Type = [VoidType] void
# 4565|                   ValueCategory = prvalue
# 4566|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4566|             Type = [VoidType] void
# 4566|             ValueCategory = prvalue
# 4566|           getQualifier(): [VariableAccess] x618
# 4566|               Type = [Struct] String
# 4566|               ValueCategory = lvalue
# 4566|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4566|           Conversion = [BoolConversion] conversion to bool
# 4566|           Type = [BoolType] bool
# 4566|           Value = [CStyleCast] 0
# 4566|           ValueCategory = prvalue
# 4567|     getStmt(619): [DoStmt] do (...) ...
# 4569|       getCondition(): [Literal] 0
# 4569|           Type = [IntType] int
# 4569|           Value = [Literal] 0
# 4569|           ValueCategory = prvalue
# 4567|       getStmt(): [BlockStmt] { ... }
# 4568|         getStmt(0): [DeclStmt] declaration
# 4568|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x619
# 4568|               Type = [Struct] String
# 4568|             getVariable().getInitializer(): [Initializer] initializer for x619
# 4568|               getExpr(): [ConstructorCall] call to String
# 4568|                   Type = [VoidType] void
# 4568|                   ValueCategory = prvalue
# 4569|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4569|             Type = [VoidType] void
# 4569|             ValueCategory = prvalue
# 4569|           getQualifier(): [VariableAccess] x619
# 4569|               Type = [Struct] String
# 4569|               ValueCategory = lvalue
# 4569|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4569|           Conversion = [BoolConversion] conversion to bool
# 4569|           Type = [BoolType] bool
# 4569|           Value = [CStyleCast] 0
# 4569|           ValueCategory = prvalue
# 4570|     getStmt(620): [DoStmt] do (...) ...
# 4572|       getCondition(): [Literal] 0
# 4572|           Type = [IntType] int
# 4572|           Value = [Literal] 0
# 4572|           ValueCategory = prvalue
# 4570|       getStmt(): [BlockStmt] { ... }
# 4571|         getStmt(0): [DeclStmt] declaration
# 4571|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x620
# 4571|               Type = [Struct] String
# 4571|             getVariable().getInitializer(): [Initializer] initializer for x620
# 4571|               getExpr(): [ConstructorCall] call to String
# 4571|                   Type = [VoidType] void
# 4571|                   ValueCategory = prvalue
# 4572|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4572|             Type = [VoidType] void
# 4572|             ValueCategory = prvalue
# 4572|           getQualifier(): [VariableAccess] x620
# 4572|               Type = [Struct] String
# 4572|               ValueCategory = lvalue
# 4572|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4572|           Conversion = [BoolConversion] conversion to bool
# 4572|           Type = [BoolType] bool
# 4572|           Value = [CStyleCast] 0
# 4572|           ValueCategory = prvalue
# 4573|     getStmt(621): [DoStmt] do (...) ...
# 4575|       getCondition(): [Literal] 0
# 4575|           Type = [IntType] int
# 4575|           Value = [Literal] 0
# 4575|           ValueCategory = prvalue
# 4573|       getStmt(): [BlockStmt] { ... }
# 4574|         getStmt(0): [DeclStmt] declaration
# 4574|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x621
# 4574|               Type = [Struct] String
# 4574|             getVariable().getInitializer(): [Initializer] initializer for x621
# 4574|               getExpr(): [ConstructorCall] call to String
# 4574|                   Type = [VoidType] void
# 4574|                   ValueCategory = prvalue
# 4575|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4575|             Type = [VoidType] void
# 4575|             ValueCategory = prvalue
# 4575|           getQualifier(): [VariableAccess] x621
# 4575|               Type = [Struct] String
# 4575|               ValueCategory = lvalue
# 4575|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4575|           Conversion = [BoolConversion] conversion to bool
# 4575|           Type = [BoolType] bool
# 4575|           Value = [CStyleCast] 0
# 4575|           ValueCategory = prvalue
# 4576|     getStmt(622): [DoStmt] do (...) ...
# 4578|       getCondition(): [Literal] 0
# 4578|           Type = [IntType] int
# 4578|           Value = [Literal] 0
# 4578|           ValueCategory = prvalue
# 4576|       getStmt(): [BlockStmt] { ... }
# 4577|         getStmt(0): [DeclStmt] declaration
# 4577|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x622
# 4577|               Type = [Struct] String
# 4577|             getVariable().getInitializer(): [Initializer] initializer for x622
# 4577|               getExpr(): [ConstructorCall] call to String
# 4577|                   Type = [VoidType] void
# 4577|                   ValueCategory = prvalue
# 4578|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4578|             Type = [VoidType] void
# 4578|             ValueCategory = prvalue
# 4578|           getQualifier(): [VariableAccess] x622
# 4578|               Type = [Struct] String
# 4578|               ValueCategory = lvalue
# 4578|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4578|           Conversion = [BoolConversion] conversion to bool
# 4578|           Type = [BoolType] bool
# 4578|           Value = [CStyleCast] 0
# 4578|           ValueCategory = prvalue
# 4579|     getStmt(623): [DoStmt] do (...) ...
# 4581|       getCondition(): [Literal] 0
# 4581|           Type = [IntType] int
# 4581|           Value = [Literal] 0
# 4581|           ValueCategory = prvalue
# 4579|       getStmt(): [BlockStmt] { ... }
# 4580|         getStmt(0): [DeclStmt] declaration
# 4580|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x623
# 4580|               Type = [Struct] String
# 4580|             getVariable().getInitializer(): [Initializer] initializer for x623
# 4580|               getExpr(): [ConstructorCall] call to String
# 4580|                   Type = [VoidType] void
# 4580|                   ValueCategory = prvalue
# 4581|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4581|             Type = [VoidType] void
# 4581|             ValueCategory = prvalue
# 4581|           getQualifier(): [VariableAccess] x623
# 4581|               Type = [Struct] String
# 4581|               ValueCategory = lvalue
# 4581|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4581|           Conversion = [BoolConversion] conversion to bool
# 4581|           Type = [BoolType] bool
# 4581|           Value = [CStyleCast] 0
# 4581|           ValueCategory = prvalue
# 4582|     getStmt(624): [DoStmt] do (...) ...
# 4584|       getCondition(): [Literal] 0
# 4584|           Type = [IntType] int
# 4584|           Value = [Literal] 0
# 4584|           ValueCategory = prvalue
# 4582|       getStmt(): [BlockStmt] { ... }
# 4583|         getStmt(0): [DeclStmt] declaration
# 4583|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x624
# 4583|               Type = [Struct] String
# 4583|             getVariable().getInitializer(): [Initializer] initializer for x624
# 4583|               getExpr(): [ConstructorCall] call to String
# 4583|                   Type = [VoidType] void
# 4583|                   ValueCategory = prvalue
# 4584|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4584|             Type = [VoidType] void
# 4584|             ValueCategory = prvalue
# 4584|           getQualifier(): [VariableAccess] x624
# 4584|               Type = [Struct] String
# 4584|               ValueCategory = lvalue
# 4584|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4584|           Conversion = [BoolConversion] conversion to bool
# 4584|           Type = [BoolType] bool
# 4584|           Value = [CStyleCast] 0
# 4584|           ValueCategory = prvalue
# 4585|     getStmt(625): [DoStmt] do (...) ...
# 4587|       getCondition(): [Literal] 0
# 4587|           Type = [IntType] int
# 4587|           Value = [Literal] 0
# 4587|           ValueCategory = prvalue
# 4585|       getStmt(): [BlockStmt] { ... }
# 4586|         getStmt(0): [DeclStmt] declaration
# 4586|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x625
# 4586|               Type = [Struct] String
# 4586|             getVariable().getInitializer(): [Initializer] initializer for x625
# 4586|               getExpr(): [ConstructorCall] call to String
# 4586|                   Type = [VoidType] void
# 4586|                   ValueCategory = prvalue
# 4587|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4587|             Type = [VoidType] void
# 4587|             ValueCategory = prvalue
# 4587|           getQualifier(): [VariableAccess] x625
# 4587|               Type = [Struct] String
# 4587|               ValueCategory = lvalue
# 4587|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4587|           Conversion = [BoolConversion] conversion to bool
# 4587|           Type = [BoolType] bool
# 4587|           Value = [CStyleCast] 0
# 4587|           ValueCategory = prvalue
# 4588|     getStmt(626): [DoStmt] do (...) ...
# 4590|       getCondition(): [Literal] 0
# 4590|           Type = [IntType] int
# 4590|           Value = [Literal] 0
# 4590|           ValueCategory = prvalue
# 4588|       getStmt(): [BlockStmt] { ... }
# 4589|         getStmt(0): [DeclStmt] declaration
# 4589|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x626
# 4589|               Type = [Struct] String
# 4589|             getVariable().getInitializer(): [Initializer] initializer for x626
# 4589|               getExpr(): [ConstructorCall] call to String
# 4589|                   Type = [VoidType] void
# 4589|                   ValueCategory = prvalue
# 4590|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4590|             Type = [VoidType] void
# 4590|             ValueCategory = prvalue
# 4590|           getQualifier(): [VariableAccess] x626
# 4590|               Type = [Struct] String
# 4590|               ValueCategory = lvalue
# 4590|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4590|           Conversion = [BoolConversion] conversion to bool
# 4590|           Type = [BoolType] bool
# 4590|           Value = [CStyleCast] 0
# 4590|           ValueCategory = prvalue
# 4591|     getStmt(627): [DoStmt] do (...) ...
# 4593|       getCondition(): [Literal] 0
# 4593|           Type = [IntType] int
# 4593|           Value = [Literal] 0
# 4593|           ValueCategory = prvalue
# 4591|       getStmt(): [BlockStmt] { ... }
# 4592|         getStmt(0): [DeclStmt] declaration
# 4592|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x627
# 4592|               Type = [Struct] String
# 4592|             getVariable().getInitializer(): [Initializer] initializer for x627
# 4592|               getExpr(): [ConstructorCall] call to String
# 4592|                   Type = [VoidType] void
# 4592|                   ValueCategory = prvalue
# 4593|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4593|             Type = [VoidType] void
# 4593|             ValueCategory = prvalue
# 4593|           getQualifier(): [VariableAccess] x627
# 4593|               Type = [Struct] String
# 4593|               ValueCategory = lvalue
# 4593|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4593|           Conversion = [BoolConversion] conversion to bool
# 4593|           Type = [BoolType] bool
# 4593|           Value = [CStyleCast] 0
# 4593|           ValueCategory = prvalue
# 4594|     getStmt(628): [DoStmt] do (...) ...
# 4596|       getCondition(): [Literal] 0
# 4596|           Type = [IntType] int
# 4596|           Value = [Literal] 0
# 4596|           ValueCategory = prvalue
# 4594|       getStmt(): [BlockStmt] { ... }
# 4595|         getStmt(0): [DeclStmt] declaration
# 4595|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x628
# 4595|               Type = [Struct] String
# 4595|             getVariable().getInitializer(): [Initializer] initializer for x628
# 4595|               getExpr(): [ConstructorCall] call to String
# 4595|                   Type = [VoidType] void
# 4595|                   ValueCategory = prvalue
# 4596|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4596|             Type = [VoidType] void
# 4596|             ValueCategory = prvalue
# 4596|           getQualifier(): [VariableAccess] x628
# 4596|               Type = [Struct] String
# 4596|               ValueCategory = lvalue
# 4596|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4596|           Conversion = [BoolConversion] conversion to bool
# 4596|           Type = [BoolType] bool
# 4596|           Value = [CStyleCast] 0
# 4596|           ValueCategory = prvalue
# 4597|     getStmt(629): [DoStmt] do (...) ...
# 4599|       getCondition(): [Literal] 0
# 4599|           Type = [IntType] int
# 4599|           Value = [Literal] 0
# 4599|           ValueCategory = prvalue
# 4597|       getStmt(): [BlockStmt] { ... }
# 4598|         getStmt(0): [DeclStmt] declaration
# 4598|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x629
# 4598|               Type = [Struct] String
# 4598|             getVariable().getInitializer(): [Initializer] initializer for x629
# 4598|               getExpr(): [ConstructorCall] call to String
# 4598|                   Type = [VoidType] void
# 4598|                   ValueCategory = prvalue
# 4599|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4599|             Type = [VoidType] void
# 4599|             ValueCategory = prvalue
# 4599|           getQualifier(): [VariableAccess] x629
# 4599|               Type = [Struct] String
# 4599|               ValueCategory = lvalue
# 4599|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4599|           Conversion = [BoolConversion] conversion to bool
# 4599|           Type = [BoolType] bool
# 4599|           Value = [CStyleCast] 0
# 4599|           ValueCategory = prvalue
# 4600|     getStmt(630): [DoStmt] do (...) ...
# 4602|       getCondition(): [Literal] 0
# 4602|           Type = [IntType] int
# 4602|           Value = [Literal] 0
# 4602|           ValueCategory = prvalue
# 4600|       getStmt(): [BlockStmt] { ... }
# 4601|         getStmt(0): [DeclStmt] declaration
# 4601|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x630
# 4601|               Type = [Struct] String
# 4601|             getVariable().getInitializer(): [Initializer] initializer for x630
# 4601|               getExpr(): [ConstructorCall] call to String
# 4601|                   Type = [VoidType] void
# 4601|                   ValueCategory = prvalue
# 4602|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4602|             Type = [VoidType] void
# 4602|             ValueCategory = prvalue
# 4602|           getQualifier(): [VariableAccess] x630
# 4602|               Type = [Struct] String
# 4602|               ValueCategory = lvalue
# 4602|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4602|           Conversion = [BoolConversion] conversion to bool
# 4602|           Type = [BoolType] bool
# 4602|           Value = [CStyleCast] 0
# 4602|           ValueCategory = prvalue
# 4603|     getStmt(631): [DoStmt] do (...) ...
# 4605|       getCondition(): [Literal] 0
# 4605|           Type = [IntType] int
# 4605|           Value = [Literal] 0
# 4605|           ValueCategory = prvalue
# 4603|       getStmt(): [BlockStmt] { ... }
# 4604|         getStmt(0): [DeclStmt] declaration
# 4604|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x631
# 4604|               Type = [Struct] String
# 4604|             getVariable().getInitializer(): [Initializer] initializer for x631
# 4604|               getExpr(): [ConstructorCall] call to String
# 4604|                   Type = [VoidType] void
# 4604|                   ValueCategory = prvalue
# 4605|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4605|             Type = [VoidType] void
# 4605|             ValueCategory = prvalue
# 4605|           getQualifier(): [VariableAccess] x631
# 4605|               Type = [Struct] String
# 4605|               ValueCategory = lvalue
# 4605|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4605|           Conversion = [BoolConversion] conversion to bool
# 4605|           Type = [BoolType] bool
# 4605|           Value = [CStyleCast] 0
# 4605|           ValueCategory = prvalue
# 4606|     getStmt(632): [DoStmt] do (...) ...
# 4608|       getCondition(): [Literal] 0
# 4608|           Type = [IntType] int
# 4608|           Value = [Literal] 0
# 4608|           ValueCategory = prvalue
# 4606|       getStmt(): [BlockStmt] { ... }
# 4607|         getStmt(0): [DeclStmt] declaration
# 4607|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x632
# 4607|               Type = [Struct] String
# 4607|             getVariable().getInitializer(): [Initializer] initializer for x632
# 4607|               getExpr(): [ConstructorCall] call to String
# 4607|                   Type = [VoidType] void
# 4607|                   ValueCategory = prvalue
# 4608|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4608|             Type = [VoidType] void
# 4608|             ValueCategory = prvalue
# 4608|           getQualifier(): [VariableAccess] x632
# 4608|               Type = [Struct] String
# 4608|               ValueCategory = lvalue
# 4608|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4608|           Conversion = [BoolConversion] conversion to bool
# 4608|           Type = [BoolType] bool
# 4608|           Value = [CStyleCast] 0
# 4608|           ValueCategory = prvalue
# 4609|     getStmt(633): [DoStmt] do (...) ...
# 4611|       getCondition(): [Literal] 0
# 4611|           Type = [IntType] int
# 4611|           Value = [Literal] 0
# 4611|           ValueCategory = prvalue
# 4609|       getStmt(): [BlockStmt] { ... }
# 4610|         getStmt(0): [DeclStmt] declaration
# 4610|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x633
# 4610|               Type = [Struct] String
# 4610|             getVariable().getInitializer(): [Initializer] initializer for x633
# 4610|               getExpr(): [ConstructorCall] call to String
# 4610|                   Type = [VoidType] void
# 4610|                   ValueCategory = prvalue
# 4611|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4611|             Type = [VoidType] void
# 4611|             ValueCategory = prvalue
# 4611|           getQualifier(): [VariableAccess] x633
# 4611|               Type = [Struct] String
# 4611|               ValueCategory = lvalue
# 4611|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4611|           Conversion = [BoolConversion] conversion to bool
# 4611|           Type = [BoolType] bool
# 4611|           Value = [CStyleCast] 0
# 4611|           ValueCategory = prvalue
# 4612|     getStmt(634): [DoStmt] do (...) ...
# 4614|       getCondition(): [Literal] 0
# 4614|           Type = [IntType] int
# 4614|           Value = [Literal] 0
# 4614|           ValueCategory = prvalue
# 4612|       getStmt(): [BlockStmt] { ... }
# 4613|         getStmt(0): [DeclStmt] declaration
# 4613|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x634
# 4613|               Type = [Struct] String
# 4613|             getVariable().getInitializer(): [Initializer] initializer for x634
# 4613|               getExpr(): [ConstructorCall] call to String
# 4613|                   Type = [VoidType] void
# 4613|                   ValueCategory = prvalue
# 4614|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4614|             Type = [VoidType] void
# 4614|             ValueCategory = prvalue
# 4614|           getQualifier(): [VariableAccess] x634
# 4614|               Type = [Struct] String
# 4614|               ValueCategory = lvalue
# 4614|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4614|           Conversion = [BoolConversion] conversion to bool
# 4614|           Type = [BoolType] bool
# 4614|           Value = [CStyleCast] 0
# 4614|           ValueCategory = prvalue
# 4615|     getStmt(635): [DoStmt] do (...) ...
# 4617|       getCondition(): [Literal] 0
# 4617|           Type = [IntType] int
# 4617|           Value = [Literal] 0
# 4617|           ValueCategory = prvalue
# 4615|       getStmt(): [BlockStmt] { ... }
# 4616|         getStmt(0): [DeclStmt] declaration
# 4616|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x635
# 4616|               Type = [Struct] String
# 4616|             getVariable().getInitializer(): [Initializer] initializer for x635
# 4616|               getExpr(): [ConstructorCall] call to String
# 4616|                   Type = [VoidType] void
# 4616|                   ValueCategory = prvalue
# 4617|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4617|             Type = [VoidType] void
# 4617|             ValueCategory = prvalue
# 4617|           getQualifier(): [VariableAccess] x635
# 4617|               Type = [Struct] String
# 4617|               ValueCategory = lvalue
# 4617|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4617|           Conversion = [BoolConversion] conversion to bool
# 4617|           Type = [BoolType] bool
# 4617|           Value = [CStyleCast] 0
# 4617|           ValueCategory = prvalue
# 4618|     getStmt(636): [DoStmt] do (...) ...
# 4620|       getCondition(): [Literal] 0
# 4620|           Type = [IntType] int
# 4620|           Value = [Literal] 0
# 4620|           ValueCategory = prvalue
# 4618|       getStmt(): [BlockStmt] { ... }
# 4619|         getStmt(0): [DeclStmt] declaration
# 4619|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x636
# 4619|               Type = [Struct] String
# 4619|             getVariable().getInitializer(): [Initializer] initializer for x636
# 4619|               getExpr(): [ConstructorCall] call to String
# 4619|                   Type = [VoidType] void
# 4619|                   ValueCategory = prvalue
# 4620|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4620|             Type = [VoidType] void
# 4620|             ValueCategory = prvalue
# 4620|           getQualifier(): [VariableAccess] x636
# 4620|               Type = [Struct] String
# 4620|               ValueCategory = lvalue
# 4620|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4620|           Conversion = [BoolConversion] conversion to bool
# 4620|           Type = [BoolType] bool
# 4620|           Value = [CStyleCast] 0
# 4620|           ValueCategory = prvalue
# 4621|     getStmt(637): [DoStmt] do (...) ...
# 4623|       getCondition(): [Literal] 0
# 4623|           Type = [IntType] int
# 4623|           Value = [Literal] 0
# 4623|           ValueCategory = prvalue
# 4621|       getStmt(): [BlockStmt] { ... }
# 4622|         getStmt(0): [DeclStmt] declaration
# 4622|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x637
# 4622|               Type = [Struct] String
# 4622|             getVariable().getInitializer(): [Initializer] initializer for x637
# 4622|               getExpr(): [ConstructorCall] call to String
# 4622|                   Type = [VoidType] void
# 4622|                   ValueCategory = prvalue
# 4623|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4623|             Type = [VoidType] void
# 4623|             ValueCategory = prvalue
# 4623|           getQualifier(): [VariableAccess] x637
# 4623|               Type = [Struct] String
# 4623|               ValueCategory = lvalue
# 4623|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4623|           Conversion = [BoolConversion] conversion to bool
# 4623|           Type = [BoolType] bool
# 4623|           Value = [CStyleCast] 0
# 4623|           ValueCategory = prvalue
# 4624|     getStmt(638): [DoStmt] do (...) ...
# 4626|       getCondition(): [Literal] 0
# 4626|           Type = [IntType] int
# 4626|           Value = [Literal] 0
# 4626|           ValueCategory = prvalue
# 4624|       getStmt(): [BlockStmt] { ... }
# 4625|         getStmt(0): [DeclStmt] declaration
# 4625|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x638
# 4625|               Type = [Struct] String
# 4625|             getVariable().getInitializer(): [Initializer] initializer for x638
# 4625|               getExpr(): [ConstructorCall] call to String
# 4625|                   Type = [VoidType] void
# 4625|                   ValueCategory = prvalue
# 4626|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4626|             Type = [VoidType] void
# 4626|             ValueCategory = prvalue
# 4626|           getQualifier(): [VariableAccess] x638
# 4626|               Type = [Struct] String
# 4626|               ValueCategory = lvalue
# 4626|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4626|           Conversion = [BoolConversion] conversion to bool
# 4626|           Type = [BoolType] bool
# 4626|           Value = [CStyleCast] 0
# 4626|           ValueCategory = prvalue
# 4627|     getStmt(639): [DoStmt] do (...) ...
# 4629|       getCondition(): [Literal] 0
# 4629|           Type = [IntType] int
# 4629|           Value = [Literal] 0
# 4629|           ValueCategory = prvalue
# 4627|       getStmt(): [BlockStmt] { ... }
# 4628|         getStmt(0): [DeclStmt] declaration
# 4628|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x639
# 4628|               Type = [Struct] String
# 4628|             getVariable().getInitializer(): [Initializer] initializer for x639
# 4628|               getExpr(): [ConstructorCall] call to String
# 4628|                   Type = [VoidType] void
# 4628|                   ValueCategory = prvalue
# 4629|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4629|             Type = [VoidType] void
# 4629|             ValueCategory = prvalue
# 4629|           getQualifier(): [VariableAccess] x639
# 4629|               Type = [Struct] String
# 4629|               ValueCategory = lvalue
# 4629|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4629|           Conversion = [BoolConversion] conversion to bool
# 4629|           Type = [BoolType] bool
# 4629|           Value = [CStyleCast] 0
# 4629|           ValueCategory = prvalue
# 4630|     getStmt(640): [DoStmt] do (...) ...
# 4632|       getCondition(): [Literal] 0
# 4632|           Type = [IntType] int
# 4632|           Value = [Literal] 0
# 4632|           ValueCategory = prvalue
# 4630|       getStmt(): [BlockStmt] { ... }
# 4631|         getStmt(0): [DeclStmt] declaration
# 4631|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x640
# 4631|               Type = [Struct] String
# 4631|             getVariable().getInitializer(): [Initializer] initializer for x640
# 4631|               getExpr(): [ConstructorCall] call to String
# 4631|                   Type = [VoidType] void
# 4631|                   ValueCategory = prvalue
# 4632|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4632|             Type = [VoidType] void
# 4632|             ValueCategory = prvalue
# 4632|           getQualifier(): [VariableAccess] x640
# 4632|               Type = [Struct] String
# 4632|               ValueCategory = lvalue
# 4632|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4632|           Conversion = [BoolConversion] conversion to bool
# 4632|           Type = [BoolType] bool
# 4632|           Value = [CStyleCast] 0
# 4632|           ValueCategory = prvalue
# 4633|     getStmt(641): [DoStmt] do (...) ...
# 4635|       getCondition(): [Literal] 0
# 4635|           Type = [IntType] int
# 4635|           Value = [Literal] 0
# 4635|           ValueCategory = prvalue
# 4633|       getStmt(): [BlockStmt] { ... }
# 4634|         getStmt(0): [DeclStmt] declaration
# 4634|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x641
# 4634|               Type = [Struct] String
# 4634|             getVariable().getInitializer(): [Initializer] initializer for x641
# 4634|               getExpr(): [ConstructorCall] call to String
# 4634|                   Type = [VoidType] void
# 4634|                   ValueCategory = prvalue
# 4635|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4635|             Type = [VoidType] void
# 4635|             ValueCategory = prvalue
# 4635|           getQualifier(): [VariableAccess] x641
# 4635|               Type = [Struct] String
# 4635|               ValueCategory = lvalue
# 4635|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4635|           Conversion = [BoolConversion] conversion to bool
# 4635|           Type = [BoolType] bool
# 4635|           Value = [CStyleCast] 0
# 4635|           ValueCategory = prvalue
# 4636|     getStmt(642): [DoStmt] do (...) ...
# 4638|       getCondition(): [Literal] 0
# 4638|           Type = [IntType] int
# 4638|           Value = [Literal] 0
# 4638|           ValueCategory = prvalue
# 4636|       getStmt(): [BlockStmt] { ... }
# 4637|         getStmt(0): [DeclStmt] declaration
# 4637|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x642
# 4637|               Type = [Struct] String
# 4637|             getVariable().getInitializer(): [Initializer] initializer for x642
# 4637|               getExpr(): [ConstructorCall] call to String
# 4637|                   Type = [VoidType] void
# 4637|                   ValueCategory = prvalue
# 4638|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4638|             Type = [VoidType] void
# 4638|             ValueCategory = prvalue
# 4638|           getQualifier(): [VariableAccess] x642
# 4638|               Type = [Struct] String
# 4638|               ValueCategory = lvalue
# 4638|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4638|           Conversion = [BoolConversion] conversion to bool
# 4638|           Type = [BoolType] bool
# 4638|           Value = [CStyleCast] 0
# 4638|           ValueCategory = prvalue
# 4639|     getStmt(643): [DoStmt] do (...) ...
# 4641|       getCondition(): [Literal] 0
# 4641|           Type = [IntType] int
# 4641|           Value = [Literal] 0
# 4641|           ValueCategory = prvalue
# 4639|       getStmt(): [BlockStmt] { ... }
# 4640|         getStmt(0): [DeclStmt] declaration
# 4640|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x643
# 4640|               Type = [Struct] String
# 4640|             getVariable().getInitializer(): [Initializer] initializer for x643
# 4640|               getExpr(): [ConstructorCall] call to String
# 4640|                   Type = [VoidType] void
# 4640|                   ValueCategory = prvalue
# 4641|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4641|             Type = [VoidType] void
# 4641|             ValueCategory = prvalue
# 4641|           getQualifier(): [VariableAccess] x643
# 4641|               Type = [Struct] String
# 4641|               ValueCategory = lvalue
# 4641|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4641|           Conversion = [BoolConversion] conversion to bool
# 4641|           Type = [BoolType] bool
# 4641|           Value = [CStyleCast] 0
# 4641|           ValueCategory = prvalue
# 4642|     getStmt(644): [DoStmt] do (...) ...
# 4644|       getCondition(): [Literal] 0
# 4644|           Type = [IntType] int
# 4644|           Value = [Literal] 0
# 4644|           ValueCategory = prvalue
# 4642|       getStmt(): [BlockStmt] { ... }
# 4643|         getStmt(0): [DeclStmt] declaration
# 4643|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x644
# 4643|               Type = [Struct] String
# 4643|             getVariable().getInitializer(): [Initializer] initializer for x644
# 4643|               getExpr(): [ConstructorCall] call to String
# 4643|                   Type = [VoidType] void
# 4643|                   ValueCategory = prvalue
# 4644|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4644|             Type = [VoidType] void
# 4644|             ValueCategory = prvalue
# 4644|           getQualifier(): [VariableAccess] x644
# 4644|               Type = [Struct] String
# 4644|               ValueCategory = lvalue
# 4644|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4644|           Conversion = [BoolConversion] conversion to bool
# 4644|           Type = [BoolType] bool
# 4644|           Value = [CStyleCast] 0
# 4644|           ValueCategory = prvalue
# 4645|     getStmt(645): [DoStmt] do (...) ...
# 4647|       getCondition(): [Literal] 0
# 4647|           Type = [IntType] int
# 4647|           Value = [Literal] 0
# 4647|           ValueCategory = prvalue
# 4645|       getStmt(): [BlockStmt] { ... }
# 4646|         getStmt(0): [DeclStmt] declaration
# 4646|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x645
# 4646|               Type = [Struct] String
# 4646|             getVariable().getInitializer(): [Initializer] initializer for x645
# 4646|               getExpr(): [ConstructorCall] call to String
# 4646|                   Type = [VoidType] void
# 4646|                   ValueCategory = prvalue
# 4647|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4647|             Type = [VoidType] void
# 4647|             ValueCategory = prvalue
# 4647|           getQualifier(): [VariableAccess] x645
# 4647|               Type = [Struct] String
# 4647|               ValueCategory = lvalue
# 4647|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4647|           Conversion = [BoolConversion] conversion to bool
# 4647|           Type = [BoolType] bool
# 4647|           Value = [CStyleCast] 0
# 4647|           ValueCategory = prvalue
# 4648|     getStmt(646): [DoStmt] do (...) ...
# 4650|       getCondition(): [Literal] 0
# 4650|           Type = [IntType] int
# 4650|           Value = [Literal] 0
# 4650|           ValueCategory = prvalue
# 4648|       getStmt(): [BlockStmt] { ... }
# 4649|         getStmt(0): [DeclStmt] declaration
# 4649|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x646
# 4649|               Type = [Struct] String
# 4649|             getVariable().getInitializer(): [Initializer] initializer for x646
# 4649|               getExpr(): [ConstructorCall] call to String
# 4649|                   Type = [VoidType] void
# 4649|                   ValueCategory = prvalue
# 4650|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4650|             Type = [VoidType] void
# 4650|             ValueCategory = prvalue
# 4650|           getQualifier(): [VariableAccess] x646
# 4650|               Type = [Struct] String
# 4650|               ValueCategory = lvalue
# 4650|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4650|           Conversion = [BoolConversion] conversion to bool
# 4650|           Type = [BoolType] bool
# 4650|           Value = [CStyleCast] 0
# 4650|           ValueCategory = prvalue
# 4651|     getStmt(647): [DoStmt] do (...) ...
# 4653|       getCondition(): [Literal] 0
# 4653|           Type = [IntType] int
# 4653|           Value = [Literal] 0
# 4653|           ValueCategory = prvalue
# 4651|       getStmt(): [BlockStmt] { ... }
# 4652|         getStmt(0): [DeclStmt] declaration
# 4652|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x647
# 4652|               Type = [Struct] String
# 4652|             getVariable().getInitializer(): [Initializer] initializer for x647
# 4652|               getExpr(): [ConstructorCall] call to String
# 4652|                   Type = [VoidType] void
# 4652|                   ValueCategory = prvalue
# 4653|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4653|             Type = [VoidType] void
# 4653|             ValueCategory = prvalue
# 4653|           getQualifier(): [VariableAccess] x647
# 4653|               Type = [Struct] String
# 4653|               ValueCategory = lvalue
# 4653|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4653|           Conversion = [BoolConversion] conversion to bool
# 4653|           Type = [BoolType] bool
# 4653|           Value = [CStyleCast] 0
# 4653|           ValueCategory = prvalue
# 4654|     getStmt(648): [DoStmt] do (...) ...
# 4656|       getCondition(): [Literal] 0
# 4656|           Type = [IntType] int
# 4656|           Value = [Literal] 0
# 4656|           ValueCategory = prvalue
# 4654|       getStmt(): [BlockStmt] { ... }
# 4655|         getStmt(0): [DeclStmt] declaration
# 4655|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x648
# 4655|               Type = [Struct] String
# 4655|             getVariable().getInitializer(): [Initializer] initializer for x648
# 4655|               getExpr(): [ConstructorCall] call to String
# 4655|                   Type = [VoidType] void
# 4655|                   ValueCategory = prvalue
# 4656|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4656|             Type = [VoidType] void
# 4656|             ValueCategory = prvalue
# 4656|           getQualifier(): [VariableAccess] x648
# 4656|               Type = [Struct] String
# 4656|               ValueCategory = lvalue
# 4656|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4656|           Conversion = [BoolConversion] conversion to bool
# 4656|           Type = [BoolType] bool
# 4656|           Value = [CStyleCast] 0
# 4656|           ValueCategory = prvalue
# 4657|     getStmt(649): [DoStmt] do (...) ...
# 4659|       getCondition(): [Literal] 0
# 4659|           Type = [IntType] int
# 4659|           Value = [Literal] 0
# 4659|           ValueCategory = prvalue
# 4657|       getStmt(): [BlockStmt] { ... }
# 4658|         getStmt(0): [DeclStmt] declaration
# 4658|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x649
# 4658|               Type = [Struct] String
# 4658|             getVariable().getInitializer(): [Initializer] initializer for x649
# 4658|               getExpr(): [ConstructorCall] call to String
# 4658|                   Type = [VoidType] void
# 4658|                   ValueCategory = prvalue
# 4659|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4659|             Type = [VoidType] void
# 4659|             ValueCategory = prvalue
# 4659|           getQualifier(): [VariableAccess] x649
# 4659|               Type = [Struct] String
# 4659|               ValueCategory = lvalue
# 4659|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4659|           Conversion = [BoolConversion] conversion to bool
# 4659|           Type = [BoolType] bool
# 4659|           Value = [CStyleCast] 0
# 4659|           ValueCategory = prvalue
# 4660|     getStmt(650): [DoStmt] do (...) ...
# 4662|       getCondition(): [Literal] 0
# 4662|           Type = [IntType] int
# 4662|           Value = [Literal] 0
# 4662|           ValueCategory = prvalue
# 4660|       getStmt(): [BlockStmt] { ... }
# 4661|         getStmt(0): [DeclStmt] declaration
# 4661|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x650
# 4661|               Type = [Struct] String
# 4661|             getVariable().getInitializer(): [Initializer] initializer for x650
# 4661|               getExpr(): [ConstructorCall] call to String
# 4661|                   Type = [VoidType] void
# 4661|                   ValueCategory = prvalue
# 4662|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4662|             Type = [VoidType] void
# 4662|             ValueCategory = prvalue
# 4662|           getQualifier(): [VariableAccess] x650
# 4662|               Type = [Struct] String
# 4662|               ValueCategory = lvalue
# 4662|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4662|           Conversion = [BoolConversion] conversion to bool
# 4662|           Type = [BoolType] bool
# 4662|           Value = [CStyleCast] 0
# 4662|           ValueCategory = prvalue
# 4663|     getStmt(651): [DoStmt] do (...) ...
# 4665|       getCondition(): [Literal] 0
# 4665|           Type = [IntType] int
# 4665|           Value = [Literal] 0
# 4665|           ValueCategory = prvalue
# 4663|       getStmt(): [BlockStmt] { ... }
# 4664|         getStmt(0): [DeclStmt] declaration
# 4664|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x651
# 4664|               Type = [Struct] String
# 4664|             getVariable().getInitializer(): [Initializer] initializer for x651
# 4664|               getExpr(): [ConstructorCall] call to String
# 4664|                   Type = [VoidType] void
# 4664|                   ValueCategory = prvalue
# 4665|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4665|             Type = [VoidType] void
# 4665|             ValueCategory = prvalue
# 4665|           getQualifier(): [VariableAccess] x651
# 4665|               Type = [Struct] String
# 4665|               ValueCategory = lvalue
# 4665|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4665|           Conversion = [BoolConversion] conversion to bool
# 4665|           Type = [BoolType] bool
# 4665|           Value = [CStyleCast] 0
# 4665|           ValueCategory = prvalue
# 4666|     getStmt(652): [DoStmt] do (...) ...
# 4668|       getCondition(): [Literal] 0
# 4668|           Type = [IntType] int
# 4668|           Value = [Literal] 0
# 4668|           ValueCategory = prvalue
# 4666|       getStmt(): [BlockStmt] { ... }
# 4667|         getStmt(0): [DeclStmt] declaration
# 4667|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x652
# 4667|               Type = [Struct] String
# 4667|             getVariable().getInitializer(): [Initializer] initializer for x652
# 4667|               getExpr(): [ConstructorCall] call to String
# 4667|                   Type = [VoidType] void
# 4667|                   ValueCategory = prvalue
# 4668|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4668|             Type = [VoidType] void
# 4668|             ValueCategory = prvalue
# 4668|           getQualifier(): [VariableAccess] x652
# 4668|               Type = [Struct] String
# 4668|               ValueCategory = lvalue
# 4668|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4668|           Conversion = [BoolConversion] conversion to bool
# 4668|           Type = [BoolType] bool
# 4668|           Value = [CStyleCast] 0
# 4668|           ValueCategory = prvalue
# 4669|     getStmt(653): [DoStmt] do (...) ...
# 4671|       getCondition(): [Literal] 0
# 4671|           Type = [IntType] int
# 4671|           Value = [Literal] 0
# 4671|           ValueCategory = prvalue
# 4669|       getStmt(): [BlockStmt] { ... }
# 4670|         getStmt(0): [DeclStmt] declaration
# 4670|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x653
# 4670|               Type = [Struct] String
# 4670|             getVariable().getInitializer(): [Initializer] initializer for x653
# 4670|               getExpr(): [ConstructorCall] call to String
# 4670|                   Type = [VoidType] void
# 4670|                   ValueCategory = prvalue
# 4671|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4671|             Type = [VoidType] void
# 4671|             ValueCategory = prvalue
# 4671|           getQualifier(): [VariableAccess] x653
# 4671|               Type = [Struct] String
# 4671|               ValueCategory = lvalue
# 4671|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4671|           Conversion = [BoolConversion] conversion to bool
# 4671|           Type = [BoolType] bool
# 4671|           Value = [CStyleCast] 0
# 4671|           ValueCategory = prvalue
# 4672|     getStmt(654): [DoStmt] do (...) ...
# 4674|       getCondition(): [Literal] 0
# 4674|           Type = [IntType] int
# 4674|           Value = [Literal] 0
# 4674|           ValueCategory = prvalue
# 4672|       getStmt(): [BlockStmt] { ... }
# 4673|         getStmt(0): [DeclStmt] declaration
# 4673|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x654
# 4673|               Type = [Struct] String
# 4673|             getVariable().getInitializer(): [Initializer] initializer for x654
# 4673|               getExpr(): [ConstructorCall] call to String
# 4673|                   Type = [VoidType] void
# 4673|                   ValueCategory = prvalue
# 4674|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4674|             Type = [VoidType] void
# 4674|             ValueCategory = prvalue
# 4674|           getQualifier(): [VariableAccess] x654
# 4674|               Type = [Struct] String
# 4674|               ValueCategory = lvalue
# 4674|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4674|           Conversion = [BoolConversion] conversion to bool
# 4674|           Type = [BoolType] bool
# 4674|           Value = [CStyleCast] 0
# 4674|           ValueCategory = prvalue
# 4675|     getStmt(655): [DoStmt] do (...) ...
# 4677|       getCondition(): [Literal] 0
# 4677|           Type = [IntType] int
# 4677|           Value = [Literal] 0
# 4677|           ValueCategory = prvalue
# 4675|       getStmt(): [BlockStmt] { ... }
# 4676|         getStmt(0): [DeclStmt] declaration
# 4676|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x655
# 4676|               Type = [Struct] String
# 4676|             getVariable().getInitializer(): [Initializer] initializer for x655
# 4676|               getExpr(): [ConstructorCall] call to String
# 4676|                   Type = [VoidType] void
# 4676|                   ValueCategory = prvalue
# 4677|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4677|             Type = [VoidType] void
# 4677|             ValueCategory = prvalue
# 4677|           getQualifier(): [VariableAccess] x655
# 4677|               Type = [Struct] String
# 4677|               ValueCategory = lvalue
# 4677|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4677|           Conversion = [BoolConversion] conversion to bool
# 4677|           Type = [BoolType] bool
# 4677|           Value = [CStyleCast] 0
# 4677|           ValueCategory = prvalue
# 4678|     getStmt(656): [DoStmt] do (...) ...
# 4680|       getCondition(): [Literal] 0
# 4680|           Type = [IntType] int
# 4680|           Value = [Literal] 0
# 4680|           ValueCategory = prvalue
# 4678|       getStmt(): [BlockStmt] { ... }
# 4679|         getStmt(0): [DeclStmt] declaration
# 4679|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x656
# 4679|               Type = [Struct] String
# 4679|             getVariable().getInitializer(): [Initializer] initializer for x656
# 4679|               getExpr(): [ConstructorCall] call to String
# 4679|                   Type = [VoidType] void
# 4679|                   ValueCategory = prvalue
# 4680|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4680|             Type = [VoidType] void
# 4680|             ValueCategory = prvalue
# 4680|           getQualifier(): [VariableAccess] x656
# 4680|               Type = [Struct] String
# 4680|               ValueCategory = lvalue
# 4680|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4680|           Conversion = [BoolConversion] conversion to bool
# 4680|           Type = [BoolType] bool
# 4680|           Value = [CStyleCast] 0
# 4680|           ValueCategory = prvalue
# 4681|     getStmt(657): [DoStmt] do (...) ...
# 4683|       getCondition(): [Literal] 0
# 4683|           Type = [IntType] int
# 4683|           Value = [Literal] 0
# 4683|           ValueCategory = prvalue
# 4681|       getStmt(): [BlockStmt] { ... }
# 4682|         getStmt(0): [DeclStmt] declaration
# 4682|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x657
# 4682|               Type = [Struct] String
# 4682|             getVariable().getInitializer(): [Initializer] initializer for x657
# 4682|               getExpr(): [ConstructorCall] call to String
# 4682|                   Type = [VoidType] void
# 4682|                   ValueCategory = prvalue
# 4683|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4683|             Type = [VoidType] void
# 4683|             ValueCategory = prvalue
# 4683|           getQualifier(): [VariableAccess] x657
# 4683|               Type = [Struct] String
# 4683|               ValueCategory = lvalue
# 4683|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4683|           Conversion = [BoolConversion] conversion to bool
# 4683|           Type = [BoolType] bool
# 4683|           Value = [CStyleCast] 0
# 4683|           ValueCategory = prvalue
# 4684|     getStmt(658): [DoStmt] do (...) ...
# 4686|       getCondition(): [Literal] 0
# 4686|           Type = [IntType] int
# 4686|           Value = [Literal] 0
# 4686|           ValueCategory = prvalue
# 4684|       getStmt(): [BlockStmt] { ... }
# 4685|         getStmt(0): [DeclStmt] declaration
# 4685|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x658
# 4685|               Type = [Struct] String
# 4685|             getVariable().getInitializer(): [Initializer] initializer for x658
# 4685|               getExpr(): [ConstructorCall] call to String
# 4685|                   Type = [VoidType] void
# 4685|                   ValueCategory = prvalue
# 4686|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4686|             Type = [VoidType] void
# 4686|             ValueCategory = prvalue
# 4686|           getQualifier(): [VariableAccess] x658
# 4686|               Type = [Struct] String
# 4686|               ValueCategory = lvalue
# 4686|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4686|           Conversion = [BoolConversion] conversion to bool
# 4686|           Type = [BoolType] bool
# 4686|           Value = [CStyleCast] 0
# 4686|           ValueCategory = prvalue
# 4687|     getStmt(659): [DoStmt] do (...) ...
# 4689|       getCondition(): [Literal] 0
# 4689|           Type = [IntType] int
# 4689|           Value = [Literal] 0
# 4689|           ValueCategory = prvalue
# 4687|       getStmt(): [BlockStmt] { ... }
# 4688|         getStmt(0): [DeclStmt] declaration
# 4688|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x659
# 4688|               Type = [Struct] String
# 4688|             getVariable().getInitializer(): [Initializer] initializer for x659
# 4688|               getExpr(): [ConstructorCall] call to String
# 4688|                   Type = [VoidType] void
# 4688|                   ValueCategory = prvalue
# 4689|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4689|             Type = [VoidType] void
# 4689|             ValueCategory = prvalue
# 4689|           getQualifier(): [VariableAccess] x659
# 4689|               Type = [Struct] String
# 4689|               ValueCategory = lvalue
# 4689|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4689|           Conversion = [BoolConversion] conversion to bool
# 4689|           Type = [BoolType] bool
# 4689|           Value = [CStyleCast] 0
# 4689|           ValueCategory = prvalue
# 4690|     getStmt(660): [DoStmt] do (...) ...
# 4692|       getCondition(): [Literal] 0
# 4692|           Type = [IntType] int
# 4692|           Value = [Literal] 0
# 4692|           ValueCategory = prvalue
# 4690|       getStmt(): [BlockStmt] { ... }
# 4691|         getStmt(0): [DeclStmt] declaration
# 4691|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x660
# 4691|               Type = [Struct] String
# 4691|             getVariable().getInitializer(): [Initializer] initializer for x660
# 4691|               getExpr(): [ConstructorCall] call to String
# 4691|                   Type = [VoidType] void
# 4691|                   ValueCategory = prvalue
# 4692|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4692|             Type = [VoidType] void
# 4692|             ValueCategory = prvalue
# 4692|           getQualifier(): [VariableAccess] x660
# 4692|               Type = [Struct] String
# 4692|               ValueCategory = lvalue
# 4692|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4692|           Conversion = [BoolConversion] conversion to bool
# 4692|           Type = [BoolType] bool
# 4692|           Value = [CStyleCast] 0
# 4692|           ValueCategory = prvalue
# 4693|     getStmt(661): [DoStmt] do (...) ...
# 4695|       getCondition(): [Literal] 0
# 4695|           Type = [IntType] int
# 4695|           Value = [Literal] 0
# 4695|           ValueCategory = prvalue
# 4693|       getStmt(): [BlockStmt] { ... }
# 4694|         getStmt(0): [DeclStmt] declaration
# 4694|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x661
# 4694|               Type = [Struct] String
# 4694|             getVariable().getInitializer(): [Initializer] initializer for x661
# 4694|               getExpr(): [ConstructorCall] call to String
# 4694|                   Type = [VoidType] void
# 4694|                   ValueCategory = prvalue
# 4695|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4695|             Type = [VoidType] void
# 4695|             ValueCategory = prvalue
# 4695|           getQualifier(): [VariableAccess] x661
# 4695|               Type = [Struct] String
# 4695|               ValueCategory = lvalue
# 4695|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4695|           Conversion = [BoolConversion] conversion to bool
# 4695|           Type = [BoolType] bool
# 4695|           Value = [CStyleCast] 0
# 4695|           ValueCategory = prvalue
# 4696|     getStmt(662): [DoStmt] do (...) ...
# 4698|       getCondition(): [Literal] 0
# 4698|           Type = [IntType] int
# 4698|           Value = [Literal] 0
# 4698|           ValueCategory = prvalue
# 4696|       getStmt(): [BlockStmt] { ... }
# 4697|         getStmt(0): [DeclStmt] declaration
# 4697|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x662
# 4697|               Type = [Struct] String
# 4697|             getVariable().getInitializer(): [Initializer] initializer for x662
# 4697|               getExpr(): [ConstructorCall] call to String
# 4697|                   Type = [VoidType] void
# 4697|                   ValueCategory = prvalue
# 4698|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4698|             Type = [VoidType] void
# 4698|             ValueCategory = prvalue
# 4698|           getQualifier(): [VariableAccess] x662
# 4698|               Type = [Struct] String
# 4698|               ValueCategory = lvalue
# 4698|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4698|           Conversion = [BoolConversion] conversion to bool
# 4698|           Type = [BoolType] bool
# 4698|           Value = [CStyleCast] 0
# 4698|           ValueCategory = prvalue
# 4699|     getStmt(663): [DoStmt] do (...) ...
# 4701|       getCondition(): [Literal] 0
# 4701|           Type = [IntType] int
# 4701|           Value = [Literal] 0
# 4701|           ValueCategory = prvalue
# 4699|       getStmt(): [BlockStmt] { ... }
# 4700|         getStmt(0): [DeclStmt] declaration
# 4700|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x663
# 4700|               Type = [Struct] String
# 4700|             getVariable().getInitializer(): [Initializer] initializer for x663
# 4700|               getExpr(): [ConstructorCall] call to String
# 4700|                   Type = [VoidType] void
# 4700|                   ValueCategory = prvalue
# 4701|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4701|             Type = [VoidType] void
# 4701|             ValueCategory = prvalue
# 4701|           getQualifier(): [VariableAccess] x663
# 4701|               Type = [Struct] String
# 4701|               ValueCategory = lvalue
# 4701|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4701|           Conversion = [BoolConversion] conversion to bool
# 4701|           Type = [BoolType] bool
# 4701|           Value = [CStyleCast] 0
# 4701|           ValueCategory = prvalue
# 4702|     getStmt(664): [DoStmt] do (...) ...
# 4704|       getCondition(): [Literal] 0
# 4704|           Type = [IntType] int
# 4704|           Value = [Literal] 0
# 4704|           ValueCategory = prvalue
# 4702|       getStmt(): [BlockStmt] { ... }
# 4703|         getStmt(0): [DeclStmt] declaration
# 4703|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x664
# 4703|               Type = [Struct] String
# 4703|             getVariable().getInitializer(): [Initializer] initializer for x664
# 4703|               getExpr(): [ConstructorCall] call to String
# 4703|                   Type = [VoidType] void
# 4703|                   ValueCategory = prvalue
# 4704|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4704|             Type = [VoidType] void
# 4704|             ValueCategory = prvalue
# 4704|           getQualifier(): [VariableAccess] x664
# 4704|               Type = [Struct] String
# 4704|               ValueCategory = lvalue
# 4704|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4704|           Conversion = [BoolConversion] conversion to bool
# 4704|           Type = [BoolType] bool
# 4704|           Value = [CStyleCast] 0
# 4704|           ValueCategory = prvalue
# 4705|     getStmt(665): [DoStmt] do (...) ...
# 4707|       getCondition(): [Literal] 0
# 4707|           Type = [IntType] int
# 4707|           Value = [Literal] 0
# 4707|           ValueCategory = prvalue
# 4705|       getStmt(): [BlockStmt] { ... }
# 4706|         getStmt(0): [DeclStmt] declaration
# 4706|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x665
# 4706|               Type = [Struct] String
# 4706|             getVariable().getInitializer(): [Initializer] initializer for x665
# 4706|               getExpr(): [ConstructorCall] call to String
# 4706|                   Type = [VoidType] void
# 4706|                   ValueCategory = prvalue
# 4707|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4707|             Type = [VoidType] void
# 4707|             ValueCategory = prvalue
# 4707|           getQualifier(): [VariableAccess] x665
# 4707|               Type = [Struct] String
# 4707|               ValueCategory = lvalue
# 4707|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4707|           Conversion = [BoolConversion] conversion to bool
# 4707|           Type = [BoolType] bool
# 4707|           Value = [CStyleCast] 0
# 4707|           ValueCategory = prvalue
# 4708|     getStmt(666): [DoStmt] do (...) ...
# 4710|       getCondition(): [Literal] 0
# 4710|           Type = [IntType] int
# 4710|           Value = [Literal] 0
# 4710|           ValueCategory = prvalue
# 4708|       getStmt(): [BlockStmt] { ... }
# 4709|         getStmt(0): [DeclStmt] declaration
# 4709|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x666
# 4709|               Type = [Struct] String
# 4709|             getVariable().getInitializer(): [Initializer] initializer for x666
# 4709|               getExpr(): [ConstructorCall] call to String
# 4709|                   Type = [VoidType] void
# 4709|                   ValueCategory = prvalue
# 4710|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4710|             Type = [VoidType] void
# 4710|             ValueCategory = prvalue
# 4710|           getQualifier(): [VariableAccess] x666
# 4710|               Type = [Struct] String
# 4710|               ValueCategory = lvalue
# 4710|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4710|           Conversion = [BoolConversion] conversion to bool
# 4710|           Type = [BoolType] bool
# 4710|           Value = [CStyleCast] 0
# 4710|           ValueCategory = prvalue
# 4711|     getStmt(667): [DoStmt] do (...) ...
# 4713|       getCondition(): [Literal] 0
# 4713|           Type = [IntType] int
# 4713|           Value = [Literal] 0
# 4713|           ValueCategory = prvalue
# 4711|       getStmt(): [BlockStmt] { ... }
# 4712|         getStmt(0): [DeclStmt] declaration
# 4712|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x667
# 4712|               Type = [Struct] String
# 4712|             getVariable().getInitializer(): [Initializer] initializer for x667
# 4712|               getExpr(): [ConstructorCall] call to String
# 4712|                   Type = [VoidType] void
# 4712|                   ValueCategory = prvalue
# 4713|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4713|             Type = [VoidType] void
# 4713|             ValueCategory = prvalue
# 4713|           getQualifier(): [VariableAccess] x667
# 4713|               Type = [Struct] String
# 4713|               ValueCategory = lvalue
# 4713|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4713|           Conversion = [BoolConversion] conversion to bool
# 4713|           Type = [BoolType] bool
# 4713|           Value = [CStyleCast] 0
# 4713|           ValueCategory = prvalue
# 4714|     getStmt(668): [DoStmt] do (...) ...
# 4716|       getCondition(): [Literal] 0
# 4716|           Type = [IntType] int
# 4716|           Value = [Literal] 0
# 4716|           ValueCategory = prvalue
# 4714|       getStmt(): [BlockStmt] { ... }
# 4715|         getStmt(0): [DeclStmt] declaration
# 4715|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x668
# 4715|               Type = [Struct] String
# 4715|             getVariable().getInitializer(): [Initializer] initializer for x668
# 4715|               getExpr(): [ConstructorCall] call to String
# 4715|                   Type = [VoidType] void
# 4715|                   ValueCategory = prvalue
# 4716|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4716|             Type = [VoidType] void
# 4716|             ValueCategory = prvalue
# 4716|           getQualifier(): [VariableAccess] x668
# 4716|               Type = [Struct] String
# 4716|               ValueCategory = lvalue
# 4716|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4716|           Conversion = [BoolConversion] conversion to bool
# 4716|           Type = [BoolType] bool
# 4716|           Value = [CStyleCast] 0
# 4716|           ValueCategory = prvalue
# 4717|     getStmt(669): [DoStmt] do (...) ...
# 4719|       getCondition(): [Literal] 0
# 4719|           Type = [IntType] int
# 4719|           Value = [Literal] 0
# 4719|           ValueCategory = prvalue
# 4717|       getStmt(): [BlockStmt] { ... }
# 4718|         getStmt(0): [DeclStmt] declaration
# 4718|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x669
# 4718|               Type = [Struct] String
# 4718|             getVariable().getInitializer(): [Initializer] initializer for x669
# 4718|               getExpr(): [ConstructorCall] call to String
# 4718|                   Type = [VoidType] void
# 4718|                   ValueCategory = prvalue
# 4719|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4719|             Type = [VoidType] void
# 4719|             ValueCategory = prvalue
# 4719|           getQualifier(): [VariableAccess] x669
# 4719|               Type = [Struct] String
# 4719|               ValueCategory = lvalue
# 4719|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4719|           Conversion = [BoolConversion] conversion to bool
# 4719|           Type = [BoolType] bool
# 4719|           Value = [CStyleCast] 0
# 4719|           ValueCategory = prvalue
# 4720|     getStmt(670): [DoStmt] do (...) ...
# 4722|       getCondition(): [Literal] 0
# 4722|           Type = [IntType] int
# 4722|           Value = [Literal] 0
# 4722|           ValueCategory = prvalue
# 4720|       getStmt(): [BlockStmt] { ... }
# 4721|         getStmt(0): [DeclStmt] declaration
# 4721|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x670
# 4721|               Type = [Struct] String
# 4721|             getVariable().getInitializer(): [Initializer] initializer for x670
# 4721|               getExpr(): [ConstructorCall] call to String
# 4721|                   Type = [VoidType] void
# 4721|                   ValueCategory = prvalue
# 4722|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4722|             Type = [VoidType] void
# 4722|             ValueCategory = prvalue
# 4722|           getQualifier(): [VariableAccess] x670
# 4722|               Type = [Struct] String
# 4722|               ValueCategory = lvalue
# 4722|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4722|           Conversion = [BoolConversion] conversion to bool
# 4722|           Type = [BoolType] bool
# 4722|           Value = [CStyleCast] 0
# 4722|           ValueCategory = prvalue
# 4723|     getStmt(671): [DoStmt] do (...) ...
# 4725|       getCondition(): [Literal] 0
# 4725|           Type = [IntType] int
# 4725|           Value = [Literal] 0
# 4725|           ValueCategory = prvalue
# 4723|       getStmt(): [BlockStmt] { ... }
# 4724|         getStmt(0): [DeclStmt] declaration
# 4724|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x671
# 4724|               Type = [Struct] String
# 4724|             getVariable().getInitializer(): [Initializer] initializer for x671
# 4724|               getExpr(): [ConstructorCall] call to String
# 4724|                   Type = [VoidType] void
# 4724|                   ValueCategory = prvalue
# 4725|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4725|             Type = [VoidType] void
# 4725|             ValueCategory = prvalue
# 4725|           getQualifier(): [VariableAccess] x671
# 4725|               Type = [Struct] String
# 4725|               ValueCategory = lvalue
# 4725|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4725|           Conversion = [BoolConversion] conversion to bool
# 4725|           Type = [BoolType] bool
# 4725|           Value = [CStyleCast] 0
# 4725|           ValueCategory = prvalue
# 4726|     getStmt(672): [DoStmt] do (...) ...
# 4728|       getCondition(): [Literal] 0
# 4728|           Type = [IntType] int
# 4728|           Value = [Literal] 0
# 4728|           ValueCategory = prvalue
# 4726|       getStmt(): [BlockStmt] { ... }
# 4727|         getStmt(0): [DeclStmt] declaration
# 4727|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x672
# 4727|               Type = [Struct] String
# 4727|             getVariable().getInitializer(): [Initializer] initializer for x672
# 4727|               getExpr(): [ConstructorCall] call to String
# 4727|                   Type = [VoidType] void
# 4727|                   ValueCategory = prvalue
# 4728|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4728|             Type = [VoidType] void
# 4728|             ValueCategory = prvalue
# 4728|           getQualifier(): [VariableAccess] x672
# 4728|               Type = [Struct] String
# 4728|               ValueCategory = lvalue
# 4728|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4728|           Conversion = [BoolConversion] conversion to bool
# 4728|           Type = [BoolType] bool
# 4728|           Value = [CStyleCast] 0
# 4728|           ValueCategory = prvalue
# 4729|     getStmt(673): [DoStmt] do (...) ...
# 4731|       getCondition(): [Literal] 0
# 4731|           Type = [IntType] int
# 4731|           Value = [Literal] 0
# 4731|           ValueCategory = prvalue
# 4729|       getStmt(): [BlockStmt] { ... }
# 4730|         getStmt(0): [DeclStmt] declaration
# 4730|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x673
# 4730|               Type = [Struct] String
# 4730|             getVariable().getInitializer(): [Initializer] initializer for x673
# 4730|               getExpr(): [ConstructorCall] call to String
# 4730|                   Type = [VoidType] void
# 4730|                   ValueCategory = prvalue
# 4731|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4731|             Type = [VoidType] void
# 4731|             ValueCategory = prvalue
# 4731|           getQualifier(): [VariableAccess] x673
# 4731|               Type = [Struct] String
# 4731|               ValueCategory = lvalue
# 4731|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4731|           Conversion = [BoolConversion] conversion to bool
# 4731|           Type = [BoolType] bool
# 4731|           Value = [CStyleCast] 0
# 4731|           ValueCategory = prvalue
# 4732|     getStmt(674): [DoStmt] do (...) ...
# 4734|       getCondition(): [Literal] 0
# 4734|           Type = [IntType] int
# 4734|           Value = [Literal] 0
# 4734|           ValueCategory = prvalue
# 4732|       getStmt(): [BlockStmt] { ... }
# 4733|         getStmt(0): [DeclStmt] declaration
# 4733|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x674
# 4733|               Type = [Struct] String
# 4733|             getVariable().getInitializer(): [Initializer] initializer for x674
# 4733|               getExpr(): [ConstructorCall] call to String
# 4733|                   Type = [VoidType] void
# 4733|                   ValueCategory = prvalue
# 4734|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4734|             Type = [VoidType] void
# 4734|             ValueCategory = prvalue
# 4734|           getQualifier(): [VariableAccess] x674
# 4734|               Type = [Struct] String
# 4734|               ValueCategory = lvalue
# 4734|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4734|           Conversion = [BoolConversion] conversion to bool
# 4734|           Type = [BoolType] bool
# 4734|           Value = [CStyleCast] 0
# 4734|           ValueCategory = prvalue
# 4735|     getStmt(675): [DoStmt] do (...) ...
# 4737|       getCondition(): [Literal] 0
# 4737|           Type = [IntType] int
# 4737|           Value = [Literal] 0
# 4737|           ValueCategory = prvalue
# 4735|       getStmt(): [BlockStmt] { ... }
# 4736|         getStmt(0): [DeclStmt] declaration
# 4736|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x675
# 4736|               Type = [Struct] String
# 4736|             getVariable().getInitializer(): [Initializer] initializer for x675
# 4736|               getExpr(): [ConstructorCall] call to String
# 4736|                   Type = [VoidType] void
# 4736|                   ValueCategory = prvalue
# 4737|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4737|             Type = [VoidType] void
# 4737|             ValueCategory = prvalue
# 4737|           getQualifier(): [VariableAccess] x675
# 4737|               Type = [Struct] String
# 4737|               ValueCategory = lvalue
# 4737|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4737|           Conversion = [BoolConversion] conversion to bool
# 4737|           Type = [BoolType] bool
# 4737|           Value = [CStyleCast] 0
# 4737|           ValueCategory = prvalue
# 4738|     getStmt(676): [DoStmt] do (...) ...
# 4740|       getCondition(): [Literal] 0
# 4740|           Type = [IntType] int
# 4740|           Value = [Literal] 0
# 4740|           ValueCategory = prvalue
# 4738|       getStmt(): [BlockStmt] { ... }
# 4739|         getStmt(0): [DeclStmt] declaration
# 4739|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x676
# 4739|               Type = [Struct] String
# 4739|             getVariable().getInitializer(): [Initializer] initializer for x676
# 4739|               getExpr(): [ConstructorCall] call to String
# 4739|                   Type = [VoidType] void
# 4739|                   ValueCategory = prvalue
# 4740|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4740|             Type = [VoidType] void
# 4740|             ValueCategory = prvalue
# 4740|           getQualifier(): [VariableAccess] x676
# 4740|               Type = [Struct] String
# 4740|               ValueCategory = lvalue
# 4740|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4740|           Conversion = [BoolConversion] conversion to bool
# 4740|           Type = [BoolType] bool
# 4740|           Value = [CStyleCast] 0
# 4740|           ValueCategory = prvalue
# 4741|     getStmt(677): [DoStmt] do (...) ...
# 4743|       getCondition(): [Literal] 0
# 4743|           Type = [IntType] int
# 4743|           Value = [Literal] 0
# 4743|           ValueCategory = prvalue
# 4741|       getStmt(): [BlockStmt] { ... }
# 4742|         getStmt(0): [DeclStmt] declaration
# 4742|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x677
# 4742|               Type = [Struct] String
# 4742|             getVariable().getInitializer(): [Initializer] initializer for x677
# 4742|               getExpr(): [ConstructorCall] call to String
# 4742|                   Type = [VoidType] void
# 4742|                   ValueCategory = prvalue
# 4743|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4743|             Type = [VoidType] void
# 4743|             ValueCategory = prvalue
# 4743|           getQualifier(): [VariableAccess] x677
# 4743|               Type = [Struct] String
# 4743|               ValueCategory = lvalue
# 4743|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4743|           Conversion = [BoolConversion] conversion to bool
# 4743|           Type = [BoolType] bool
# 4743|           Value = [CStyleCast] 0
# 4743|           ValueCategory = prvalue
# 4744|     getStmt(678): [DoStmt] do (...) ...
# 4746|       getCondition(): [Literal] 0
# 4746|           Type = [IntType] int
# 4746|           Value = [Literal] 0
# 4746|           ValueCategory = prvalue
# 4744|       getStmt(): [BlockStmt] { ... }
# 4745|         getStmt(0): [DeclStmt] declaration
# 4745|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x678
# 4745|               Type = [Struct] String
# 4745|             getVariable().getInitializer(): [Initializer] initializer for x678
# 4745|               getExpr(): [ConstructorCall] call to String
# 4745|                   Type = [VoidType] void
# 4745|                   ValueCategory = prvalue
# 4746|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4746|             Type = [VoidType] void
# 4746|             ValueCategory = prvalue
# 4746|           getQualifier(): [VariableAccess] x678
# 4746|               Type = [Struct] String
# 4746|               ValueCategory = lvalue
# 4746|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4746|           Conversion = [BoolConversion] conversion to bool
# 4746|           Type = [BoolType] bool
# 4746|           Value = [CStyleCast] 0
# 4746|           ValueCategory = prvalue
# 4747|     getStmt(679): [DoStmt] do (...) ...
# 4749|       getCondition(): [Literal] 0
# 4749|           Type = [IntType] int
# 4749|           Value = [Literal] 0
# 4749|           ValueCategory = prvalue
# 4747|       getStmt(): [BlockStmt] { ... }
# 4748|         getStmt(0): [DeclStmt] declaration
# 4748|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x679
# 4748|               Type = [Struct] String
# 4748|             getVariable().getInitializer(): [Initializer] initializer for x679
# 4748|               getExpr(): [ConstructorCall] call to String
# 4748|                   Type = [VoidType] void
# 4748|                   ValueCategory = prvalue
# 4749|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4749|             Type = [VoidType] void
# 4749|             ValueCategory = prvalue
# 4749|           getQualifier(): [VariableAccess] x679
# 4749|               Type = [Struct] String
# 4749|               ValueCategory = lvalue
# 4749|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4749|           Conversion = [BoolConversion] conversion to bool
# 4749|           Type = [BoolType] bool
# 4749|           Value = [CStyleCast] 0
# 4749|           ValueCategory = prvalue
# 4750|     getStmt(680): [DoStmt] do (...) ...
# 4752|       getCondition(): [Literal] 0
# 4752|           Type = [IntType] int
# 4752|           Value = [Literal] 0
# 4752|           ValueCategory = prvalue
# 4750|       getStmt(): [BlockStmt] { ... }
# 4751|         getStmt(0): [DeclStmt] declaration
# 4751|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x680
# 4751|               Type = [Struct] String
# 4751|             getVariable().getInitializer(): [Initializer] initializer for x680
# 4751|               getExpr(): [ConstructorCall] call to String
# 4751|                   Type = [VoidType] void
# 4751|                   ValueCategory = prvalue
# 4752|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4752|             Type = [VoidType] void
# 4752|             ValueCategory = prvalue
# 4752|           getQualifier(): [VariableAccess] x680
# 4752|               Type = [Struct] String
# 4752|               ValueCategory = lvalue
# 4752|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4752|           Conversion = [BoolConversion] conversion to bool
# 4752|           Type = [BoolType] bool
# 4752|           Value = [CStyleCast] 0
# 4752|           ValueCategory = prvalue
# 4753|     getStmt(681): [DoStmt] do (...) ...
# 4755|       getCondition(): [Literal] 0
# 4755|           Type = [IntType] int
# 4755|           Value = [Literal] 0
# 4755|           ValueCategory = prvalue
# 4753|       getStmt(): [BlockStmt] { ... }
# 4754|         getStmt(0): [DeclStmt] declaration
# 4754|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x681
# 4754|               Type = [Struct] String
# 4754|             getVariable().getInitializer(): [Initializer] initializer for x681
# 4754|               getExpr(): [ConstructorCall] call to String
# 4754|                   Type = [VoidType] void
# 4754|                   ValueCategory = prvalue
# 4755|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4755|             Type = [VoidType] void
# 4755|             ValueCategory = prvalue
# 4755|           getQualifier(): [VariableAccess] x681
# 4755|               Type = [Struct] String
# 4755|               ValueCategory = lvalue
# 4755|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4755|           Conversion = [BoolConversion] conversion to bool
# 4755|           Type = [BoolType] bool
# 4755|           Value = [CStyleCast] 0
# 4755|           ValueCategory = prvalue
# 4756|     getStmt(682): [DoStmt] do (...) ...
# 4758|       getCondition(): [Literal] 0
# 4758|           Type = [IntType] int
# 4758|           Value = [Literal] 0
# 4758|           ValueCategory = prvalue
# 4756|       getStmt(): [BlockStmt] { ... }
# 4757|         getStmt(0): [DeclStmt] declaration
# 4757|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x682
# 4757|               Type = [Struct] String
# 4757|             getVariable().getInitializer(): [Initializer] initializer for x682
# 4757|               getExpr(): [ConstructorCall] call to String
# 4757|                   Type = [VoidType] void
# 4757|                   ValueCategory = prvalue
# 4758|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4758|             Type = [VoidType] void
# 4758|             ValueCategory = prvalue
# 4758|           getQualifier(): [VariableAccess] x682
# 4758|               Type = [Struct] String
# 4758|               ValueCategory = lvalue
# 4758|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4758|           Conversion = [BoolConversion] conversion to bool
# 4758|           Type = [BoolType] bool
# 4758|           Value = [CStyleCast] 0
# 4758|           ValueCategory = prvalue
# 4759|     getStmt(683): [DoStmt] do (...) ...
# 4761|       getCondition(): [Literal] 0
# 4761|           Type = [IntType] int
# 4761|           Value = [Literal] 0
# 4761|           ValueCategory = prvalue
# 4759|       getStmt(): [BlockStmt] { ... }
# 4760|         getStmt(0): [DeclStmt] declaration
# 4760|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x683
# 4760|               Type = [Struct] String
# 4760|             getVariable().getInitializer(): [Initializer] initializer for x683
# 4760|               getExpr(): [ConstructorCall] call to String
# 4760|                   Type = [VoidType] void
# 4760|                   ValueCategory = prvalue
# 4761|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4761|             Type = [VoidType] void
# 4761|             ValueCategory = prvalue
# 4761|           getQualifier(): [VariableAccess] x683
# 4761|               Type = [Struct] String
# 4761|               ValueCategory = lvalue
# 4761|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4761|           Conversion = [BoolConversion] conversion to bool
# 4761|           Type = [BoolType] bool
# 4761|           Value = [CStyleCast] 0
# 4761|           ValueCategory = prvalue
# 4762|     getStmt(684): [DoStmt] do (...) ...
# 4764|       getCondition(): [Literal] 0
# 4764|           Type = [IntType] int
# 4764|           Value = [Literal] 0
# 4764|           ValueCategory = prvalue
# 4762|       getStmt(): [BlockStmt] { ... }
# 4763|         getStmt(0): [DeclStmt] declaration
# 4763|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x684
# 4763|               Type = [Struct] String
# 4763|             getVariable().getInitializer(): [Initializer] initializer for x684
# 4763|               getExpr(): [ConstructorCall] call to String
# 4763|                   Type = [VoidType] void
# 4763|                   ValueCategory = prvalue
# 4764|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4764|             Type = [VoidType] void
# 4764|             ValueCategory = prvalue
# 4764|           getQualifier(): [VariableAccess] x684
# 4764|               Type = [Struct] String
# 4764|               ValueCategory = lvalue
# 4764|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4764|           Conversion = [BoolConversion] conversion to bool
# 4764|           Type = [BoolType] bool
# 4764|           Value = [CStyleCast] 0
# 4764|           ValueCategory = prvalue
# 4765|     getStmt(685): [DoStmt] do (...) ...
# 4767|       getCondition(): [Literal] 0
# 4767|           Type = [IntType] int
# 4767|           Value = [Literal] 0
# 4767|           ValueCategory = prvalue
# 4765|       getStmt(): [BlockStmt] { ... }
# 4766|         getStmt(0): [DeclStmt] declaration
# 4766|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x685
# 4766|               Type = [Struct] String
# 4766|             getVariable().getInitializer(): [Initializer] initializer for x685
# 4766|               getExpr(): [ConstructorCall] call to String
# 4766|                   Type = [VoidType] void
# 4766|                   ValueCategory = prvalue
# 4767|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4767|             Type = [VoidType] void
# 4767|             ValueCategory = prvalue
# 4767|           getQualifier(): [VariableAccess] x685
# 4767|               Type = [Struct] String
# 4767|               ValueCategory = lvalue
# 4767|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4767|           Conversion = [BoolConversion] conversion to bool
# 4767|           Type = [BoolType] bool
# 4767|           Value = [CStyleCast] 0
# 4767|           ValueCategory = prvalue
# 4768|     getStmt(686): [DoStmt] do (...) ...
# 4770|       getCondition(): [Literal] 0
# 4770|           Type = [IntType] int
# 4770|           Value = [Literal] 0
# 4770|           ValueCategory = prvalue
# 4768|       getStmt(): [BlockStmt] { ... }
# 4769|         getStmt(0): [DeclStmt] declaration
# 4769|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x686
# 4769|               Type = [Struct] String
# 4769|             getVariable().getInitializer(): [Initializer] initializer for x686
# 4769|               getExpr(): [ConstructorCall] call to String
# 4769|                   Type = [VoidType] void
# 4769|                   ValueCategory = prvalue
# 4770|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4770|             Type = [VoidType] void
# 4770|             ValueCategory = prvalue
# 4770|           getQualifier(): [VariableAccess] x686
# 4770|               Type = [Struct] String
# 4770|               ValueCategory = lvalue
# 4770|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4770|           Conversion = [BoolConversion] conversion to bool
# 4770|           Type = [BoolType] bool
# 4770|           Value = [CStyleCast] 0
# 4770|           ValueCategory = prvalue
# 4771|     getStmt(687): [DoStmt] do (...) ...
# 4773|       getCondition(): [Literal] 0
# 4773|           Type = [IntType] int
# 4773|           Value = [Literal] 0
# 4773|           ValueCategory = prvalue
# 4771|       getStmt(): [BlockStmt] { ... }
# 4772|         getStmt(0): [DeclStmt] declaration
# 4772|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x687
# 4772|               Type = [Struct] String
# 4772|             getVariable().getInitializer(): [Initializer] initializer for x687
# 4772|               getExpr(): [ConstructorCall] call to String
# 4772|                   Type = [VoidType] void
# 4772|                   ValueCategory = prvalue
# 4773|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4773|             Type = [VoidType] void
# 4773|             ValueCategory = prvalue
# 4773|           getQualifier(): [VariableAccess] x687
# 4773|               Type = [Struct] String
# 4773|               ValueCategory = lvalue
# 4773|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4773|           Conversion = [BoolConversion] conversion to bool
# 4773|           Type = [BoolType] bool
# 4773|           Value = [CStyleCast] 0
# 4773|           ValueCategory = prvalue
# 4774|     getStmt(688): [DoStmt] do (...) ...
# 4776|       getCondition(): [Literal] 0
# 4776|           Type = [IntType] int
# 4776|           Value = [Literal] 0
# 4776|           ValueCategory = prvalue
# 4774|       getStmt(): [BlockStmt] { ... }
# 4775|         getStmt(0): [DeclStmt] declaration
# 4775|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x688
# 4775|               Type = [Struct] String
# 4775|             getVariable().getInitializer(): [Initializer] initializer for x688
# 4775|               getExpr(): [ConstructorCall] call to String
# 4775|                   Type = [VoidType] void
# 4775|                   ValueCategory = prvalue
# 4776|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4776|             Type = [VoidType] void
# 4776|             ValueCategory = prvalue
# 4776|           getQualifier(): [VariableAccess] x688
# 4776|               Type = [Struct] String
# 4776|               ValueCategory = lvalue
# 4776|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4776|           Conversion = [BoolConversion] conversion to bool
# 4776|           Type = [BoolType] bool
# 4776|           Value = [CStyleCast] 0
# 4776|           ValueCategory = prvalue
# 4777|     getStmt(689): [DoStmt] do (...) ...
# 4779|       getCondition(): [Literal] 0
# 4779|           Type = [IntType] int
# 4779|           Value = [Literal] 0
# 4779|           ValueCategory = prvalue
# 4777|       getStmt(): [BlockStmt] { ... }
# 4778|         getStmt(0): [DeclStmt] declaration
# 4778|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x689
# 4778|               Type = [Struct] String
# 4778|             getVariable().getInitializer(): [Initializer] initializer for x689
# 4778|               getExpr(): [ConstructorCall] call to String
# 4778|                   Type = [VoidType] void
# 4778|                   ValueCategory = prvalue
# 4779|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4779|             Type = [VoidType] void
# 4779|             ValueCategory = prvalue
# 4779|           getQualifier(): [VariableAccess] x689
# 4779|               Type = [Struct] String
# 4779|               ValueCategory = lvalue
# 4779|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4779|           Conversion = [BoolConversion] conversion to bool
# 4779|           Type = [BoolType] bool
# 4779|           Value = [CStyleCast] 0
# 4779|           ValueCategory = prvalue
# 4780|     getStmt(690): [DoStmt] do (...) ...
# 4782|       getCondition(): [Literal] 0
# 4782|           Type = [IntType] int
# 4782|           Value = [Literal] 0
# 4782|           ValueCategory = prvalue
# 4780|       getStmt(): [BlockStmt] { ... }
# 4781|         getStmt(0): [DeclStmt] declaration
# 4781|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x690
# 4781|               Type = [Struct] String
# 4781|             getVariable().getInitializer(): [Initializer] initializer for x690
# 4781|               getExpr(): [ConstructorCall] call to String
# 4781|                   Type = [VoidType] void
# 4781|                   ValueCategory = prvalue
# 4782|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4782|             Type = [VoidType] void
# 4782|             ValueCategory = prvalue
# 4782|           getQualifier(): [VariableAccess] x690
# 4782|               Type = [Struct] String
# 4782|               ValueCategory = lvalue
# 4782|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4782|           Conversion = [BoolConversion] conversion to bool
# 4782|           Type = [BoolType] bool
# 4782|           Value = [CStyleCast] 0
# 4782|           ValueCategory = prvalue
# 4783|     getStmt(691): [DoStmt] do (...) ...
# 4785|       getCondition(): [Literal] 0
# 4785|           Type = [IntType] int
# 4785|           Value = [Literal] 0
# 4785|           ValueCategory = prvalue
# 4783|       getStmt(): [BlockStmt] { ... }
# 4784|         getStmt(0): [DeclStmt] declaration
# 4784|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x691
# 4784|               Type = [Struct] String
# 4784|             getVariable().getInitializer(): [Initializer] initializer for x691
# 4784|               getExpr(): [ConstructorCall] call to String
# 4784|                   Type = [VoidType] void
# 4784|                   ValueCategory = prvalue
# 4785|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4785|             Type = [VoidType] void
# 4785|             ValueCategory = prvalue
# 4785|           getQualifier(): [VariableAccess] x691
# 4785|               Type = [Struct] String
# 4785|               ValueCategory = lvalue
# 4785|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4785|           Conversion = [BoolConversion] conversion to bool
# 4785|           Type = [BoolType] bool
# 4785|           Value = [CStyleCast] 0
# 4785|           ValueCategory = prvalue
# 4786|     getStmt(692): [DoStmt] do (...) ...
# 4788|       getCondition(): [Literal] 0
# 4788|           Type = [IntType] int
# 4788|           Value = [Literal] 0
# 4788|           ValueCategory = prvalue
# 4786|       getStmt(): [BlockStmt] { ... }
# 4787|         getStmt(0): [DeclStmt] declaration
# 4787|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x692
# 4787|               Type = [Struct] String
# 4787|             getVariable().getInitializer(): [Initializer] initializer for x692
# 4787|               getExpr(): [ConstructorCall] call to String
# 4787|                   Type = [VoidType] void
# 4787|                   ValueCategory = prvalue
# 4788|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4788|             Type = [VoidType] void
# 4788|             ValueCategory = prvalue
# 4788|           getQualifier(): [VariableAccess] x692
# 4788|               Type = [Struct] String
# 4788|               ValueCategory = lvalue
# 4788|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4788|           Conversion = [BoolConversion] conversion to bool
# 4788|           Type = [BoolType] bool
# 4788|           Value = [CStyleCast] 0
# 4788|           ValueCategory = prvalue
# 4789|     getStmt(693): [DoStmt] do (...) ...
# 4791|       getCondition(): [Literal] 0
# 4791|           Type = [IntType] int
# 4791|           Value = [Literal] 0
# 4791|           ValueCategory = prvalue
# 4789|       getStmt(): [BlockStmt] { ... }
# 4790|         getStmt(0): [DeclStmt] declaration
# 4790|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x693
# 4790|               Type = [Struct] String
# 4790|             getVariable().getInitializer(): [Initializer] initializer for x693
# 4790|               getExpr(): [ConstructorCall] call to String
# 4790|                   Type = [VoidType] void
# 4790|                   ValueCategory = prvalue
# 4791|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4791|             Type = [VoidType] void
# 4791|             ValueCategory = prvalue
# 4791|           getQualifier(): [VariableAccess] x693
# 4791|               Type = [Struct] String
# 4791|               ValueCategory = lvalue
# 4791|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4791|           Conversion = [BoolConversion] conversion to bool
# 4791|           Type = [BoolType] bool
# 4791|           Value = [CStyleCast] 0
# 4791|           ValueCategory = prvalue
# 4792|     getStmt(694): [DoStmt] do (...) ...
# 4794|       getCondition(): [Literal] 0
# 4794|           Type = [IntType] int
# 4794|           Value = [Literal] 0
# 4794|           ValueCategory = prvalue
# 4792|       getStmt(): [BlockStmt] { ... }
# 4793|         getStmt(0): [DeclStmt] declaration
# 4793|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x694
# 4793|               Type = [Struct] String
# 4793|             getVariable().getInitializer(): [Initializer] initializer for x694
# 4793|               getExpr(): [ConstructorCall] call to String
# 4793|                   Type = [VoidType] void
# 4793|                   ValueCategory = prvalue
# 4794|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4794|             Type = [VoidType] void
# 4794|             ValueCategory = prvalue
# 4794|           getQualifier(): [VariableAccess] x694
# 4794|               Type = [Struct] String
# 4794|               ValueCategory = lvalue
# 4794|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4794|           Conversion = [BoolConversion] conversion to bool
# 4794|           Type = [BoolType] bool
# 4794|           Value = [CStyleCast] 0
# 4794|           ValueCategory = prvalue
# 4795|     getStmt(695): [DoStmt] do (...) ...
# 4797|       getCondition(): [Literal] 0
# 4797|           Type = [IntType] int
# 4797|           Value = [Literal] 0
# 4797|           ValueCategory = prvalue
# 4795|       getStmt(): [BlockStmt] { ... }
# 4796|         getStmt(0): [DeclStmt] declaration
# 4796|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x695
# 4796|               Type = [Struct] String
# 4796|             getVariable().getInitializer(): [Initializer] initializer for x695
# 4796|               getExpr(): [ConstructorCall] call to String
# 4796|                   Type = [VoidType] void
# 4796|                   ValueCategory = prvalue
# 4797|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4797|             Type = [VoidType] void
# 4797|             ValueCategory = prvalue
# 4797|           getQualifier(): [VariableAccess] x695
# 4797|               Type = [Struct] String
# 4797|               ValueCategory = lvalue
# 4797|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4797|           Conversion = [BoolConversion] conversion to bool
# 4797|           Type = [BoolType] bool
# 4797|           Value = [CStyleCast] 0
# 4797|           ValueCategory = prvalue
# 4798|     getStmt(696): [DoStmt] do (...) ...
# 4800|       getCondition(): [Literal] 0
# 4800|           Type = [IntType] int
# 4800|           Value = [Literal] 0
# 4800|           ValueCategory = prvalue
# 4798|       getStmt(): [BlockStmt] { ... }
# 4799|         getStmt(0): [DeclStmt] declaration
# 4799|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x696
# 4799|               Type = [Struct] String
# 4799|             getVariable().getInitializer(): [Initializer] initializer for x696
# 4799|               getExpr(): [ConstructorCall] call to String
# 4799|                   Type = [VoidType] void
# 4799|                   ValueCategory = prvalue
# 4800|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4800|             Type = [VoidType] void
# 4800|             ValueCategory = prvalue
# 4800|           getQualifier(): [VariableAccess] x696
# 4800|               Type = [Struct] String
# 4800|               ValueCategory = lvalue
# 4800|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4800|           Conversion = [BoolConversion] conversion to bool
# 4800|           Type = [BoolType] bool
# 4800|           Value = [CStyleCast] 0
# 4800|           ValueCategory = prvalue
# 4801|     getStmt(697): [DoStmt] do (...) ...
# 4803|       getCondition(): [Literal] 0
# 4803|           Type = [IntType] int
# 4803|           Value = [Literal] 0
# 4803|           ValueCategory = prvalue
# 4801|       getStmt(): [BlockStmt] { ... }
# 4802|         getStmt(0): [DeclStmt] declaration
# 4802|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x697
# 4802|               Type = [Struct] String
# 4802|             getVariable().getInitializer(): [Initializer] initializer for x697
# 4802|               getExpr(): [ConstructorCall] call to String
# 4802|                   Type = [VoidType] void
# 4802|                   ValueCategory = prvalue
# 4803|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4803|             Type = [VoidType] void
# 4803|             ValueCategory = prvalue
# 4803|           getQualifier(): [VariableAccess] x697
# 4803|               Type = [Struct] String
# 4803|               ValueCategory = lvalue
# 4803|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4803|           Conversion = [BoolConversion] conversion to bool
# 4803|           Type = [BoolType] bool
# 4803|           Value = [CStyleCast] 0
# 4803|           ValueCategory = prvalue
# 4804|     getStmt(698): [DoStmt] do (...) ...
# 4806|       getCondition(): [Literal] 0
# 4806|           Type = [IntType] int
# 4806|           Value = [Literal] 0
# 4806|           ValueCategory = prvalue
# 4804|       getStmt(): [BlockStmt] { ... }
# 4805|         getStmt(0): [DeclStmt] declaration
# 4805|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x698
# 4805|               Type = [Struct] String
# 4805|             getVariable().getInitializer(): [Initializer] initializer for x698
# 4805|               getExpr(): [ConstructorCall] call to String
# 4805|                   Type = [VoidType] void
# 4805|                   ValueCategory = prvalue
# 4806|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4806|             Type = [VoidType] void
# 4806|             ValueCategory = prvalue
# 4806|           getQualifier(): [VariableAccess] x698
# 4806|               Type = [Struct] String
# 4806|               ValueCategory = lvalue
# 4806|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4806|           Conversion = [BoolConversion] conversion to bool
# 4806|           Type = [BoolType] bool
# 4806|           Value = [CStyleCast] 0
# 4806|           ValueCategory = prvalue
# 4807|     getStmt(699): [DoStmt] do (...) ...
# 4809|       getCondition(): [Literal] 0
# 4809|           Type = [IntType] int
# 4809|           Value = [Literal] 0
# 4809|           ValueCategory = prvalue
# 4807|       getStmt(): [BlockStmt] { ... }
# 4808|         getStmt(0): [DeclStmt] declaration
# 4808|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x699
# 4808|               Type = [Struct] String
# 4808|             getVariable().getInitializer(): [Initializer] initializer for x699
# 4808|               getExpr(): [ConstructorCall] call to String
# 4808|                   Type = [VoidType] void
# 4808|                   ValueCategory = prvalue
# 4809|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4809|             Type = [VoidType] void
# 4809|             ValueCategory = prvalue
# 4809|           getQualifier(): [VariableAccess] x699
# 4809|               Type = [Struct] String
# 4809|               ValueCategory = lvalue
# 4809|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4809|           Conversion = [BoolConversion] conversion to bool
# 4809|           Type = [BoolType] bool
# 4809|           Value = [CStyleCast] 0
# 4809|           ValueCategory = prvalue
# 4810|     getStmt(700): [DoStmt] do (...) ...
# 4812|       getCondition(): [Literal] 0
# 4812|           Type = [IntType] int
# 4812|           Value = [Literal] 0
# 4812|           ValueCategory = prvalue
# 4810|       getStmt(): [BlockStmt] { ... }
# 4811|         getStmt(0): [DeclStmt] declaration
# 4811|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x700
# 4811|               Type = [Struct] String
# 4811|             getVariable().getInitializer(): [Initializer] initializer for x700
# 4811|               getExpr(): [ConstructorCall] call to String
# 4811|                   Type = [VoidType] void
# 4811|                   ValueCategory = prvalue
# 4812|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4812|             Type = [VoidType] void
# 4812|             ValueCategory = prvalue
# 4812|           getQualifier(): [VariableAccess] x700
# 4812|               Type = [Struct] String
# 4812|               ValueCategory = lvalue
# 4812|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4812|           Conversion = [BoolConversion] conversion to bool
# 4812|           Type = [BoolType] bool
# 4812|           Value = [CStyleCast] 0
# 4812|           ValueCategory = prvalue
# 4813|     getStmt(701): [DoStmt] do (...) ...
# 4815|       getCondition(): [Literal] 0
# 4815|           Type = [IntType] int
# 4815|           Value = [Literal] 0
# 4815|           ValueCategory = prvalue
# 4813|       getStmt(): [BlockStmt] { ... }
# 4814|         getStmt(0): [DeclStmt] declaration
# 4814|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x701
# 4814|               Type = [Struct] String
# 4814|             getVariable().getInitializer(): [Initializer] initializer for x701
# 4814|               getExpr(): [ConstructorCall] call to String
# 4814|                   Type = [VoidType] void
# 4814|                   ValueCategory = prvalue
# 4815|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4815|             Type = [VoidType] void
# 4815|             ValueCategory = prvalue
# 4815|           getQualifier(): [VariableAccess] x701
# 4815|               Type = [Struct] String
# 4815|               ValueCategory = lvalue
# 4815|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4815|           Conversion = [BoolConversion] conversion to bool
# 4815|           Type = [BoolType] bool
# 4815|           Value = [CStyleCast] 0
# 4815|           ValueCategory = prvalue
# 4816|     getStmt(702): [DoStmt] do (...) ...
# 4818|       getCondition(): [Literal] 0
# 4818|           Type = [IntType] int
# 4818|           Value = [Literal] 0
# 4818|           ValueCategory = prvalue
# 4816|       getStmt(): [BlockStmt] { ... }
# 4817|         getStmt(0): [DeclStmt] declaration
# 4817|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x702
# 4817|               Type = [Struct] String
# 4817|             getVariable().getInitializer(): [Initializer] initializer for x702
# 4817|               getExpr(): [ConstructorCall] call to String
# 4817|                   Type = [VoidType] void
# 4817|                   ValueCategory = prvalue
# 4818|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4818|             Type = [VoidType] void
# 4818|             ValueCategory = prvalue
# 4818|           getQualifier(): [VariableAccess] x702
# 4818|               Type = [Struct] String
# 4818|               ValueCategory = lvalue
# 4818|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4818|           Conversion = [BoolConversion] conversion to bool
# 4818|           Type = [BoolType] bool
# 4818|           Value = [CStyleCast] 0
# 4818|           ValueCategory = prvalue
# 4819|     getStmt(703): [DoStmt] do (...) ...
# 4821|       getCondition(): [Literal] 0
# 4821|           Type = [IntType] int
# 4821|           Value = [Literal] 0
# 4821|           ValueCategory = prvalue
# 4819|       getStmt(): [BlockStmt] { ... }
# 4820|         getStmt(0): [DeclStmt] declaration
# 4820|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x703
# 4820|               Type = [Struct] String
# 4820|             getVariable().getInitializer(): [Initializer] initializer for x703
# 4820|               getExpr(): [ConstructorCall] call to String
# 4820|                   Type = [VoidType] void
# 4820|                   ValueCategory = prvalue
# 4821|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4821|             Type = [VoidType] void
# 4821|             ValueCategory = prvalue
# 4821|           getQualifier(): [VariableAccess] x703
# 4821|               Type = [Struct] String
# 4821|               ValueCategory = lvalue
# 4821|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4821|           Conversion = [BoolConversion] conversion to bool
# 4821|           Type = [BoolType] bool
# 4821|           Value = [CStyleCast] 0
# 4821|           ValueCategory = prvalue
# 4822|     getStmt(704): [DoStmt] do (...) ...
# 4824|       getCondition(): [Literal] 0
# 4824|           Type = [IntType] int
# 4824|           Value = [Literal] 0
# 4824|           ValueCategory = prvalue
# 4822|       getStmt(): [BlockStmt] { ... }
# 4823|         getStmt(0): [DeclStmt] declaration
# 4823|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x704
# 4823|               Type = [Struct] String
# 4823|             getVariable().getInitializer(): [Initializer] initializer for x704
# 4823|               getExpr(): [ConstructorCall] call to String
# 4823|                   Type = [VoidType] void
# 4823|                   ValueCategory = prvalue
# 4824|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4824|             Type = [VoidType] void
# 4824|             ValueCategory = prvalue
# 4824|           getQualifier(): [VariableAccess] x704
# 4824|               Type = [Struct] String
# 4824|               ValueCategory = lvalue
# 4824|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4824|           Conversion = [BoolConversion] conversion to bool
# 4824|           Type = [BoolType] bool
# 4824|           Value = [CStyleCast] 0
# 4824|           ValueCategory = prvalue
# 4825|     getStmt(705): [DoStmt] do (...) ...
# 4827|       getCondition(): [Literal] 0
# 4827|           Type = [IntType] int
# 4827|           Value = [Literal] 0
# 4827|           ValueCategory = prvalue
# 4825|       getStmt(): [BlockStmt] { ... }
# 4826|         getStmt(0): [DeclStmt] declaration
# 4826|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x705
# 4826|               Type = [Struct] String
# 4826|             getVariable().getInitializer(): [Initializer] initializer for x705
# 4826|               getExpr(): [ConstructorCall] call to String
# 4826|                   Type = [VoidType] void
# 4826|                   ValueCategory = prvalue
# 4827|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4827|             Type = [VoidType] void
# 4827|             ValueCategory = prvalue
# 4827|           getQualifier(): [VariableAccess] x705
# 4827|               Type = [Struct] String
# 4827|               ValueCategory = lvalue
# 4827|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4827|           Conversion = [BoolConversion] conversion to bool
# 4827|           Type = [BoolType] bool
# 4827|           Value = [CStyleCast] 0
# 4827|           ValueCategory = prvalue
# 4828|     getStmt(706): [DoStmt] do (...) ...
# 4830|       getCondition(): [Literal] 0
# 4830|           Type = [IntType] int
# 4830|           Value = [Literal] 0
# 4830|           ValueCategory = prvalue
# 4828|       getStmt(): [BlockStmt] { ... }
# 4829|         getStmt(0): [DeclStmt] declaration
# 4829|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x706
# 4829|               Type = [Struct] String
# 4829|             getVariable().getInitializer(): [Initializer] initializer for x706
# 4829|               getExpr(): [ConstructorCall] call to String
# 4829|                   Type = [VoidType] void
# 4829|                   ValueCategory = prvalue
# 4830|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4830|             Type = [VoidType] void
# 4830|             ValueCategory = prvalue
# 4830|           getQualifier(): [VariableAccess] x706
# 4830|               Type = [Struct] String
# 4830|               ValueCategory = lvalue
# 4830|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4830|           Conversion = [BoolConversion] conversion to bool
# 4830|           Type = [BoolType] bool
# 4830|           Value = [CStyleCast] 0
# 4830|           ValueCategory = prvalue
# 4831|     getStmt(707): [DoStmt] do (...) ...
# 4833|       getCondition(): [Literal] 0
# 4833|           Type = [IntType] int
# 4833|           Value = [Literal] 0
# 4833|           ValueCategory = prvalue
# 4831|       getStmt(): [BlockStmt] { ... }
# 4832|         getStmt(0): [DeclStmt] declaration
# 4832|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x707
# 4832|               Type = [Struct] String
# 4832|             getVariable().getInitializer(): [Initializer] initializer for x707
# 4832|               getExpr(): [ConstructorCall] call to String
# 4832|                   Type = [VoidType] void
# 4832|                   ValueCategory = prvalue
# 4833|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4833|             Type = [VoidType] void
# 4833|             ValueCategory = prvalue
# 4833|           getQualifier(): [VariableAccess] x707
# 4833|               Type = [Struct] String
# 4833|               ValueCategory = lvalue
# 4833|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4833|           Conversion = [BoolConversion] conversion to bool
# 4833|           Type = [BoolType] bool
# 4833|           Value = [CStyleCast] 0
# 4833|           ValueCategory = prvalue
# 4834|     getStmt(708): [DoStmt] do (...) ...
# 4836|       getCondition(): [Literal] 0
# 4836|           Type = [IntType] int
# 4836|           Value = [Literal] 0
# 4836|           ValueCategory = prvalue
# 4834|       getStmt(): [BlockStmt] { ... }
# 4835|         getStmt(0): [DeclStmt] declaration
# 4835|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x708
# 4835|               Type = [Struct] String
# 4835|             getVariable().getInitializer(): [Initializer] initializer for x708
# 4835|               getExpr(): [ConstructorCall] call to String
# 4835|                   Type = [VoidType] void
# 4835|                   ValueCategory = prvalue
# 4836|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4836|             Type = [VoidType] void
# 4836|             ValueCategory = prvalue
# 4836|           getQualifier(): [VariableAccess] x708
# 4836|               Type = [Struct] String
# 4836|               ValueCategory = lvalue
# 4836|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4836|           Conversion = [BoolConversion] conversion to bool
# 4836|           Type = [BoolType] bool
# 4836|           Value = [CStyleCast] 0
# 4836|           ValueCategory = prvalue
# 4837|     getStmt(709): [DoStmt] do (...) ...
# 4839|       getCondition(): [Literal] 0
# 4839|           Type = [IntType] int
# 4839|           Value = [Literal] 0
# 4839|           ValueCategory = prvalue
# 4837|       getStmt(): [BlockStmt] { ... }
# 4838|         getStmt(0): [DeclStmt] declaration
# 4838|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x709
# 4838|               Type = [Struct] String
# 4838|             getVariable().getInitializer(): [Initializer] initializer for x709
# 4838|               getExpr(): [ConstructorCall] call to String
# 4838|                   Type = [VoidType] void
# 4838|                   ValueCategory = prvalue
# 4839|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4839|             Type = [VoidType] void
# 4839|             ValueCategory = prvalue
# 4839|           getQualifier(): [VariableAccess] x709
# 4839|               Type = [Struct] String
# 4839|               ValueCategory = lvalue
# 4839|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4839|           Conversion = [BoolConversion] conversion to bool
# 4839|           Type = [BoolType] bool
# 4839|           Value = [CStyleCast] 0
# 4839|           ValueCategory = prvalue
# 4840|     getStmt(710): [DoStmt] do (...) ...
# 4842|       getCondition(): [Literal] 0
# 4842|           Type = [IntType] int
# 4842|           Value = [Literal] 0
# 4842|           ValueCategory = prvalue
# 4840|       getStmt(): [BlockStmt] { ... }
# 4841|         getStmt(0): [DeclStmt] declaration
# 4841|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x710
# 4841|               Type = [Struct] String
# 4841|             getVariable().getInitializer(): [Initializer] initializer for x710
# 4841|               getExpr(): [ConstructorCall] call to String
# 4841|                   Type = [VoidType] void
# 4841|                   ValueCategory = prvalue
# 4842|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4842|             Type = [VoidType] void
# 4842|             ValueCategory = prvalue
# 4842|           getQualifier(): [VariableAccess] x710
# 4842|               Type = [Struct] String
# 4842|               ValueCategory = lvalue
# 4842|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4842|           Conversion = [BoolConversion] conversion to bool
# 4842|           Type = [BoolType] bool
# 4842|           Value = [CStyleCast] 0
# 4842|           ValueCategory = prvalue
# 4843|     getStmt(711): [DoStmt] do (...) ...
# 4845|       getCondition(): [Literal] 0
# 4845|           Type = [IntType] int
# 4845|           Value = [Literal] 0
# 4845|           ValueCategory = prvalue
# 4843|       getStmt(): [BlockStmt] { ... }
# 4844|         getStmt(0): [DeclStmt] declaration
# 4844|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x711
# 4844|               Type = [Struct] String
# 4844|             getVariable().getInitializer(): [Initializer] initializer for x711
# 4844|               getExpr(): [ConstructorCall] call to String
# 4844|                   Type = [VoidType] void
# 4844|                   ValueCategory = prvalue
# 4845|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4845|             Type = [VoidType] void
# 4845|             ValueCategory = prvalue
# 4845|           getQualifier(): [VariableAccess] x711
# 4845|               Type = [Struct] String
# 4845|               ValueCategory = lvalue
# 4845|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4845|           Conversion = [BoolConversion] conversion to bool
# 4845|           Type = [BoolType] bool
# 4845|           Value = [CStyleCast] 0
# 4845|           ValueCategory = prvalue
# 4846|     getStmt(712): [DoStmt] do (...) ...
# 4848|       getCondition(): [Literal] 0
# 4848|           Type = [IntType] int
# 4848|           Value = [Literal] 0
# 4848|           ValueCategory = prvalue
# 4846|       getStmt(): [BlockStmt] { ... }
# 4847|         getStmt(0): [DeclStmt] declaration
# 4847|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x712
# 4847|               Type = [Struct] String
# 4847|             getVariable().getInitializer(): [Initializer] initializer for x712
# 4847|               getExpr(): [ConstructorCall] call to String
# 4847|                   Type = [VoidType] void
# 4847|                   ValueCategory = prvalue
# 4848|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4848|             Type = [VoidType] void
# 4848|             ValueCategory = prvalue
# 4848|           getQualifier(): [VariableAccess] x712
# 4848|               Type = [Struct] String
# 4848|               ValueCategory = lvalue
# 4848|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4848|           Conversion = [BoolConversion] conversion to bool
# 4848|           Type = [BoolType] bool
# 4848|           Value = [CStyleCast] 0
# 4848|           ValueCategory = prvalue
# 4849|     getStmt(713): [DoStmt] do (...) ...
# 4851|       getCondition(): [Literal] 0
# 4851|           Type = [IntType] int
# 4851|           Value = [Literal] 0
# 4851|           ValueCategory = prvalue
# 4849|       getStmt(): [BlockStmt] { ... }
# 4850|         getStmt(0): [DeclStmt] declaration
# 4850|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x713
# 4850|               Type = [Struct] String
# 4850|             getVariable().getInitializer(): [Initializer] initializer for x713
# 4850|               getExpr(): [ConstructorCall] call to String
# 4850|                   Type = [VoidType] void
# 4850|                   ValueCategory = prvalue
# 4851|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4851|             Type = [VoidType] void
# 4851|             ValueCategory = prvalue
# 4851|           getQualifier(): [VariableAccess] x713
# 4851|               Type = [Struct] String
# 4851|               ValueCategory = lvalue
# 4851|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4851|           Conversion = [BoolConversion] conversion to bool
# 4851|           Type = [BoolType] bool
# 4851|           Value = [CStyleCast] 0
# 4851|           ValueCategory = prvalue
# 4852|     getStmt(714): [DoStmt] do (...) ...
# 4854|       getCondition(): [Literal] 0
# 4854|           Type = [IntType] int
# 4854|           Value = [Literal] 0
# 4854|           ValueCategory = prvalue
# 4852|       getStmt(): [BlockStmt] { ... }
# 4853|         getStmt(0): [DeclStmt] declaration
# 4853|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x714
# 4853|               Type = [Struct] String
# 4853|             getVariable().getInitializer(): [Initializer] initializer for x714
# 4853|               getExpr(): [ConstructorCall] call to String
# 4853|                   Type = [VoidType] void
# 4853|                   ValueCategory = prvalue
# 4854|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4854|             Type = [VoidType] void
# 4854|             ValueCategory = prvalue
# 4854|           getQualifier(): [VariableAccess] x714
# 4854|               Type = [Struct] String
# 4854|               ValueCategory = lvalue
# 4854|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4854|           Conversion = [BoolConversion] conversion to bool
# 4854|           Type = [BoolType] bool
# 4854|           Value = [CStyleCast] 0
# 4854|           ValueCategory = prvalue
# 4855|     getStmt(715): [DoStmt] do (...) ...
# 4857|       getCondition(): [Literal] 0
# 4857|           Type = [IntType] int
# 4857|           Value = [Literal] 0
# 4857|           ValueCategory = prvalue
# 4855|       getStmt(): [BlockStmt] { ... }
# 4856|         getStmt(0): [DeclStmt] declaration
# 4856|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x715
# 4856|               Type = [Struct] String
# 4856|             getVariable().getInitializer(): [Initializer] initializer for x715
# 4856|               getExpr(): [ConstructorCall] call to String
# 4856|                   Type = [VoidType] void
# 4856|                   ValueCategory = prvalue
# 4857|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4857|             Type = [VoidType] void
# 4857|             ValueCategory = prvalue
# 4857|           getQualifier(): [VariableAccess] x715
# 4857|               Type = [Struct] String
# 4857|               ValueCategory = lvalue
# 4857|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4857|           Conversion = [BoolConversion] conversion to bool
# 4857|           Type = [BoolType] bool
# 4857|           Value = [CStyleCast] 0
# 4857|           ValueCategory = prvalue
# 4858|     getStmt(716): [DoStmt] do (...) ...
# 4860|       getCondition(): [Literal] 0
# 4860|           Type = [IntType] int
# 4860|           Value = [Literal] 0
# 4860|           ValueCategory = prvalue
# 4858|       getStmt(): [BlockStmt] { ... }
# 4859|         getStmt(0): [DeclStmt] declaration
# 4859|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x716
# 4859|               Type = [Struct] String
# 4859|             getVariable().getInitializer(): [Initializer] initializer for x716
# 4859|               getExpr(): [ConstructorCall] call to String
# 4859|                   Type = [VoidType] void
# 4859|                   ValueCategory = prvalue
# 4860|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4860|             Type = [VoidType] void
# 4860|             ValueCategory = prvalue
# 4860|           getQualifier(): [VariableAccess] x716
# 4860|               Type = [Struct] String
# 4860|               ValueCategory = lvalue
# 4860|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4860|           Conversion = [BoolConversion] conversion to bool
# 4860|           Type = [BoolType] bool
# 4860|           Value = [CStyleCast] 0
# 4860|           ValueCategory = prvalue
# 4861|     getStmt(717): [DoStmt] do (...) ...
# 4863|       getCondition(): [Literal] 0
# 4863|           Type = [IntType] int
# 4863|           Value = [Literal] 0
# 4863|           ValueCategory = prvalue
# 4861|       getStmt(): [BlockStmt] { ... }
# 4862|         getStmt(0): [DeclStmt] declaration
# 4862|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x717
# 4862|               Type = [Struct] String
# 4862|             getVariable().getInitializer(): [Initializer] initializer for x717
# 4862|               getExpr(): [ConstructorCall] call to String
# 4862|                   Type = [VoidType] void
# 4862|                   ValueCategory = prvalue
# 4863|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4863|             Type = [VoidType] void
# 4863|             ValueCategory = prvalue
# 4863|           getQualifier(): [VariableAccess] x717
# 4863|               Type = [Struct] String
# 4863|               ValueCategory = lvalue
# 4863|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4863|           Conversion = [BoolConversion] conversion to bool
# 4863|           Type = [BoolType] bool
# 4863|           Value = [CStyleCast] 0
# 4863|           ValueCategory = prvalue
# 4864|     getStmt(718): [DoStmt] do (...) ...
# 4866|       getCondition(): [Literal] 0
# 4866|           Type = [IntType] int
# 4866|           Value = [Literal] 0
# 4866|           ValueCategory = prvalue
# 4864|       getStmt(): [BlockStmt] { ... }
# 4865|         getStmt(0): [DeclStmt] declaration
# 4865|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x718
# 4865|               Type = [Struct] String
# 4865|             getVariable().getInitializer(): [Initializer] initializer for x718
# 4865|               getExpr(): [ConstructorCall] call to String
# 4865|                   Type = [VoidType] void
# 4865|                   ValueCategory = prvalue
# 4866|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4866|             Type = [VoidType] void
# 4866|             ValueCategory = prvalue
# 4866|           getQualifier(): [VariableAccess] x718
# 4866|               Type = [Struct] String
# 4866|               ValueCategory = lvalue
# 4866|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4866|           Conversion = [BoolConversion] conversion to bool
# 4866|           Type = [BoolType] bool
# 4866|           Value = [CStyleCast] 0
# 4866|           ValueCategory = prvalue
# 4867|     getStmt(719): [DoStmt] do (...) ...
# 4869|       getCondition(): [Literal] 0
# 4869|           Type = [IntType] int
# 4869|           Value = [Literal] 0
# 4869|           ValueCategory = prvalue
# 4867|       getStmt(): [BlockStmt] { ... }
# 4868|         getStmt(0): [DeclStmt] declaration
# 4868|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x719
# 4868|               Type = [Struct] String
# 4868|             getVariable().getInitializer(): [Initializer] initializer for x719
# 4868|               getExpr(): [ConstructorCall] call to String
# 4868|                   Type = [VoidType] void
# 4868|                   ValueCategory = prvalue
# 4869|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4869|             Type = [VoidType] void
# 4869|             ValueCategory = prvalue
# 4869|           getQualifier(): [VariableAccess] x719
# 4869|               Type = [Struct] String
# 4869|               ValueCategory = lvalue
# 4869|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4869|           Conversion = [BoolConversion] conversion to bool
# 4869|           Type = [BoolType] bool
# 4869|           Value = [CStyleCast] 0
# 4869|           ValueCategory = prvalue
# 4870|     getStmt(720): [DoStmt] do (...) ...
# 4872|       getCondition(): [Literal] 0
# 4872|           Type = [IntType] int
# 4872|           Value = [Literal] 0
# 4872|           ValueCategory = prvalue
# 4870|       getStmt(): [BlockStmt] { ... }
# 4871|         getStmt(0): [DeclStmt] declaration
# 4871|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x720
# 4871|               Type = [Struct] String
# 4871|             getVariable().getInitializer(): [Initializer] initializer for x720
# 4871|               getExpr(): [ConstructorCall] call to String
# 4871|                   Type = [VoidType] void
# 4871|                   ValueCategory = prvalue
# 4872|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4872|             Type = [VoidType] void
# 4872|             ValueCategory = prvalue
# 4872|           getQualifier(): [VariableAccess] x720
# 4872|               Type = [Struct] String
# 4872|               ValueCategory = lvalue
# 4872|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4872|           Conversion = [BoolConversion] conversion to bool
# 4872|           Type = [BoolType] bool
# 4872|           Value = [CStyleCast] 0
# 4872|           ValueCategory = prvalue
# 4873|     getStmt(721): [DoStmt] do (...) ...
# 4875|       getCondition(): [Literal] 0
# 4875|           Type = [IntType] int
# 4875|           Value = [Literal] 0
# 4875|           ValueCategory = prvalue
# 4873|       getStmt(): [BlockStmt] { ... }
# 4874|         getStmt(0): [DeclStmt] declaration
# 4874|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x721
# 4874|               Type = [Struct] String
# 4874|             getVariable().getInitializer(): [Initializer] initializer for x721
# 4874|               getExpr(): [ConstructorCall] call to String
# 4874|                   Type = [VoidType] void
# 4874|                   ValueCategory = prvalue
# 4875|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4875|             Type = [VoidType] void
# 4875|             ValueCategory = prvalue
# 4875|           getQualifier(): [VariableAccess] x721
# 4875|               Type = [Struct] String
# 4875|               ValueCategory = lvalue
# 4875|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4875|           Conversion = [BoolConversion] conversion to bool
# 4875|           Type = [BoolType] bool
# 4875|           Value = [CStyleCast] 0
# 4875|           ValueCategory = prvalue
# 4876|     getStmt(722): [DoStmt] do (...) ...
# 4878|       getCondition(): [Literal] 0
# 4878|           Type = [IntType] int
# 4878|           Value = [Literal] 0
# 4878|           ValueCategory = prvalue
# 4876|       getStmt(): [BlockStmt] { ... }
# 4877|         getStmt(0): [DeclStmt] declaration
# 4877|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x722
# 4877|               Type = [Struct] String
# 4877|             getVariable().getInitializer(): [Initializer] initializer for x722
# 4877|               getExpr(): [ConstructorCall] call to String
# 4877|                   Type = [VoidType] void
# 4877|                   ValueCategory = prvalue
# 4878|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4878|             Type = [VoidType] void
# 4878|             ValueCategory = prvalue
# 4878|           getQualifier(): [VariableAccess] x722
# 4878|               Type = [Struct] String
# 4878|               ValueCategory = lvalue
# 4878|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4878|           Conversion = [BoolConversion] conversion to bool
# 4878|           Type = [BoolType] bool
# 4878|           Value = [CStyleCast] 0
# 4878|           ValueCategory = prvalue
# 4879|     getStmt(723): [DoStmt] do (...) ...
# 4881|       getCondition(): [Literal] 0
# 4881|           Type = [IntType] int
# 4881|           Value = [Literal] 0
# 4881|           ValueCategory = prvalue
# 4879|       getStmt(): [BlockStmt] { ... }
# 4880|         getStmt(0): [DeclStmt] declaration
# 4880|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x723
# 4880|               Type = [Struct] String
# 4880|             getVariable().getInitializer(): [Initializer] initializer for x723
# 4880|               getExpr(): [ConstructorCall] call to String
# 4880|                   Type = [VoidType] void
# 4880|                   ValueCategory = prvalue
# 4881|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4881|             Type = [VoidType] void
# 4881|             ValueCategory = prvalue
# 4881|           getQualifier(): [VariableAccess] x723
# 4881|               Type = [Struct] String
# 4881|               ValueCategory = lvalue
# 4881|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4881|           Conversion = [BoolConversion] conversion to bool
# 4881|           Type = [BoolType] bool
# 4881|           Value = [CStyleCast] 0
# 4881|           ValueCategory = prvalue
# 4882|     getStmt(724): [DoStmt] do (...) ...
# 4884|       getCondition(): [Literal] 0
# 4884|           Type = [IntType] int
# 4884|           Value = [Literal] 0
# 4884|           ValueCategory = prvalue
# 4882|       getStmt(): [BlockStmt] { ... }
# 4883|         getStmt(0): [DeclStmt] declaration
# 4883|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x724
# 4883|               Type = [Struct] String
# 4883|             getVariable().getInitializer(): [Initializer] initializer for x724
# 4883|               getExpr(): [ConstructorCall] call to String
# 4883|                   Type = [VoidType] void
# 4883|                   ValueCategory = prvalue
# 4884|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4884|             Type = [VoidType] void
# 4884|             ValueCategory = prvalue
# 4884|           getQualifier(): [VariableAccess] x724
# 4884|               Type = [Struct] String
# 4884|               ValueCategory = lvalue
# 4884|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4884|           Conversion = [BoolConversion] conversion to bool
# 4884|           Type = [BoolType] bool
# 4884|           Value = [CStyleCast] 0
# 4884|           ValueCategory = prvalue
# 4885|     getStmt(725): [DoStmt] do (...) ...
# 4887|       getCondition(): [Literal] 0
# 4887|           Type = [IntType] int
# 4887|           Value = [Literal] 0
# 4887|           ValueCategory = prvalue
# 4885|       getStmt(): [BlockStmt] { ... }
# 4886|         getStmt(0): [DeclStmt] declaration
# 4886|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x725
# 4886|               Type = [Struct] String
# 4886|             getVariable().getInitializer(): [Initializer] initializer for x725
# 4886|               getExpr(): [ConstructorCall] call to String
# 4886|                   Type = [VoidType] void
# 4886|                   ValueCategory = prvalue
# 4887|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4887|             Type = [VoidType] void
# 4887|             ValueCategory = prvalue
# 4887|           getQualifier(): [VariableAccess] x725
# 4887|               Type = [Struct] String
# 4887|               ValueCategory = lvalue
# 4887|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4887|           Conversion = [BoolConversion] conversion to bool
# 4887|           Type = [BoolType] bool
# 4887|           Value = [CStyleCast] 0
# 4887|           ValueCategory = prvalue
# 4888|     getStmt(726): [DoStmt] do (...) ...
# 4890|       getCondition(): [Literal] 0
# 4890|           Type = [IntType] int
# 4890|           Value = [Literal] 0
# 4890|           ValueCategory = prvalue
# 4888|       getStmt(): [BlockStmt] { ... }
# 4889|         getStmt(0): [DeclStmt] declaration
# 4889|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x726
# 4889|               Type = [Struct] String
# 4889|             getVariable().getInitializer(): [Initializer] initializer for x726
# 4889|               getExpr(): [ConstructorCall] call to String
# 4889|                   Type = [VoidType] void
# 4889|                   ValueCategory = prvalue
# 4890|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4890|             Type = [VoidType] void
# 4890|             ValueCategory = prvalue
# 4890|           getQualifier(): [VariableAccess] x726
# 4890|               Type = [Struct] String
# 4890|               ValueCategory = lvalue
# 4890|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4890|           Conversion = [BoolConversion] conversion to bool
# 4890|           Type = [BoolType] bool
# 4890|           Value = [CStyleCast] 0
# 4890|           ValueCategory = prvalue
# 4891|     getStmt(727): [DoStmt] do (...) ...
# 4893|       getCondition(): [Literal] 0
# 4893|           Type = [IntType] int
# 4893|           Value = [Literal] 0
# 4893|           ValueCategory = prvalue
# 4891|       getStmt(): [BlockStmt] { ... }
# 4892|         getStmt(0): [DeclStmt] declaration
# 4892|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x727
# 4892|               Type = [Struct] String
# 4892|             getVariable().getInitializer(): [Initializer] initializer for x727
# 4892|               getExpr(): [ConstructorCall] call to String
# 4892|                   Type = [VoidType] void
# 4892|                   ValueCategory = prvalue
# 4893|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4893|             Type = [VoidType] void
# 4893|             ValueCategory = prvalue
# 4893|           getQualifier(): [VariableAccess] x727
# 4893|               Type = [Struct] String
# 4893|               ValueCategory = lvalue
# 4893|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4893|           Conversion = [BoolConversion] conversion to bool
# 4893|           Type = [BoolType] bool
# 4893|           Value = [CStyleCast] 0
# 4893|           ValueCategory = prvalue
# 4894|     getStmt(728): [DoStmt] do (...) ...
# 4896|       getCondition(): [Literal] 0
# 4896|           Type = [IntType] int
# 4896|           Value = [Literal] 0
# 4896|           ValueCategory = prvalue
# 4894|       getStmt(): [BlockStmt] { ... }
# 4895|         getStmt(0): [DeclStmt] declaration
# 4895|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x728
# 4895|               Type = [Struct] String
# 4895|             getVariable().getInitializer(): [Initializer] initializer for x728
# 4895|               getExpr(): [ConstructorCall] call to String
# 4895|                   Type = [VoidType] void
# 4895|                   ValueCategory = prvalue
# 4896|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4896|             Type = [VoidType] void
# 4896|             ValueCategory = prvalue
# 4896|           getQualifier(): [VariableAccess] x728
# 4896|               Type = [Struct] String
# 4896|               ValueCategory = lvalue
# 4896|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4896|           Conversion = [BoolConversion] conversion to bool
# 4896|           Type = [BoolType] bool
# 4896|           Value = [CStyleCast] 0
# 4896|           ValueCategory = prvalue
# 4897|     getStmt(729): [DoStmt] do (...) ...
# 4899|       getCondition(): [Literal] 0
# 4899|           Type = [IntType] int
# 4899|           Value = [Literal] 0
# 4899|           ValueCategory = prvalue
# 4897|       getStmt(): [BlockStmt] { ... }
# 4898|         getStmt(0): [DeclStmt] declaration
# 4898|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x729
# 4898|               Type = [Struct] String
# 4898|             getVariable().getInitializer(): [Initializer] initializer for x729
# 4898|               getExpr(): [ConstructorCall] call to String
# 4898|                   Type = [VoidType] void
# 4898|                   ValueCategory = prvalue
# 4899|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4899|             Type = [VoidType] void
# 4899|             ValueCategory = prvalue
# 4899|           getQualifier(): [VariableAccess] x729
# 4899|               Type = [Struct] String
# 4899|               ValueCategory = lvalue
# 4899|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4899|           Conversion = [BoolConversion] conversion to bool
# 4899|           Type = [BoolType] bool
# 4899|           Value = [CStyleCast] 0
# 4899|           ValueCategory = prvalue
# 4900|     getStmt(730): [DoStmt] do (...) ...
# 4902|       getCondition(): [Literal] 0
# 4902|           Type = [IntType] int
# 4902|           Value = [Literal] 0
# 4902|           ValueCategory = prvalue
# 4900|       getStmt(): [BlockStmt] { ... }
# 4901|         getStmt(0): [DeclStmt] declaration
# 4901|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x730
# 4901|               Type = [Struct] String
# 4901|             getVariable().getInitializer(): [Initializer] initializer for x730
# 4901|               getExpr(): [ConstructorCall] call to String
# 4901|                   Type = [VoidType] void
# 4901|                   ValueCategory = prvalue
# 4902|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4902|             Type = [VoidType] void
# 4902|             ValueCategory = prvalue
# 4902|           getQualifier(): [VariableAccess] x730
# 4902|               Type = [Struct] String
# 4902|               ValueCategory = lvalue
# 4902|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4902|           Conversion = [BoolConversion] conversion to bool
# 4902|           Type = [BoolType] bool
# 4902|           Value = [CStyleCast] 0
# 4902|           ValueCategory = prvalue
# 4903|     getStmt(731): [DoStmt] do (...) ...
# 4905|       getCondition(): [Literal] 0
# 4905|           Type = [IntType] int
# 4905|           Value = [Literal] 0
# 4905|           ValueCategory = prvalue
# 4903|       getStmt(): [BlockStmt] { ... }
# 4904|         getStmt(0): [DeclStmt] declaration
# 4904|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x731
# 4904|               Type = [Struct] String
# 4904|             getVariable().getInitializer(): [Initializer] initializer for x731
# 4904|               getExpr(): [ConstructorCall] call to String
# 4904|                   Type = [VoidType] void
# 4904|                   ValueCategory = prvalue
# 4905|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4905|             Type = [VoidType] void
# 4905|             ValueCategory = prvalue
# 4905|           getQualifier(): [VariableAccess] x731
# 4905|               Type = [Struct] String
# 4905|               ValueCategory = lvalue
# 4905|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4905|           Conversion = [BoolConversion] conversion to bool
# 4905|           Type = [BoolType] bool
# 4905|           Value = [CStyleCast] 0
# 4905|           ValueCategory = prvalue
# 4906|     getStmt(732): [DoStmt] do (...) ...
# 4908|       getCondition(): [Literal] 0
# 4908|           Type = [IntType] int
# 4908|           Value = [Literal] 0
# 4908|           ValueCategory = prvalue
# 4906|       getStmt(): [BlockStmt] { ... }
# 4907|         getStmt(0): [DeclStmt] declaration
# 4907|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x732
# 4907|               Type = [Struct] String
# 4907|             getVariable().getInitializer(): [Initializer] initializer for x732
# 4907|               getExpr(): [ConstructorCall] call to String
# 4907|                   Type = [VoidType] void
# 4907|                   ValueCategory = prvalue
# 4908|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4908|             Type = [VoidType] void
# 4908|             ValueCategory = prvalue
# 4908|           getQualifier(): [VariableAccess] x732
# 4908|               Type = [Struct] String
# 4908|               ValueCategory = lvalue
# 4908|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4908|           Conversion = [BoolConversion] conversion to bool
# 4908|           Type = [BoolType] bool
# 4908|           Value = [CStyleCast] 0
# 4908|           ValueCategory = prvalue
# 4909|     getStmt(733): [DoStmt] do (...) ...
# 4911|       getCondition(): [Literal] 0
# 4911|           Type = [IntType] int
# 4911|           Value = [Literal] 0
# 4911|           ValueCategory = prvalue
# 4909|       getStmt(): [BlockStmt] { ... }
# 4910|         getStmt(0): [DeclStmt] declaration
# 4910|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x733
# 4910|               Type = [Struct] String
# 4910|             getVariable().getInitializer(): [Initializer] initializer for x733
# 4910|               getExpr(): [ConstructorCall] call to String
# 4910|                   Type = [VoidType] void
# 4910|                   ValueCategory = prvalue
# 4911|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4911|             Type = [VoidType] void
# 4911|             ValueCategory = prvalue
# 4911|           getQualifier(): [VariableAccess] x733
# 4911|               Type = [Struct] String
# 4911|               ValueCategory = lvalue
# 4911|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4911|           Conversion = [BoolConversion] conversion to bool
# 4911|           Type = [BoolType] bool
# 4911|           Value = [CStyleCast] 0
# 4911|           ValueCategory = prvalue
# 4912|     getStmt(734): [DoStmt] do (...) ...
# 4914|       getCondition(): [Literal] 0
# 4914|           Type = [IntType] int
# 4914|           Value = [Literal] 0
# 4914|           ValueCategory = prvalue
# 4912|       getStmt(): [BlockStmt] { ... }
# 4913|         getStmt(0): [DeclStmt] declaration
# 4913|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x734
# 4913|               Type = [Struct] String
# 4913|             getVariable().getInitializer(): [Initializer] initializer for x734
# 4913|               getExpr(): [ConstructorCall] call to String
# 4913|                   Type = [VoidType] void
# 4913|                   ValueCategory = prvalue
# 4914|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4914|             Type = [VoidType] void
# 4914|             ValueCategory = prvalue
# 4914|           getQualifier(): [VariableAccess] x734
# 4914|               Type = [Struct] String
# 4914|               ValueCategory = lvalue
# 4914|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4914|           Conversion = [BoolConversion] conversion to bool
# 4914|           Type = [BoolType] bool
# 4914|           Value = [CStyleCast] 0
# 4914|           ValueCategory = prvalue
# 4915|     getStmt(735): [DoStmt] do (...) ...
# 4917|       getCondition(): [Literal] 0
# 4917|           Type = [IntType] int
# 4917|           Value = [Literal] 0
# 4917|           ValueCategory = prvalue
# 4915|       getStmt(): [BlockStmt] { ... }
# 4916|         getStmt(0): [DeclStmt] declaration
# 4916|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x735
# 4916|               Type = [Struct] String
# 4916|             getVariable().getInitializer(): [Initializer] initializer for x735
# 4916|               getExpr(): [ConstructorCall] call to String
# 4916|                   Type = [VoidType] void
# 4916|                   ValueCategory = prvalue
# 4917|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4917|             Type = [VoidType] void
# 4917|             ValueCategory = prvalue
# 4917|           getQualifier(): [VariableAccess] x735
# 4917|               Type = [Struct] String
# 4917|               ValueCategory = lvalue
# 4917|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4917|           Conversion = [BoolConversion] conversion to bool
# 4917|           Type = [BoolType] bool
# 4917|           Value = [CStyleCast] 0
# 4917|           ValueCategory = prvalue
# 4918|     getStmt(736): [DoStmt] do (...) ...
# 4920|       getCondition(): [Literal] 0
# 4920|           Type = [IntType] int
# 4920|           Value = [Literal] 0
# 4920|           ValueCategory = prvalue
# 4918|       getStmt(): [BlockStmt] { ... }
# 4919|         getStmt(0): [DeclStmt] declaration
# 4919|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x736
# 4919|               Type = [Struct] String
# 4919|             getVariable().getInitializer(): [Initializer] initializer for x736
# 4919|               getExpr(): [ConstructorCall] call to String
# 4919|                   Type = [VoidType] void
# 4919|                   ValueCategory = prvalue
# 4920|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4920|             Type = [VoidType] void
# 4920|             ValueCategory = prvalue
# 4920|           getQualifier(): [VariableAccess] x736
# 4920|               Type = [Struct] String
# 4920|               ValueCategory = lvalue
# 4920|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4920|           Conversion = [BoolConversion] conversion to bool
# 4920|           Type = [BoolType] bool
# 4920|           Value = [CStyleCast] 0
# 4920|           ValueCategory = prvalue
# 4921|     getStmt(737): [DoStmt] do (...) ...
# 4923|       getCondition(): [Literal] 0
# 4923|           Type = [IntType] int
# 4923|           Value = [Literal] 0
# 4923|           ValueCategory = prvalue
# 4921|       getStmt(): [BlockStmt] { ... }
# 4922|         getStmt(0): [DeclStmt] declaration
# 4922|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x737
# 4922|               Type = [Struct] String
# 4922|             getVariable().getInitializer(): [Initializer] initializer for x737
# 4922|               getExpr(): [ConstructorCall] call to String
# 4922|                   Type = [VoidType] void
# 4922|                   ValueCategory = prvalue
# 4923|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4923|             Type = [VoidType] void
# 4923|             ValueCategory = prvalue
# 4923|           getQualifier(): [VariableAccess] x737
# 4923|               Type = [Struct] String
# 4923|               ValueCategory = lvalue
# 4923|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4923|           Conversion = [BoolConversion] conversion to bool
# 4923|           Type = [BoolType] bool
# 4923|           Value = [CStyleCast] 0
# 4923|           ValueCategory = prvalue
# 4924|     getStmt(738): [DoStmt] do (...) ...
# 4926|       getCondition(): [Literal] 0
# 4926|           Type = [IntType] int
# 4926|           Value = [Literal] 0
# 4926|           ValueCategory = prvalue
# 4924|       getStmt(): [BlockStmt] { ... }
# 4925|         getStmt(0): [DeclStmt] declaration
# 4925|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x738
# 4925|               Type = [Struct] String
# 4925|             getVariable().getInitializer(): [Initializer] initializer for x738
# 4925|               getExpr(): [ConstructorCall] call to String
# 4925|                   Type = [VoidType] void
# 4925|                   ValueCategory = prvalue
# 4926|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4926|             Type = [VoidType] void
# 4926|             ValueCategory = prvalue
# 4926|           getQualifier(): [VariableAccess] x738
# 4926|               Type = [Struct] String
# 4926|               ValueCategory = lvalue
# 4926|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4926|           Conversion = [BoolConversion] conversion to bool
# 4926|           Type = [BoolType] bool
# 4926|           Value = [CStyleCast] 0
# 4926|           ValueCategory = prvalue
# 4927|     getStmt(739): [DoStmt] do (...) ...
# 4929|       getCondition(): [Literal] 0
# 4929|           Type = [IntType] int
# 4929|           Value = [Literal] 0
# 4929|           ValueCategory = prvalue
# 4927|       getStmt(): [BlockStmt] { ... }
# 4928|         getStmt(0): [DeclStmt] declaration
# 4928|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x739
# 4928|               Type = [Struct] String
# 4928|             getVariable().getInitializer(): [Initializer] initializer for x739
# 4928|               getExpr(): [ConstructorCall] call to String
# 4928|                   Type = [VoidType] void
# 4928|                   ValueCategory = prvalue
# 4929|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4929|             Type = [VoidType] void
# 4929|             ValueCategory = prvalue
# 4929|           getQualifier(): [VariableAccess] x739
# 4929|               Type = [Struct] String
# 4929|               ValueCategory = lvalue
# 4929|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4929|           Conversion = [BoolConversion] conversion to bool
# 4929|           Type = [BoolType] bool
# 4929|           Value = [CStyleCast] 0
# 4929|           ValueCategory = prvalue
# 4930|     getStmt(740): [DoStmt] do (...) ...
# 4932|       getCondition(): [Literal] 0
# 4932|           Type = [IntType] int
# 4932|           Value = [Literal] 0
# 4932|           ValueCategory = prvalue
# 4930|       getStmt(): [BlockStmt] { ... }
# 4931|         getStmt(0): [DeclStmt] declaration
# 4931|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x740
# 4931|               Type = [Struct] String
# 4931|             getVariable().getInitializer(): [Initializer] initializer for x740
# 4931|               getExpr(): [ConstructorCall] call to String
# 4931|                   Type = [VoidType] void
# 4931|                   ValueCategory = prvalue
# 4932|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4932|             Type = [VoidType] void
# 4932|             ValueCategory = prvalue
# 4932|           getQualifier(): [VariableAccess] x740
# 4932|               Type = [Struct] String
# 4932|               ValueCategory = lvalue
# 4932|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4932|           Conversion = [BoolConversion] conversion to bool
# 4932|           Type = [BoolType] bool
# 4932|           Value = [CStyleCast] 0
# 4932|           ValueCategory = prvalue
# 4933|     getStmt(741): [DoStmt] do (...) ...
# 4935|       getCondition(): [Literal] 0
# 4935|           Type = [IntType] int
# 4935|           Value = [Literal] 0
# 4935|           ValueCategory = prvalue
# 4933|       getStmt(): [BlockStmt] { ... }
# 4934|         getStmt(0): [DeclStmt] declaration
# 4934|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x741
# 4934|               Type = [Struct] String
# 4934|             getVariable().getInitializer(): [Initializer] initializer for x741
# 4934|               getExpr(): [ConstructorCall] call to String
# 4934|                   Type = [VoidType] void
# 4934|                   ValueCategory = prvalue
# 4935|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4935|             Type = [VoidType] void
# 4935|             ValueCategory = prvalue
# 4935|           getQualifier(): [VariableAccess] x741
# 4935|               Type = [Struct] String
# 4935|               ValueCategory = lvalue
# 4935|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4935|           Conversion = [BoolConversion] conversion to bool
# 4935|           Type = [BoolType] bool
# 4935|           Value = [CStyleCast] 0
# 4935|           ValueCategory = prvalue
# 4936|     getStmt(742): [DoStmt] do (...) ...
# 4938|       getCondition(): [Literal] 0
# 4938|           Type = [IntType] int
# 4938|           Value = [Literal] 0
# 4938|           ValueCategory = prvalue
# 4936|       getStmt(): [BlockStmt] { ... }
# 4937|         getStmt(0): [DeclStmt] declaration
# 4937|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x742
# 4937|               Type = [Struct] String
# 4937|             getVariable().getInitializer(): [Initializer] initializer for x742
# 4937|               getExpr(): [ConstructorCall] call to String
# 4937|                   Type = [VoidType] void
# 4937|                   ValueCategory = prvalue
# 4938|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4938|             Type = [VoidType] void
# 4938|             ValueCategory = prvalue
# 4938|           getQualifier(): [VariableAccess] x742
# 4938|               Type = [Struct] String
# 4938|               ValueCategory = lvalue
# 4938|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4938|           Conversion = [BoolConversion] conversion to bool
# 4938|           Type = [BoolType] bool
# 4938|           Value = [CStyleCast] 0
# 4938|           ValueCategory = prvalue
# 4939|     getStmt(743): [DoStmt] do (...) ...
# 4941|       getCondition(): [Literal] 0
# 4941|           Type = [IntType] int
# 4941|           Value = [Literal] 0
# 4941|           ValueCategory = prvalue
# 4939|       getStmt(): [BlockStmt] { ... }
# 4940|         getStmt(0): [DeclStmt] declaration
# 4940|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x743
# 4940|               Type = [Struct] String
# 4940|             getVariable().getInitializer(): [Initializer] initializer for x743
# 4940|               getExpr(): [ConstructorCall] call to String
# 4940|                   Type = [VoidType] void
# 4940|                   ValueCategory = prvalue
# 4941|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4941|             Type = [VoidType] void
# 4941|             ValueCategory = prvalue
# 4941|           getQualifier(): [VariableAccess] x743
# 4941|               Type = [Struct] String
# 4941|               ValueCategory = lvalue
# 4941|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4941|           Conversion = [BoolConversion] conversion to bool
# 4941|           Type = [BoolType] bool
# 4941|           Value = [CStyleCast] 0
# 4941|           ValueCategory = prvalue
# 4942|     getStmt(744): [DoStmt] do (...) ...
# 4944|       getCondition(): [Literal] 0
# 4944|           Type = [IntType] int
# 4944|           Value = [Literal] 0
# 4944|           ValueCategory = prvalue
# 4942|       getStmt(): [BlockStmt] { ... }
# 4943|         getStmt(0): [DeclStmt] declaration
# 4943|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x744
# 4943|               Type = [Struct] String
# 4943|             getVariable().getInitializer(): [Initializer] initializer for x744
# 4943|               getExpr(): [ConstructorCall] call to String
# 4943|                   Type = [VoidType] void
# 4943|                   ValueCategory = prvalue
# 4944|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4944|             Type = [VoidType] void
# 4944|             ValueCategory = prvalue
# 4944|           getQualifier(): [VariableAccess] x744
# 4944|               Type = [Struct] String
# 4944|               ValueCategory = lvalue
# 4944|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4944|           Conversion = [BoolConversion] conversion to bool
# 4944|           Type = [BoolType] bool
# 4944|           Value = [CStyleCast] 0
# 4944|           ValueCategory = prvalue
# 4945|     getStmt(745): [DoStmt] do (...) ...
# 4947|       getCondition(): [Literal] 0
# 4947|           Type = [IntType] int
# 4947|           Value = [Literal] 0
# 4947|           ValueCategory = prvalue
# 4945|       getStmt(): [BlockStmt] { ... }
# 4946|         getStmt(0): [DeclStmt] declaration
# 4946|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x745
# 4946|               Type = [Struct] String
# 4946|             getVariable().getInitializer(): [Initializer] initializer for x745
# 4946|               getExpr(): [ConstructorCall] call to String
# 4946|                   Type = [VoidType] void
# 4946|                   ValueCategory = prvalue
# 4947|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4947|             Type = [VoidType] void
# 4947|             ValueCategory = prvalue
# 4947|           getQualifier(): [VariableAccess] x745
# 4947|               Type = [Struct] String
# 4947|               ValueCategory = lvalue
# 4947|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4947|           Conversion = [BoolConversion] conversion to bool
# 4947|           Type = [BoolType] bool
# 4947|           Value = [CStyleCast] 0
# 4947|           ValueCategory = prvalue
# 4948|     getStmt(746): [DoStmt] do (...) ...
# 4950|       getCondition(): [Literal] 0
# 4950|           Type = [IntType] int
# 4950|           Value = [Literal] 0
# 4950|           ValueCategory = prvalue
# 4948|       getStmt(): [BlockStmt] { ... }
# 4949|         getStmt(0): [DeclStmt] declaration
# 4949|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x746
# 4949|               Type = [Struct] String
# 4949|             getVariable().getInitializer(): [Initializer] initializer for x746
# 4949|               getExpr(): [ConstructorCall] call to String
# 4949|                   Type = [VoidType] void
# 4949|                   ValueCategory = prvalue
# 4950|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4950|             Type = [VoidType] void
# 4950|             ValueCategory = prvalue
# 4950|           getQualifier(): [VariableAccess] x746
# 4950|               Type = [Struct] String
# 4950|               ValueCategory = lvalue
# 4950|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4950|           Conversion = [BoolConversion] conversion to bool
# 4950|           Type = [BoolType] bool
# 4950|           Value = [CStyleCast] 0
# 4950|           ValueCategory = prvalue
# 4951|     getStmt(747): [DoStmt] do (...) ...
# 4953|       getCondition(): [Literal] 0
# 4953|           Type = [IntType] int
# 4953|           Value = [Literal] 0
# 4953|           ValueCategory = prvalue
# 4951|       getStmt(): [BlockStmt] { ... }
# 4952|         getStmt(0): [DeclStmt] declaration
# 4952|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x747
# 4952|               Type = [Struct] String
# 4952|             getVariable().getInitializer(): [Initializer] initializer for x747
# 4952|               getExpr(): [ConstructorCall] call to String
# 4952|                   Type = [VoidType] void
# 4952|                   ValueCategory = prvalue
# 4953|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4953|             Type = [VoidType] void
# 4953|             ValueCategory = prvalue
# 4953|           getQualifier(): [VariableAccess] x747
# 4953|               Type = [Struct] String
# 4953|               ValueCategory = lvalue
# 4953|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4953|           Conversion = [BoolConversion] conversion to bool
# 4953|           Type = [BoolType] bool
# 4953|           Value = [CStyleCast] 0
# 4953|           ValueCategory = prvalue
# 4954|     getStmt(748): [DoStmt] do (...) ...
# 4956|       getCondition(): [Literal] 0
# 4956|           Type = [IntType] int
# 4956|           Value = [Literal] 0
# 4956|           ValueCategory = prvalue
# 4954|       getStmt(): [BlockStmt] { ... }
# 4955|         getStmt(0): [DeclStmt] declaration
# 4955|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x748
# 4955|               Type = [Struct] String
# 4955|             getVariable().getInitializer(): [Initializer] initializer for x748
# 4955|               getExpr(): [ConstructorCall] call to String
# 4955|                   Type = [VoidType] void
# 4955|                   ValueCategory = prvalue
# 4956|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4956|             Type = [VoidType] void
# 4956|             ValueCategory = prvalue
# 4956|           getQualifier(): [VariableAccess] x748
# 4956|               Type = [Struct] String
# 4956|               ValueCategory = lvalue
# 4956|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4956|           Conversion = [BoolConversion] conversion to bool
# 4956|           Type = [BoolType] bool
# 4956|           Value = [CStyleCast] 0
# 4956|           ValueCategory = prvalue
# 4957|     getStmt(749): [DoStmt] do (...) ...
# 4959|       getCondition(): [Literal] 0
# 4959|           Type = [IntType] int
# 4959|           Value = [Literal] 0
# 4959|           ValueCategory = prvalue
# 4957|       getStmt(): [BlockStmt] { ... }
# 4958|         getStmt(0): [DeclStmt] declaration
# 4958|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x749
# 4958|               Type = [Struct] String
# 4958|             getVariable().getInitializer(): [Initializer] initializer for x749
# 4958|               getExpr(): [ConstructorCall] call to String
# 4958|                   Type = [VoidType] void
# 4958|                   ValueCategory = prvalue
# 4959|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4959|             Type = [VoidType] void
# 4959|             ValueCategory = prvalue
# 4959|           getQualifier(): [VariableAccess] x749
# 4959|               Type = [Struct] String
# 4959|               ValueCategory = lvalue
# 4959|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4959|           Conversion = [BoolConversion] conversion to bool
# 4959|           Type = [BoolType] bool
# 4959|           Value = [CStyleCast] 0
# 4959|           ValueCategory = prvalue
# 4960|     getStmt(750): [DoStmt] do (...) ...
# 4962|       getCondition(): [Literal] 0
# 4962|           Type = [IntType] int
# 4962|           Value = [Literal] 0
# 4962|           ValueCategory = prvalue
# 4960|       getStmt(): [BlockStmt] { ... }
# 4961|         getStmt(0): [DeclStmt] declaration
# 4961|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x750
# 4961|               Type = [Struct] String
# 4961|             getVariable().getInitializer(): [Initializer] initializer for x750
# 4961|               getExpr(): [ConstructorCall] call to String
# 4961|                   Type = [VoidType] void
# 4961|                   ValueCategory = prvalue
# 4962|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4962|             Type = [VoidType] void
# 4962|             ValueCategory = prvalue
# 4962|           getQualifier(): [VariableAccess] x750
# 4962|               Type = [Struct] String
# 4962|               ValueCategory = lvalue
# 4962|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4962|           Conversion = [BoolConversion] conversion to bool
# 4962|           Type = [BoolType] bool
# 4962|           Value = [CStyleCast] 0
# 4962|           ValueCategory = prvalue
# 4963|     getStmt(751): [DoStmt] do (...) ...
# 4965|       getCondition(): [Literal] 0
# 4965|           Type = [IntType] int
# 4965|           Value = [Literal] 0
# 4965|           ValueCategory = prvalue
# 4963|       getStmt(): [BlockStmt] { ... }
# 4964|         getStmt(0): [DeclStmt] declaration
# 4964|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x751
# 4964|               Type = [Struct] String
# 4964|             getVariable().getInitializer(): [Initializer] initializer for x751
# 4964|               getExpr(): [ConstructorCall] call to String
# 4964|                   Type = [VoidType] void
# 4964|                   ValueCategory = prvalue
# 4965|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4965|             Type = [VoidType] void
# 4965|             ValueCategory = prvalue
# 4965|           getQualifier(): [VariableAccess] x751
# 4965|               Type = [Struct] String
# 4965|               ValueCategory = lvalue
# 4965|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4965|           Conversion = [BoolConversion] conversion to bool
# 4965|           Type = [BoolType] bool
# 4965|           Value = [CStyleCast] 0
# 4965|           ValueCategory = prvalue
# 4966|     getStmt(752): [DoStmt] do (...) ...
# 4968|       getCondition(): [Literal] 0
# 4968|           Type = [IntType] int
# 4968|           Value = [Literal] 0
# 4968|           ValueCategory = prvalue
# 4966|       getStmt(): [BlockStmt] { ... }
# 4967|         getStmt(0): [DeclStmt] declaration
# 4967|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x752
# 4967|               Type = [Struct] String
# 4967|             getVariable().getInitializer(): [Initializer] initializer for x752
# 4967|               getExpr(): [ConstructorCall] call to String
# 4967|                   Type = [VoidType] void
# 4967|                   ValueCategory = prvalue
# 4968|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4968|             Type = [VoidType] void
# 4968|             ValueCategory = prvalue
# 4968|           getQualifier(): [VariableAccess] x752
# 4968|               Type = [Struct] String
# 4968|               ValueCategory = lvalue
# 4968|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4968|           Conversion = [BoolConversion] conversion to bool
# 4968|           Type = [BoolType] bool
# 4968|           Value = [CStyleCast] 0
# 4968|           ValueCategory = prvalue
# 4969|     getStmt(753): [DoStmt] do (...) ...
# 4971|       getCondition(): [Literal] 0
# 4971|           Type = [IntType] int
# 4971|           Value = [Literal] 0
# 4971|           ValueCategory = prvalue
# 4969|       getStmt(): [BlockStmt] { ... }
# 4970|         getStmt(0): [DeclStmt] declaration
# 4970|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x753
# 4970|               Type = [Struct] String
# 4970|             getVariable().getInitializer(): [Initializer] initializer for x753
# 4970|               getExpr(): [ConstructorCall] call to String
# 4970|                   Type = [VoidType] void
# 4970|                   ValueCategory = prvalue
# 4971|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4971|             Type = [VoidType] void
# 4971|             ValueCategory = prvalue
# 4971|           getQualifier(): [VariableAccess] x753
# 4971|               Type = [Struct] String
# 4971|               ValueCategory = lvalue
# 4971|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4971|           Conversion = [BoolConversion] conversion to bool
# 4971|           Type = [BoolType] bool
# 4971|           Value = [CStyleCast] 0
# 4971|           ValueCategory = prvalue
# 4972|     getStmt(754): [DoStmt] do (...) ...
# 4974|       getCondition(): [Literal] 0
# 4974|           Type = [IntType] int
# 4974|           Value = [Literal] 0
# 4974|           ValueCategory = prvalue
# 4972|       getStmt(): [BlockStmt] { ... }
# 4973|         getStmt(0): [DeclStmt] declaration
# 4973|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x754
# 4973|               Type = [Struct] String
# 4973|             getVariable().getInitializer(): [Initializer] initializer for x754
# 4973|               getExpr(): [ConstructorCall] call to String
# 4973|                   Type = [VoidType] void
# 4973|                   ValueCategory = prvalue
# 4974|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4974|             Type = [VoidType] void
# 4974|             ValueCategory = prvalue
# 4974|           getQualifier(): [VariableAccess] x754
# 4974|               Type = [Struct] String
# 4974|               ValueCategory = lvalue
# 4974|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4974|           Conversion = [BoolConversion] conversion to bool
# 4974|           Type = [BoolType] bool
# 4974|           Value = [CStyleCast] 0
# 4974|           ValueCategory = prvalue
# 4975|     getStmt(755): [DoStmt] do (...) ...
# 4977|       getCondition(): [Literal] 0
# 4977|           Type = [IntType] int
# 4977|           Value = [Literal] 0
# 4977|           ValueCategory = prvalue
# 4975|       getStmt(): [BlockStmt] { ... }
# 4976|         getStmt(0): [DeclStmt] declaration
# 4976|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x755
# 4976|               Type = [Struct] String
# 4976|             getVariable().getInitializer(): [Initializer] initializer for x755
# 4976|               getExpr(): [ConstructorCall] call to String
# 4976|                   Type = [VoidType] void
# 4976|                   ValueCategory = prvalue
# 4977|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4977|             Type = [VoidType] void
# 4977|             ValueCategory = prvalue
# 4977|           getQualifier(): [VariableAccess] x755
# 4977|               Type = [Struct] String
# 4977|               ValueCategory = lvalue
# 4977|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4977|           Conversion = [BoolConversion] conversion to bool
# 4977|           Type = [BoolType] bool
# 4977|           Value = [CStyleCast] 0
# 4977|           ValueCategory = prvalue
# 4978|     getStmt(756): [DoStmt] do (...) ...
# 4980|       getCondition(): [Literal] 0
# 4980|           Type = [IntType] int
# 4980|           Value = [Literal] 0
# 4980|           ValueCategory = prvalue
# 4978|       getStmt(): [BlockStmt] { ... }
# 4979|         getStmt(0): [DeclStmt] declaration
# 4979|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x756
# 4979|               Type = [Struct] String
# 4979|             getVariable().getInitializer(): [Initializer] initializer for x756
# 4979|               getExpr(): [ConstructorCall] call to String
# 4979|                   Type = [VoidType] void
# 4979|                   ValueCategory = prvalue
# 4980|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4980|             Type = [VoidType] void
# 4980|             ValueCategory = prvalue
# 4980|           getQualifier(): [VariableAccess] x756
# 4980|               Type = [Struct] String
# 4980|               ValueCategory = lvalue
# 4980|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4980|           Conversion = [BoolConversion] conversion to bool
# 4980|           Type = [BoolType] bool
# 4980|           Value = [CStyleCast] 0
# 4980|           ValueCategory = prvalue
# 4981|     getStmt(757): [DoStmt] do (...) ...
# 4983|       getCondition(): [Literal] 0
# 4983|           Type = [IntType] int
# 4983|           Value = [Literal] 0
# 4983|           ValueCategory = prvalue
# 4981|       getStmt(): [BlockStmt] { ... }
# 4982|         getStmt(0): [DeclStmt] declaration
# 4982|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x757
# 4982|               Type = [Struct] String
# 4982|             getVariable().getInitializer(): [Initializer] initializer for x757
# 4982|               getExpr(): [ConstructorCall] call to String
# 4982|                   Type = [VoidType] void
# 4982|                   ValueCategory = prvalue
# 4983|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4983|             Type = [VoidType] void
# 4983|             ValueCategory = prvalue
# 4983|           getQualifier(): [VariableAccess] x757
# 4983|               Type = [Struct] String
# 4983|               ValueCategory = lvalue
# 4983|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4983|           Conversion = [BoolConversion] conversion to bool
# 4983|           Type = [BoolType] bool
# 4983|           Value = [CStyleCast] 0
# 4983|           ValueCategory = prvalue
# 4984|     getStmt(758): [DoStmt] do (...) ...
# 4986|       getCondition(): [Literal] 0
# 4986|           Type = [IntType] int
# 4986|           Value = [Literal] 0
# 4986|           ValueCategory = prvalue
# 4984|       getStmt(): [BlockStmt] { ... }
# 4985|         getStmt(0): [DeclStmt] declaration
# 4985|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x758
# 4985|               Type = [Struct] String
# 4985|             getVariable().getInitializer(): [Initializer] initializer for x758
# 4985|               getExpr(): [ConstructorCall] call to String
# 4985|                   Type = [VoidType] void
# 4985|                   ValueCategory = prvalue
# 4986|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4986|             Type = [VoidType] void
# 4986|             ValueCategory = prvalue
# 4986|           getQualifier(): [VariableAccess] x758
# 4986|               Type = [Struct] String
# 4986|               ValueCategory = lvalue
# 4986|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4986|           Conversion = [BoolConversion] conversion to bool
# 4986|           Type = [BoolType] bool
# 4986|           Value = [CStyleCast] 0
# 4986|           ValueCategory = prvalue
# 4987|     getStmt(759): [DoStmt] do (...) ...
# 4989|       getCondition(): [Literal] 0
# 4989|           Type = [IntType] int
# 4989|           Value = [Literal] 0
# 4989|           ValueCategory = prvalue
# 4987|       getStmt(): [BlockStmt] { ... }
# 4988|         getStmt(0): [DeclStmt] declaration
# 4988|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x759
# 4988|               Type = [Struct] String
# 4988|             getVariable().getInitializer(): [Initializer] initializer for x759
# 4988|               getExpr(): [ConstructorCall] call to String
# 4988|                   Type = [VoidType] void
# 4988|                   ValueCategory = prvalue
# 4989|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4989|             Type = [VoidType] void
# 4989|             ValueCategory = prvalue
# 4989|           getQualifier(): [VariableAccess] x759
# 4989|               Type = [Struct] String
# 4989|               ValueCategory = lvalue
# 4989|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4989|           Conversion = [BoolConversion] conversion to bool
# 4989|           Type = [BoolType] bool
# 4989|           Value = [CStyleCast] 0
# 4989|           ValueCategory = prvalue
# 4990|     getStmt(760): [DoStmt] do (...) ...
# 4992|       getCondition(): [Literal] 0
# 4992|           Type = [IntType] int
# 4992|           Value = [Literal] 0
# 4992|           ValueCategory = prvalue
# 4990|       getStmt(): [BlockStmt] { ... }
# 4991|         getStmt(0): [DeclStmt] declaration
# 4991|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x760
# 4991|               Type = [Struct] String
# 4991|             getVariable().getInitializer(): [Initializer] initializer for x760
# 4991|               getExpr(): [ConstructorCall] call to String
# 4991|                   Type = [VoidType] void
# 4991|                   ValueCategory = prvalue
# 4992|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4992|             Type = [VoidType] void
# 4992|             ValueCategory = prvalue
# 4992|           getQualifier(): [VariableAccess] x760
# 4992|               Type = [Struct] String
# 4992|               ValueCategory = lvalue
# 4992|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4992|           Conversion = [BoolConversion] conversion to bool
# 4992|           Type = [BoolType] bool
# 4992|           Value = [CStyleCast] 0
# 4992|           ValueCategory = prvalue
# 4993|     getStmt(761): [DoStmt] do (...) ...
# 4995|       getCondition(): [Literal] 0
# 4995|           Type = [IntType] int
# 4995|           Value = [Literal] 0
# 4995|           ValueCategory = prvalue
# 4993|       getStmt(): [BlockStmt] { ... }
# 4994|         getStmt(0): [DeclStmt] declaration
# 4994|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x761
# 4994|               Type = [Struct] String
# 4994|             getVariable().getInitializer(): [Initializer] initializer for x761
# 4994|               getExpr(): [ConstructorCall] call to String
# 4994|                   Type = [VoidType] void
# 4994|                   ValueCategory = prvalue
# 4995|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4995|             Type = [VoidType] void
# 4995|             ValueCategory = prvalue
# 4995|           getQualifier(): [VariableAccess] x761
# 4995|               Type = [Struct] String
# 4995|               ValueCategory = lvalue
# 4995|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4995|           Conversion = [BoolConversion] conversion to bool
# 4995|           Type = [BoolType] bool
# 4995|           Value = [CStyleCast] 0
# 4995|           ValueCategory = prvalue
# 4996|     getStmt(762): [DoStmt] do (...) ...
# 4998|       getCondition(): [Literal] 0
# 4998|           Type = [IntType] int
# 4998|           Value = [Literal] 0
# 4998|           ValueCategory = prvalue
# 4996|       getStmt(): [BlockStmt] { ... }
# 4997|         getStmt(0): [DeclStmt] declaration
# 4997|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x762
# 4997|               Type = [Struct] String
# 4997|             getVariable().getInitializer(): [Initializer] initializer for x762
# 4997|               getExpr(): [ConstructorCall] call to String
# 4997|                   Type = [VoidType] void
# 4997|                   ValueCategory = prvalue
# 4998|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 4998|             Type = [VoidType] void
# 4998|             ValueCategory = prvalue
# 4998|           getQualifier(): [VariableAccess] x762
# 4998|               Type = [Struct] String
# 4998|               ValueCategory = lvalue
# 4998|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 4998|           Conversion = [BoolConversion] conversion to bool
# 4998|           Type = [BoolType] bool
# 4998|           Value = [CStyleCast] 0
# 4998|           ValueCategory = prvalue
# 4999|     getStmt(763): [DoStmt] do (...) ...
# 5001|       getCondition(): [Literal] 0
# 5001|           Type = [IntType] int
# 5001|           Value = [Literal] 0
# 5001|           ValueCategory = prvalue
# 4999|       getStmt(): [BlockStmt] { ... }
# 5000|         getStmt(0): [DeclStmt] declaration
# 5000|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x763
# 5000|               Type = [Struct] String
# 5000|             getVariable().getInitializer(): [Initializer] initializer for x763
# 5000|               getExpr(): [ConstructorCall] call to String
# 5000|                   Type = [VoidType] void
# 5000|                   ValueCategory = prvalue
# 5001|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5001|             Type = [VoidType] void
# 5001|             ValueCategory = prvalue
# 5001|           getQualifier(): [VariableAccess] x763
# 5001|               Type = [Struct] String
# 5001|               ValueCategory = lvalue
# 5001|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5001|           Conversion = [BoolConversion] conversion to bool
# 5001|           Type = [BoolType] bool
# 5001|           Value = [CStyleCast] 0
# 5001|           ValueCategory = prvalue
# 5002|     getStmt(764): [DoStmt] do (...) ...
# 5004|       getCondition(): [Literal] 0
# 5004|           Type = [IntType] int
# 5004|           Value = [Literal] 0
# 5004|           ValueCategory = prvalue
# 5002|       getStmt(): [BlockStmt] { ... }
# 5003|         getStmt(0): [DeclStmt] declaration
# 5003|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x764
# 5003|               Type = [Struct] String
# 5003|             getVariable().getInitializer(): [Initializer] initializer for x764
# 5003|               getExpr(): [ConstructorCall] call to String
# 5003|                   Type = [VoidType] void
# 5003|                   ValueCategory = prvalue
# 5004|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5004|             Type = [VoidType] void
# 5004|             ValueCategory = prvalue
# 5004|           getQualifier(): [VariableAccess] x764
# 5004|               Type = [Struct] String
# 5004|               ValueCategory = lvalue
# 5004|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5004|           Conversion = [BoolConversion] conversion to bool
# 5004|           Type = [BoolType] bool
# 5004|           Value = [CStyleCast] 0
# 5004|           ValueCategory = prvalue
# 5005|     getStmt(765): [DoStmt] do (...) ...
# 5007|       getCondition(): [Literal] 0
# 5007|           Type = [IntType] int
# 5007|           Value = [Literal] 0
# 5007|           ValueCategory = prvalue
# 5005|       getStmt(): [BlockStmt] { ... }
# 5006|         getStmt(0): [DeclStmt] declaration
# 5006|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x765
# 5006|               Type = [Struct] String
# 5006|             getVariable().getInitializer(): [Initializer] initializer for x765
# 5006|               getExpr(): [ConstructorCall] call to String
# 5006|                   Type = [VoidType] void
# 5006|                   ValueCategory = prvalue
# 5007|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5007|             Type = [VoidType] void
# 5007|             ValueCategory = prvalue
# 5007|           getQualifier(): [VariableAccess] x765
# 5007|               Type = [Struct] String
# 5007|               ValueCategory = lvalue
# 5007|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5007|           Conversion = [BoolConversion] conversion to bool
# 5007|           Type = [BoolType] bool
# 5007|           Value = [CStyleCast] 0
# 5007|           ValueCategory = prvalue
# 5008|     getStmt(766): [DoStmt] do (...) ...
# 5010|       getCondition(): [Literal] 0
# 5010|           Type = [IntType] int
# 5010|           Value = [Literal] 0
# 5010|           ValueCategory = prvalue
# 5008|       getStmt(): [BlockStmt] { ... }
# 5009|         getStmt(0): [DeclStmt] declaration
# 5009|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x766
# 5009|               Type = [Struct] String
# 5009|             getVariable().getInitializer(): [Initializer] initializer for x766
# 5009|               getExpr(): [ConstructorCall] call to String
# 5009|                   Type = [VoidType] void
# 5009|                   ValueCategory = prvalue
# 5010|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5010|             Type = [VoidType] void
# 5010|             ValueCategory = prvalue
# 5010|           getQualifier(): [VariableAccess] x766
# 5010|               Type = [Struct] String
# 5010|               ValueCategory = lvalue
# 5010|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5010|           Conversion = [BoolConversion] conversion to bool
# 5010|           Type = [BoolType] bool
# 5010|           Value = [CStyleCast] 0
# 5010|           ValueCategory = prvalue
# 5011|     getStmt(767): [DoStmt] do (...) ...
# 5013|       getCondition(): [Literal] 0
# 5013|           Type = [IntType] int
# 5013|           Value = [Literal] 0
# 5013|           ValueCategory = prvalue
# 5011|       getStmt(): [BlockStmt] { ... }
# 5012|         getStmt(0): [DeclStmt] declaration
# 5012|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x767
# 5012|               Type = [Struct] String
# 5012|             getVariable().getInitializer(): [Initializer] initializer for x767
# 5012|               getExpr(): [ConstructorCall] call to String
# 5012|                   Type = [VoidType] void
# 5012|                   ValueCategory = prvalue
# 5013|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5013|             Type = [VoidType] void
# 5013|             ValueCategory = prvalue
# 5013|           getQualifier(): [VariableAccess] x767
# 5013|               Type = [Struct] String
# 5013|               ValueCategory = lvalue
# 5013|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5013|           Conversion = [BoolConversion] conversion to bool
# 5013|           Type = [BoolType] bool
# 5013|           Value = [CStyleCast] 0
# 5013|           ValueCategory = prvalue
# 5014|     getStmt(768): [DoStmt] do (...) ...
# 5016|       getCondition(): [Literal] 0
# 5016|           Type = [IntType] int
# 5016|           Value = [Literal] 0
# 5016|           ValueCategory = prvalue
# 5014|       getStmt(): [BlockStmt] { ... }
# 5015|         getStmt(0): [DeclStmt] declaration
# 5015|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x768
# 5015|               Type = [Struct] String
# 5015|             getVariable().getInitializer(): [Initializer] initializer for x768
# 5015|               getExpr(): [ConstructorCall] call to String
# 5015|                   Type = [VoidType] void
# 5015|                   ValueCategory = prvalue
# 5016|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5016|             Type = [VoidType] void
# 5016|             ValueCategory = prvalue
# 5016|           getQualifier(): [VariableAccess] x768
# 5016|               Type = [Struct] String
# 5016|               ValueCategory = lvalue
# 5016|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5016|           Conversion = [BoolConversion] conversion to bool
# 5016|           Type = [BoolType] bool
# 5016|           Value = [CStyleCast] 0
# 5016|           ValueCategory = prvalue
# 5017|     getStmt(769): [DoStmt] do (...) ...
# 5019|       getCondition(): [Literal] 0
# 5019|           Type = [IntType] int
# 5019|           Value = [Literal] 0
# 5019|           ValueCategory = prvalue
# 5017|       getStmt(): [BlockStmt] { ... }
# 5018|         getStmt(0): [DeclStmt] declaration
# 5018|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x769
# 5018|               Type = [Struct] String
# 5018|             getVariable().getInitializer(): [Initializer] initializer for x769
# 5018|               getExpr(): [ConstructorCall] call to String
# 5018|                   Type = [VoidType] void
# 5018|                   ValueCategory = prvalue
# 5019|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5019|             Type = [VoidType] void
# 5019|             ValueCategory = prvalue
# 5019|           getQualifier(): [VariableAccess] x769
# 5019|               Type = [Struct] String
# 5019|               ValueCategory = lvalue
# 5019|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5019|           Conversion = [BoolConversion] conversion to bool
# 5019|           Type = [BoolType] bool
# 5019|           Value = [CStyleCast] 0
# 5019|           ValueCategory = prvalue
# 5020|     getStmt(770): [DoStmt] do (...) ...
# 5022|       getCondition(): [Literal] 0
# 5022|           Type = [IntType] int
# 5022|           Value = [Literal] 0
# 5022|           ValueCategory = prvalue
# 5020|       getStmt(): [BlockStmt] { ... }
# 5021|         getStmt(0): [DeclStmt] declaration
# 5021|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x770
# 5021|               Type = [Struct] String
# 5021|             getVariable().getInitializer(): [Initializer] initializer for x770
# 5021|               getExpr(): [ConstructorCall] call to String
# 5021|                   Type = [VoidType] void
# 5021|                   ValueCategory = prvalue
# 5022|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5022|             Type = [VoidType] void
# 5022|             ValueCategory = prvalue
# 5022|           getQualifier(): [VariableAccess] x770
# 5022|               Type = [Struct] String
# 5022|               ValueCategory = lvalue
# 5022|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5022|           Conversion = [BoolConversion] conversion to bool
# 5022|           Type = [BoolType] bool
# 5022|           Value = [CStyleCast] 0
# 5022|           ValueCategory = prvalue
# 5023|     getStmt(771): [DoStmt] do (...) ...
# 5025|       getCondition(): [Literal] 0
# 5025|           Type = [IntType] int
# 5025|           Value = [Literal] 0
# 5025|           ValueCategory = prvalue
# 5023|       getStmt(): [BlockStmt] { ... }
# 5024|         getStmt(0): [DeclStmt] declaration
# 5024|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x771
# 5024|               Type = [Struct] String
# 5024|             getVariable().getInitializer(): [Initializer] initializer for x771
# 5024|               getExpr(): [ConstructorCall] call to String
# 5024|                   Type = [VoidType] void
# 5024|                   ValueCategory = prvalue
# 5025|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5025|             Type = [VoidType] void
# 5025|             ValueCategory = prvalue
# 5025|           getQualifier(): [VariableAccess] x771
# 5025|               Type = [Struct] String
# 5025|               ValueCategory = lvalue
# 5025|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5025|           Conversion = [BoolConversion] conversion to bool
# 5025|           Type = [BoolType] bool
# 5025|           Value = [CStyleCast] 0
# 5025|           ValueCategory = prvalue
# 5026|     getStmt(772): [DoStmt] do (...) ...
# 5028|       getCondition(): [Literal] 0
# 5028|           Type = [IntType] int
# 5028|           Value = [Literal] 0
# 5028|           ValueCategory = prvalue
# 5026|       getStmt(): [BlockStmt] { ... }
# 5027|         getStmt(0): [DeclStmt] declaration
# 5027|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x772
# 5027|               Type = [Struct] String
# 5027|             getVariable().getInitializer(): [Initializer] initializer for x772
# 5027|               getExpr(): [ConstructorCall] call to String
# 5027|                   Type = [VoidType] void
# 5027|                   ValueCategory = prvalue
# 5028|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5028|             Type = [VoidType] void
# 5028|             ValueCategory = prvalue
# 5028|           getQualifier(): [VariableAccess] x772
# 5028|               Type = [Struct] String
# 5028|               ValueCategory = lvalue
# 5028|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5028|           Conversion = [BoolConversion] conversion to bool
# 5028|           Type = [BoolType] bool
# 5028|           Value = [CStyleCast] 0
# 5028|           ValueCategory = prvalue
# 5029|     getStmt(773): [DoStmt] do (...) ...
# 5031|       getCondition(): [Literal] 0
# 5031|           Type = [IntType] int
# 5031|           Value = [Literal] 0
# 5031|           ValueCategory = prvalue
# 5029|       getStmt(): [BlockStmt] { ... }
# 5030|         getStmt(0): [DeclStmt] declaration
# 5030|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x773
# 5030|               Type = [Struct] String
# 5030|             getVariable().getInitializer(): [Initializer] initializer for x773
# 5030|               getExpr(): [ConstructorCall] call to String
# 5030|                   Type = [VoidType] void
# 5030|                   ValueCategory = prvalue
# 5031|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5031|             Type = [VoidType] void
# 5031|             ValueCategory = prvalue
# 5031|           getQualifier(): [VariableAccess] x773
# 5031|               Type = [Struct] String
# 5031|               ValueCategory = lvalue
# 5031|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5031|           Conversion = [BoolConversion] conversion to bool
# 5031|           Type = [BoolType] bool
# 5031|           Value = [CStyleCast] 0
# 5031|           ValueCategory = prvalue
# 5032|     getStmt(774): [DoStmt] do (...) ...
# 5034|       getCondition(): [Literal] 0
# 5034|           Type = [IntType] int
# 5034|           Value = [Literal] 0
# 5034|           ValueCategory = prvalue
# 5032|       getStmt(): [BlockStmt] { ... }
# 5033|         getStmt(0): [DeclStmt] declaration
# 5033|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x774
# 5033|               Type = [Struct] String
# 5033|             getVariable().getInitializer(): [Initializer] initializer for x774
# 5033|               getExpr(): [ConstructorCall] call to String
# 5033|                   Type = [VoidType] void
# 5033|                   ValueCategory = prvalue
# 5034|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5034|             Type = [VoidType] void
# 5034|             ValueCategory = prvalue
# 5034|           getQualifier(): [VariableAccess] x774
# 5034|               Type = [Struct] String
# 5034|               ValueCategory = lvalue
# 5034|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5034|           Conversion = [BoolConversion] conversion to bool
# 5034|           Type = [BoolType] bool
# 5034|           Value = [CStyleCast] 0
# 5034|           ValueCategory = prvalue
# 5035|     getStmt(775): [DoStmt] do (...) ...
# 5037|       getCondition(): [Literal] 0
# 5037|           Type = [IntType] int
# 5037|           Value = [Literal] 0
# 5037|           ValueCategory = prvalue
# 5035|       getStmt(): [BlockStmt] { ... }
# 5036|         getStmt(0): [DeclStmt] declaration
# 5036|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x775
# 5036|               Type = [Struct] String
# 5036|             getVariable().getInitializer(): [Initializer] initializer for x775
# 5036|               getExpr(): [ConstructorCall] call to String
# 5036|                   Type = [VoidType] void
# 5036|                   ValueCategory = prvalue
# 5037|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5037|             Type = [VoidType] void
# 5037|             ValueCategory = prvalue
# 5037|           getQualifier(): [VariableAccess] x775
# 5037|               Type = [Struct] String
# 5037|               ValueCategory = lvalue
# 5037|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5037|           Conversion = [BoolConversion] conversion to bool
# 5037|           Type = [BoolType] bool
# 5037|           Value = [CStyleCast] 0
# 5037|           ValueCategory = prvalue
# 5038|     getStmt(776): [DoStmt] do (...) ...
# 5040|       getCondition(): [Literal] 0
# 5040|           Type = [IntType] int
# 5040|           Value = [Literal] 0
# 5040|           ValueCategory = prvalue
# 5038|       getStmt(): [BlockStmt] { ... }
# 5039|         getStmt(0): [DeclStmt] declaration
# 5039|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x776
# 5039|               Type = [Struct] String
# 5039|             getVariable().getInitializer(): [Initializer] initializer for x776
# 5039|               getExpr(): [ConstructorCall] call to String
# 5039|                   Type = [VoidType] void
# 5039|                   ValueCategory = prvalue
# 5040|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5040|             Type = [VoidType] void
# 5040|             ValueCategory = prvalue
# 5040|           getQualifier(): [VariableAccess] x776
# 5040|               Type = [Struct] String
# 5040|               ValueCategory = lvalue
# 5040|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5040|           Conversion = [BoolConversion] conversion to bool
# 5040|           Type = [BoolType] bool
# 5040|           Value = [CStyleCast] 0
# 5040|           ValueCategory = prvalue
# 5041|     getStmt(777): [DoStmt] do (...) ...
# 5043|       getCondition(): [Literal] 0
# 5043|           Type = [IntType] int
# 5043|           Value = [Literal] 0
# 5043|           ValueCategory = prvalue
# 5041|       getStmt(): [BlockStmt] { ... }
# 5042|         getStmt(0): [DeclStmt] declaration
# 5042|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x777
# 5042|               Type = [Struct] String
# 5042|             getVariable().getInitializer(): [Initializer] initializer for x777
# 5042|               getExpr(): [ConstructorCall] call to String
# 5042|                   Type = [VoidType] void
# 5042|                   ValueCategory = prvalue
# 5043|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5043|             Type = [VoidType] void
# 5043|             ValueCategory = prvalue
# 5043|           getQualifier(): [VariableAccess] x777
# 5043|               Type = [Struct] String
# 5043|               ValueCategory = lvalue
# 5043|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5043|           Conversion = [BoolConversion] conversion to bool
# 5043|           Type = [BoolType] bool
# 5043|           Value = [CStyleCast] 0
# 5043|           ValueCategory = prvalue
# 5044|     getStmt(778): [DoStmt] do (...) ...
# 5046|       getCondition(): [Literal] 0
# 5046|           Type = [IntType] int
# 5046|           Value = [Literal] 0
# 5046|           ValueCategory = prvalue
# 5044|       getStmt(): [BlockStmt] { ... }
# 5045|         getStmt(0): [DeclStmt] declaration
# 5045|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x778
# 5045|               Type = [Struct] String
# 5045|             getVariable().getInitializer(): [Initializer] initializer for x778
# 5045|               getExpr(): [ConstructorCall] call to String
# 5045|                   Type = [VoidType] void
# 5045|                   ValueCategory = prvalue
# 5046|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5046|             Type = [VoidType] void
# 5046|             ValueCategory = prvalue
# 5046|           getQualifier(): [VariableAccess] x778
# 5046|               Type = [Struct] String
# 5046|               ValueCategory = lvalue
# 5046|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5046|           Conversion = [BoolConversion] conversion to bool
# 5046|           Type = [BoolType] bool
# 5046|           Value = [CStyleCast] 0
# 5046|           ValueCategory = prvalue
# 5047|     getStmt(779): [DoStmt] do (...) ...
# 5049|       getCondition(): [Literal] 0
# 5049|           Type = [IntType] int
# 5049|           Value = [Literal] 0
# 5049|           ValueCategory = prvalue
# 5047|       getStmt(): [BlockStmt] { ... }
# 5048|         getStmt(0): [DeclStmt] declaration
# 5048|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x779
# 5048|               Type = [Struct] String
# 5048|             getVariable().getInitializer(): [Initializer] initializer for x779
# 5048|               getExpr(): [ConstructorCall] call to String
# 5048|                   Type = [VoidType] void
# 5048|                   ValueCategory = prvalue
# 5049|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5049|             Type = [VoidType] void
# 5049|             ValueCategory = prvalue
# 5049|           getQualifier(): [VariableAccess] x779
# 5049|               Type = [Struct] String
# 5049|               ValueCategory = lvalue
# 5049|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5049|           Conversion = [BoolConversion] conversion to bool
# 5049|           Type = [BoolType] bool
# 5049|           Value = [CStyleCast] 0
# 5049|           ValueCategory = prvalue
# 5050|     getStmt(780): [DoStmt] do (...) ...
# 5052|       getCondition(): [Literal] 0
# 5052|           Type = [IntType] int
# 5052|           Value = [Literal] 0
# 5052|           ValueCategory = prvalue
# 5050|       getStmt(): [BlockStmt] { ... }
# 5051|         getStmt(0): [DeclStmt] declaration
# 5051|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x780
# 5051|               Type = [Struct] String
# 5051|             getVariable().getInitializer(): [Initializer] initializer for x780
# 5051|               getExpr(): [ConstructorCall] call to String
# 5051|                   Type = [VoidType] void
# 5051|                   ValueCategory = prvalue
# 5052|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5052|             Type = [VoidType] void
# 5052|             ValueCategory = prvalue
# 5052|           getQualifier(): [VariableAccess] x780
# 5052|               Type = [Struct] String
# 5052|               ValueCategory = lvalue
# 5052|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5052|           Conversion = [BoolConversion] conversion to bool
# 5052|           Type = [BoolType] bool
# 5052|           Value = [CStyleCast] 0
# 5052|           ValueCategory = prvalue
# 5053|     getStmt(781): [DoStmt] do (...) ...
# 5055|       getCondition(): [Literal] 0
# 5055|           Type = [IntType] int
# 5055|           Value = [Literal] 0
# 5055|           ValueCategory = prvalue
# 5053|       getStmt(): [BlockStmt] { ... }
# 5054|         getStmt(0): [DeclStmt] declaration
# 5054|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x781
# 5054|               Type = [Struct] String
# 5054|             getVariable().getInitializer(): [Initializer] initializer for x781
# 5054|               getExpr(): [ConstructorCall] call to String
# 5054|                   Type = [VoidType] void
# 5054|                   ValueCategory = prvalue
# 5055|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5055|             Type = [VoidType] void
# 5055|             ValueCategory = prvalue
# 5055|           getQualifier(): [VariableAccess] x781
# 5055|               Type = [Struct] String
# 5055|               ValueCategory = lvalue
# 5055|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5055|           Conversion = [BoolConversion] conversion to bool
# 5055|           Type = [BoolType] bool
# 5055|           Value = [CStyleCast] 0
# 5055|           ValueCategory = prvalue
# 5056|     getStmt(782): [DoStmt] do (...) ...
# 5058|       getCondition(): [Literal] 0
# 5058|           Type = [IntType] int
# 5058|           Value = [Literal] 0
# 5058|           ValueCategory = prvalue
# 5056|       getStmt(): [BlockStmt] { ... }
# 5057|         getStmt(0): [DeclStmt] declaration
# 5057|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x782
# 5057|               Type = [Struct] String
# 5057|             getVariable().getInitializer(): [Initializer] initializer for x782
# 5057|               getExpr(): [ConstructorCall] call to String
# 5057|                   Type = [VoidType] void
# 5057|                   ValueCategory = prvalue
# 5058|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5058|             Type = [VoidType] void
# 5058|             ValueCategory = prvalue
# 5058|           getQualifier(): [VariableAccess] x782
# 5058|               Type = [Struct] String
# 5058|               ValueCategory = lvalue
# 5058|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5058|           Conversion = [BoolConversion] conversion to bool
# 5058|           Type = [BoolType] bool
# 5058|           Value = [CStyleCast] 0
# 5058|           ValueCategory = prvalue
# 5059|     getStmt(783): [DoStmt] do (...) ...
# 5061|       getCondition(): [Literal] 0
# 5061|           Type = [IntType] int
# 5061|           Value = [Literal] 0
# 5061|           ValueCategory = prvalue
# 5059|       getStmt(): [BlockStmt] { ... }
# 5060|         getStmt(0): [DeclStmt] declaration
# 5060|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x783
# 5060|               Type = [Struct] String
# 5060|             getVariable().getInitializer(): [Initializer] initializer for x783
# 5060|               getExpr(): [ConstructorCall] call to String
# 5060|                   Type = [VoidType] void
# 5060|                   ValueCategory = prvalue
# 5061|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5061|             Type = [VoidType] void
# 5061|             ValueCategory = prvalue
# 5061|           getQualifier(): [VariableAccess] x783
# 5061|               Type = [Struct] String
# 5061|               ValueCategory = lvalue
# 5061|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5061|           Conversion = [BoolConversion] conversion to bool
# 5061|           Type = [BoolType] bool
# 5061|           Value = [CStyleCast] 0
# 5061|           ValueCategory = prvalue
# 5062|     getStmt(784): [DoStmt] do (...) ...
# 5064|       getCondition(): [Literal] 0
# 5064|           Type = [IntType] int
# 5064|           Value = [Literal] 0
# 5064|           ValueCategory = prvalue
# 5062|       getStmt(): [BlockStmt] { ... }
# 5063|         getStmt(0): [DeclStmt] declaration
# 5063|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x784
# 5063|               Type = [Struct] String
# 5063|             getVariable().getInitializer(): [Initializer] initializer for x784
# 5063|               getExpr(): [ConstructorCall] call to String
# 5063|                   Type = [VoidType] void
# 5063|                   ValueCategory = prvalue
# 5064|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5064|             Type = [VoidType] void
# 5064|             ValueCategory = prvalue
# 5064|           getQualifier(): [VariableAccess] x784
# 5064|               Type = [Struct] String
# 5064|               ValueCategory = lvalue
# 5064|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5064|           Conversion = [BoolConversion] conversion to bool
# 5064|           Type = [BoolType] bool
# 5064|           Value = [CStyleCast] 0
# 5064|           ValueCategory = prvalue
# 5065|     getStmt(785): [DoStmt] do (...) ...
# 5067|       getCondition(): [Literal] 0
# 5067|           Type = [IntType] int
# 5067|           Value = [Literal] 0
# 5067|           ValueCategory = prvalue
# 5065|       getStmt(): [BlockStmt] { ... }
# 5066|         getStmt(0): [DeclStmt] declaration
# 5066|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x785
# 5066|               Type = [Struct] String
# 5066|             getVariable().getInitializer(): [Initializer] initializer for x785
# 5066|               getExpr(): [ConstructorCall] call to String
# 5066|                   Type = [VoidType] void
# 5066|                   ValueCategory = prvalue
# 5067|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5067|             Type = [VoidType] void
# 5067|             ValueCategory = prvalue
# 5067|           getQualifier(): [VariableAccess] x785
# 5067|               Type = [Struct] String
# 5067|               ValueCategory = lvalue
# 5067|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5067|           Conversion = [BoolConversion] conversion to bool
# 5067|           Type = [BoolType] bool
# 5067|           Value = [CStyleCast] 0
# 5067|           ValueCategory = prvalue
# 5068|     getStmt(786): [DoStmt] do (...) ...
# 5070|       getCondition(): [Literal] 0
# 5070|           Type = [IntType] int
# 5070|           Value = [Literal] 0
# 5070|           ValueCategory = prvalue
# 5068|       getStmt(): [BlockStmt] { ... }
# 5069|         getStmt(0): [DeclStmt] declaration
# 5069|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x786
# 5069|               Type = [Struct] String
# 5069|             getVariable().getInitializer(): [Initializer] initializer for x786
# 5069|               getExpr(): [ConstructorCall] call to String
# 5069|                   Type = [VoidType] void
# 5069|                   ValueCategory = prvalue
# 5070|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5070|             Type = [VoidType] void
# 5070|             ValueCategory = prvalue
# 5070|           getQualifier(): [VariableAccess] x786
# 5070|               Type = [Struct] String
# 5070|               ValueCategory = lvalue
# 5070|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5070|           Conversion = [BoolConversion] conversion to bool
# 5070|           Type = [BoolType] bool
# 5070|           Value = [CStyleCast] 0
# 5070|           ValueCategory = prvalue
# 5071|     getStmt(787): [DoStmt] do (...) ...
# 5073|       getCondition(): [Literal] 0
# 5073|           Type = [IntType] int
# 5073|           Value = [Literal] 0
# 5073|           ValueCategory = prvalue
# 5071|       getStmt(): [BlockStmt] { ... }
# 5072|         getStmt(0): [DeclStmt] declaration
# 5072|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x787
# 5072|               Type = [Struct] String
# 5072|             getVariable().getInitializer(): [Initializer] initializer for x787
# 5072|               getExpr(): [ConstructorCall] call to String
# 5072|                   Type = [VoidType] void
# 5072|                   ValueCategory = prvalue
# 5073|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5073|             Type = [VoidType] void
# 5073|             ValueCategory = prvalue
# 5073|           getQualifier(): [VariableAccess] x787
# 5073|               Type = [Struct] String
# 5073|               ValueCategory = lvalue
# 5073|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5073|           Conversion = [BoolConversion] conversion to bool
# 5073|           Type = [BoolType] bool
# 5073|           Value = [CStyleCast] 0
# 5073|           ValueCategory = prvalue
# 5074|     getStmt(788): [DoStmt] do (...) ...
# 5076|       getCondition(): [Literal] 0
# 5076|           Type = [IntType] int
# 5076|           Value = [Literal] 0
# 5076|           ValueCategory = prvalue
# 5074|       getStmt(): [BlockStmt] { ... }
# 5075|         getStmt(0): [DeclStmt] declaration
# 5075|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x788
# 5075|               Type = [Struct] String
# 5075|             getVariable().getInitializer(): [Initializer] initializer for x788
# 5075|               getExpr(): [ConstructorCall] call to String
# 5075|                   Type = [VoidType] void
# 5075|                   ValueCategory = prvalue
# 5076|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5076|             Type = [VoidType] void
# 5076|             ValueCategory = prvalue
# 5076|           getQualifier(): [VariableAccess] x788
# 5076|               Type = [Struct] String
# 5076|               ValueCategory = lvalue
# 5076|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5076|           Conversion = [BoolConversion] conversion to bool
# 5076|           Type = [BoolType] bool
# 5076|           Value = [CStyleCast] 0
# 5076|           ValueCategory = prvalue
# 5077|     getStmt(789): [DoStmt] do (...) ...
# 5079|       getCondition(): [Literal] 0
# 5079|           Type = [IntType] int
# 5079|           Value = [Literal] 0
# 5079|           ValueCategory = prvalue
# 5077|       getStmt(): [BlockStmt] { ... }
# 5078|         getStmt(0): [DeclStmt] declaration
# 5078|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x789
# 5078|               Type = [Struct] String
# 5078|             getVariable().getInitializer(): [Initializer] initializer for x789
# 5078|               getExpr(): [ConstructorCall] call to String
# 5078|                   Type = [VoidType] void
# 5078|                   ValueCategory = prvalue
# 5079|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5079|             Type = [VoidType] void
# 5079|             ValueCategory = prvalue
# 5079|           getQualifier(): [VariableAccess] x789
# 5079|               Type = [Struct] String
# 5079|               ValueCategory = lvalue
# 5079|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5079|           Conversion = [BoolConversion] conversion to bool
# 5079|           Type = [BoolType] bool
# 5079|           Value = [CStyleCast] 0
# 5079|           ValueCategory = prvalue
# 5080|     getStmt(790): [DoStmt] do (...) ...
# 5082|       getCondition(): [Literal] 0
# 5082|           Type = [IntType] int
# 5082|           Value = [Literal] 0
# 5082|           ValueCategory = prvalue
# 5080|       getStmt(): [BlockStmt] { ... }
# 5081|         getStmt(0): [DeclStmt] declaration
# 5081|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x790
# 5081|               Type = [Struct] String
# 5081|             getVariable().getInitializer(): [Initializer] initializer for x790
# 5081|               getExpr(): [ConstructorCall] call to String
# 5081|                   Type = [VoidType] void
# 5081|                   ValueCategory = prvalue
# 5082|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5082|             Type = [VoidType] void
# 5082|             ValueCategory = prvalue
# 5082|           getQualifier(): [VariableAccess] x790
# 5082|               Type = [Struct] String
# 5082|               ValueCategory = lvalue
# 5082|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5082|           Conversion = [BoolConversion] conversion to bool
# 5082|           Type = [BoolType] bool
# 5082|           Value = [CStyleCast] 0
# 5082|           ValueCategory = prvalue
# 5083|     getStmt(791): [DoStmt] do (...) ...
# 5085|       getCondition(): [Literal] 0
# 5085|           Type = [IntType] int
# 5085|           Value = [Literal] 0
# 5085|           ValueCategory = prvalue
# 5083|       getStmt(): [BlockStmt] { ... }
# 5084|         getStmt(0): [DeclStmt] declaration
# 5084|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x791
# 5084|               Type = [Struct] String
# 5084|             getVariable().getInitializer(): [Initializer] initializer for x791
# 5084|               getExpr(): [ConstructorCall] call to String
# 5084|                   Type = [VoidType] void
# 5084|                   ValueCategory = prvalue
# 5085|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5085|             Type = [VoidType] void
# 5085|             ValueCategory = prvalue
# 5085|           getQualifier(): [VariableAccess] x791
# 5085|               Type = [Struct] String
# 5085|               ValueCategory = lvalue
# 5085|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5085|           Conversion = [BoolConversion] conversion to bool
# 5085|           Type = [BoolType] bool
# 5085|           Value = [CStyleCast] 0
# 5085|           ValueCategory = prvalue
# 5086|     getStmt(792): [DoStmt] do (...) ...
# 5088|       getCondition(): [Literal] 0
# 5088|           Type = [IntType] int
# 5088|           Value = [Literal] 0
# 5088|           ValueCategory = prvalue
# 5086|       getStmt(): [BlockStmt] { ... }
# 5087|         getStmt(0): [DeclStmt] declaration
# 5087|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x792
# 5087|               Type = [Struct] String
# 5087|             getVariable().getInitializer(): [Initializer] initializer for x792
# 5087|               getExpr(): [ConstructorCall] call to String
# 5087|                   Type = [VoidType] void
# 5087|                   ValueCategory = prvalue
# 5088|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5088|             Type = [VoidType] void
# 5088|             ValueCategory = prvalue
# 5088|           getQualifier(): [VariableAccess] x792
# 5088|               Type = [Struct] String
# 5088|               ValueCategory = lvalue
# 5088|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5088|           Conversion = [BoolConversion] conversion to bool
# 5088|           Type = [BoolType] bool
# 5088|           Value = [CStyleCast] 0
# 5088|           ValueCategory = prvalue
# 5089|     getStmt(793): [DoStmt] do (...) ...
# 5091|       getCondition(): [Literal] 0
# 5091|           Type = [IntType] int
# 5091|           Value = [Literal] 0
# 5091|           ValueCategory = prvalue
# 5089|       getStmt(): [BlockStmt] { ... }
# 5090|         getStmt(0): [DeclStmt] declaration
# 5090|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x793
# 5090|               Type = [Struct] String
# 5090|             getVariable().getInitializer(): [Initializer] initializer for x793
# 5090|               getExpr(): [ConstructorCall] call to String
# 5090|                   Type = [VoidType] void
# 5090|                   ValueCategory = prvalue
# 5091|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5091|             Type = [VoidType] void
# 5091|             ValueCategory = prvalue
# 5091|           getQualifier(): [VariableAccess] x793
# 5091|               Type = [Struct] String
# 5091|               ValueCategory = lvalue
# 5091|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5091|           Conversion = [BoolConversion] conversion to bool
# 5091|           Type = [BoolType] bool
# 5091|           Value = [CStyleCast] 0
# 5091|           ValueCategory = prvalue
# 5092|     getStmt(794): [DoStmt] do (...) ...
# 5094|       getCondition(): [Literal] 0
# 5094|           Type = [IntType] int
# 5094|           Value = [Literal] 0
# 5094|           ValueCategory = prvalue
# 5092|       getStmt(): [BlockStmt] { ... }
# 5093|         getStmt(0): [DeclStmt] declaration
# 5093|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x794
# 5093|               Type = [Struct] String
# 5093|             getVariable().getInitializer(): [Initializer] initializer for x794
# 5093|               getExpr(): [ConstructorCall] call to String
# 5093|                   Type = [VoidType] void
# 5093|                   ValueCategory = prvalue
# 5094|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5094|             Type = [VoidType] void
# 5094|             ValueCategory = prvalue
# 5094|           getQualifier(): [VariableAccess] x794
# 5094|               Type = [Struct] String
# 5094|               ValueCategory = lvalue
# 5094|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5094|           Conversion = [BoolConversion] conversion to bool
# 5094|           Type = [BoolType] bool
# 5094|           Value = [CStyleCast] 0
# 5094|           ValueCategory = prvalue
# 5095|     getStmt(795): [DoStmt] do (...) ...
# 5097|       getCondition(): [Literal] 0
# 5097|           Type = [IntType] int
# 5097|           Value = [Literal] 0
# 5097|           ValueCategory = prvalue
# 5095|       getStmt(): [BlockStmt] { ... }
# 5096|         getStmt(0): [DeclStmt] declaration
# 5096|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x795
# 5096|               Type = [Struct] String
# 5096|             getVariable().getInitializer(): [Initializer] initializer for x795
# 5096|               getExpr(): [ConstructorCall] call to String
# 5096|                   Type = [VoidType] void
# 5096|                   ValueCategory = prvalue
# 5097|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5097|             Type = [VoidType] void
# 5097|             ValueCategory = prvalue
# 5097|           getQualifier(): [VariableAccess] x795
# 5097|               Type = [Struct] String
# 5097|               ValueCategory = lvalue
# 5097|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5097|           Conversion = [BoolConversion] conversion to bool
# 5097|           Type = [BoolType] bool
# 5097|           Value = [CStyleCast] 0
# 5097|           ValueCategory = prvalue
# 5098|     getStmt(796): [DoStmt] do (...) ...
# 5100|       getCondition(): [Literal] 0
# 5100|           Type = [IntType] int
# 5100|           Value = [Literal] 0
# 5100|           ValueCategory = prvalue
# 5098|       getStmt(): [BlockStmt] { ... }
# 5099|         getStmt(0): [DeclStmt] declaration
# 5099|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x796
# 5099|               Type = [Struct] String
# 5099|             getVariable().getInitializer(): [Initializer] initializer for x796
# 5099|               getExpr(): [ConstructorCall] call to String
# 5099|                   Type = [VoidType] void
# 5099|                   ValueCategory = prvalue
# 5100|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5100|             Type = [VoidType] void
# 5100|             ValueCategory = prvalue
# 5100|           getQualifier(): [VariableAccess] x796
# 5100|               Type = [Struct] String
# 5100|               ValueCategory = lvalue
# 5100|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5100|           Conversion = [BoolConversion] conversion to bool
# 5100|           Type = [BoolType] bool
# 5100|           Value = [CStyleCast] 0
# 5100|           ValueCategory = prvalue
# 5101|     getStmt(797): [DoStmt] do (...) ...
# 5103|       getCondition(): [Literal] 0
# 5103|           Type = [IntType] int
# 5103|           Value = [Literal] 0
# 5103|           ValueCategory = prvalue
# 5101|       getStmt(): [BlockStmt] { ... }
# 5102|         getStmt(0): [DeclStmt] declaration
# 5102|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x797
# 5102|               Type = [Struct] String
# 5102|             getVariable().getInitializer(): [Initializer] initializer for x797
# 5102|               getExpr(): [ConstructorCall] call to String
# 5102|                   Type = [VoidType] void
# 5102|                   ValueCategory = prvalue
# 5103|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5103|             Type = [VoidType] void
# 5103|             ValueCategory = prvalue
# 5103|           getQualifier(): [VariableAccess] x797
# 5103|               Type = [Struct] String
# 5103|               ValueCategory = lvalue
# 5103|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5103|           Conversion = [BoolConversion] conversion to bool
# 5103|           Type = [BoolType] bool
# 5103|           Value = [CStyleCast] 0
# 5103|           ValueCategory = prvalue
# 5104|     getStmt(798): [DoStmt] do (...) ...
# 5106|       getCondition(): [Literal] 0
# 5106|           Type = [IntType] int
# 5106|           Value = [Literal] 0
# 5106|           ValueCategory = prvalue
# 5104|       getStmt(): [BlockStmt] { ... }
# 5105|         getStmt(0): [DeclStmt] declaration
# 5105|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x798
# 5105|               Type = [Struct] String
# 5105|             getVariable().getInitializer(): [Initializer] initializer for x798
# 5105|               getExpr(): [ConstructorCall] call to String
# 5105|                   Type = [VoidType] void
# 5105|                   ValueCategory = prvalue
# 5106|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5106|             Type = [VoidType] void
# 5106|             ValueCategory = prvalue
# 5106|           getQualifier(): [VariableAccess] x798
# 5106|               Type = [Struct] String
# 5106|               ValueCategory = lvalue
# 5106|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5106|           Conversion = [BoolConversion] conversion to bool
# 5106|           Type = [BoolType] bool
# 5106|           Value = [CStyleCast] 0
# 5106|           ValueCategory = prvalue
# 5107|     getStmt(799): [DoStmt] do (...) ...
# 5109|       getCondition(): [Literal] 0
# 5109|           Type = [IntType] int
# 5109|           Value = [Literal] 0
# 5109|           ValueCategory = prvalue
# 5107|       getStmt(): [BlockStmt] { ... }
# 5108|         getStmt(0): [DeclStmt] declaration
# 5108|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x799
# 5108|               Type = [Struct] String
# 5108|             getVariable().getInitializer(): [Initializer] initializer for x799
# 5108|               getExpr(): [ConstructorCall] call to String
# 5108|                   Type = [VoidType] void
# 5108|                   ValueCategory = prvalue
# 5109|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5109|             Type = [VoidType] void
# 5109|             ValueCategory = prvalue
# 5109|           getQualifier(): [VariableAccess] x799
# 5109|               Type = [Struct] String
# 5109|               ValueCategory = lvalue
# 5109|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5109|           Conversion = [BoolConversion] conversion to bool
# 5109|           Type = [BoolType] bool
# 5109|           Value = [CStyleCast] 0
# 5109|           ValueCategory = prvalue
# 5110|     getStmt(800): [DoStmt] do (...) ...
# 5112|       getCondition(): [Literal] 0
# 5112|           Type = [IntType] int
# 5112|           Value = [Literal] 0
# 5112|           ValueCategory = prvalue
# 5110|       getStmt(): [BlockStmt] { ... }
# 5111|         getStmt(0): [DeclStmt] declaration
# 5111|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x800
# 5111|               Type = [Struct] String
# 5111|             getVariable().getInitializer(): [Initializer] initializer for x800
# 5111|               getExpr(): [ConstructorCall] call to String
# 5111|                   Type = [VoidType] void
# 5111|                   ValueCategory = prvalue
# 5112|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5112|             Type = [VoidType] void
# 5112|             ValueCategory = prvalue
# 5112|           getQualifier(): [VariableAccess] x800
# 5112|               Type = [Struct] String
# 5112|               ValueCategory = lvalue
# 5112|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5112|           Conversion = [BoolConversion] conversion to bool
# 5112|           Type = [BoolType] bool
# 5112|           Value = [CStyleCast] 0
# 5112|           ValueCategory = prvalue
# 5113|     getStmt(801): [DoStmt] do (...) ...
# 5115|       getCondition(): [Literal] 0
# 5115|           Type = [IntType] int
# 5115|           Value = [Literal] 0
# 5115|           ValueCategory = prvalue
# 5113|       getStmt(): [BlockStmt] { ... }
# 5114|         getStmt(0): [DeclStmt] declaration
# 5114|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x801
# 5114|               Type = [Struct] String
# 5114|             getVariable().getInitializer(): [Initializer] initializer for x801
# 5114|               getExpr(): [ConstructorCall] call to String
# 5114|                   Type = [VoidType] void
# 5114|                   ValueCategory = prvalue
# 5115|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5115|             Type = [VoidType] void
# 5115|             ValueCategory = prvalue
# 5115|           getQualifier(): [VariableAccess] x801
# 5115|               Type = [Struct] String
# 5115|               ValueCategory = lvalue
# 5115|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5115|           Conversion = [BoolConversion] conversion to bool
# 5115|           Type = [BoolType] bool
# 5115|           Value = [CStyleCast] 0
# 5115|           ValueCategory = prvalue
# 5116|     getStmt(802): [DoStmt] do (...) ...
# 5118|       getCondition(): [Literal] 0
# 5118|           Type = [IntType] int
# 5118|           Value = [Literal] 0
# 5118|           ValueCategory = prvalue
# 5116|       getStmt(): [BlockStmt] { ... }
# 5117|         getStmt(0): [DeclStmt] declaration
# 5117|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x802
# 5117|               Type = [Struct] String
# 5117|             getVariable().getInitializer(): [Initializer] initializer for x802
# 5117|               getExpr(): [ConstructorCall] call to String
# 5117|                   Type = [VoidType] void
# 5117|                   ValueCategory = prvalue
# 5118|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5118|             Type = [VoidType] void
# 5118|             ValueCategory = prvalue
# 5118|           getQualifier(): [VariableAccess] x802
# 5118|               Type = [Struct] String
# 5118|               ValueCategory = lvalue
# 5118|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5118|           Conversion = [BoolConversion] conversion to bool
# 5118|           Type = [BoolType] bool
# 5118|           Value = [CStyleCast] 0
# 5118|           ValueCategory = prvalue
# 5119|     getStmt(803): [DoStmt] do (...) ...
# 5121|       getCondition(): [Literal] 0
# 5121|           Type = [IntType] int
# 5121|           Value = [Literal] 0
# 5121|           ValueCategory = prvalue
# 5119|       getStmt(): [BlockStmt] { ... }
# 5120|         getStmt(0): [DeclStmt] declaration
# 5120|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x803
# 5120|               Type = [Struct] String
# 5120|             getVariable().getInitializer(): [Initializer] initializer for x803
# 5120|               getExpr(): [ConstructorCall] call to String
# 5120|                   Type = [VoidType] void
# 5120|                   ValueCategory = prvalue
# 5121|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5121|             Type = [VoidType] void
# 5121|             ValueCategory = prvalue
# 5121|           getQualifier(): [VariableAccess] x803
# 5121|               Type = [Struct] String
# 5121|               ValueCategory = lvalue
# 5121|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5121|           Conversion = [BoolConversion] conversion to bool
# 5121|           Type = [BoolType] bool
# 5121|           Value = [CStyleCast] 0
# 5121|           ValueCategory = prvalue
# 5122|     getStmt(804): [DoStmt] do (...) ...
# 5124|       getCondition(): [Literal] 0
# 5124|           Type = [IntType] int
# 5124|           Value = [Literal] 0
# 5124|           ValueCategory = prvalue
# 5122|       getStmt(): [BlockStmt] { ... }
# 5123|         getStmt(0): [DeclStmt] declaration
# 5123|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x804
# 5123|               Type = [Struct] String
# 5123|             getVariable().getInitializer(): [Initializer] initializer for x804
# 5123|               getExpr(): [ConstructorCall] call to String
# 5123|                   Type = [VoidType] void
# 5123|                   ValueCategory = prvalue
# 5124|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5124|             Type = [VoidType] void
# 5124|             ValueCategory = prvalue
# 5124|           getQualifier(): [VariableAccess] x804
# 5124|               Type = [Struct] String
# 5124|               ValueCategory = lvalue
# 5124|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5124|           Conversion = [BoolConversion] conversion to bool
# 5124|           Type = [BoolType] bool
# 5124|           Value = [CStyleCast] 0
# 5124|           ValueCategory = prvalue
# 5125|     getStmt(805): [DoStmt] do (...) ...
# 5127|       getCondition(): [Literal] 0
# 5127|           Type = [IntType] int
# 5127|           Value = [Literal] 0
# 5127|           ValueCategory = prvalue
# 5125|       getStmt(): [BlockStmt] { ... }
# 5126|         getStmt(0): [DeclStmt] declaration
# 5126|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x805
# 5126|               Type = [Struct] String
# 5126|             getVariable().getInitializer(): [Initializer] initializer for x805
# 5126|               getExpr(): [ConstructorCall] call to String
# 5126|                   Type = [VoidType] void
# 5126|                   ValueCategory = prvalue
# 5127|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5127|             Type = [VoidType] void
# 5127|             ValueCategory = prvalue
# 5127|           getQualifier(): [VariableAccess] x805
# 5127|               Type = [Struct] String
# 5127|               ValueCategory = lvalue
# 5127|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5127|           Conversion = [BoolConversion] conversion to bool
# 5127|           Type = [BoolType] bool
# 5127|           Value = [CStyleCast] 0
# 5127|           ValueCategory = prvalue
# 5128|     getStmt(806): [DoStmt] do (...) ...
# 5130|       getCondition(): [Literal] 0
# 5130|           Type = [IntType] int
# 5130|           Value = [Literal] 0
# 5130|           ValueCategory = prvalue
# 5128|       getStmt(): [BlockStmt] { ... }
# 5129|         getStmt(0): [DeclStmt] declaration
# 5129|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x806
# 5129|               Type = [Struct] String
# 5129|             getVariable().getInitializer(): [Initializer] initializer for x806
# 5129|               getExpr(): [ConstructorCall] call to String
# 5129|                   Type = [VoidType] void
# 5129|                   ValueCategory = prvalue
# 5130|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5130|             Type = [VoidType] void
# 5130|             ValueCategory = prvalue
# 5130|           getQualifier(): [VariableAccess] x806
# 5130|               Type = [Struct] String
# 5130|               ValueCategory = lvalue
# 5130|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5130|           Conversion = [BoolConversion] conversion to bool
# 5130|           Type = [BoolType] bool
# 5130|           Value = [CStyleCast] 0
# 5130|           ValueCategory = prvalue
# 5131|     getStmt(807): [DoStmt] do (...) ...
# 5133|       getCondition(): [Literal] 0
# 5133|           Type = [IntType] int
# 5133|           Value = [Literal] 0
# 5133|           ValueCategory = prvalue
# 5131|       getStmt(): [BlockStmt] { ... }
# 5132|         getStmt(0): [DeclStmt] declaration
# 5132|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x807
# 5132|               Type = [Struct] String
# 5132|             getVariable().getInitializer(): [Initializer] initializer for x807
# 5132|               getExpr(): [ConstructorCall] call to String
# 5132|                   Type = [VoidType] void
# 5132|                   ValueCategory = prvalue
# 5133|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5133|             Type = [VoidType] void
# 5133|             ValueCategory = prvalue
# 5133|           getQualifier(): [VariableAccess] x807
# 5133|               Type = [Struct] String
# 5133|               ValueCategory = lvalue
# 5133|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5133|           Conversion = [BoolConversion] conversion to bool
# 5133|           Type = [BoolType] bool
# 5133|           Value = [CStyleCast] 0
# 5133|           ValueCategory = prvalue
# 5134|     getStmt(808): [DoStmt] do (...) ...
# 5136|       getCondition(): [Literal] 0
# 5136|           Type = [IntType] int
# 5136|           Value = [Literal] 0
# 5136|           ValueCategory = prvalue
# 5134|       getStmt(): [BlockStmt] { ... }
# 5135|         getStmt(0): [DeclStmt] declaration
# 5135|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x808
# 5135|               Type = [Struct] String
# 5135|             getVariable().getInitializer(): [Initializer] initializer for x808
# 5135|               getExpr(): [ConstructorCall] call to String
# 5135|                   Type = [VoidType] void
# 5135|                   ValueCategory = prvalue
# 5136|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5136|             Type = [VoidType] void
# 5136|             ValueCategory = prvalue
# 5136|           getQualifier(): [VariableAccess] x808
# 5136|               Type = [Struct] String
# 5136|               ValueCategory = lvalue
# 5136|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5136|           Conversion = [BoolConversion] conversion to bool
# 5136|           Type = [BoolType] bool
# 5136|           Value = [CStyleCast] 0
# 5136|           ValueCategory = prvalue
# 5137|     getStmt(809): [DoStmt] do (...) ...
# 5139|       getCondition(): [Literal] 0
# 5139|           Type = [IntType] int
# 5139|           Value = [Literal] 0
# 5139|           ValueCategory = prvalue
# 5137|       getStmt(): [BlockStmt] { ... }
# 5138|         getStmt(0): [DeclStmt] declaration
# 5138|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x809
# 5138|               Type = [Struct] String
# 5138|             getVariable().getInitializer(): [Initializer] initializer for x809
# 5138|               getExpr(): [ConstructorCall] call to String
# 5138|                   Type = [VoidType] void
# 5138|                   ValueCategory = prvalue
# 5139|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5139|             Type = [VoidType] void
# 5139|             ValueCategory = prvalue
# 5139|           getQualifier(): [VariableAccess] x809
# 5139|               Type = [Struct] String
# 5139|               ValueCategory = lvalue
# 5139|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5139|           Conversion = [BoolConversion] conversion to bool
# 5139|           Type = [BoolType] bool
# 5139|           Value = [CStyleCast] 0
# 5139|           ValueCategory = prvalue
# 5140|     getStmt(810): [DoStmt] do (...) ...
# 5142|       getCondition(): [Literal] 0
# 5142|           Type = [IntType] int
# 5142|           Value = [Literal] 0
# 5142|           ValueCategory = prvalue
# 5140|       getStmt(): [BlockStmt] { ... }
# 5141|         getStmt(0): [DeclStmt] declaration
# 5141|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x810
# 5141|               Type = [Struct] String
# 5141|             getVariable().getInitializer(): [Initializer] initializer for x810
# 5141|               getExpr(): [ConstructorCall] call to String
# 5141|                   Type = [VoidType] void
# 5141|                   ValueCategory = prvalue
# 5142|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5142|             Type = [VoidType] void
# 5142|             ValueCategory = prvalue
# 5142|           getQualifier(): [VariableAccess] x810
# 5142|               Type = [Struct] String
# 5142|               ValueCategory = lvalue
# 5142|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5142|           Conversion = [BoolConversion] conversion to bool
# 5142|           Type = [BoolType] bool
# 5142|           Value = [CStyleCast] 0
# 5142|           ValueCategory = prvalue
# 5143|     getStmt(811): [DoStmt] do (...) ...
# 5145|       getCondition(): [Literal] 0
# 5145|           Type = [IntType] int
# 5145|           Value = [Literal] 0
# 5145|           ValueCategory = prvalue
# 5143|       getStmt(): [BlockStmt] { ... }
# 5144|         getStmt(0): [DeclStmt] declaration
# 5144|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x811
# 5144|               Type = [Struct] String
# 5144|             getVariable().getInitializer(): [Initializer] initializer for x811
# 5144|               getExpr(): [ConstructorCall] call to String
# 5144|                   Type = [VoidType] void
# 5144|                   ValueCategory = prvalue
# 5145|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5145|             Type = [VoidType] void
# 5145|             ValueCategory = prvalue
# 5145|           getQualifier(): [VariableAccess] x811
# 5145|               Type = [Struct] String
# 5145|               ValueCategory = lvalue
# 5145|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5145|           Conversion = [BoolConversion] conversion to bool
# 5145|           Type = [BoolType] bool
# 5145|           Value = [CStyleCast] 0
# 5145|           ValueCategory = prvalue
# 5146|     getStmt(812): [DoStmt] do (...) ...
# 5148|       getCondition(): [Literal] 0
# 5148|           Type = [IntType] int
# 5148|           Value = [Literal] 0
# 5148|           ValueCategory = prvalue
# 5146|       getStmt(): [BlockStmt] { ... }
# 5147|         getStmt(0): [DeclStmt] declaration
# 5147|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x812
# 5147|               Type = [Struct] String
# 5147|             getVariable().getInitializer(): [Initializer] initializer for x812
# 5147|               getExpr(): [ConstructorCall] call to String
# 5147|                   Type = [VoidType] void
# 5147|                   ValueCategory = prvalue
# 5148|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5148|             Type = [VoidType] void
# 5148|             ValueCategory = prvalue
# 5148|           getQualifier(): [VariableAccess] x812
# 5148|               Type = [Struct] String
# 5148|               ValueCategory = lvalue
# 5148|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5148|           Conversion = [BoolConversion] conversion to bool
# 5148|           Type = [BoolType] bool
# 5148|           Value = [CStyleCast] 0
# 5148|           ValueCategory = prvalue
# 5149|     getStmt(813): [DoStmt] do (...) ...
# 5151|       getCondition(): [Literal] 0
# 5151|           Type = [IntType] int
# 5151|           Value = [Literal] 0
# 5151|           ValueCategory = prvalue
# 5149|       getStmt(): [BlockStmt] { ... }
# 5150|         getStmt(0): [DeclStmt] declaration
# 5150|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x813
# 5150|               Type = [Struct] String
# 5150|             getVariable().getInitializer(): [Initializer] initializer for x813
# 5150|               getExpr(): [ConstructorCall] call to String
# 5150|                   Type = [VoidType] void
# 5150|                   ValueCategory = prvalue
# 5151|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5151|             Type = [VoidType] void
# 5151|             ValueCategory = prvalue
# 5151|           getQualifier(): [VariableAccess] x813
# 5151|               Type = [Struct] String
# 5151|               ValueCategory = lvalue
# 5151|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5151|           Conversion = [BoolConversion] conversion to bool
# 5151|           Type = [BoolType] bool
# 5151|           Value = [CStyleCast] 0
# 5151|           ValueCategory = prvalue
# 5152|     getStmt(814): [DoStmt] do (...) ...
# 5154|       getCondition(): [Literal] 0
# 5154|           Type = [IntType] int
# 5154|           Value = [Literal] 0
# 5154|           ValueCategory = prvalue
# 5152|       getStmt(): [BlockStmt] { ... }
# 5153|         getStmt(0): [DeclStmt] declaration
# 5153|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x814
# 5153|               Type = [Struct] String
# 5153|             getVariable().getInitializer(): [Initializer] initializer for x814
# 5153|               getExpr(): [ConstructorCall] call to String
# 5153|                   Type = [VoidType] void
# 5153|                   ValueCategory = prvalue
# 5154|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5154|             Type = [VoidType] void
# 5154|             ValueCategory = prvalue
# 5154|           getQualifier(): [VariableAccess] x814
# 5154|               Type = [Struct] String
# 5154|               ValueCategory = lvalue
# 5154|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5154|           Conversion = [BoolConversion] conversion to bool
# 5154|           Type = [BoolType] bool
# 5154|           Value = [CStyleCast] 0
# 5154|           ValueCategory = prvalue
# 5155|     getStmt(815): [DoStmt] do (...) ...
# 5157|       getCondition(): [Literal] 0
# 5157|           Type = [IntType] int
# 5157|           Value = [Literal] 0
# 5157|           ValueCategory = prvalue
# 5155|       getStmt(): [BlockStmt] { ... }
# 5156|         getStmt(0): [DeclStmt] declaration
# 5156|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x815
# 5156|               Type = [Struct] String
# 5156|             getVariable().getInitializer(): [Initializer] initializer for x815
# 5156|               getExpr(): [ConstructorCall] call to String
# 5156|                   Type = [VoidType] void
# 5156|                   ValueCategory = prvalue
# 5157|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5157|             Type = [VoidType] void
# 5157|             ValueCategory = prvalue
# 5157|           getQualifier(): [VariableAccess] x815
# 5157|               Type = [Struct] String
# 5157|               ValueCategory = lvalue
# 5157|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5157|           Conversion = [BoolConversion] conversion to bool
# 5157|           Type = [BoolType] bool
# 5157|           Value = [CStyleCast] 0
# 5157|           ValueCategory = prvalue
# 5158|     getStmt(816): [DoStmt] do (...) ...
# 5160|       getCondition(): [Literal] 0
# 5160|           Type = [IntType] int
# 5160|           Value = [Literal] 0
# 5160|           ValueCategory = prvalue
# 5158|       getStmt(): [BlockStmt] { ... }
# 5159|         getStmt(0): [DeclStmt] declaration
# 5159|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x816
# 5159|               Type = [Struct] String
# 5159|             getVariable().getInitializer(): [Initializer] initializer for x816
# 5159|               getExpr(): [ConstructorCall] call to String
# 5159|                   Type = [VoidType] void
# 5159|                   ValueCategory = prvalue
# 5160|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5160|             Type = [VoidType] void
# 5160|             ValueCategory = prvalue
# 5160|           getQualifier(): [VariableAccess] x816
# 5160|               Type = [Struct] String
# 5160|               ValueCategory = lvalue
# 5160|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5160|           Conversion = [BoolConversion] conversion to bool
# 5160|           Type = [BoolType] bool
# 5160|           Value = [CStyleCast] 0
# 5160|           ValueCategory = prvalue
# 5161|     getStmt(817): [DoStmt] do (...) ...
# 5163|       getCondition(): [Literal] 0
# 5163|           Type = [IntType] int
# 5163|           Value = [Literal] 0
# 5163|           ValueCategory = prvalue
# 5161|       getStmt(): [BlockStmt] { ... }
# 5162|         getStmt(0): [DeclStmt] declaration
# 5162|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x817
# 5162|               Type = [Struct] String
# 5162|             getVariable().getInitializer(): [Initializer] initializer for x817
# 5162|               getExpr(): [ConstructorCall] call to String
# 5162|                   Type = [VoidType] void
# 5162|                   ValueCategory = prvalue
# 5163|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5163|             Type = [VoidType] void
# 5163|             ValueCategory = prvalue
# 5163|           getQualifier(): [VariableAccess] x817
# 5163|               Type = [Struct] String
# 5163|               ValueCategory = lvalue
# 5163|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5163|           Conversion = [BoolConversion] conversion to bool
# 5163|           Type = [BoolType] bool
# 5163|           Value = [CStyleCast] 0
# 5163|           ValueCategory = prvalue
# 5164|     getStmt(818): [DoStmt] do (...) ...
# 5166|       getCondition(): [Literal] 0
# 5166|           Type = [IntType] int
# 5166|           Value = [Literal] 0
# 5166|           ValueCategory = prvalue
# 5164|       getStmt(): [BlockStmt] { ... }
# 5165|         getStmt(0): [DeclStmt] declaration
# 5165|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x818
# 5165|               Type = [Struct] String
# 5165|             getVariable().getInitializer(): [Initializer] initializer for x818
# 5165|               getExpr(): [ConstructorCall] call to String
# 5165|                   Type = [VoidType] void
# 5165|                   ValueCategory = prvalue
# 5166|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5166|             Type = [VoidType] void
# 5166|             ValueCategory = prvalue
# 5166|           getQualifier(): [VariableAccess] x818
# 5166|               Type = [Struct] String
# 5166|               ValueCategory = lvalue
# 5166|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5166|           Conversion = [BoolConversion] conversion to bool
# 5166|           Type = [BoolType] bool
# 5166|           Value = [CStyleCast] 0
# 5166|           ValueCategory = prvalue
# 5167|     getStmt(819): [DoStmt] do (...) ...
# 5169|       getCondition(): [Literal] 0
# 5169|           Type = [IntType] int
# 5169|           Value = [Literal] 0
# 5169|           ValueCategory = prvalue
# 5167|       getStmt(): [BlockStmt] { ... }
# 5168|         getStmt(0): [DeclStmt] declaration
# 5168|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x819
# 5168|               Type = [Struct] String
# 5168|             getVariable().getInitializer(): [Initializer] initializer for x819
# 5168|               getExpr(): [ConstructorCall] call to String
# 5168|                   Type = [VoidType] void
# 5168|                   ValueCategory = prvalue
# 5169|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5169|             Type = [VoidType] void
# 5169|             ValueCategory = prvalue
# 5169|           getQualifier(): [VariableAccess] x819
# 5169|               Type = [Struct] String
# 5169|               ValueCategory = lvalue
# 5169|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5169|           Conversion = [BoolConversion] conversion to bool
# 5169|           Type = [BoolType] bool
# 5169|           Value = [CStyleCast] 0
# 5169|           ValueCategory = prvalue
# 5170|     getStmt(820): [DoStmt] do (...) ...
# 5172|       getCondition(): [Literal] 0
# 5172|           Type = [IntType] int
# 5172|           Value = [Literal] 0
# 5172|           ValueCategory = prvalue
# 5170|       getStmt(): [BlockStmt] { ... }
# 5171|         getStmt(0): [DeclStmt] declaration
# 5171|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x820
# 5171|               Type = [Struct] String
# 5171|             getVariable().getInitializer(): [Initializer] initializer for x820
# 5171|               getExpr(): [ConstructorCall] call to String
# 5171|                   Type = [VoidType] void
# 5171|                   ValueCategory = prvalue
# 5172|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5172|             Type = [VoidType] void
# 5172|             ValueCategory = prvalue
# 5172|           getQualifier(): [VariableAccess] x820
# 5172|               Type = [Struct] String
# 5172|               ValueCategory = lvalue
# 5172|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5172|           Conversion = [BoolConversion] conversion to bool
# 5172|           Type = [BoolType] bool
# 5172|           Value = [CStyleCast] 0
# 5172|           ValueCategory = prvalue
# 5173|     getStmt(821): [DoStmt] do (...) ...
# 5175|       getCondition(): [Literal] 0
# 5175|           Type = [IntType] int
# 5175|           Value = [Literal] 0
# 5175|           ValueCategory = prvalue
# 5173|       getStmt(): [BlockStmt] { ... }
# 5174|         getStmt(0): [DeclStmt] declaration
# 5174|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x821
# 5174|               Type = [Struct] String
# 5174|             getVariable().getInitializer(): [Initializer] initializer for x821
# 5174|               getExpr(): [ConstructorCall] call to String
# 5174|                   Type = [VoidType] void
# 5174|                   ValueCategory = prvalue
# 5175|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5175|             Type = [VoidType] void
# 5175|             ValueCategory = prvalue
# 5175|           getQualifier(): [VariableAccess] x821
# 5175|               Type = [Struct] String
# 5175|               ValueCategory = lvalue
# 5175|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5175|           Conversion = [BoolConversion] conversion to bool
# 5175|           Type = [BoolType] bool
# 5175|           Value = [CStyleCast] 0
# 5175|           ValueCategory = prvalue
# 5176|     getStmt(822): [DoStmt] do (...) ...
# 5178|       getCondition(): [Literal] 0
# 5178|           Type = [IntType] int
# 5178|           Value = [Literal] 0
# 5178|           ValueCategory = prvalue
# 5176|       getStmt(): [BlockStmt] { ... }
# 5177|         getStmt(0): [DeclStmt] declaration
# 5177|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x822
# 5177|               Type = [Struct] String
# 5177|             getVariable().getInitializer(): [Initializer] initializer for x822
# 5177|               getExpr(): [ConstructorCall] call to String
# 5177|                   Type = [VoidType] void
# 5177|                   ValueCategory = prvalue
# 5178|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5178|             Type = [VoidType] void
# 5178|             ValueCategory = prvalue
# 5178|           getQualifier(): [VariableAccess] x822
# 5178|               Type = [Struct] String
# 5178|               ValueCategory = lvalue
# 5178|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5178|           Conversion = [BoolConversion] conversion to bool
# 5178|           Type = [BoolType] bool
# 5178|           Value = [CStyleCast] 0
# 5178|           ValueCategory = prvalue
# 5179|     getStmt(823): [DoStmt] do (...) ...
# 5181|       getCondition(): [Literal] 0
# 5181|           Type = [IntType] int
# 5181|           Value = [Literal] 0
# 5181|           ValueCategory = prvalue
# 5179|       getStmt(): [BlockStmt] { ... }
# 5180|         getStmt(0): [DeclStmt] declaration
# 5180|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x823
# 5180|               Type = [Struct] String
# 5180|             getVariable().getInitializer(): [Initializer] initializer for x823
# 5180|               getExpr(): [ConstructorCall] call to String
# 5180|                   Type = [VoidType] void
# 5180|                   ValueCategory = prvalue
# 5181|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5181|             Type = [VoidType] void
# 5181|             ValueCategory = prvalue
# 5181|           getQualifier(): [VariableAccess] x823
# 5181|               Type = [Struct] String
# 5181|               ValueCategory = lvalue
# 5181|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5181|           Conversion = [BoolConversion] conversion to bool
# 5181|           Type = [BoolType] bool
# 5181|           Value = [CStyleCast] 0
# 5181|           ValueCategory = prvalue
# 5182|     getStmt(824): [DoStmt] do (...) ...
# 5184|       getCondition(): [Literal] 0
# 5184|           Type = [IntType] int
# 5184|           Value = [Literal] 0
# 5184|           ValueCategory = prvalue
# 5182|       getStmt(): [BlockStmt] { ... }
# 5183|         getStmt(0): [DeclStmt] declaration
# 5183|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x824
# 5183|               Type = [Struct] String
# 5183|             getVariable().getInitializer(): [Initializer] initializer for x824
# 5183|               getExpr(): [ConstructorCall] call to String
# 5183|                   Type = [VoidType] void
# 5183|                   ValueCategory = prvalue
# 5184|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5184|             Type = [VoidType] void
# 5184|             ValueCategory = prvalue
# 5184|           getQualifier(): [VariableAccess] x824
# 5184|               Type = [Struct] String
# 5184|               ValueCategory = lvalue
# 5184|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5184|           Conversion = [BoolConversion] conversion to bool
# 5184|           Type = [BoolType] bool
# 5184|           Value = [CStyleCast] 0
# 5184|           ValueCategory = prvalue
# 5185|     getStmt(825): [DoStmt] do (...) ...
# 5187|       getCondition(): [Literal] 0
# 5187|           Type = [IntType] int
# 5187|           Value = [Literal] 0
# 5187|           ValueCategory = prvalue
# 5185|       getStmt(): [BlockStmt] { ... }
# 5186|         getStmt(0): [DeclStmt] declaration
# 5186|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x825
# 5186|               Type = [Struct] String
# 5186|             getVariable().getInitializer(): [Initializer] initializer for x825
# 5186|               getExpr(): [ConstructorCall] call to String
# 5186|                   Type = [VoidType] void
# 5186|                   ValueCategory = prvalue
# 5187|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5187|             Type = [VoidType] void
# 5187|             ValueCategory = prvalue
# 5187|           getQualifier(): [VariableAccess] x825
# 5187|               Type = [Struct] String
# 5187|               ValueCategory = lvalue
# 5187|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5187|           Conversion = [BoolConversion] conversion to bool
# 5187|           Type = [BoolType] bool
# 5187|           Value = [CStyleCast] 0
# 5187|           ValueCategory = prvalue
# 5188|     getStmt(826): [DoStmt] do (...) ...
# 5190|       getCondition(): [Literal] 0
# 5190|           Type = [IntType] int
# 5190|           Value = [Literal] 0
# 5190|           ValueCategory = prvalue
# 5188|       getStmt(): [BlockStmt] { ... }
# 5189|         getStmt(0): [DeclStmt] declaration
# 5189|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x826
# 5189|               Type = [Struct] String
# 5189|             getVariable().getInitializer(): [Initializer] initializer for x826
# 5189|               getExpr(): [ConstructorCall] call to String
# 5189|                   Type = [VoidType] void
# 5189|                   ValueCategory = prvalue
# 5190|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5190|             Type = [VoidType] void
# 5190|             ValueCategory = prvalue
# 5190|           getQualifier(): [VariableAccess] x826
# 5190|               Type = [Struct] String
# 5190|               ValueCategory = lvalue
# 5190|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5190|           Conversion = [BoolConversion] conversion to bool
# 5190|           Type = [BoolType] bool
# 5190|           Value = [CStyleCast] 0
# 5190|           ValueCategory = prvalue
# 5191|     getStmt(827): [DoStmt] do (...) ...
# 5193|       getCondition(): [Literal] 0
# 5193|           Type = [IntType] int
# 5193|           Value = [Literal] 0
# 5193|           ValueCategory = prvalue
# 5191|       getStmt(): [BlockStmt] { ... }
# 5192|         getStmt(0): [DeclStmt] declaration
# 5192|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x827
# 5192|               Type = [Struct] String
# 5192|             getVariable().getInitializer(): [Initializer] initializer for x827
# 5192|               getExpr(): [ConstructorCall] call to String
# 5192|                   Type = [VoidType] void
# 5192|                   ValueCategory = prvalue
# 5193|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5193|             Type = [VoidType] void
# 5193|             ValueCategory = prvalue
# 5193|           getQualifier(): [VariableAccess] x827
# 5193|               Type = [Struct] String
# 5193|               ValueCategory = lvalue
# 5193|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5193|           Conversion = [BoolConversion] conversion to bool
# 5193|           Type = [BoolType] bool
# 5193|           Value = [CStyleCast] 0
# 5193|           ValueCategory = prvalue
# 5194|     getStmt(828): [DoStmt] do (...) ...
# 5196|       getCondition(): [Literal] 0
# 5196|           Type = [IntType] int
# 5196|           Value = [Literal] 0
# 5196|           ValueCategory = prvalue
# 5194|       getStmt(): [BlockStmt] { ... }
# 5195|         getStmt(0): [DeclStmt] declaration
# 5195|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x828
# 5195|               Type = [Struct] String
# 5195|             getVariable().getInitializer(): [Initializer] initializer for x828
# 5195|               getExpr(): [ConstructorCall] call to String
# 5195|                   Type = [VoidType] void
# 5195|                   ValueCategory = prvalue
# 5196|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5196|             Type = [VoidType] void
# 5196|             ValueCategory = prvalue
# 5196|           getQualifier(): [VariableAccess] x828
# 5196|               Type = [Struct] String
# 5196|               ValueCategory = lvalue
# 5196|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5196|           Conversion = [BoolConversion] conversion to bool
# 5196|           Type = [BoolType] bool
# 5196|           Value = [CStyleCast] 0
# 5196|           ValueCategory = prvalue
# 5197|     getStmt(829): [DoStmt] do (...) ...
# 5199|       getCondition(): [Literal] 0
# 5199|           Type = [IntType] int
# 5199|           Value = [Literal] 0
# 5199|           ValueCategory = prvalue
# 5197|       getStmt(): [BlockStmt] { ... }
# 5198|         getStmt(0): [DeclStmt] declaration
# 5198|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x829
# 5198|               Type = [Struct] String
# 5198|             getVariable().getInitializer(): [Initializer] initializer for x829
# 5198|               getExpr(): [ConstructorCall] call to String
# 5198|                   Type = [VoidType] void
# 5198|                   ValueCategory = prvalue
# 5199|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5199|             Type = [VoidType] void
# 5199|             ValueCategory = prvalue
# 5199|           getQualifier(): [VariableAccess] x829
# 5199|               Type = [Struct] String
# 5199|               ValueCategory = lvalue
# 5199|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5199|           Conversion = [BoolConversion] conversion to bool
# 5199|           Type = [BoolType] bool
# 5199|           Value = [CStyleCast] 0
# 5199|           ValueCategory = prvalue
# 5200|     getStmt(830): [DoStmt] do (...) ...
# 5202|       getCondition(): [Literal] 0
# 5202|           Type = [IntType] int
# 5202|           Value = [Literal] 0
# 5202|           ValueCategory = prvalue
# 5200|       getStmt(): [BlockStmt] { ... }
# 5201|         getStmt(0): [DeclStmt] declaration
# 5201|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x830
# 5201|               Type = [Struct] String
# 5201|             getVariable().getInitializer(): [Initializer] initializer for x830
# 5201|               getExpr(): [ConstructorCall] call to String
# 5201|                   Type = [VoidType] void
# 5201|                   ValueCategory = prvalue
# 5202|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5202|             Type = [VoidType] void
# 5202|             ValueCategory = prvalue
# 5202|           getQualifier(): [VariableAccess] x830
# 5202|               Type = [Struct] String
# 5202|               ValueCategory = lvalue
# 5202|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5202|           Conversion = [BoolConversion] conversion to bool
# 5202|           Type = [BoolType] bool
# 5202|           Value = [CStyleCast] 0
# 5202|           ValueCategory = prvalue
# 5203|     getStmt(831): [DoStmt] do (...) ...
# 5205|       getCondition(): [Literal] 0
# 5205|           Type = [IntType] int
# 5205|           Value = [Literal] 0
# 5205|           ValueCategory = prvalue
# 5203|       getStmt(): [BlockStmt] { ... }
# 5204|         getStmt(0): [DeclStmt] declaration
# 5204|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x831
# 5204|               Type = [Struct] String
# 5204|             getVariable().getInitializer(): [Initializer] initializer for x831
# 5204|               getExpr(): [ConstructorCall] call to String
# 5204|                   Type = [VoidType] void
# 5204|                   ValueCategory = prvalue
# 5205|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5205|             Type = [VoidType] void
# 5205|             ValueCategory = prvalue
# 5205|           getQualifier(): [VariableAccess] x831
# 5205|               Type = [Struct] String
# 5205|               ValueCategory = lvalue
# 5205|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5205|           Conversion = [BoolConversion] conversion to bool
# 5205|           Type = [BoolType] bool
# 5205|           Value = [CStyleCast] 0
# 5205|           ValueCategory = prvalue
# 5206|     getStmt(832): [DoStmt] do (...) ...
# 5208|       getCondition(): [Literal] 0
# 5208|           Type = [IntType] int
# 5208|           Value = [Literal] 0
# 5208|           ValueCategory = prvalue
# 5206|       getStmt(): [BlockStmt] { ... }
# 5207|         getStmt(0): [DeclStmt] declaration
# 5207|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x832
# 5207|               Type = [Struct] String
# 5207|             getVariable().getInitializer(): [Initializer] initializer for x832
# 5207|               getExpr(): [ConstructorCall] call to String
# 5207|                   Type = [VoidType] void
# 5207|                   ValueCategory = prvalue
# 5208|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5208|             Type = [VoidType] void
# 5208|             ValueCategory = prvalue
# 5208|           getQualifier(): [VariableAccess] x832
# 5208|               Type = [Struct] String
# 5208|               ValueCategory = lvalue
# 5208|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5208|           Conversion = [BoolConversion] conversion to bool
# 5208|           Type = [BoolType] bool
# 5208|           Value = [CStyleCast] 0
# 5208|           ValueCategory = prvalue
# 5209|     getStmt(833): [DoStmt] do (...) ...
# 5211|       getCondition(): [Literal] 0
# 5211|           Type = [IntType] int
# 5211|           Value = [Literal] 0
# 5211|           ValueCategory = prvalue
# 5209|       getStmt(): [BlockStmt] { ... }
# 5210|         getStmt(0): [DeclStmt] declaration
# 5210|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x833
# 5210|               Type = [Struct] String
# 5210|             getVariable().getInitializer(): [Initializer] initializer for x833
# 5210|               getExpr(): [ConstructorCall] call to String
# 5210|                   Type = [VoidType] void
# 5210|                   ValueCategory = prvalue
# 5211|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5211|             Type = [VoidType] void
# 5211|             ValueCategory = prvalue
# 5211|           getQualifier(): [VariableAccess] x833
# 5211|               Type = [Struct] String
# 5211|               ValueCategory = lvalue
# 5211|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5211|           Conversion = [BoolConversion] conversion to bool
# 5211|           Type = [BoolType] bool
# 5211|           Value = [CStyleCast] 0
# 5211|           ValueCategory = prvalue
# 5212|     getStmt(834): [DoStmt] do (...) ...
# 5214|       getCondition(): [Literal] 0
# 5214|           Type = [IntType] int
# 5214|           Value = [Literal] 0
# 5214|           ValueCategory = prvalue
# 5212|       getStmt(): [BlockStmt] { ... }
# 5213|         getStmt(0): [DeclStmt] declaration
# 5213|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x834
# 5213|               Type = [Struct] String
# 5213|             getVariable().getInitializer(): [Initializer] initializer for x834
# 5213|               getExpr(): [ConstructorCall] call to String
# 5213|                   Type = [VoidType] void
# 5213|                   ValueCategory = prvalue
# 5214|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5214|             Type = [VoidType] void
# 5214|             ValueCategory = prvalue
# 5214|           getQualifier(): [VariableAccess] x834
# 5214|               Type = [Struct] String
# 5214|               ValueCategory = lvalue
# 5214|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5214|           Conversion = [BoolConversion] conversion to bool
# 5214|           Type = [BoolType] bool
# 5214|           Value = [CStyleCast] 0
# 5214|           ValueCategory = prvalue
# 5215|     getStmt(835): [DoStmt] do (...) ...
# 5217|       getCondition(): [Literal] 0
# 5217|           Type = [IntType] int
# 5217|           Value = [Literal] 0
# 5217|           ValueCategory = prvalue
# 5215|       getStmt(): [BlockStmt] { ... }
# 5216|         getStmt(0): [DeclStmt] declaration
# 5216|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x835
# 5216|               Type = [Struct] String
# 5216|             getVariable().getInitializer(): [Initializer] initializer for x835
# 5216|               getExpr(): [ConstructorCall] call to String
# 5216|                   Type = [VoidType] void
# 5216|                   ValueCategory = prvalue
# 5217|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5217|             Type = [VoidType] void
# 5217|             ValueCategory = prvalue
# 5217|           getQualifier(): [VariableAccess] x835
# 5217|               Type = [Struct] String
# 5217|               ValueCategory = lvalue
# 5217|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5217|           Conversion = [BoolConversion] conversion to bool
# 5217|           Type = [BoolType] bool
# 5217|           Value = [CStyleCast] 0
# 5217|           ValueCategory = prvalue
# 5218|     getStmt(836): [DoStmt] do (...) ...
# 5220|       getCondition(): [Literal] 0
# 5220|           Type = [IntType] int
# 5220|           Value = [Literal] 0
# 5220|           ValueCategory = prvalue
# 5218|       getStmt(): [BlockStmt] { ... }
# 5219|         getStmt(0): [DeclStmt] declaration
# 5219|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x836
# 5219|               Type = [Struct] String
# 5219|             getVariable().getInitializer(): [Initializer] initializer for x836
# 5219|               getExpr(): [ConstructorCall] call to String
# 5219|                   Type = [VoidType] void
# 5219|                   ValueCategory = prvalue
# 5220|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5220|             Type = [VoidType] void
# 5220|             ValueCategory = prvalue
# 5220|           getQualifier(): [VariableAccess] x836
# 5220|               Type = [Struct] String
# 5220|               ValueCategory = lvalue
# 5220|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5220|           Conversion = [BoolConversion] conversion to bool
# 5220|           Type = [BoolType] bool
# 5220|           Value = [CStyleCast] 0
# 5220|           ValueCategory = prvalue
# 5221|     getStmt(837): [DoStmt] do (...) ...
# 5223|       getCondition(): [Literal] 0
# 5223|           Type = [IntType] int
# 5223|           Value = [Literal] 0
# 5223|           ValueCategory = prvalue
# 5221|       getStmt(): [BlockStmt] { ... }
# 5222|         getStmt(0): [DeclStmt] declaration
# 5222|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x837
# 5222|               Type = [Struct] String
# 5222|             getVariable().getInitializer(): [Initializer] initializer for x837
# 5222|               getExpr(): [ConstructorCall] call to String
# 5222|                   Type = [VoidType] void
# 5222|                   ValueCategory = prvalue
# 5223|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5223|             Type = [VoidType] void
# 5223|             ValueCategory = prvalue
# 5223|           getQualifier(): [VariableAccess] x837
# 5223|               Type = [Struct] String
# 5223|               ValueCategory = lvalue
# 5223|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5223|           Conversion = [BoolConversion] conversion to bool
# 5223|           Type = [BoolType] bool
# 5223|           Value = [CStyleCast] 0
# 5223|           ValueCategory = prvalue
# 5224|     getStmt(838): [DoStmt] do (...) ...
# 5226|       getCondition(): [Literal] 0
# 5226|           Type = [IntType] int
# 5226|           Value = [Literal] 0
# 5226|           ValueCategory = prvalue
# 5224|       getStmt(): [BlockStmt] { ... }
# 5225|         getStmt(0): [DeclStmt] declaration
# 5225|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x838
# 5225|               Type = [Struct] String
# 5225|             getVariable().getInitializer(): [Initializer] initializer for x838
# 5225|               getExpr(): [ConstructorCall] call to String
# 5225|                   Type = [VoidType] void
# 5225|                   ValueCategory = prvalue
# 5226|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5226|             Type = [VoidType] void
# 5226|             ValueCategory = prvalue
# 5226|           getQualifier(): [VariableAccess] x838
# 5226|               Type = [Struct] String
# 5226|               ValueCategory = lvalue
# 5226|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5226|           Conversion = [BoolConversion] conversion to bool
# 5226|           Type = [BoolType] bool
# 5226|           Value = [CStyleCast] 0
# 5226|           ValueCategory = prvalue
# 5227|     getStmt(839): [DoStmt] do (...) ...
# 5229|       getCondition(): [Literal] 0
# 5229|           Type = [IntType] int
# 5229|           Value = [Literal] 0
# 5229|           ValueCategory = prvalue
# 5227|       getStmt(): [BlockStmt] { ... }
# 5228|         getStmt(0): [DeclStmt] declaration
# 5228|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x839
# 5228|               Type = [Struct] String
# 5228|             getVariable().getInitializer(): [Initializer] initializer for x839
# 5228|               getExpr(): [ConstructorCall] call to String
# 5228|                   Type = [VoidType] void
# 5228|                   ValueCategory = prvalue
# 5229|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5229|             Type = [VoidType] void
# 5229|             ValueCategory = prvalue
# 5229|           getQualifier(): [VariableAccess] x839
# 5229|               Type = [Struct] String
# 5229|               ValueCategory = lvalue
# 5229|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5229|           Conversion = [BoolConversion] conversion to bool
# 5229|           Type = [BoolType] bool
# 5229|           Value = [CStyleCast] 0
# 5229|           ValueCategory = prvalue
# 5230|     getStmt(840): [DoStmt] do (...) ...
# 5232|       getCondition(): [Literal] 0
# 5232|           Type = [IntType] int
# 5232|           Value = [Literal] 0
# 5232|           ValueCategory = prvalue
# 5230|       getStmt(): [BlockStmt] { ... }
# 5231|         getStmt(0): [DeclStmt] declaration
# 5231|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x840
# 5231|               Type = [Struct] String
# 5231|             getVariable().getInitializer(): [Initializer] initializer for x840
# 5231|               getExpr(): [ConstructorCall] call to String
# 5231|                   Type = [VoidType] void
# 5231|                   ValueCategory = prvalue
# 5232|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5232|             Type = [VoidType] void
# 5232|             ValueCategory = prvalue
# 5232|           getQualifier(): [VariableAccess] x840
# 5232|               Type = [Struct] String
# 5232|               ValueCategory = lvalue
# 5232|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5232|           Conversion = [BoolConversion] conversion to bool
# 5232|           Type = [BoolType] bool
# 5232|           Value = [CStyleCast] 0
# 5232|           ValueCategory = prvalue
# 5233|     getStmt(841): [DoStmt] do (...) ...
# 5235|       getCondition(): [Literal] 0
# 5235|           Type = [IntType] int
# 5235|           Value = [Literal] 0
# 5235|           ValueCategory = prvalue
# 5233|       getStmt(): [BlockStmt] { ... }
# 5234|         getStmt(0): [DeclStmt] declaration
# 5234|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x841
# 5234|               Type = [Struct] String
# 5234|             getVariable().getInitializer(): [Initializer] initializer for x841
# 5234|               getExpr(): [ConstructorCall] call to String
# 5234|                   Type = [VoidType] void
# 5234|                   ValueCategory = prvalue
# 5235|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5235|             Type = [VoidType] void
# 5235|             ValueCategory = prvalue
# 5235|           getQualifier(): [VariableAccess] x841
# 5235|               Type = [Struct] String
# 5235|               ValueCategory = lvalue
# 5235|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5235|           Conversion = [BoolConversion] conversion to bool
# 5235|           Type = [BoolType] bool
# 5235|           Value = [CStyleCast] 0
# 5235|           ValueCategory = prvalue
# 5236|     getStmt(842): [DoStmt] do (...) ...
# 5238|       getCondition(): [Literal] 0
# 5238|           Type = [IntType] int
# 5238|           Value = [Literal] 0
# 5238|           ValueCategory = prvalue
# 5236|       getStmt(): [BlockStmt] { ... }
# 5237|         getStmt(0): [DeclStmt] declaration
# 5237|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x842
# 5237|               Type = [Struct] String
# 5237|             getVariable().getInitializer(): [Initializer] initializer for x842
# 5237|               getExpr(): [ConstructorCall] call to String
# 5237|                   Type = [VoidType] void
# 5237|                   ValueCategory = prvalue
# 5238|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5238|             Type = [VoidType] void
# 5238|             ValueCategory = prvalue
# 5238|           getQualifier(): [VariableAccess] x842
# 5238|               Type = [Struct] String
# 5238|               ValueCategory = lvalue
# 5238|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5238|           Conversion = [BoolConversion] conversion to bool
# 5238|           Type = [BoolType] bool
# 5238|           Value = [CStyleCast] 0
# 5238|           ValueCategory = prvalue
# 5239|     getStmt(843): [DoStmt] do (...) ...
# 5241|       getCondition(): [Literal] 0
# 5241|           Type = [IntType] int
# 5241|           Value = [Literal] 0
# 5241|           ValueCategory = prvalue
# 5239|       getStmt(): [BlockStmt] { ... }
# 5240|         getStmt(0): [DeclStmt] declaration
# 5240|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x843
# 5240|               Type = [Struct] String
# 5240|             getVariable().getInitializer(): [Initializer] initializer for x843
# 5240|               getExpr(): [ConstructorCall] call to String
# 5240|                   Type = [VoidType] void
# 5240|                   ValueCategory = prvalue
# 5241|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5241|             Type = [VoidType] void
# 5241|             ValueCategory = prvalue
# 5241|           getQualifier(): [VariableAccess] x843
# 5241|               Type = [Struct] String
# 5241|               ValueCategory = lvalue
# 5241|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5241|           Conversion = [BoolConversion] conversion to bool
# 5241|           Type = [BoolType] bool
# 5241|           Value = [CStyleCast] 0
# 5241|           ValueCategory = prvalue
# 5242|     getStmt(844): [DoStmt] do (...) ...
# 5244|       getCondition(): [Literal] 0
# 5244|           Type = [IntType] int
# 5244|           Value = [Literal] 0
# 5244|           ValueCategory = prvalue
# 5242|       getStmt(): [BlockStmt] { ... }
# 5243|         getStmt(0): [DeclStmt] declaration
# 5243|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x844
# 5243|               Type = [Struct] String
# 5243|             getVariable().getInitializer(): [Initializer] initializer for x844
# 5243|               getExpr(): [ConstructorCall] call to String
# 5243|                   Type = [VoidType] void
# 5243|                   ValueCategory = prvalue
# 5244|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5244|             Type = [VoidType] void
# 5244|             ValueCategory = prvalue
# 5244|           getQualifier(): [VariableAccess] x844
# 5244|               Type = [Struct] String
# 5244|               ValueCategory = lvalue
# 5244|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5244|           Conversion = [BoolConversion] conversion to bool
# 5244|           Type = [BoolType] bool
# 5244|           Value = [CStyleCast] 0
# 5244|           ValueCategory = prvalue
# 5245|     getStmt(845): [DoStmt] do (...) ...
# 5247|       getCondition(): [Literal] 0
# 5247|           Type = [IntType] int
# 5247|           Value = [Literal] 0
# 5247|           ValueCategory = prvalue
# 5245|       getStmt(): [BlockStmt] { ... }
# 5246|         getStmt(0): [DeclStmt] declaration
# 5246|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x845
# 5246|               Type = [Struct] String
# 5246|             getVariable().getInitializer(): [Initializer] initializer for x845
# 5246|               getExpr(): [ConstructorCall] call to String
# 5246|                   Type = [VoidType] void
# 5246|                   ValueCategory = prvalue
# 5247|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5247|             Type = [VoidType] void
# 5247|             ValueCategory = prvalue
# 5247|           getQualifier(): [VariableAccess] x845
# 5247|               Type = [Struct] String
# 5247|               ValueCategory = lvalue
# 5247|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5247|           Conversion = [BoolConversion] conversion to bool
# 5247|           Type = [BoolType] bool
# 5247|           Value = [CStyleCast] 0
# 5247|           ValueCategory = prvalue
# 5248|     getStmt(846): [DoStmt] do (...) ...
# 5250|       getCondition(): [Literal] 0
# 5250|           Type = [IntType] int
# 5250|           Value = [Literal] 0
# 5250|           ValueCategory = prvalue
# 5248|       getStmt(): [BlockStmt] { ... }
# 5249|         getStmt(0): [DeclStmt] declaration
# 5249|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x846
# 5249|               Type = [Struct] String
# 5249|             getVariable().getInitializer(): [Initializer] initializer for x846
# 5249|               getExpr(): [ConstructorCall] call to String
# 5249|                   Type = [VoidType] void
# 5249|                   ValueCategory = prvalue
# 5250|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5250|             Type = [VoidType] void
# 5250|             ValueCategory = prvalue
# 5250|           getQualifier(): [VariableAccess] x846
# 5250|               Type = [Struct] String
# 5250|               ValueCategory = lvalue
# 5250|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5250|           Conversion = [BoolConversion] conversion to bool
# 5250|           Type = [BoolType] bool
# 5250|           Value = [CStyleCast] 0
# 5250|           ValueCategory = prvalue
# 5251|     getStmt(847): [DoStmt] do (...) ...
# 5253|       getCondition(): [Literal] 0
# 5253|           Type = [IntType] int
# 5253|           Value = [Literal] 0
# 5253|           ValueCategory = prvalue
# 5251|       getStmt(): [BlockStmt] { ... }
# 5252|         getStmt(0): [DeclStmt] declaration
# 5252|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x847
# 5252|               Type = [Struct] String
# 5252|             getVariable().getInitializer(): [Initializer] initializer for x847
# 5252|               getExpr(): [ConstructorCall] call to String
# 5252|                   Type = [VoidType] void
# 5252|                   ValueCategory = prvalue
# 5253|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5253|             Type = [VoidType] void
# 5253|             ValueCategory = prvalue
# 5253|           getQualifier(): [VariableAccess] x847
# 5253|               Type = [Struct] String
# 5253|               ValueCategory = lvalue
# 5253|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5253|           Conversion = [BoolConversion] conversion to bool
# 5253|           Type = [BoolType] bool
# 5253|           Value = [CStyleCast] 0
# 5253|           ValueCategory = prvalue
# 5254|     getStmt(848): [DoStmt] do (...) ...
# 5256|       getCondition(): [Literal] 0
# 5256|           Type = [IntType] int
# 5256|           Value = [Literal] 0
# 5256|           ValueCategory = prvalue
# 5254|       getStmt(): [BlockStmt] { ... }
# 5255|         getStmt(0): [DeclStmt] declaration
# 5255|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x848
# 5255|               Type = [Struct] String
# 5255|             getVariable().getInitializer(): [Initializer] initializer for x848
# 5255|               getExpr(): [ConstructorCall] call to String
# 5255|                   Type = [VoidType] void
# 5255|                   ValueCategory = prvalue
# 5256|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5256|             Type = [VoidType] void
# 5256|             ValueCategory = prvalue
# 5256|           getQualifier(): [VariableAccess] x848
# 5256|               Type = [Struct] String
# 5256|               ValueCategory = lvalue
# 5256|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5256|           Conversion = [BoolConversion] conversion to bool
# 5256|           Type = [BoolType] bool
# 5256|           Value = [CStyleCast] 0
# 5256|           ValueCategory = prvalue
# 5257|     getStmt(849): [DoStmt] do (...) ...
# 5259|       getCondition(): [Literal] 0
# 5259|           Type = [IntType] int
# 5259|           Value = [Literal] 0
# 5259|           ValueCategory = prvalue
# 5257|       getStmt(): [BlockStmt] { ... }
# 5258|         getStmt(0): [DeclStmt] declaration
# 5258|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x849
# 5258|               Type = [Struct] String
# 5258|             getVariable().getInitializer(): [Initializer] initializer for x849
# 5258|               getExpr(): [ConstructorCall] call to String
# 5258|                   Type = [VoidType] void
# 5258|                   ValueCategory = prvalue
# 5259|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5259|             Type = [VoidType] void
# 5259|             ValueCategory = prvalue
# 5259|           getQualifier(): [VariableAccess] x849
# 5259|               Type = [Struct] String
# 5259|               ValueCategory = lvalue
# 5259|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5259|           Conversion = [BoolConversion] conversion to bool
# 5259|           Type = [BoolType] bool
# 5259|           Value = [CStyleCast] 0
# 5259|           ValueCategory = prvalue
# 5260|     getStmt(850): [DoStmt] do (...) ...
# 5262|       getCondition(): [Literal] 0
# 5262|           Type = [IntType] int
# 5262|           Value = [Literal] 0
# 5262|           ValueCategory = prvalue
# 5260|       getStmt(): [BlockStmt] { ... }
# 5261|         getStmt(0): [DeclStmt] declaration
# 5261|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x850
# 5261|               Type = [Struct] String
# 5261|             getVariable().getInitializer(): [Initializer] initializer for x850
# 5261|               getExpr(): [ConstructorCall] call to String
# 5261|                   Type = [VoidType] void
# 5261|                   ValueCategory = prvalue
# 5262|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5262|             Type = [VoidType] void
# 5262|             ValueCategory = prvalue
# 5262|           getQualifier(): [VariableAccess] x850
# 5262|               Type = [Struct] String
# 5262|               ValueCategory = lvalue
# 5262|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5262|           Conversion = [BoolConversion] conversion to bool
# 5262|           Type = [BoolType] bool
# 5262|           Value = [CStyleCast] 0
# 5262|           ValueCategory = prvalue
# 5263|     getStmt(851): [DoStmt] do (...) ...
# 5265|       getCondition(): [Literal] 0
# 5265|           Type = [IntType] int
# 5265|           Value = [Literal] 0
# 5265|           ValueCategory = prvalue
# 5263|       getStmt(): [BlockStmt] { ... }
# 5264|         getStmt(0): [DeclStmt] declaration
# 5264|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x851
# 5264|               Type = [Struct] String
# 5264|             getVariable().getInitializer(): [Initializer] initializer for x851
# 5264|               getExpr(): [ConstructorCall] call to String
# 5264|                   Type = [VoidType] void
# 5264|                   ValueCategory = prvalue
# 5265|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5265|             Type = [VoidType] void
# 5265|             ValueCategory = prvalue
# 5265|           getQualifier(): [VariableAccess] x851
# 5265|               Type = [Struct] String
# 5265|               ValueCategory = lvalue
# 5265|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5265|           Conversion = [BoolConversion] conversion to bool
# 5265|           Type = [BoolType] bool
# 5265|           Value = [CStyleCast] 0
# 5265|           ValueCategory = prvalue
# 5266|     getStmt(852): [DoStmt] do (...) ...
# 5268|       getCondition(): [Literal] 0
# 5268|           Type = [IntType] int
# 5268|           Value = [Literal] 0
# 5268|           ValueCategory = prvalue
# 5266|       getStmt(): [BlockStmt] { ... }
# 5267|         getStmt(0): [DeclStmt] declaration
# 5267|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x852
# 5267|               Type = [Struct] String
# 5267|             getVariable().getInitializer(): [Initializer] initializer for x852
# 5267|               getExpr(): [ConstructorCall] call to String
# 5267|                   Type = [VoidType] void
# 5267|                   ValueCategory = prvalue
# 5268|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5268|             Type = [VoidType] void
# 5268|             ValueCategory = prvalue
# 5268|           getQualifier(): [VariableAccess] x852
# 5268|               Type = [Struct] String
# 5268|               ValueCategory = lvalue
# 5268|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5268|           Conversion = [BoolConversion] conversion to bool
# 5268|           Type = [BoolType] bool
# 5268|           Value = [CStyleCast] 0
# 5268|           ValueCategory = prvalue
# 5269|     getStmt(853): [DoStmt] do (...) ...
# 5271|       getCondition(): [Literal] 0
# 5271|           Type = [IntType] int
# 5271|           Value = [Literal] 0
# 5271|           ValueCategory = prvalue
# 5269|       getStmt(): [BlockStmt] { ... }
# 5270|         getStmt(0): [DeclStmt] declaration
# 5270|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x853
# 5270|               Type = [Struct] String
# 5270|             getVariable().getInitializer(): [Initializer] initializer for x853
# 5270|               getExpr(): [ConstructorCall] call to String
# 5270|                   Type = [VoidType] void
# 5270|                   ValueCategory = prvalue
# 5271|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5271|             Type = [VoidType] void
# 5271|             ValueCategory = prvalue
# 5271|           getQualifier(): [VariableAccess] x853
# 5271|               Type = [Struct] String
# 5271|               ValueCategory = lvalue
# 5271|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5271|           Conversion = [BoolConversion] conversion to bool
# 5271|           Type = [BoolType] bool
# 5271|           Value = [CStyleCast] 0
# 5271|           ValueCategory = prvalue
# 5272|     getStmt(854): [DoStmt] do (...) ...
# 5274|       getCondition(): [Literal] 0
# 5274|           Type = [IntType] int
# 5274|           Value = [Literal] 0
# 5274|           ValueCategory = prvalue
# 5272|       getStmt(): [BlockStmt] { ... }
# 5273|         getStmt(0): [DeclStmt] declaration
# 5273|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x854
# 5273|               Type = [Struct] String
# 5273|             getVariable().getInitializer(): [Initializer] initializer for x854
# 5273|               getExpr(): [ConstructorCall] call to String
# 5273|                   Type = [VoidType] void
# 5273|                   ValueCategory = prvalue
# 5274|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5274|             Type = [VoidType] void
# 5274|             ValueCategory = prvalue
# 5274|           getQualifier(): [VariableAccess] x854
# 5274|               Type = [Struct] String
# 5274|               ValueCategory = lvalue
# 5274|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5274|           Conversion = [BoolConversion] conversion to bool
# 5274|           Type = [BoolType] bool
# 5274|           Value = [CStyleCast] 0
# 5274|           ValueCategory = prvalue
# 5275|     getStmt(855): [DoStmt] do (...) ...
# 5277|       getCondition(): [Literal] 0
# 5277|           Type = [IntType] int
# 5277|           Value = [Literal] 0
# 5277|           ValueCategory = prvalue
# 5275|       getStmt(): [BlockStmt] { ... }
# 5276|         getStmt(0): [DeclStmt] declaration
# 5276|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x855
# 5276|               Type = [Struct] String
# 5276|             getVariable().getInitializer(): [Initializer] initializer for x855
# 5276|               getExpr(): [ConstructorCall] call to String
# 5276|                   Type = [VoidType] void
# 5276|                   ValueCategory = prvalue
# 5277|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5277|             Type = [VoidType] void
# 5277|             ValueCategory = prvalue
# 5277|           getQualifier(): [VariableAccess] x855
# 5277|               Type = [Struct] String
# 5277|               ValueCategory = lvalue
# 5277|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5277|           Conversion = [BoolConversion] conversion to bool
# 5277|           Type = [BoolType] bool
# 5277|           Value = [CStyleCast] 0
# 5277|           ValueCategory = prvalue
# 5278|     getStmt(856): [DoStmt] do (...) ...
# 5280|       getCondition(): [Literal] 0
# 5280|           Type = [IntType] int
# 5280|           Value = [Literal] 0
# 5280|           ValueCategory = prvalue
# 5278|       getStmt(): [BlockStmt] { ... }
# 5279|         getStmt(0): [DeclStmt] declaration
# 5279|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x856
# 5279|               Type = [Struct] String
# 5279|             getVariable().getInitializer(): [Initializer] initializer for x856
# 5279|               getExpr(): [ConstructorCall] call to String
# 5279|                   Type = [VoidType] void
# 5279|                   ValueCategory = prvalue
# 5280|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5280|             Type = [VoidType] void
# 5280|             ValueCategory = prvalue
# 5280|           getQualifier(): [VariableAccess] x856
# 5280|               Type = [Struct] String
# 5280|               ValueCategory = lvalue
# 5280|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5280|           Conversion = [BoolConversion] conversion to bool
# 5280|           Type = [BoolType] bool
# 5280|           Value = [CStyleCast] 0
# 5280|           ValueCategory = prvalue
# 5281|     getStmt(857): [DoStmt] do (...) ...
# 5283|       getCondition(): [Literal] 0
# 5283|           Type = [IntType] int
# 5283|           Value = [Literal] 0
# 5283|           ValueCategory = prvalue
# 5281|       getStmt(): [BlockStmt] { ... }
# 5282|         getStmt(0): [DeclStmt] declaration
# 5282|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x857
# 5282|               Type = [Struct] String
# 5282|             getVariable().getInitializer(): [Initializer] initializer for x857
# 5282|               getExpr(): [ConstructorCall] call to String
# 5282|                   Type = [VoidType] void
# 5282|                   ValueCategory = prvalue
# 5283|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5283|             Type = [VoidType] void
# 5283|             ValueCategory = prvalue
# 5283|           getQualifier(): [VariableAccess] x857
# 5283|               Type = [Struct] String
# 5283|               ValueCategory = lvalue
# 5283|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5283|           Conversion = [BoolConversion] conversion to bool
# 5283|           Type = [BoolType] bool
# 5283|           Value = [CStyleCast] 0
# 5283|           ValueCategory = prvalue
# 5284|     getStmt(858): [DoStmt] do (...) ...
# 5286|       getCondition(): [Literal] 0
# 5286|           Type = [IntType] int
# 5286|           Value = [Literal] 0
# 5286|           ValueCategory = prvalue
# 5284|       getStmt(): [BlockStmt] { ... }
# 5285|         getStmt(0): [DeclStmt] declaration
# 5285|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x858
# 5285|               Type = [Struct] String
# 5285|             getVariable().getInitializer(): [Initializer] initializer for x858
# 5285|               getExpr(): [ConstructorCall] call to String
# 5285|                   Type = [VoidType] void
# 5285|                   ValueCategory = prvalue
# 5286|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5286|             Type = [VoidType] void
# 5286|             ValueCategory = prvalue
# 5286|           getQualifier(): [VariableAccess] x858
# 5286|               Type = [Struct] String
# 5286|               ValueCategory = lvalue
# 5286|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5286|           Conversion = [BoolConversion] conversion to bool
# 5286|           Type = [BoolType] bool
# 5286|           Value = [CStyleCast] 0
# 5286|           ValueCategory = prvalue
# 5287|     getStmt(859): [DoStmt] do (...) ...
# 5289|       getCondition(): [Literal] 0
# 5289|           Type = [IntType] int
# 5289|           Value = [Literal] 0
# 5289|           ValueCategory = prvalue
# 5287|       getStmt(): [BlockStmt] { ... }
# 5288|         getStmt(0): [DeclStmt] declaration
# 5288|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x859
# 5288|               Type = [Struct] String
# 5288|             getVariable().getInitializer(): [Initializer] initializer for x859
# 5288|               getExpr(): [ConstructorCall] call to String
# 5288|                   Type = [VoidType] void
# 5288|                   ValueCategory = prvalue
# 5289|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5289|             Type = [VoidType] void
# 5289|             ValueCategory = prvalue
# 5289|           getQualifier(): [VariableAccess] x859
# 5289|               Type = [Struct] String
# 5289|               ValueCategory = lvalue
# 5289|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5289|           Conversion = [BoolConversion] conversion to bool
# 5289|           Type = [BoolType] bool
# 5289|           Value = [CStyleCast] 0
# 5289|           ValueCategory = prvalue
# 5290|     getStmt(860): [DoStmt] do (...) ...
# 5292|       getCondition(): [Literal] 0
# 5292|           Type = [IntType] int
# 5292|           Value = [Literal] 0
# 5292|           ValueCategory = prvalue
# 5290|       getStmt(): [BlockStmt] { ... }
# 5291|         getStmt(0): [DeclStmt] declaration
# 5291|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x860
# 5291|               Type = [Struct] String
# 5291|             getVariable().getInitializer(): [Initializer] initializer for x860
# 5291|               getExpr(): [ConstructorCall] call to String
# 5291|                   Type = [VoidType] void
# 5291|                   ValueCategory = prvalue
# 5292|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5292|             Type = [VoidType] void
# 5292|             ValueCategory = prvalue
# 5292|           getQualifier(): [VariableAccess] x860
# 5292|               Type = [Struct] String
# 5292|               ValueCategory = lvalue
# 5292|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5292|           Conversion = [BoolConversion] conversion to bool
# 5292|           Type = [BoolType] bool
# 5292|           Value = [CStyleCast] 0
# 5292|           ValueCategory = prvalue
# 5293|     getStmt(861): [DoStmt] do (...) ...
# 5295|       getCondition(): [Literal] 0
# 5295|           Type = [IntType] int
# 5295|           Value = [Literal] 0
# 5295|           ValueCategory = prvalue
# 5293|       getStmt(): [BlockStmt] { ... }
# 5294|         getStmt(0): [DeclStmt] declaration
# 5294|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x861
# 5294|               Type = [Struct] String
# 5294|             getVariable().getInitializer(): [Initializer] initializer for x861
# 5294|               getExpr(): [ConstructorCall] call to String
# 5294|                   Type = [VoidType] void
# 5294|                   ValueCategory = prvalue
# 5295|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5295|             Type = [VoidType] void
# 5295|             ValueCategory = prvalue
# 5295|           getQualifier(): [VariableAccess] x861
# 5295|               Type = [Struct] String
# 5295|               ValueCategory = lvalue
# 5295|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5295|           Conversion = [BoolConversion] conversion to bool
# 5295|           Type = [BoolType] bool
# 5295|           Value = [CStyleCast] 0
# 5295|           ValueCategory = prvalue
# 5296|     getStmt(862): [DoStmt] do (...) ...
# 5298|       getCondition(): [Literal] 0
# 5298|           Type = [IntType] int
# 5298|           Value = [Literal] 0
# 5298|           ValueCategory = prvalue
# 5296|       getStmt(): [BlockStmt] { ... }
# 5297|         getStmt(0): [DeclStmt] declaration
# 5297|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x862
# 5297|               Type = [Struct] String
# 5297|             getVariable().getInitializer(): [Initializer] initializer for x862
# 5297|               getExpr(): [ConstructorCall] call to String
# 5297|                   Type = [VoidType] void
# 5297|                   ValueCategory = prvalue
# 5298|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5298|             Type = [VoidType] void
# 5298|             ValueCategory = prvalue
# 5298|           getQualifier(): [VariableAccess] x862
# 5298|               Type = [Struct] String
# 5298|               ValueCategory = lvalue
# 5298|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5298|           Conversion = [BoolConversion] conversion to bool
# 5298|           Type = [BoolType] bool
# 5298|           Value = [CStyleCast] 0
# 5298|           ValueCategory = prvalue
# 5299|     getStmt(863): [DoStmt] do (...) ...
# 5301|       getCondition(): [Literal] 0
# 5301|           Type = [IntType] int
# 5301|           Value = [Literal] 0
# 5301|           ValueCategory = prvalue
# 5299|       getStmt(): [BlockStmt] { ... }
# 5300|         getStmt(0): [DeclStmt] declaration
# 5300|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x863
# 5300|               Type = [Struct] String
# 5300|             getVariable().getInitializer(): [Initializer] initializer for x863
# 5300|               getExpr(): [ConstructorCall] call to String
# 5300|                   Type = [VoidType] void
# 5300|                   ValueCategory = prvalue
# 5301|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5301|             Type = [VoidType] void
# 5301|             ValueCategory = prvalue
# 5301|           getQualifier(): [VariableAccess] x863
# 5301|               Type = [Struct] String
# 5301|               ValueCategory = lvalue
# 5301|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5301|           Conversion = [BoolConversion] conversion to bool
# 5301|           Type = [BoolType] bool
# 5301|           Value = [CStyleCast] 0
# 5301|           ValueCategory = prvalue
# 5302|     getStmt(864): [DoStmt] do (...) ...
# 5304|       getCondition(): [Literal] 0
# 5304|           Type = [IntType] int
# 5304|           Value = [Literal] 0
# 5304|           ValueCategory = prvalue
# 5302|       getStmt(): [BlockStmt] { ... }
# 5303|         getStmt(0): [DeclStmt] declaration
# 5303|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x864
# 5303|               Type = [Struct] String
# 5303|             getVariable().getInitializer(): [Initializer] initializer for x864
# 5303|               getExpr(): [ConstructorCall] call to String
# 5303|                   Type = [VoidType] void
# 5303|                   ValueCategory = prvalue
# 5304|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5304|             Type = [VoidType] void
# 5304|             ValueCategory = prvalue
# 5304|           getQualifier(): [VariableAccess] x864
# 5304|               Type = [Struct] String
# 5304|               ValueCategory = lvalue
# 5304|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5304|           Conversion = [BoolConversion] conversion to bool
# 5304|           Type = [BoolType] bool
# 5304|           Value = [CStyleCast] 0
# 5304|           ValueCategory = prvalue
# 5305|     getStmt(865): [DoStmt] do (...) ...
# 5307|       getCondition(): [Literal] 0
# 5307|           Type = [IntType] int
# 5307|           Value = [Literal] 0
# 5307|           ValueCategory = prvalue
# 5305|       getStmt(): [BlockStmt] { ... }
# 5306|         getStmt(0): [DeclStmt] declaration
# 5306|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x865
# 5306|               Type = [Struct] String
# 5306|             getVariable().getInitializer(): [Initializer] initializer for x865
# 5306|               getExpr(): [ConstructorCall] call to String
# 5306|                   Type = [VoidType] void
# 5306|                   ValueCategory = prvalue
# 5307|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5307|             Type = [VoidType] void
# 5307|             ValueCategory = prvalue
# 5307|           getQualifier(): [VariableAccess] x865
# 5307|               Type = [Struct] String
# 5307|               ValueCategory = lvalue
# 5307|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5307|           Conversion = [BoolConversion] conversion to bool
# 5307|           Type = [BoolType] bool
# 5307|           Value = [CStyleCast] 0
# 5307|           ValueCategory = prvalue
# 5308|     getStmt(866): [DoStmt] do (...) ...
# 5310|       getCondition(): [Literal] 0
# 5310|           Type = [IntType] int
# 5310|           Value = [Literal] 0
# 5310|           ValueCategory = prvalue
# 5308|       getStmt(): [BlockStmt] { ... }
# 5309|         getStmt(0): [DeclStmt] declaration
# 5309|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x866
# 5309|               Type = [Struct] String
# 5309|             getVariable().getInitializer(): [Initializer] initializer for x866
# 5309|               getExpr(): [ConstructorCall] call to String
# 5309|                   Type = [VoidType] void
# 5309|                   ValueCategory = prvalue
# 5310|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5310|             Type = [VoidType] void
# 5310|             ValueCategory = prvalue
# 5310|           getQualifier(): [VariableAccess] x866
# 5310|               Type = [Struct] String
# 5310|               ValueCategory = lvalue
# 5310|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5310|           Conversion = [BoolConversion] conversion to bool
# 5310|           Type = [BoolType] bool
# 5310|           Value = [CStyleCast] 0
# 5310|           ValueCategory = prvalue
# 5311|     getStmt(867): [DoStmt] do (...) ...
# 5313|       getCondition(): [Literal] 0
# 5313|           Type = [IntType] int
# 5313|           Value = [Literal] 0
# 5313|           ValueCategory = prvalue
# 5311|       getStmt(): [BlockStmt] { ... }
# 5312|         getStmt(0): [DeclStmt] declaration
# 5312|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x867
# 5312|               Type = [Struct] String
# 5312|             getVariable().getInitializer(): [Initializer] initializer for x867
# 5312|               getExpr(): [ConstructorCall] call to String
# 5312|                   Type = [VoidType] void
# 5312|                   ValueCategory = prvalue
# 5313|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5313|             Type = [VoidType] void
# 5313|             ValueCategory = prvalue
# 5313|           getQualifier(): [VariableAccess] x867
# 5313|               Type = [Struct] String
# 5313|               ValueCategory = lvalue
# 5313|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5313|           Conversion = [BoolConversion] conversion to bool
# 5313|           Type = [BoolType] bool
# 5313|           Value = [CStyleCast] 0
# 5313|           ValueCategory = prvalue
# 5314|     getStmt(868): [DoStmt] do (...) ...
# 5316|       getCondition(): [Literal] 0
# 5316|           Type = [IntType] int
# 5316|           Value = [Literal] 0
# 5316|           ValueCategory = prvalue
# 5314|       getStmt(): [BlockStmt] { ... }
# 5315|         getStmt(0): [DeclStmt] declaration
# 5315|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x868
# 5315|               Type = [Struct] String
# 5315|             getVariable().getInitializer(): [Initializer] initializer for x868
# 5315|               getExpr(): [ConstructorCall] call to String
# 5315|                   Type = [VoidType] void
# 5315|                   ValueCategory = prvalue
# 5316|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5316|             Type = [VoidType] void
# 5316|             ValueCategory = prvalue
# 5316|           getQualifier(): [VariableAccess] x868
# 5316|               Type = [Struct] String
# 5316|               ValueCategory = lvalue
# 5316|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5316|           Conversion = [BoolConversion] conversion to bool
# 5316|           Type = [BoolType] bool
# 5316|           Value = [CStyleCast] 0
# 5316|           ValueCategory = prvalue
# 5317|     getStmt(869): [DoStmt] do (...) ...
# 5319|       getCondition(): [Literal] 0
# 5319|           Type = [IntType] int
# 5319|           Value = [Literal] 0
# 5319|           ValueCategory = prvalue
# 5317|       getStmt(): [BlockStmt] { ... }
# 5318|         getStmt(0): [DeclStmt] declaration
# 5318|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x869
# 5318|               Type = [Struct] String
# 5318|             getVariable().getInitializer(): [Initializer] initializer for x869
# 5318|               getExpr(): [ConstructorCall] call to String
# 5318|                   Type = [VoidType] void
# 5318|                   ValueCategory = prvalue
# 5319|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5319|             Type = [VoidType] void
# 5319|             ValueCategory = prvalue
# 5319|           getQualifier(): [VariableAccess] x869
# 5319|               Type = [Struct] String
# 5319|               ValueCategory = lvalue
# 5319|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5319|           Conversion = [BoolConversion] conversion to bool
# 5319|           Type = [BoolType] bool
# 5319|           Value = [CStyleCast] 0
# 5319|           ValueCategory = prvalue
# 5320|     getStmt(870): [DoStmt] do (...) ...
# 5322|       getCondition(): [Literal] 0
# 5322|           Type = [IntType] int
# 5322|           Value = [Literal] 0
# 5322|           ValueCategory = prvalue
# 5320|       getStmt(): [BlockStmt] { ... }
# 5321|         getStmt(0): [DeclStmt] declaration
# 5321|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x870
# 5321|               Type = [Struct] String
# 5321|             getVariable().getInitializer(): [Initializer] initializer for x870
# 5321|               getExpr(): [ConstructorCall] call to String
# 5321|                   Type = [VoidType] void
# 5321|                   ValueCategory = prvalue
# 5322|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5322|             Type = [VoidType] void
# 5322|             ValueCategory = prvalue
# 5322|           getQualifier(): [VariableAccess] x870
# 5322|               Type = [Struct] String
# 5322|               ValueCategory = lvalue
# 5322|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5322|           Conversion = [BoolConversion] conversion to bool
# 5322|           Type = [BoolType] bool
# 5322|           Value = [CStyleCast] 0
# 5322|           ValueCategory = prvalue
# 5323|     getStmt(871): [DoStmt] do (...) ...
# 5325|       getCondition(): [Literal] 0
# 5325|           Type = [IntType] int
# 5325|           Value = [Literal] 0
# 5325|           ValueCategory = prvalue
# 5323|       getStmt(): [BlockStmt] { ... }
# 5324|         getStmt(0): [DeclStmt] declaration
# 5324|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x871
# 5324|               Type = [Struct] String
# 5324|             getVariable().getInitializer(): [Initializer] initializer for x871
# 5324|               getExpr(): [ConstructorCall] call to String
# 5324|                   Type = [VoidType] void
# 5324|                   ValueCategory = prvalue
# 5325|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5325|             Type = [VoidType] void
# 5325|             ValueCategory = prvalue
# 5325|           getQualifier(): [VariableAccess] x871
# 5325|               Type = [Struct] String
# 5325|               ValueCategory = lvalue
# 5325|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5325|           Conversion = [BoolConversion] conversion to bool
# 5325|           Type = [BoolType] bool
# 5325|           Value = [CStyleCast] 0
# 5325|           ValueCategory = prvalue
# 5326|     getStmt(872): [DoStmt] do (...) ...
# 5328|       getCondition(): [Literal] 0
# 5328|           Type = [IntType] int
# 5328|           Value = [Literal] 0
# 5328|           ValueCategory = prvalue
# 5326|       getStmt(): [BlockStmt] { ... }
# 5327|         getStmt(0): [DeclStmt] declaration
# 5327|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x872
# 5327|               Type = [Struct] String
# 5327|             getVariable().getInitializer(): [Initializer] initializer for x872
# 5327|               getExpr(): [ConstructorCall] call to String
# 5327|                   Type = [VoidType] void
# 5327|                   ValueCategory = prvalue
# 5328|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5328|             Type = [VoidType] void
# 5328|             ValueCategory = prvalue
# 5328|           getQualifier(): [VariableAccess] x872
# 5328|               Type = [Struct] String
# 5328|               ValueCategory = lvalue
# 5328|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5328|           Conversion = [BoolConversion] conversion to bool
# 5328|           Type = [BoolType] bool
# 5328|           Value = [CStyleCast] 0
# 5328|           ValueCategory = prvalue
# 5329|     getStmt(873): [DoStmt] do (...) ...
# 5331|       getCondition(): [Literal] 0
# 5331|           Type = [IntType] int
# 5331|           Value = [Literal] 0
# 5331|           ValueCategory = prvalue
# 5329|       getStmt(): [BlockStmt] { ... }
# 5330|         getStmt(0): [DeclStmt] declaration
# 5330|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x873
# 5330|               Type = [Struct] String
# 5330|             getVariable().getInitializer(): [Initializer] initializer for x873
# 5330|               getExpr(): [ConstructorCall] call to String
# 5330|                   Type = [VoidType] void
# 5330|                   ValueCategory = prvalue
# 5331|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5331|             Type = [VoidType] void
# 5331|             ValueCategory = prvalue
# 5331|           getQualifier(): [VariableAccess] x873
# 5331|               Type = [Struct] String
# 5331|               ValueCategory = lvalue
# 5331|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5331|           Conversion = [BoolConversion] conversion to bool
# 5331|           Type = [BoolType] bool
# 5331|           Value = [CStyleCast] 0
# 5331|           ValueCategory = prvalue
# 5332|     getStmt(874): [DoStmt] do (...) ...
# 5334|       getCondition(): [Literal] 0
# 5334|           Type = [IntType] int
# 5334|           Value = [Literal] 0
# 5334|           ValueCategory = prvalue
# 5332|       getStmt(): [BlockStmt] { ... }
# 5333|         getStmt(0): [DeclStmt] declaration
# 5333|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x874
# 5333|               Type = [Struct] String
# 5333|             getVariable().getInitializer(): [Initializer] initializer for x874
# 5333|               getExpr(): [ConstructorCall] call to String
# 5333|                   Type = [VoidType] void
# 5333|                   ValueCategory = prvalue
# 5334|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5334|             Type = [VoidType] void
# 5334|             ValueCategory = prvalue
# 5334|           getQualifier(): [VariableAccess] x874
# 5334|               Type = [Struct] String
# 5334|               ValueCategory = lvalue
# 5334|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5334|           Conversion = [BoolConversion] conversion to bool
# 5334|           Type = [BoolType] bool
# 5334|           Value = [CStyleCast] 0
# 5334|           ValueCategory = prvalue
# 5335|     getStmt(875): [DoStmt] do (...) ...
# 5337|       getCondition(): [Literal] 0
# 5337|           Type = [IntType] int
# 5337|           Value = [Literal] 0
# 5337|           ValueCategory = prvalue
# 5335|       getStmt(): [BlockStmt] { ... }
# 5336|         getStmt(0): [DeclStmt] declaration
# 5336|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x875
# 5336|               Type = [Struct] String
# 5336|             getVariable().getInitializer(): [Initializer] initializer for x875
# 5336|               getExpr(): [ConstructorCall] call to String
# 5336|                   Type = [VoidType] void
# 5336|                   ValueCategory = prvalue
# 5337|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5337|             Type = [VoidType] void
# 5337|             ValueCategory = prvalue
# 5337|           getQualifier(): [VariableAccess] x875
# 5337|               Type = [Struct] String
# 5337|               ValueCategory = lvalue
# 5337|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5337|           Conversion = [BoolConversion] conversion to bool
# 5337|           Type = [BoolType] bool
# 5337|           Value = [CStyleCast] 0
# 5337|           ValueCategory = prvalue
# 5338|     getStmt(876): [DoStmt] do (...) ...
# 5340|       getCondition(): [Literal] 0
# 5340|           Type = [IntType] int
# 5340|           Value = [Literal] 0
# 5340|           ValueCategory = prvalue
# 5338|       getStmt(): [BlockStmt] { ... }
# 5339|         getStmt(0): [DeclStmt] declaration
# 5339|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x876
# 5339|               Type = [Struct] String
# 5339|             getVariable().getInitializer(): [Initializer] initializer for x876
# 5339|               getExpr(): [ConstructorCall] call to String
# 5339|                   Type = [VoidType] void
# 5339|                   ValueCategory = prvalue
# 5340|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5340|             Type = [VoidType] void
# 5340|             ValueCategory = prvalue
# 5340|           getQualifier(): [VariableAccess] x876
# 5340|               Type = [Struct] String
# 5340|               ValueCategory = lvalue
# 5340|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5340|           Conversion = [BoolConversion] conversion to bool
# 5340|           Type = [BoolType] bool
# 5340|           Value = [CStyleCast] 0
# 5340|           ValueCategory = prvalue
# 5341|     getStmt(877): [DoStmt] do (...) ...
# 5343|       getCondition(): [Literal] 0
# 5343|           Type = [IntType] int
# 5343|           Value = [Literal] 0
# 5343|           ValueCategory = prvalue
# 5341|       getStmt(): [BlockStmt] { ... }
# 5342|         getStmt(0): [DeclStmt] declaration
# 5342|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x877
# 5342|               Type = [Struct] String
# 5342|             getVariable().getInitializer(): [Initializer] initializer for x877
# 5342|               getExpr(): [ConstructorCall] call to String
# 5342|                   Type = [VoidType] void
# 5342|                   ValueCategory = prvalue
# 5343|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5343|             Type = [VoidType] void
# 5343|             ValueCategory = prvalue
# 5343|           getQualifier(): [VariableAccess] x877
# 5343|               Type = [Struct] String
# 5343|               ValueCategory = lvalue
# 5343|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5343|           Conversion = [BoolConversion] conversion to bool
# 5343|           Type = [BoolType] bool
# 5343|           Value = [CStyleCast] 0
# 5343|           ValueCategory = prvalue
# 5344|     getStmt(878): [DoStmt] do (...) ...
# 5346|       getCondition(): [Literal] 0
# 5346|           Type = [IntType] int
# 5346|           Value = [Literal] 0
# 5346|           ValueCategory = prvalue
# 5344|       getStmt(): [BlockStmt] { ... }
# 5345|         getStmt(0): [DeclStmt] declaration
# 5345|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x878
# 5345|               Type = [Struct] String
# 5345|             getVariable().getInitializer(): [Initializer] initializer for x878
# 5345|               getExpr(): [ConstructorCall] call to String
# 5345|                   Type = [VoidType] void
# 5345|                   ValueCategory = prvalue
# 5346|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5346|             Type = [VoidType] void
# 5346|             ValueCategory = prvalue
# 5346|           getQualifier(): [VariableAccess] x878
# 5346|               Type = [Struct] String
# 5346|               ValueCategory = lvalue
# 5346|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5346|           Conversion = [BoolConversion] conversion to bool
# 5346|           Type = [BoolType] bool
# 5346|           Value = [CStyleCast] 0
# 5346|           ValueCategory = prvalue
# 5347|     getStmt(879): [DoStmt] do (...) ...
# 5349|       getCondition(): [Literal] 0
# 5349|           Type = [IntType] int
# 5349|           Value = [Literal] 0
# 5349|           ValueCategory = prvalue
# 5347|       getStmt(): [BlockStmt] { ... }
# 5348|         getStmt(0): [DeclStmt] declaration
# 5348|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x879
# 5348|               Type = [Struct] String
# 5348|             getVariable().getInitializer(): [Initializer] initializer for x879
# 5348|               getExpr(): [ConstructorCall] call to String
# 5348|                   Type = [VoidType] void
# 5348|                   ValueCategory = prvalue
# 5349|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5349|             Type = [VoidType] void
# 5349|             ValueCategory = prvalue
# 5349|           getQualifier(): [VariableAccess] x879
# 5349|               Type = [Struct] String
# 5349|               ValueCategory = lvalue
# 5349|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5349|           Conversion = [BoolConversion] conversion to bool
# 5349|           Type = [BoolType] bool
# 5349|           Value = [CStyleCast] 0
# 5349|           ValueCategory = prvalue
# 5350|     getStmt(880): [DoStmt] do (...) ...
# 5352|       getCondition(): [Literal] 0
# 5352|           Type = [IntType] int
# 5352|           Value = [Literal] 0
# 5352|           ValueCategory = prvalue
# 5350|       getStmt(): [BlockStmt] { ... }
# 5351|         getStmt(0): [DeclStmt] declaration
# 5351|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x880
# 5351|               Type = [Struct] String
# 5351|             getVariable().getInitializer(): [Initializer] initializer for x880
# 5351|               getExpr(): [ConstructorCall] call to String
# 5351|                   Type = [VoidType] void
# 5351|                   ValueCategory = prvalue
# 5352|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5352|             Type = [VoidType] void
# 5352|             ValueCategory = prvalue
# 5352|           getQualifier(): [VariableAccess] x880
# 5352|               Type = [Struct] String
# 5352|               ValueCategory = lvalue
# 5352|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5352|           Conversion = [BoolConversion] conversion to bool
# 5352|           Type = [BoolType] bool
# 5352|           Value = [CStyleCast] 0
# 5352|           ValueCategory = prvalue
# 5353|     getStmt(881): [DoStmt] do (...) ...
# 5355|       getCondition(): [Literal] 0
# 5355|           Type = [IntType] int
# 5355|           Value = [Literal] 0
# 5355|           ValueCategory = prvalue
# 5353|       getStmt(): [BlockStmt] { ... }
# 5354|         getStmt(0): [DeclStmt] declaration
# 5354|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x881
# 5354|               Type = [Struct] String
# 5354|             getVariable().getInitializer(): [Initializer] initializer for x881
# 5354|               getExpr(): [ConstructorCall] call to String
# 5354|                   Type = [VoidType] void
# 5354|                   ValueCategory = prvalue
# 5355|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5355|             Type = [VoidType] void
# 5355|             ValueCategory = prvalue
# 5355|           getQualifier(): [VariableAccess] x881
# 5355|               Type = [Struct] String
# 5355|               ValueCategory = lvalue
# 5355|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5355|           Conversion = [BoolConversion] conversion to bool
# 5355|           Type = [BoolType] bool
# 5355|           Value = [CStyleCast] 0
# 5355|           ValueCategory = prvalue
# 5356|     getStmt(882): [DoStmt] do (...) ...
# 5358|       getCondition(): [Literal] 0
# 5358|           Type = [IntType] int
# 5358|           Value = [Literal] 0
# 5358|           ValueCategory = prvalue
# 5356|       getStmt(): [BlockStmt] { ... }
# 5357|         getStmt(0): [DeclStmt] declaration
# 5357|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x882
# 5357|               Type = [Struct] String
# 5357|             getVariable().getInitializer(): [Initializer] initializer for x882
# 5357|               getExpr(): [ConstructorCall] call to String
# 5357|                   Type = [VoidType] void
# 5357|                   ValueCategory = prvalue
# 5358|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5358|             Type = [VoidType] void
# 5358|             ValueCategory = prvalue
# 5358|           getQualifier(): [VariableAccess] x882
# 5358|               Type = [Struct] String
# 5358|               ValueCategory = lvalue
# 5358|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5358|           Conversion = [BoolConversion] conversion to bool
# 5358|           Type = [BoolType] bool
# 5358|           Value = [CStyleCast] 0
# 5358|           ValueCategory = prvalue
# 5359|     getStmt(883): [DoStmt] do (...) ...
# 5361|       getCondition(): [Literal] 0
# 5361|           Type = [IntType] int
# 5361|           Value = [Literal] 0
# 5361|           ValueCategory = prvalue
# 5359|       getStmt(): [BlockStmt] { ... }
# 5360|         getStmt(0): [DeclStmt] declaration
# 5360|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x883
# 5360|               Type = [Struct] String
# 5360|             getVariable().getInitializer(): [Initializer] initializer for x883
# 5360|               getExpr(): [ConstructorCall] call to String
# 5360|                   Type = [VoidType] void
# 5360|                   ValueCategory = prvalue
# 5361|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5361|             Type = [VoidType] void
# 5361|             ValueCategory = prvalue
# 5361|           getQualifier(): [VariableAccess] x883
# 5361|               Type = [Struct] String
# 5361|               ValueCategory = lvalue
# 5361|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5361|           Conversion = [BoolConversion] conversion to bool
# 5361|           Type = [BoolType] bool
# 5361|           Value = [CStyleCast] 0
# 5361|           ValueCategory = prvalue
# 5362|     getStmt(884): [DoStmt] do (...) ...
# 5364|       getCondition(): [Literal] 0
# 5364|           Type = [IntType] int
# 5364|           Value = [Literal] 0
# 5364|           ValueCategory = prvalue
# 5362|       getStmt(): [BlockStmt] { ... }
# 5363|         getStmt(0): [DeclStmt] declaration
# 5363|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x884
# 5363|               Type = [Struct] String
# 5363|             getVariable().getInitializer(): [Initializer] initializer for x884
# 5363|               getExpr(): [ConstructorCall] call to String
# 5363|                   Type = [VoidType] void
# 5363|                   ValueCategory = prvalue
# 5364|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5364|             Type = [VoidType] void
# 5364|             ValueCategory = prvalue
# 5364|           getQualifier(): [VariableAccess] x884
# 5364|               Type = [Struct] String
# 5364|               ValueCategory = lvalue
# 5364|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5364|           Conversion = [BoolConversion] conversion to bool
# 5364|           Type = [BoolType] bool
# 5364|           Value = [CStyleCast] 0
# 5364|           ValueCategory = prvalue
# 5365|     getStmt(885): [DoStmt] do (...) ...
# 5367|       getCondition(): [Literal] 0
# 5367|           Type = [IntType] int
# 5367|           Value = [Literal] 0
# 5367|           ValueCategory = prvalue
# 5365|       getStmt(): [BlockStmt] { ... }
# 5366|         getStmt(0): [DeclStmt] declaration
# 5366|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x885
# 5366|               Type = [Struct] String
# 5366|             getVariable().getInitializer(): [Initializer] initializer for x885
# 5366|               getExpr(): [ConstructorCall] call to String
# 5366|                   Type = [VoidType] void
# 5366|                   ValueCategory = prvalue
# 5367|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5367|             Type = [VoidType] void
# 5367|             ValueCategory = prvalue
# 5367|           getQualifier(): [VariableAccess] x885
# 5367|               Type = [Struct] String
# 5367|               ValueCategory = lvalue
# 5367|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5367|           Conversion = [BoolConversion] conversion to bool
# 5367|           Type = [BoolType] bool
# 5367|           Value = [CStyleCast] 0
# 5367|           ValueCategory = prvalue
# 5368|     getStmt(886): [DoStmt] do (...) ...
# 5370|       getCondition(): [Literal] 0
# 5370|           Type = [IntType] int
# 5370|           Value = [Literal] 0
# 5370|           ValueCategory = prvalue
# 5368|       getStmt(): [BlockStmt] { ... }
# 5369|         getStmt(0): [DeclStmt] declaration
# 5369|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x886
# 5369|               Type = [Struct] String
# 5369|             getVariable().getInitializer(): [Initializer] initializer for x886
# 5369|               getExpr(): [ConstructorCall] call to String
# 5369|                   Type = [VoidType] void
# 5369|                   ValueCategory = prvalue
# 5370|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5370|             Type = [VoidType] void
# 5370|             ValueCategory = prvalue
# 5370|           getQualifier(): [VariableAccess] x886
# 5370|               Type = [Struct] String
# 5370|               ValueCategory = lvalue
# 5370|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5370|           Conversion = [BoolConversion] conversion to bool
# 5370|           Type = [BoolType] bool
# 5370|           Value = [CStyleCast] 0
# 5370|           ValueCategory = prvalue
# 5371|     getStmt(887): [DoStmt] do (...) ...
# 5373|       getCondition(): [Literal] 0
# 5373|           Type = [IntType] int
# 5373|           Value = [Literal] 0
# 5373|           ValueCategory = prvalue
# 5371|       getStmt(): [BlockStmt] { ... }
# 5372|         getStmt(0): [DeclStmt] declaration
# 5372|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x887
# 5372|               Type = [Struct] String
# 5372|             getVariable().getInitializer(): [Initializer] initializer for x887
# 5372|               getExpr(): [ConstructorCall] call to String
# 5372|                   Type = [VoidType] void
# 5372|                   ValueCategory = prvalue
# 5373|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5373|             Type = [VoidType] void
# 5373|             ValueCategory = prvalue
# 5373|           getQualifier(): [VariableAccess] x887
# 5373|               Type = [Struct] String
# 5373|               ValueCategory = lvalue
# 5373|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5373|           Conversion = [BoolConversion] conversion to bool
# 5373|           Type = [BoolType] bool
# 5373|           Value = [CStyleCast] 0
# 5373|           ValueCategory = prvalue
# 5374|     getStmt(888): [DoStmt] do (...) ...
# 5376|       getCondition(): [Literal] 0
# 5376|           Type = [IntType] int
# 5376|           Value = [Literal] 0
# 5376|           ValueCategory = prvalue
# 5374|       getStmt(): [BlockStmt] { ... }
# 5375|         getStmt(0): [DeclStmt] declaration
# 5375|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x888
# 5375|               Type = [Struct] String
# 5375|             getVariable().getInitializer(): [Initializer] initializer for x888
# 5375|               getExpr(): [ConstructorCall] call to String
# 5375|                   Type = [VoidType] void
# 5375|                   ValueCategory = prvalue
# 5376|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5376|             Type = [VoidType] void
# 5376|             ValueCategory = prvalue
# 5376|           getQualifier(): [VariableAccess] x888
# 5376|               Type = [Struct] String
# 5376|               ValueCategory = lvalue
# 5376|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5376|           Conversion = [BoolConversion] conversion to bool
# 5376|           Type = [BoolType] bool
# 5376|           Value = [CStyleCast] 0
# 5376|           ValueCategory = prvalue
# 5377|     getStmt(889): [DoStmt] do (...) ...
# 5379|       getCondition(): [Literal] 0
# 5379|           Type = [IntType] int
# 5379|           Value = [Literal] 0
# 5379|           ValueCategory = prvalue
# 5377|       getStmt(): [BlockStmt] { ... }
# 5378|         getStmt(0): [DeclStmt] declaration
# 5378|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x889
# 5378|               Type = [Struct] String
# 5378|             getVariable().getInitializer(): [Initializer] initializer for x889
# 5378|               getExpr(): [ConstructorCall] call to String
# 5378|                   Type = [VoidType] void
# 5378|                   ValueCategory = prvalue
# 5379|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5379|             Type = [VoidType] void
# 5379|             ValueCategory = prvalue
# 5379|           getQualifier(): [VariableAccess] x889
# 5379|               Type = [Struct] String
# 5379|               ValueCategory = lvalue
# 5379|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5379|           Conversion = [BoolConversion] conversion to bool
# 5379|           Type = [BoolType] bool
# 5379|           Value = [CStyleCast] 0
# 5379|           ValueCategory = prvalue
# 5380|     getStmt(890): [DoStmt] do (...) ...
# 5382|       getCondition(): [Literal] 0
# 5382|           Type = [IntType] int
# 5382|           Value = [Literal] 0
# 5382|           ValueCategory = prvalue
# 5380|       getStmt(): [BlockStmt] { ... }
# 5381|         getStmt(0): [DeclStmt] declaration
# 5381|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x890
# 5381|               Type = [Struct] String
# 5381|             getVariable().getInitializer(): [Initializer] initializer for x890
# 5381|               getExpr(): [ConstructorCall] call to String
# 5381|                   Type = [VoidType] void
# 5381|                   ValueCategory = prvalue
# 5382|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5382|             Type = [VoidType] void
# 5382|             ValueCategory = prvalue
# 5382|           getQualifier(): [VariableAccess] x890
# 5382|               Type = [Struct] String
# 5382|               ValueCategory = lvalue
# 5382|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5382|           Conversion = [BoolConversion] conversion to bool
# 5382|           Type = [BoolType] bool
# 5382|           Value = [CStyleCast] 0
# 5382|           ValueCategory = prvalue
# 5383|     getStmt(891): [DoStmt] do (...) ...
# 5385|       getCondition(): [Literal] 0
# 5385|           Type = [IntType] int
# 5385|           Value = [Literal] 0
# 5385|           ValueCategory = prvalue
# 5383|       getStmt(): [BlockStmt] { ... }
# 5384|         getStmt(0): [DeclStmt] declaration
# 5384|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x891
# 5384|               Type = [Struct] String
# 5384|             getVariable().getInitializer(): [Initializer] initializer for x891
# 5384|               getExpr(): [ConstructorCall] call to String
# 5384|                   Type = [VoidType] void
# 5384|                   ValueCategory = prvalue
# 5385|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5385|             Type = [VoidType] void
# 5385|             ValueCategory = prvalue
# 5385|           getQualifier(): [VariableAccess] x891
# 5385|               Type = [Struct] String
# 5385|               ValueCategory = lvalue
# 5385|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5385|           Conversion = [BoolConversion] conversion to bool
# 5385|           Type = [BoolType] bool
# 5385|           Value = [CStyleCast] 0
# 5385|           ValueCategory = prvalue
# 5386|     getStmt(892): [DoStmt] do (...) ...
# 5388|       getCondition(): [Literal] 0
# 5388|           Type = [IntType] int
# 5388|           Value = [Literal] 0
# 5388|           ValueCategory = prvalue
# 5386|       getStmt(): [BlockStmt] { ... }
# 5387|         getStmt(0): [DeclStmt] declaration
# 5387|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x892
# 5387|               Type = [Struct] String
# 5387|             getVariable().getInitializer(): [Initializer] initializer for x892
# 5387|               getExpr(): [ConstructorCall] call to String
# 5387|                   Type = [VoidType] void
# 5387|                   ValueCategory = prvalue
# 5388|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5388|             Type = [VoidType] void
# 5388|             ValueCategory = prvalue
# 5388|           getQualifier(): [VariableAccess] x892
# 5388|               Type = [Struct] String
# 5388|               ValueCategory = lvalue
# 5388|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5388|           Conversion = [BoolConversion] conversion to bool
# 5388|           Type = [BoolType] bool
# 5388|           Value = [CStyleCast] 0
# 5388|           ValueCategory = prvalue
# 5389|     getStmt(893): [DoStmt] do (...) ...
# 5391|       getCondition(): [Literal] 0
# 5391|           Type = [IntType] int
# 5391|           Value = [Literal] 0
# 5391|           ValueCategory = prvalue
# 5389|       getStmt(): [BlockStmt] { ... }
# 5390|         getStmt(0): [DeclStmt] declaration
# 5390|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x893
# 5390|               Type = [Struct] String
# 5390|             getVariable().getInitializer(): [Initializer] initializer for x893
# 5390|               getExpr(): [ConstructorCall] call to String
# 5390|                   Type = [VoidType] void
# 5390|                   ValueCategory = prvalue
# 5391|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5391|             Type = [VoidType] void
# 5391|             ValueCategory = prvalue
# 5391|           getQualifier(): [VariableAccess] x893
# 5391|               Type = [Struct] String
# 5391|               ValueCategory = lvalue
# 5391|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5391|           Conversion = [BoolConversion] conversion to bool
# 5391|           Type = [BoolType] bool
# 5391|           Value = [CStyleCast] 0
# 5391|           ValueCategory = prvalue
# 5392|     getStmt(894): [DoStmt] do (...) ...
# 5394|       getCondition(): [Literal] 0
# 5394|           Type = [IntType] int
# 5394|           Value = [Literal] 0
# 5394|           ValueCategory = prvalue
# 5392|       getStmt(): [BlockStmt] { ... }
# 5393|         getStmt(0): [DeclStmt] declaration
# 5393|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x894
# 5393|               Type = [Struct] String
# 5393|             getVariable().getInitializer(): [Initializer] initializer for x894
# 5393|               getExpr(): [ConstructorCall] call to String
# 5393|                   Type = [VoidType] void
# 5393|                   ValueCategory = prvalue
# 5394|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5394|             Type = [VoidType] void
# 5394|             ValueCategory = prvalue
# 5394|           getQualifier(): [VariableAccess] x894
# 5394|               Type = [Struct] String
# 5394|               ValueCategory = lvalue
# 5394|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5394|           Conversion = [BoolConversion] conversion to bool
# 5394|           Type = [BoolType] bool
# 5394|           Value = [CStyleCast] 0
# 5394|           ValueCategory = prvalue
# 5395|     getStmt(895): [DoStmt] do (...) ...
# 5397|       getCondition(): [Literal] 0
# 5397|           Type = [IntType] int
# 5397|           Value = [Literal] 0
# 5397|           ValueCategory = prvalue
# 5395|       getStmt(): [BlockStmt] { ... }
# 5396|         getStmt(0): [DeclStmt] declaration
# 5396|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x895
# 5396|               Type = [Struct] String
# 5396|             getVariable().getInitializer(): [Initializer] initializer for x895
# 5396|               getExpr(): [ConstructorCall] call to String
# 5396|                   Type = [VoidType] void
# 5396|                   ValueCategory = prvalue
# 5397|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5397|             Type = [VoidType] void
# 5397|             ValueCategory = prvalue
# 5397|           getQualifier(): [VariableAccess] x895
# 5397|               Type = [Struct] String
# 5397|               ValueCategory = lvalue
# 5397|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5397|           Conversion = [BoolConversion] conversion to bool
# 5397|           Type = [BoolType] bool
# 5397|           Value = [CStyleCast] 0
# 5397|           ValueCategory = prvalue
# 5398|     getStmt(896): [DoStmt] do (...) ...
# 5400|       getCondition(): [Literal] 0
# 5400|           Type = [IntType] int
# 5400|           Value = [Literal] 0
# 5400|           ValueCategory = prvalue
# 5398|       getStmt(): [BlockStmt] { ... }
# 5399|         getStmt(0): [DeclStmt] declaration
# 5399|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x896
# 5399|               Type = [Struct] String
# 5399|             getVariable().getInitializer(): [Initializer] initializer for x896
# 5399|               getExpr(): [ConstructorCall] call to String
# 5399|                   Type = [VoidType] void
# 5399|                   ValueCategory = prvalue
# 5400|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5400|             Type = [VoidType] void
# 5400|             ValueCategory = prvalue
# 5400|           getQualifier(): [VariableAccess] x896
# 5400|               Type = [Struct] String
# 5400|               ValueCategory = lvalue
# 5400|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5400|           Conversion = [BoolConversion] conversion to bool
# 5400|           Type = [BoolType] bool
# 5400|           Value = [CStyleCast] 0
# 5400|           ValueCategory = prvalue
# 5401|     getStmt(897): [DoStmt] do (...) ...
# 5403|       getCondition(): [Literal] 0
# 5403|           Type = [IntType] int
# 5403|           Value = [Literal] 0
# 5403|           ValueCategory = prvalue
# 5401|       getStmt(): [BlockStmt] { ... }
# 5402|         getStmt(0): [DeclStmt] declaration
# 5402|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x897
# 5402|               Type = [Struct] String
# 5402|             getVariable().getInitializer(): [Initializer] initializer for x897
# 5402|               getExpr(): [ConstructorCall] call to String
# 5402|                   Type = [VoidType] void
# 5402|                   ValueCategory = prvalue
# 5403|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5403|             Type = [VoidType] void
# 5403|             ValueCategory = prvalue
# 5403|           getQualifier(): [VariableAccess] x897
# 5403|               Type = [Struct] String
# 5403|               ValueCategory = lvalue
# 5403|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5403|           Conversion = [BoolConversion] conversion to bool
# 5403|           Type = [BoolType] bool
# 5403|           Value = [CStyleCast] 0
# 5403|           ValueCategory = prvalue
# 5404|     getStmt(898): [DoStmt] do (...) ...
# 5406|       getCondition(): [Literal] 0
# 5406|           Type = [IntType] int
# 5406|           Value = [Literal] 0
# 5406|           ValueCategory = prvalue
# 5404|       getStmt(): [BlockStmt] { ... }
# 5405|         getStmt(0): [DeclStmt] declaration
# 5405|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x898
# 5405|               Type = [Struct] String
# 5405|             getVariable().getInitializer(): [Initializer] initializer for x898
# 5405|               getExpr(): [ConstructorCall] call to String
# 5405|                   Type = [VoidType] void
# 5405|                   ValueCategory = prvalue
# 5406|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5406|             Type = [VoidType] void
# 5406|             ValueCategory = prvalue
# 5406|           getQualifier(): [VariableAccess] x898
# 5406|               Type = [Struct] String
# 5406|               ValueCategory = lvalue
# 5406|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5406|           Conversion = [BoolConversion] conversion to bool
# 5406|           Type = [BoolType] bool
# 5406|           Value = [CStyleCast] 0
# 5406|           ValueCategory = prvalue
# 5407|     getStmt(899): [DoStmt] do (...) ...
# 5409|       getCondition(): [Literal] 0
# 5409|           Type = [IntType] int
# 5409|           Value = [Literal] 0
# 5409|           ValueCategory = prvalue
# 5407|       getStmt(): [BlockStmt] { ... }
# 5408|         getStmt(0): [DeclStmt] declaration
# 5408|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x899
# 5408|               Type = [Struct] String
# 5408|             getVariable().getInitializer(): [Initializer] initializer for x899
# 5408|               getExpr(): [ConstructorCall] call to String
# 5408|                   Type = [VoidType] void
# 5408|                   ValueCategory = prvalue
# 5409|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5409|             Type = [VoidType] void
# 5409|             ValueCategory = prvalue
# 5409|           getQualifier(): [VariableAccess] x899
# 5409|               Type = [Struct] String
# 5409|               ValueCategory = lvalue
# 5409|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5409|           Conversion = [BoolConversion] conversion to bool
# 5409|           Type = [BoolType] bool
# 5409|           Value = [CStyleCast] 0
# 5409|           ValueCategory = prvalue
# 5410|     getStmt(900): [DoStmt] do (...) ...
# 5412|       getCondition(): [Literal] 0
# 5412|           Type = [IntType] int
# 5412|           Value = [Literal] 0
# 5412|           ValueCategory = prvalue
# 5410|       getStmt(): [BlockStmt] { ... }
# 5411|         getStmt(0): [DeclStmt] declaration
# 5411|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x900
# 5411|               Type = [Struct] String
# 5411|             getVariable().getInitializer(): [Initializer] initializer for x900
# 5411|               getExpr(): [ConstructorCall] call to String
# 5411|                   Type = [VoidType] void
# 5411|                   ValueCategory = prvalue
# 5412|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5412|             Type = [VoidType] void
# 5412|             ValueCategory = prvalue
# 5412|           getQualifier(): [VariableAccess] x900
# 5412|               Type = [Struct] String
# 5412|               ValueCategory = lvalue
# 5412|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5412|           Conversion = [BoolConversion] conversion to bool
# 5412|           Type = [BoolType] bool
# 5412|           Value = [CStyleCast] 0
# 5412|           ValueCategory = prvalue
# 5413|     getStmt(901): [DoStmt] do (...) ...
# 5415|       getCondition(): [Literal] 0
# 5415|           Type = [IntType] int
# 5415|           Value = [Literal] 0
# 5415|           ValueCategory = prvalue
# 5413|       getStmt(): [BlockStmt] { ... }
# 5414|         getStmt(0): [DeclStmt] declaration
# 5414|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x901
# 5414|               Type = [Struct] String
# 5414|             getVariable().getInitializer(): [Initializer] initializer for x901
# 5414|               getExpr(): [ConstructorCall] call to String
# 5414|                   Type = [VoidType] void
# 5414|                   ValueCategory = prvalue
# 5415|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5415|             Type = [VoidType] void
# 5415|             ValueCategory = prvalue
# 5415|           getQualifier(): [VariableAccess] x901
# 5415|               Type = [Struct] String
# 5415|               ValueCategory = lvalue
# 5415|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5415|           Conversion = [BoolConversion] conversion to bool
# 5415|           Type = [BoolType] bool
# 5415|           Value = [CStyleCast] 0
# 5415|           ValueCategory = prvalue
# 5416|     getStmt(902): [DoStmt] do (...) ...
# 5418|       getCondition(): [Literal] 0
# 5418|           Type = [IntType] int
# 5418|           Value = [Literal] 0
# 5418|           ValueCategory = prvalue
# 5416|       getStmt(): [BlockStmt] { ... }
# 5417|         getStmt(0): [DeclStmt] declaration
# 5417|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x902
# 5417|               Type = [Struct] String
# 5417|             getVariable().getInitializer(): [Initializer] initializer for x902
# 5417|               getExpr(): [ConstructorCall] call to String
# 5417|                   Type = [VoidType] void
# 5417|                   ValueCategory = prvalue
# 5418|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5418|             Type = [VoidType] void
# 5418|             ValueCategory = prvalue
# 5418|           getQualifier(): [VariableAccess] x902
# 5418|               Type = [Struct] String
# 5418|               ValueCategory = lvalue
# 5418|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5418|           Conversion = [BoolConversion] conversion to bool
# 5418|           Type = [BoolType] bool
# 5418|           Value = [CStyleCast] 0
# 5418|           ValueCategory = prvalue
# 5419|     getStmt(903): [DoStmt] do (...) ...
# 5421|       getCondition(): [Literal] 0
# 5421|           Type = [IntType] int
# 5421|           Value = [Literal] 0
# 5421|           ValueCategory = prvalue
# 5419|       getStmt(): [BlockStmt] { ... }
# 5420|         getStmt(0): [DeclStmt] declaration
# 5420|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x903
# 5420|               Type = [Struct] String
# 5420|             getVariable().getInitializer(): [Initializer] initializer for x903
# 5420|               getExpr(): [ConstructorCall] call to String
# 5420|                   Type = [VoidType] void
# 5420|                   ValueCategory = prvalue
# 5421|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5421|             Type = [VoidType] void
# 5421|             ValueCategory = prvalue
# 5421|           getQualifier(): [VariableAccess] x903
# 5421|               Type = [Struct] String
# 5421|               ValueCategory = lvalue
# 5421|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5421|           Conversion = [BoolConversion] conversion to bool
# 5421|           Type = [BoolType] bool
# 5421|           Value = [CStyleCast] 0
# 5421|           ValueCategory = prvalue
# 5422|     getStmt(904): [DoStmt] do (...) ...
# 5424|       getCondition(): [Literal] 0
# 5424|           Type = [IntType] int
# 5424|           Value = [Literal] 0
# 5424|           ValueCategory = prvalue
# 5422|       getStmt(): [BlockStmt] { ... }
# 5423|         getStmt(0): [DeclStmt] declaration
# 5423|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x904
# 5423|               Type = [Struct] String
# 5423|             getVariable().getInitializer(): [Initializer] initializer for x904
# 5423|               getExpr(): [ConstructorCall] call to String
# 5423|                   Type = [VoidType] void
# 5423|                   ValueCategory = prvalue
# 5424|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5424|             Type = [VoidType] void
# 5424|             ValueCategory = prvalue
# 5424|           getQualifier(): [VariableAccess] x904
# 5424|               Type = [Struct] String
# 5424|               ValueCategory = lvalue
# 5424|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5424|           Conversion = [BoolConversion] conversion to bool
# 5424|           Type = [BoolType] bool
# 5424|           Value = [CStyleCast] 0
# 5424|           ValueCategory = prvalue
# 5425|     getStmt(905): [DoStmt] do (...) ...
# 5427|       getCondition(): [Literal] 0
# 5427|           Type = [IntType] int
# 5427|           Value = [Literal] 0
# 5427|           ValueCategory = prvalue
# 5425|       getStmt(): [BlockStmt] { ... }
# 5426|         getStmt(0): [DeclStmt] declaration
# 5426|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x905
# 5426|               Type = [Struct] String
# 5426|             getVariable().getInitializer(): [Initializer] initializer for x905
# 5426|               getExpr(): [ConstructorCall] call to String
# 5426|                   Type = [VoidType] void
# 5426|                   ValueCategory = prvalue
# 5427|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5427|             Type = [VoidType] void
# 5427|             ValueCategory = prvalue
# 5427|           getQualifier(): [VariableAccess] x905
# 5427|               Type = [Struct] String
# 5427|               ValueCategory = lvalue
# 5427|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5427|           Conversion = [BoolConversion] conversion to bool
# 5427|           Type = [BoolType] bool
# 5427|           Value = [CStyleCast] 0
# 5427|           ValueCategory = prvalue
# 5428|     getStmt(906): [DoStmt] do (...) ...
# 5430|       getCondition(): [Literal] 0
# 5430|           Type = [IntType] int
# 5430|           Value = [Literal] 0
# 5430|           ValueCategory = prvalue
# 5428|       getStmt(): [BlockStmt] { ... }
# 5429|         getStmt(0): [DeclStmt] declaration
# 5429|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x906
# 5429|               Type = [Struct] String
# 5429|             getVariable().getInitializer(): [Initializer] initializer for x906
# 5429|               getExpr(): [ConstructorCall] call to String
# 5429|                   Type = [VoidType] void
# 5429|                   ValueCategory = prvalue
# 5430|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5430|             Type = [VoidType] void
# 5430|             ValueCategory = prvalue
# 5430|           getQualifier(): [VariableAccess] x906
# 5430|               Type = [Struct] String
# 5430|               ValueCategory = lvalue
# 5430|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5430|           Conversion = [BoolConversion] conversion to bool
# 5430|           Type = [BoolType] bool
# 5430|           Value = [CStyleCast] 0
# 5430|           ValueCategory = prvalue
# 5431|     getStmt(907): [DoStmt] do (...) ...
# 5433|       getCondition(): [Literal] 0
# 5433|           Type = [IntType] int
# 5433|           Value = [Literal] 0
# 5433|           ValueCategory = prvalue
# 5431|       getStmt(): [BlockStmt] { ... }
# 5432|         getStmt(0): [DeclStmt] declaration
# 5432|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x907
# 5432|               Type = [Struct] String
# 5432|             getVariable().getInitializer(): [Initializer] initializer for x907
# 5432|               getExpr(): [ConstructorCall] call to String
# 5432|                   Type = [VoidType] void
# 5432|                   ValueCategory = prvalue
# 5433|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5433|             Type = [VoidType] void
# 5433|             ValueCategory = prvalue
# 5433|           getQualifier(): [VariableAccess] x907
# 5433|               Type = [Struct] String
# 5433|               ValueCategory = lvalue
# 5433|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5433|           Conversion = [BoolConversion] conversion to bool
# 5433|           Type = [BoolType] bool
# 5433|           Value = [CStyleCast] 0
# 5433|           ValueCategory = prvalue
# 5434|     getStmt(908): [DoStmt] do (...) ...
# 5436|       getCondition(): [Literal] 0
# 5436|           Type = [IntType] int
# 5436|           Value = [Literal] 0
# 5436|           ValueCategory = prvalue
# 5434|       getStmt(): [BlockStmt] { ... }
# 5435|         getStmt(0): [DeclStmt] declaration
# 5435|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x908
# 5435|               Type = [Struct] String
# 5435|             getVariable().getInitializer(): [Initializer] initializer for x908
# 5435|               getExpr(): [ConstructorCall] call to String
# 5435|                   Type = [VoidType] void
# 5435|                   ValueCategory = prvalue
# 5436|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5436|             Type = [VoidType] void
# 5436|             ValueCategory = prvalue
# 5436|           getQualifier(): [VariableAccess] x908
# 5436|               Type = [Struct] String
# 5436|               ValueCategory = lvalue
# 5436|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5436|           Conversion = [BoolConversion] conversion to bool
# 5436|           Type = [BoolType] bool
# 5436|           Value = [CStyleCast] 0
# 5436|           ValueCategory = prvalue
# 5437|     getStmt(909): [DoStmt] do (...) ...
# 5439|       getCondition(): [Literal] 0
# 5439|           Type = [IntType] int
# 5439|           Value = [Literal] 0
# 5439|           ValueCategory = prvalue
# 5437|       getStmt(): [BlockStmt] { ... }
# 5438|         getStmt(0): [DeclStmt] declaration
# 5438|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x909
# 5438|               Type = [Struct] String
# 5438|             getVariable().getInitializer(): [Initializer] initializer for x909
# 5438|               getExpr(): [ConstructorCall] call to String
# 5438|                   Type = [VoidType] void
# 5438|                   ValueCategory = prvalue
# 5439|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5439|             Type = [VoidType] void
# 5439|             ValueCategory = prvalue
# 5439|           getQualifier(): [VariableAccess] x909
# 5439|               Type = [Struct] String
# 5439|               ValueCategory = lvalue
# 5439|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5439|           Conversion = [BoolConversion] conversion to bool
# 5439|           Type = [BoolType] bool
# 5439|           Value = [CStyleCast] 0
# 5439|           ValueCategory = prvalue
# 5440|     getStmt(910): [DoStmt] do (...) ...
# 5442|       getCondition(): [Literal] 0
# 5442|           Type = [IntType] int
# 5442|           Value = [Literal] 0
# 5442|           ValueCategory = prvalue
# 5440|       getStmt(): [BlockStmt] { ... }
# 5441|         getStmt(0): [DeclStmt] declaration
# 5441|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x910
# 5441|               Type = [Struct] String
# 5441|             getVariable().getInitializer(): [Initializer] initializer for x910
# 5441|               getExpr(): [ConstructorCall] call to String
# 5441|                   Type = [VoidType] void
# 5441|                   ValueCategory = prvalue
# 5442|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5442|             Type = [VoidType] void
# 5442|             ValueCategory = prvalue
# 5442|           getQualifier(): [VariableAccess] x910
# 5442|               Type = [Struct] String
# 5442|               ValueCategory = lvalue
# 5442|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5442|           Conversion = [BoolConversion] conversion to bool
# 5442|           Type = [BoolType] bool
# 5442|           Value = [CStyleCast] 0
# 5442|           ValueCategory = prvalue
# 5443|     getStmt(911): [DoStmt] do (...) ...
# 5445|       getCondition(): [Literal] 0
# 5445|           Type = [IntType] int
# 5445|           Value = [Literal] 0
# 5445|           ValueCategory = prvalue
# 5443|       getStmt(): [BlockStmt] { ... }
# 5444|         getStmt(0): [DeclStmt] declaration
# 5444|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x911
# 5444|               Type = [Struct] String
# 5444|             getVariable().getInitializer(): [Initializer] initializer for x911
# 5444|               getExpr(): [ConstructorCall] call to String
# 5444|                   Type = [VoidType] void
# 5444|                   ValueCategory = prvalue
# 5445|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5445|             Type = [VoidType] void
# 5445|             ValueCategory = prvalue
# 5445|           getQualifier(): [VariableAccess] x911
# 5445|               Type = [Struct] String
# 5445|               ValueCategory = lvalue
# 5445|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5445|           Conversion = [BoolConversion] conversion to bool
# 5445|           Type = [BoolType] bool
# 5445|           Value = [CStyleCast] 0
# 5445|           ValueCategory = prvalue
# 5446|     getStmt(912): [DoStmt] do (...) ...
# 5448|       getCondition(): [Literal] 0
# 5448|           Type = [IntType] int
# 5448|           Value = [Literal] 0
# 5448|           ValueCategory = prvalue
# 5446|       getStmt(): [BlockStmt] { ... }
# 5447|         getStmt(0): [DeclStmt] declaration
# 5447|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x912
# 5447|               Type = [Struct] String
# 5447|             getVariable().getInitializer(): [Initializer] initializer for x912
# 5447|               getExpr(): [ConstructorCall] call to String
# 5447|                   Type = [VoidType] void
# 5447|                   ValueCategory = prvalue
# 5448|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5448|             Type = [VoidType] void
# 5448|             ValueCategory = prvalue
# 5448|           getQualifier(): [VariableAccess] x912
# 5448|               Type = [Struct] String
# 5448|               ValueCategory = lvalue
# 5448|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5448|           Conversion = [BoolConversion] conversion to bool
# 5448|           Type = [BoolType] bool
# 5448|           Value = [CStyleCast] 0
# 5448|           ValueCategory = prvalue
# 5449|     getStmt(913): [DoStmt] do (...) ...
# 5451|       getCondition(): [Literal] 0
# 5451|           Type = [IntType] int
# 5451|           Value = [Literal] 0
# 5451|           ValueCategory = prvalue
# 5449|       getStmt(): [BlockStmt] { ... }
# 5450|         getStmt(0): [DeclStmt] declaration
# 5450|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x913
# 5450|               Type = [Struct] String
# 5450|             getVariable().getInitializer(): [Initializer] initializer for x913
# 5450|               getExpr(): [ConstructorCall] call to String
# 5450|                   Type = [VoidType] void
# 5450|                   ValueCategory = prvalue
# 5451|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5451|             Type = [VoidType] void
# 5451|             ValueCategory = prvalue
# 5451|           getQualifier(): [VariableAccess] x913
# 5451|               Type = [Struct] String
# 5451|               ValueCategory = lvalue
# 5451|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5451|           Conversion = [BoolConversion] conversion to bool
# 5451|           Type = [BoolType] bool
# 5451|           Value = [CStyleCast] 0
# 5451|           ValueCategory = prvalue
# 5452|     getStmt(914): [DoStmt] do (...) ...
# 5454|       getCondition(): [Literal] 0
# 5454|           Type = [IntType] int
# 5454|           Value = [Literal] 0
# 5454|           ValueCategory = prvalue
# 5452|       getStmt(): [BlockStmt] { ... }
# 5453|         getStmt(0): [DeclStmt] declaration
# 5453|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x914
# 5453|               Type = [Struct] String
# 5453|             getVariable().getInitializer(): [Initializer] initializer for x914
# 5453|               getExpr(): [ConstructorCall] call to String
# 5453|                   Type = [VoidType] void
# 5453|                   ValueCategory = prvalue
# 5454|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5454|             Type = [VoidType] void
# 5454|             ValueCategory = prvalue
# 5454|           getQualifier(): [VariableAccess] x914
# 5454|               Type = [Struct] String
# 5454|               ValueCategory = lvalue
# 5454|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5454|           Conversion = [BoolConversion] conversion to bool
# 5454|           Type = [BoolType] bool
# 5454|           Value = [CStyleCast] 0
# 5454|           ValueCategory = prvalue
# 5455|     getStmt(915): [DoStmt] do (...) ...
# 5457|       getCondition(): [Literal] 0
# 5457|           Type = [IntType] int
# 5457|           Value = [Literal] 0
# 5457|           ValueCategory = prvalue
# 5455|       getStmt(): [BlockStmt] { ... }
# 5456|         getStmt(0): [DeclStmt] declaration
# 5456|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x915
# 5456|               Type = [Struct] String
# 5456|             getVariable().getInitializer(): [Initializer] initializer for x915
# 5456|               getExpr(): [ConstructorCall] call to String
# 5456|                   Type = [VoidType] void
# 5456|                   ValueCategory = prvalue
# 5457|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5457|             Type = [VoidType] void
# 5457|             ValueCategory = prvalue
# 5457|           getQualifier(): [VariableAccess] x915
# 5457|               Type = [Struct] String
# 5457|               ValueCategory = lvalue
# 5457|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5457|           Conversion = [BoolConversion] conversion to bool
# 5457|           Type = [BoolType] bool
# 5457|           Value = [CStyleCast] 0
# 5457|           ValueCategory = prvalue
# 5458|     getStmt(916): [DoStmt] do (...) ...
# 5460|       getCondition(): [Literal] 0
# 5460|           Type = [IntType] int
# 5460|           Value = [Literal] 0
# 5460|           ValueCategory = prvalue
# 5458|       getStmt(): [BlockStmt] { ... }
# 5459|         getStmt(0): [DeclStmt] declaration
# 5459|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x916
# 5459|               Type = [Struct] String
# 5459|             getVariable().getInitializer(): [Initializer] initializer for x916
# 5459|               getExpr(): [ConstructorCall] call to String
# 5459|                   Type = [VoidType] void
# 5459|                   ValueCategory = prvalue
# 5460|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5460|             Type = [VoidType] void
# 5460|             ValueCategory = prvalue
# 5460|           getQualifier(): [VariableAccess] x916
# 5460|               Type = [Struct] String
# 5460|               ValueCategory = lvalue
# 5460|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5460|           Conversion = [BoolConversion] conversion to bool
# 5460|           Type = [BoolType] bool
# 5460|           Value = [CStyleCast] 0
# 5460|           ValueCategory = prvalue
# 5461|     getStmt(917): [DoStmt] do (...) ...
# 5463|       getCondition(): [Literal] 0
# 5463|           Type = [IntType] int
# 5463|           Value = [Literal] 0
# 5463|           ValueCategory = prvalue
# 5461|       getStmt(): [BlockStmt] { ... }
# 5462|         getStmt(0): [DeclStmt] declaration
# 5462|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x917
# 5462|               Type = [Struct] String
# 5462|             getVariable().getInitializer(): [Initializer] initializer for x917
# 5462|               getExpr(): [ConstructorCall] call to String
# 5462|                   Type = [VoidType] void
# 5462|                   ValueCategory = prvalue
# 5463|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5463|             Type = [VoidType] void
# 5463|             ValueCategory = prvalue
# 5463|           getQualifier(): [VariableAccess] x917
# 5463|               Type = [Struct] String
# 5463|               ValueCategory = lvalue
# 5463|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5463|           Conversion = [BoolConversion] conversion to bool
# 5463|           Type = [BoolType] bool
# 5463|           Value = [CStyleCast] 0
# 5463|           ValueCategory = prvalue
# 5464|     getStmt(918): [DoStmt] do (...) ...
# 5466|       getCondition(): [Literal] 0
# 5466|           Type = [IntType] int
# 5466|           Value = [Literal] 0
# 5466|           ValueCategory = prvalue
# 5464|       getStmt(): [BlockStmt] { ... }
# 5465|         getStmt(0): [DeclStmt] declaration
# 5465|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x918
# 5465|               Type = [Struct] String
# 5465|             getVariable().getInitializer(): [Initializer] initializer for x918
# 5465|               getExpr(): [ConstructorCall] call to String
# 5465|                   Type = [VoidType] void
# 5465|                   ValueCategory = prvalue
# 5466|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5466|             Type = [VoidType] void
# 5466|             ValueCategory = prvalue
# 5466|           getQualifier(): [VariableAccess] x918
# 5466|               Type = [Struct] String
# 5466|               ValueCategory = lvalue
# 5466|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5466|           Conversion = [BoolConversion] conversion to bool
# 5466|           Type = [BoolType] bool
# 5466|           Value = [CStyleCast] 0
# 5466|           ValueCategory = prvalue
# 5467|     getStmt(919): [DoStmt] do (...) ...
# 5469|       getCondition(): [Literal] 0
# 5469|           Type = [IntType] int
# 5469|           Value = [Literal] 0
# 5469|           ValueCategory = prvalue
# 5467|       getStmt(): [BlockStmt] { ... }
# 5468|         getStmt(0): [DeclStmt] declaration
# 5468|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x919
# 5468|               Type = [Struct] String
# 5468|             getVariable().getInitializer(): [Initializer] initializer for x919
# 5468|               getExpr(): [ConstructorCall] call to String
# 5468|                   Type = [VoidType] void
# 5468|                   ValueCategory = prvalue
# 5469|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5469|             Type = [VoidType] void
# 5469|             ValueCategory = prvalue
# 5469|           getQualifier(): [VariableAccess] x919
# 5469|               Type = [Struct] String
# 5469|               ValueCategory = lvalue
# 5469|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5469|           Conversion = [BoolConversion] conversion to bool
# 5469|           Type = [BoolType] bool
# 5469|           Value = [CStyleCast] 0
# 5469|           ValueCategory = prvalue
# 5470|     getStmt(920): [DoStmt] do (...) ...
# 5472|       getCondition(): [Literal] 0
# 5472|           Type = [IntType] int
# 5472|           Value = [Literal] 0
# 5472|           ValueCategory = prvalue
# 5470|       getStmt(): [BlockStmt] { ... }
# 5471|         getStmt(0): [DeclStmt] declaration
# 5471|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x920
# 5471|               Type = [Struct] String
# 5471|             getVariable().getInitializer(): [Initializer] initializer for x920
# 5471|               getExpr(): [ConstructorCall] call to String
# 5471|                   Type = [VoidType] void
# 5471|                   ValueCategory = prvalue
# 5472|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5472|             Type = [VoidType] void
# 5472|             ValueCategory = prvalue
# 5472|           getQualifier(): [VariableAccess] x920
# 5472|               Type = [Struct] String
# 5472|               ValueCategory = lvalue
# 5472|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5472|           Conversion = [BoolConversion] conversion to bool
# 5472|           Type = [BoolType] bool
# 5472|           Value = [CStyleCast] 0
# 5472|           ValueCategory = prvalue
# 5473|     getStmt(921): [DoStmt] do (...) ...
# 5475|       getCondition(): [Literal] 0
# 5475|           Type = [IntType] int
# 5475|           Value = [Literal] 0
# 5475|           ValueCategory = prvalue
# 5473|       getStmt(): [BlockStmt] { ... }
# 5474|         getStmt(0): [DeclStmt] declaration
# 5474|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x921
# 5474|               Type = [Struct] String
# 5474|             getVariable().getInitializer(): [Initializer] initializer for x921
# 5474|               getExpr(): [ConstructorCall] call to String
# 5474|                   Type = [VoidType] void
# 5474|                   ValueCategory = prvalue
# 5475|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5475|             Type = [VoidType] void
# 5475|             ValueCategory = prvalue
# 5475|           getQualifier(): [VariableAccess] x921
# 5475|               Type = [Struct] String
# 5475|               ValueCategory = lvalue
# 5475|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5475|           Conversion = [BoolConversion] conversion to bool
# 5475|           Type = [BoolType] bool
# 5475|           Value = [CStyleCast] 0
# 5475|           ValueCategory = prvalue
# 5476|     getStmt(922): [DoStmt] do (...) ...
# 5478|       getCondition(): [Literal] 0
# 5478|           Type = [IntType] int
# 5478|           Value = [Literal] 0
# 5478|           ValueCategory = prvalue
# 5476|       getStmt(): [BlockStmt] { ... }
# 5477|         getStmt(0): [DeclStmt] declaration
# 5477|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x922
# 5477|               Type = [Struct] String
# 5477|             getVariable().getInitializer(): [Initializer] initializer for x922
# 5477|               getExpr(): [ConstructorCall] call to String
# 5477|                   Type = [VoidType] void
# 5477|                   ValueCategory = prvalue
# 5478|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5478|             Type = [VoidType] void
# 5478|             ValueCategory = prvalue
# 5478|           getQualifier(): [VariableAccess] x922
# 5478|               Type = [Struct] String
# 5478|               ValueCategory = lvalue
# 5478|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5478|           Conversion = [BoolConversion] conversion to bool
# 5478|           Type = [BoolType] bool
# 5478|           Value = [CStyleCast] 0
# 5478|           ValueCategory = prvalue
# 5479|     getStmt(923): [DoStmt] do (...) ...
# 5481|       getCondition(): [Literal] 0
# 5481|           Type = [IntType] int
# 5481|           Value = [Literal] 0
# 5481|           ValueCategory = prvalue
# 5479|       getStmt(): [BlockStmt] { ... }
# 5480|         getStmt(0): [DeclStmt] declaration
# 5480|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x923
# 5480|               Type = [Struct] String
# 5480|             getVariable().getInitializer(): [Initializer] initializer for x923
# 5480|               getExpr(): [ConstructorCall] call to String
# 5480|                   Type = [VoidType] void
# 5480|                   ValueCategory = prvalue
# 5481|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5481|             Type = [VoidType] void
# 5481|             ValueCategory = prvalue
# 5481|           getQualifier(): [VariableAccess] x923
# 5481|               Type = [Struct] String
# 5481|               ValueCategory = lvalue
# 5481|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5481|           Conversion = [BoolConversion] conversion to bool
# 5481|           Type = [BoolType] bool
# 5481|           Value = [CStyleCast] 0
# 5481|           ValueCategory = prvalue
# 5482|     getStmt(924): [DoStmt] do (...) ...
# 5484|       getCondition(): [Literal] 0
# 5484|           Type = [IntType] int
# 5484|           Value = [Literal] 0
# 5484|           ValueCategory = prvalue
# 5482|       getStmt(): [BlockStmt] { ... }
# 5483|         getStmt(0): [DeclStmt] declaration
# 5483|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x924
# 5483|               Type = [Struct] String
# 5483|             getVariable().getInitializer(): [Initializer] initializer for x924
# 5483|               getExpr(): [ConstructorCall] call to String
# 5483|                   Type = [VoidType] void
# 5483|                   ValueCategory = prvalue
# 5484|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5484|             Type = [VoidType] void
# 5484|             ValueCategory = prvalue
# 5484|           getQualifier(): [VariableAccess] x924
# 5484|               Type = [Struct] String
# 5484|               ValueCategory = lvalue
# 5484|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5484|           Conversion = [BoolConversion] conversion to bool
# 5484|           Type = [BoolType] bool
# 5484|           Value = [CStyleCast] 0
# 5484|           ValueCategory = prvalue
# 5485|     getStmt(925): [DoStmt] do (...) ...
# 5487|       getCondition(): [Literal] 0
# 5487|           Type = [IntType] int
# 5487|           Value = [Literal] 0
# 5487|           ValueCategory = prvalue
# 5485|       getStmt(): [BlockStmt] { ... }
# 5486|         getStmt(0): [DeclStmt] declaration
# 5486|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x925
# 5486|               Type = [Struct] String
# 5486|             getVariable().getInitializer(): [Initializer] initializer for x925
# 5486|               getExpr(): [ConstructorCall] call to String
# 5486|                   Type = [VoidType] void
# 5486|                   ValueCategory = prvalue
# 5487|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5487|             Type = [VoidType] void
# 5487|             ValueCategory = prvalue
# 5487|           getQualifier(): [VariableAccess] x925
# 5487|               Type = [Struct] String
# 5487|               ValueCategory = lvalue
# 5487|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5487|           Conversion = [BoolConversion] conversion to bool
# 5487|           Type = [BoolType] bool
# 5487|           Value = [CStyleCast] 0
# 5487|           ValueCategory = prvalue
# 5488|     getStmt(926): [DoStmt] do (...) ...
# 5490|       getCondition(): [Literal] 0
# 5490|           Type = [IntType] int
# 5490|           Value = [Literal] 0
# 5490|           ValueCategory = prvalue
# 5488|       getStmt(): [BlockStmt] { ... }
# 5489|         getStmt(0): [DeclStmt] declaration
# 5489|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x926
# 5489|               Type = [Struct] String
# 5489|             getVariable().getInitializer(): [Initializer] initializer for x926
# 5489|               getExpr(): [ConstructorCall] call to String
# 5489|                   Type = [VoidType] void
# 5489|                   ValueCategory = prvalue
# 5490|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5490|             Type = [VoidType] void
# 5490|             ValueCategory = prvalue
# 5490|           getQualifier(): [VariableAccess] x926
# 5490|               Type = [Struct] String
# 5490|               ValueCategory = lvalue
# 5490|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5490|           Conversion = [BoolConversion] conversion to bool
# 5490|           Type = [BoolType] bool
# 5490|           Value = [CStyleCast] 0
# 5490|           ValueCategory = prvalue
# 5491|     getStmt(927): [DoStmt] do (...) ...
# 5493|       getCondition(): [Literal] 0
# 5493|           Type = [IntType] int
# 5493|           Value = [Literal] 0
# 5493|           ValueCategory = prvalue
# 5491|       getStmt(): [BlockStmt] { ... }
# 5492|         getStmt(0): [DeclStmt] declaration
# 5492|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x927
# 5492|               Type = [Struct] String
# 5492|             getVariable().getInitializer(): [Initializer] initializer for x927
# 5492|               getExpr(): [ConstructorCall] call to String
# 5492|                   Type = [VoidType] void
# 5492|                   ValueCategory = prvalue
# 5493|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5493|             Type = [VoidType] void
# 5493|             ValueCategory = prvalue
# 5493|           getQualifier(): [VariableAccess] x927
# 5493|               Type = [Struct] String
# 5493|               ValueCategory = lvalue
# 5493|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5493|           Conversion = [BoolConversion] conversion to bool
# 5493|           Type = [BoolType] bool
# 5493|           Value = [CStyleCast] 0
# 5493|           ValueCategory = prvalue
# 5494|     getStmt(928): [DoStmt] do (...) ...
# 5496|       getCondition(): [Literal] 0
# 5496|           Type = [IntType] int
# 5496|           Value = [Literal] 0
# 5496|           ValueCategory = prvalue
# 5494|       getStmt(): [BlockStmt] { ... }
# 5495|         getStmt(0): [DeclStmt] declaration
# 5495|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x928
# 5495|               Type = [Struct] String
# 5495|             getVariable().getInitializer(): [Initializer] initializer for x928
# 5495|               getExpr(): [ConstructorCall] call to String
# 5495|                   Type = [VoidType] void
# 5495|                   ValueCategory = prvalue
# 5496|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5496|             Type = [VoidType] void
# 5496|             ValueCategory = prvalue
# 5496|           getQualifier(): [VariableAccess] x928
# 5496|               Type = [Struct] String
# 5496|               ValueCategory = lvalue
# 5496|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5496|           Conversion = [BoolConversion] conversion to bool
# 5496|           Type = [BoolType] bool
# 5496|           Value = [CStyleCast] 0
# 5496|           ValueCategory = prvalue
# 5497|     getStmt(929): [DoStmt] do (...) ...
# 5499|       getCondition(): [Literal] 0
# 5499|           Type = [IntType] int
# 5499|           Value = [Literal] 0
# 5499|           ValueCategory = prvalue
# 5497|       getStmt(): [BlockStmt] { ... }
# 5498|         getStmt(0): [DeclStmt] declaration
# 5498|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x929
# 5498|               Type = [Struct] String
# 5498|             getVariable().getInitializer(): [Initializer] initializer for x929
# 5498|               getExpr(): [ConstructorCall] call to String
# 5498|                   Type = [VoidType] void
# 5498|                   ValueCategory = prvalue
# 5499|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5499|             Type = [VoidType] void
# 5499|             ValueCategory = prvalue
# 5499|           getQualifier(): [VariableAccess] x929
# 5499|               Type = [Struct] String
# 5499|               ValueCategory = lvalue
# 5499|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5499|           Conversion = [BoolConversion] conversion to bool
# 5499|           Type = [BoolType] bool
# 5499|           Value = [CStyleCast] 0
# 5499|           ValueCategory = prvalue
# 5500|     getStmt(930): [DoStmt] do (...) ...
# 5502|       getCondition(): [Literal] 0
# 5502|           Type = [IntType] int
# 5502|           Value = [Literal] 0
# 5502|           ValueCategory = prvalue
# 5500|       getStmt(): [BlockStmt] { ... }
# 5501|         getStmt(0): [DeclStmt] declaration
# 5501|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x930
# 5501|               Type = [Struct] String
# 5501|             getVariable().getInitializer(): [Initializer] initializer for x930
# 5501|               getExpr(): [ConstructorCall] call to String
# 5501|                   Type = [VoidType] void
# 5501|                   ValueCategory = prvalue
# 5502|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5502|             Type = [VoidType] void
# 5502|             ValueCategory = prvalue
# 5502|           getQualifier(): [VariableAccess] x930
# 5502|               Type = [Struct] String
# 5502|               ValueCategory = lvalue
# 5502|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5502|           Conversion = [BoolConversion] conversion to bool
# 5502|           Type = [BoolType] bool
# 5502|           Value = [CStyleCast] 0
# 5502|           ValueCategory = prvalue
# 5503|     getStmt(931): [DoStmt] do (...) ...
# 5505|       getCondition(): [Literal] 0
# 5505|           Type = [IntType] int
# 5505|           Value = [Literal] 0
# 5505|           ValueCategory = prvalue
# 5503|       getStmt(): [BlockStmt] { ... }
# 5504|         getStmt(0): [DeclStmt] declaration
# 5504|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x931
# 5504|               Type = [Struct] String
# 5504|             getVariable().getInitializer(): [Initializer] initializer for x931
# 5504|               getExpr(): [ConstructorCall] call to String
# 5504|                   Type = [VoidType] void
# 5504|                   ValueCategory = prvalue
# 5505|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5505|             Type = [VoidType] void
# 5505|             ValueCategory = prvalue
# 5505|           getQualifier(): [VariableAccess] x931
# 5505|               Type = [Struct] String
# 5505|               ValueCategory = lvalue
# 5505|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5505|           Conversion = [BoolConversion] conversion to bool
# 5505|           Type = [BoolType] bool
# 5505|           Value = [CStyleCast] 0
# 5505|           ValueCategory = prvalue
# 5506|     getStmt(932): [DoStmt] do (...) ...
# 5508|       getCondition(): [Literal] 0
# 5508|           Type = [IntType] int
# 5508|           Value = [Literal] 0
# 5508|           ValueCategory = prvalue
# 5506|       getStmt(): [BlockStmt] { ... }
# 5507|         getStmt(0): [DeclStmt] declaration
# 5507|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x932
# 5507|               Type = [Struct] String
# 5507|             getVariable().getInitializer(): [Initializer] initializer for x932
# 5507|               getExpr(): [ConstructorCall] call to String
# 5507|                   Type = [VoidType] void
# 5507|                   ValueCategory = prvalue
# 5508|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5508|             Type = [VoidType] void
# 5508|             ValueCategory = prvalue
# 5508|           getQualifier(): [VariableAccess] x932
# 5508|               Type = [Struct] String
# 5508|               ValueCategory = lvalue
# 5508|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5508|           Conversion = [BoolConversion] conversion to bool
# 5508|           Type = [BoolType] bool
# 5508|           Value = [CStyleCast] 0
# 5508|           ValueCategory = prvalue
# 5509|     getStmt(933): [DoStmt] do (...) ...
# 5511|       getCondition(): [Literal] 0
# 5511|           Type = [IntType] int
# 5511|           Value = [Literal] 0
# 5511|           ValueCategory = prvalue
# 5509|       getStmt(): [BlockStmt] { ... }
# 5510|         getStmt(0): [DeclStmt] declaration
# 5510|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x933
# 5510|               Type = [Struct] String
# 5510|             getVariable().getInitializer(): [Initializer] initializer for x933
# 5510|               getExpr(): [ConstructorCall] call to String
# 5510|                   Type = [VoidType] void
# 5510|                   ValueCategory = prvalue
# 5511|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5511|             Type = [VoidType] void
# 5511|             ValueCategory = prvalue
# 5511|           getQualifier(): [VariableAccess] x933
# 5511|               Type = [Struct] String
# 5511|               ValueCategory = lvalue
# 5511|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5511|           Conversion = [BoolConversion] conversion to bool
# 5511|           Type = [BoolType] bool
# 5511|           Value = [CStyleCast] 0
# 5511|           ValueCategory = prvalue
# 5512|     getStmt(934): [DoStmt] do (...) ...
# 5514|       getCondition(): [Literal] 0
# 5514|           Type = [IntType] int
# 5514|           Value = [Literal] 0
# 5514|           ValueCategory = prvalue
# 5512|       getStmt(): [BlockStmt] { ... }
# 5513|         getStmt(0): [DeclStmt] declaration
# 5513|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x934
# 5513|               Type = [Struct] String
# 5513|             getVariable().getInitializer(): [Initializer] initializer for x934
# 5513|               getExpr(): [ConstructorCall] call to String
# 5513|                   Type = [VoidType] void
# 5513|                   ValueCategory = prvalue
# 5514|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5514|             Type = [VoidType] void
# 5514|             ValueCategory = prvalue
# 5514|           getQualifier(): [VariableAccess] x934
# 5514|               Type = [Struct] String
# 5514|               ValueCategory = lvalue
# 5514|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5514|           Conversion = [BoolConversion] conversion to bool
# 5514|           Type = [BoolType] bool
# 5514|           Value = [CStyleCast] 0
# 5514|           ValueCategory = prvalue
# 5515|     getStmt(935): [DoStmt] do (...) ...
# 5517|       getCondition(): [Literal] 0
# 5517|           Type = [IntType] int
# 5517|           Value = [Literal] 0
# 5517|           ValueCategory = prvalue
# 5515|       getStmt(): [BlockStmt] { ... }
# 5516|         getStmt(0): [DeclStmt] declaration
# 5516|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x935
# 5516|               Type = [Struct] String
# 5516|             getVariable().getInitializer(): [Initializer] initializer for x935
# 5516|               getExpr(): [ConstructorCall] call to String
# 5516|                   Type = [VoidType] void
# 5516|                   ValueCategory = prvalue
# 5517|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5517|             Type = [VoidType] void
# 5517|             ValueCategory = prvalue
# 5517|           getQualifier(): [VariableAccess] x935
# 5517|               Type = [Struct] String
# 5517|               ValueCategory = lvalue
# 5517|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5517|           Conversion = [BoolConversion] conversion to bool
# 5517|           Type = [BoolType] bool
# 5517|           Value = [CStyleCast] 0
# 5517|           ValueCategory = prvalue
# 5518|     getStmt(936): [DoStmt] do (...) ...
# 5520|       getCondition(): [Literal] 0
# 5520|           Type = [IntType] int
# 5520|           Value = [Literal] 0
# 5520|           ValueCategory = prvalue
# 5518|       getStmt(): [BlockStmt] { ... }
# 5519|         getStmt(0): [DeclStmt] declaration
# 5519|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x936
# 5519|               Type = [Struct] String
# 5519|             getVariable().getInitializer(): [Initializer] initializer for x936
# 5519|               getExpr(): [ConstructorCall] call to String
# 5519|                   Type = [VoidType] void
# 5519|                   ValueCategory = prvalue
# 5520|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5520|             Type = [VoidType] void
# 5520|             ValueCategory = prvalue
# 5520|           getQualifier(): [VariableAccess] x936
# 5520|               Type = [Struct] String
# 5520|               ValueCategory = lvalue
# 5520|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5520|           Conversion = [BoolConversion] conversion to bool
# 5520|           Type = [BoolType] bool
# 5520|           Value = [CStyleCast] 0
# 5520|           ValueCategory = prvalue
# 5521|     getStmt(937): [DoStmt] do (...) ...
# 5523|       getCondition(): [Literal] 0
# 5523|           Type = [IntType] int
# 5523|           Value = [Literal] 0
# 5523|           ValueCategory = prvalue
# 5521|       getStmt(): [BlockStmt] { ... }
# 5522|         getStmt(0): [DeclStmt] declaration
# 5522|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x937
# 5522|               Type = [Struct] String
# 5522|             getVariable().getInitializer(): [Initializer] initializer for x937
# 5522|               getExpr(): [ConstructorCall] call to String
# 5522|                   Type = [VoidType] void
# 5522|                   ValueCategory = prvalue
# 5523|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5523|             Type = [VoidType] void
# 5523|             ValueCategory = prvalue
# 5523|           getQualifier(): [VariableAccess] x937
# 5523|               Type = [Struct] String
# 5523|               ValueCategory = lvalue
# 5523|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5523|           Conversion = [BoolConversion] conversion to bool
# 5523|           Type = [BoolType] bool
# 5523|           Value = [CStyleCast] 0
# 5523|           ValueCategory = prvalue
# 5524|     getStmt(938): [DoStmt] do (...) ...
# 5526|       getCondition(): [Literal] 0
# 5526|           Type = [IntType] int
# 5526|           Value = [Literal] 0
# 5526|           ValueCategory = prvalue
# 5524|       getStmt(): [BlockStmt] { ... }
# 5525|         getStmt(0): [DeclStmt] declaration
# 5525|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x938
# 5525|               Type = [Struct] String
# 5525|             getVariable().getInitializer(): [Initializer] initializer for x938
# 5525|               getExpr(): [ConstructorCall] call to String
# 5525|                   Type = [VoidType] void
# 5525|                   ValueCategory = prvalue
# 5526|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5526|             Type = [VoidType] void
# 5526|             ValueCategory = prvalue
# 5526|           getQualifier(): [VariableAccess] x938
# 5526|               Type = [Struct] String
# 5526|               ValueCategory = lvalue
# 5526|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5526|           Conversion = [BoolConversion] conversion to bool
# 5526|           Type = [BoolType] bool
# 5526|           Value = [CStyleCast] 0
# 5526|           ValueCategory = prvalue
# 5527|     getStmt(939): [DoStmt] do (...) ...
# 5529|       getCondition(): [Literal] 0
# 5529|           Type = [IntType] int
# 5529|           Value = [Literal] 0
# 5529|           ValueCategory = prvalue
# 5527|       getStmt(): [BlockStmt] { ... }
# 5528|         getStmt(0): [DeclStmt] declaration
# 5528|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x939
# 5528|               Type = [Struct] String
# 5528|             getVariable().getInitializer(): [Initializer] initializer for x939
# 5528|               getExpr(): [ConstructorCall] call to String
# 5528|                   Type = [VoidType] void
# 5528|                   ValueCategory = prvalue
# 5529|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5529|             Type = [VoidType] void
# 5529|             ValueCategory = prvalue
# 5529|           getQualifier(): [VariableAccess] x939
# 5529|               Type = [Struct] String
# 5529|               ValueCategory = lvalue
# 5529|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5529|           Conversion = [BoolConversion] conversion to bool
# 5529|           Type = [BoolType] bool
# 5529|           Value = [CStyleCast] 0
# 5529|           ValueCategory = prvalue
# 5530|     getStmt(940): [DoStmt] do (...) ...
# 5532|       getCondition(): [Literal] 0
# 5532|           Type = [IntType] int
# 5532|           Value = [Literal] 0
# 5532|           ValueCategory = prvalue
# 5530|       getStmt(): [BlockStmt] { ... }
# 5531|         getStmt(0): [DeclStmt] declaration
# 5531|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x940
# 5531|               Type = [Struct] String
# 5531|             getVariable().getInitializer(): [Initializer] initializer for x940
# 5531|               getExpr(): [ConstructorCall] call to String
# 5531|                   Type = [VoidType] void
# 5531|                   ValueCategory = prvalue
# 5532|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5532|             Type = [VoidType] void
# 5532|             ValueCategory = prvalue
# 5532|           getQualifier(): [VariableAccess] x940
# 5532|               Type = [Struct] String
# 5532|               ValueCategory = lvalue
# 5532|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5532|           Conversion = [BoolConversion] conversion to bool
# 5532|           Type = [BoolType] bool
# 5532|           Value = [CStyleCast] 0
# 5532|           ValueCategory = prvalue
# 5533|     getStmt(941): [DoStmt] do (...) ...
# 5535|       getCondition(): [Literal] 0
# 5535|           Type = [IntType] int
# 5535|           Value = [Literal] 0
# 5535|           ValueCategory = prvalue
# 5533|       getStmt(): [BlockStmt] { ... }
# 5534|         getStmt(0): [DeclStmt] declaration
# 5534|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x941
# 5534|               Type = [Struct] String
# 5534|             getVariable().getInitializer(): [Initializer] initializer for x941
# 5534|               getExpr(): [ConstructorCall] call to String
# 5534|                   Type = [VoidType] void
# 5534|                   ValueCategory = prvalue
# 5535|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5535|             Type = [VoidType] void
# 5535|             ValueCategory = prvalue
# 5535|           getQualifier(): [VariableAccess] x941
# 5535|               Type = [Struct] String
# 5535|               ValueCategory = lvalue
# 5535|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5535|           Conversion = [BoolConversion] conversion to bool
# 5535|           Type = [BoolType] bool
# 5535|           Value = [CStyleCast] 0
# 5535|           ValueCategory = prvalue
# 5536|     getStmt(942): [DoStmt] do (...) ...
# 5538|       getCondition(): [Literal] 0
# 5538|           Type = [IntType] int
# 5538|           Value = [Literal] 0
# 5538|           ValueCategory = prvalue
# 5536|       getStmt(): [BlockStmt] { ... }
# 5537|         getStmt(0): [DeclStmt] declaration
# 5537|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x942
# 5537|               Type = [Struct] String
# 5537|             getVariable().getInitializer(): [Initializer] initializer for x942
# 5537|               getExpr(): [ConstructorCall] call to String
# 5537|                   Type = [VoidType] void
# 5537|                   ValueCategory = prvalue
# 5538|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5538|             Type = [VoidType] void
# 5538|             ValueCategory = prvalue
# 5538|           getQualifier(): [VariableAccess] x942
# 5538|               Type = [Struct] String
# 5538|               ValueCategory = lvalue
# 5538|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5538|           Conversion = [BoolConversion] conversion to bool
# 5538|           Type = [BoolType] bool
# 5538|           Value = [CStyleCast] 0
# 5538|           ValueCategory = prvalue
# 5539|     getStmt(943): [DoStmt] do (...) ...
# 5541|       getCondition(): [Literal] 0
# 5541|           Type = [IntType] int
# 5541|           Value = [Literal] 0
# 5541|           ValueCategory = prvalue
# 5539|       getStmt(): [BlockStmt] { ... }
# 5540|         getStmt(0): [DeclStmt] declaration
# 5540|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x943
# 5540|               Type = [Struct] String
# 5540|             getVariable().getInitializer(): [Initializer] initializer for x943
# 5540|               getExpr(): [ConstructorCall] call to String
# 5540|                   Type = [VoidType] void
# 5540|                   ValueCategory = prvalue
# 5541|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5541|             Type = [VoidType] void
# 5541|             ValueCategory = prvalue
# 5541|           getQualifier(): [VariableAccess] x943
# 5541|               Type = [Struct] String
# 5541|               ValueCategory = lvalue
# 5541|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5541|           Conversion = [BoolConversion] conversion to bool
# 5541|           Type = [BoolType] bool
# 5541|           Value = [CStyleCast] 0
# 5541|           ValueCategory = prvalue
# 5542|     getStmt(944): [DoStmt] do (...) ...
# 5544|       getCondition(): [Literal] 0
# 5544|           Type = [IntType] int
# 5544|           Value = [Literal] 0
# 5544|           ValueCategory = prvalue
# 5542|       getStmt(): [BlockStmt] { ... }
# 5543|         getStmt(0): [DeclStmt] declaration
# 5543|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x944
# 5543|               Type = [Struct] String
# 5543|             getVariable().getInitializer(): [Initializer] initializer for x944
# 5543|               getExpr(): [ConstructorCall] call to String
# 5543|                   Type = [VoidType] void
# 5543|                   ValueCategory = prvalue
# 5544|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5544|             Type = [VoidType] void
# 5544|             ValueCategory = prvalue
# 5544|           getQualifier(): [VariableAccess] x944
# 5544|               Type = [Struct] String
# 5544|               ValueCategory = lvalue
# 5544|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5544|           Conversion = [BoolConversion] conversion to bool
# 5544|           Type = [BoolType] bool
# 5544|           Value = [CStyleCast] 0
# 5544|           ValueCategory = prvalue
# 5545|     getStmt(945): [DoStmt] do (...) ...
# 5547|       getCondition(): [Literal] 0
# 5547|           Type = [IntType] int
# 5547|           Value = [Literal] 0
# 5547|           ValueCategory = prvalue
# 5545|       getStmt(): [BlockStmt] { ... }
# 5546|         getStmt(0): [DeclStmt] declaration
# 5546|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x945
# 5546|               Type = [Struct] String
# 5546|             getVariable().getInitializer(): [Initializer] initializer for x945
# 5546|               getExpr(): [ConstructorCall] call to String
# 5546|                   Type = [VoidType] void
# 5546|                   ValueCategory = prvalue
# 5547|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5547|             Type = [VoidType] void
# 5547|             ValueCategory = prvalue
# 5547|           getQualifier(): [VariableAccess] x945
# 5547|               Type = [Struct] String
# 5547|               ValueCategory = lvalue
# 5547|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5547|           Conversion = [BoolConversion] conversion to bool
# 5547|           Type = [BoolType] bool
# 5547|           Value = [CStyleCast] 0
# 5547|           ValueCategory = prvalue
# 5548|     getStmt(946): [DoStmt] do (...) ...
# 5550|       getCondition(): [Literal] 0
# 5550|           Type = [IntType] int
# 5550|           Value = [Literal] 0
# 5550|           ValueCategory = prvalue
# 5548|       getStmt(): [BlockStmt] { ... }
# 5549|         getStmt(0): [DeclStmt] declaration
# 5549|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x946
# 5549|               Type = [Struct] String
# 5549|             getVariable().getInitializer(): [Initializer] initializer for x946
# 5549|               getExpr(): [ConstructorCall] call to String
# 5549|                   Type = [VoidType] void
# 5549|                   ValueCategory = prvalue
# 5550|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5550|             Type = [VoidType] void
# 5550|             ValueCategory = prvalue
# 5550|           getQualifier(): [VariableAccess] x946
# 5550|               Type = [Struct] String
# 5550|               ValueCategory = lvalue
# 5550|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5550|           Conversion = [BoolConversion] conversion to bool
# 5550|           Type = [BoolType] bool
# 5550|           Value = [CStyleCast] 0
# 5550|           ValueCategory = prvalue
# 5551|     getStmt(947): [DoStmt] do (...) ...
# 5553|       getCondition(): [Literal] 0
# 5553|           Type = [IntType] int
# 5553|           Value = [Literal] 0
# 5553|           ValueCategory = prvalue
# 5551|       getStmt(): [BlockStmt] { ... }
# 5552|         getStmt(0): [DeclStmt] declaration
# 5552|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x947
# 5552|               Type = [Struct] String
# 5552|             getVariable().getInitializer(): [Initializer] initializer for x947
# 5552|               getExpr(): [ConstructorCall] call to String
# 5552|                   Type = [VoidType] void
# 5552|                   ValueCategory = prvalue
# 5553|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5553|             Type = [VoidType] void
# 5553|             ValueCategory = prvalue
# 5553|           getQualifier(): [VariableAccess] x947
# 5553|               Type = [Struct] String
# 5553|               ValueCategory = lvalue
# 5553|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5553|           Conversion = [BoolConversion] conversion to bool
# 5553|           Type = [BoolType] bool
# 5553|           Value = [CStyleCast] 0
# 5553|           ValueCategory = prvalue
# 5554|     getStmt(948): [DoStmt] do (...) ...
# 5556|       getCondition(): [Literal] 0
# 5556|           Type = [IntType] int
# 5556|           Value = [Literal] 0
# 5556|           ValueCategory = prvalue
# 5554|       getStmt(): [BlockStmt] { ... }
# 5555|         getStmt(0): [DeclStmt] declaration
# 5555|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x948
# 5555|               Type = [Struct] String
# 5555|             getVariable().getInitializer(): [Initializer] initializer for x948
# 5555|               getExpr(): [ConstructorCall] call to String
# 5555|                   Type = [VoidType] void
# 5555|                   ValueCategory = prvalue
# 5556|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5556|             Type = [VoidType] void
# 5556|             ValueCategory = prvalue
# 5556|           getQualifier(): [VariableAccess] x948
# 5556|               Type = [Struct] String
# 5556|               ValueCategory = lvalue
# 5556|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5556|           Conversion = [BoolConversion] conversion to bool
# 5556|           Type = [BoolType] bool
# 5556|           Value = [CStyleCast] 0
# 5556|           ValueCategory = prvalue
# 5557|     getStmt(949): [DoStmt] do (...) ...
# 5559|       getCondition(): [Literal] 0
# 5559|           Type = [IntType] int
# 5559|           Value = [Literal] 0
# 5559|           ValueCategory = prvalue
# 5557|       getStmt(): [BlockStmt] { ... }
# 5558|         getStmt(0): [DeclStmt] declaration
# 5558|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x949
# 5558|               Type = [Struct] String
# 5558|             getVariable().getInitializer(): [Initializer] initializer for x949
# 5558|               getExpr(): [ConstructorCall] call to String
# 5558|                   Type = [VoidType] void
# 5558|                   ValueCategory = prvalue
# 5559|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5559|             Type = [VoidType] void
# 5559|             ValueCategory = prvalue
# 5559|           getQualifier(): [VariableAccess] x949
# 5559|               Type = [Struct] String
# 5559|               ValueCategory = lvalue
# 5559|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5559|           Conversion = [BoolConversion] conversion to bool
# 5559|           Type = [BoolType] bool
# 5559|           Value = [CStyleCast] 0
# 5559|           ValueCategory = prvalue
# 5560|     getStmt(950): [DoStmt] do (...) ...
# 5562|       getCondition(): [Literal] 0
# 5562|           Type = [IntType] int
# 5562|           Value = [Literal] 0
# 5562|           ValueCategory = prvalue
# 5560|       getStmt(): [BlockStmt] { ... }
# 5561|         getStmt(0): [DeclStmt] declaration
# 5561|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x950
# 5561|               Type = [Struct] String
# 5561|             getVariable().getInitializer(): [Initializer] initializer for x950
# 5561|               getExpr(): [ConstructorCall] call to String
# 5561|                   Type = [VoidType] void
# 5561|                   ValueCategory = prvalue
# 5562|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5562|             Type = [VoidType] void
# 5562|             ValueCategory = prvalue
# 5562|           getQualifier(): [VariableAccess] x950
# 5562|               Type = [Struct] String
# 5562|               ValueCategory = lvalue
# 5562|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5562|           Conversion = [BoolConversion] conversion to bool
# 5562|           Type = [BoolType] bool
# 5562|           Value = [CStyleCast] 0
# 5562|           ValueCategory = prvalue
# 5563|     getStmt(951): [DoStmt] do (...) ...
# 5565|       getCondition(): [Literal] 0
# 5565|           Type = [IntType] int
# 5565|           Value = [Literal] 0
# 5565|           ValueCategory = prvalue
# 5563|       getStmt(): [BlockStmt] { ... }
# 5564|         getStmt(0): [DeclStmt] declaration
# 5564|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x951
# 5564|               Type = [Struct] String
# 5564|             getVariable().getInitializer(): [Initializer] initializer for x951
# 5564|               getExpr(): [ConstructorCall] call to String
# 5564|                   Type = [VoidType] void
# 5564|                   ValueCategory = prvalue
# 5565|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5565|             Type = [VoidType] void
# 5565|             ValueCategory = prvalue
# 5565|           getQualifier(): [VariableAccess] x951
# 5565|               Type = [Struct] String
# 5565|               ValueCategory = lvalue
# 5565|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5565|           Conversion = [BoolConversion] conversion to bool
# 5565|           Type = [BoolType] bool
# 5565|           Value = [CStyleCast] 0
# 5565|           ValueCategory = prvalue
# 5566|     getStmt(952): [DoStmt] do (...) ...
# 5568|       getCondition(): [Literal] 0
# 5568|           Type = [IntType] int
# 5568|           Value = [Literal] 0
# 5568|           ValueCategory = prvalue
# 5566|       getStmt(): [BlockStmt] { ... }
# 5567|         getStmt(0): [DeclStmt] declaration
# 5567|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x952
# 5567|               Type = [Struct] String
# 5567|             getVariable().getInitializer(): [Initializer] initializer for x952
# 5567|               getExpr(): [ConstructorCall] call to String
# 5567|                   Type = [VoidType] void
# 5567|                   ValueCategory = prvalue
# 5568|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5568|             Type = [VoidType] void
# 5568|             ValueCategory = prvalue
# 5568|           getQualifier(): [VariableAccess] x952
# 5568|               Type = [Struct] String
# 5568|               ValueCategory = lvalue
# 5568|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5568|           Conversion = [BoolConversion] conversion to bool
# 5568|           Type = [BoolType] bool
# 5568|           Value = [CStyleCast] 0
# 5568|           ValueCategory = prvalue
# 5569|     getStmt(953): [DoStmt] do (...) ...
# 5571|       getCondition(): [Literal] 0
# 5571|           Type = [IntType] int
# 5571|           Value = [Literal] 0
# 5571|           ValueCategory = prvalue
# 5569|       getStmt(): [BlockStmt] { ... }
# 5570|         getStmt(0): [DeclStmt] declaration
# 5570|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x953
# 5570|               Type = [Struct] String
# 5570|             getVariable().getInitializer(): [Initializer] initializer for x953
# 5570|               getExpr(): [ConstructorCall] call to String
# 5570|                   Type = [VoidType] void
# 5570|                   ValueCategory = prvalue
# 5571|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5571|             Type = [VoidType] void
# 5571|             ValueCategory = prvalue
# 5571|           getQualifier(): [VariableAccess] x953
# 5571|               Type = [Struct] String
# 5571|               ValueCategory = lvalue
# 5571|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5571|           Conversion = [BoolConversion] conversion to bool
# 5571|           Type = [BoolType] bool
# 5571|           Value = [CStyleCast] 0
# 5571|           ValueCategory = prvalue
# 5572|     getStmt(954): [DoStmt] do (...) ...
# 5574|       getCondition(): [Literal] 0
# 5574|           Type = [IntType] int
# 5574|           Value = [Literal] 0
# 5574|           ValueCategory = prvalue
# 5572|       getStmt(): [BlockStmt] { ... }
# 5573|         getStmt(0): [DeclStmt] declaration
# 5573|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x954
# 5573|               Type = [Struct] String
# 5573|             getVariable().getInitializer(): [Initializer] initializer for x954
# 5573|               getExpr(): [ConstructorCall] call to String
# 5573|                   Type = [VoidType] void
# 5573|                   ValueCategory = prvalue
# 5574|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5574|             Type = [VoidType] void
# 5574|             ValueCategory = prvalue
# 5574|           getQualifier(): [VariableAccess] x954
# 5574|               Type = [Struct] String
# 5574|               ValueCategory = lvalue
# 5574|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5574|           Conversion = [BoolConversion] conversion to bool
# 5574|           Type = [BoolType] bool
# 5574|           Value = [CStyleCast] 0
# 5574|           ValueCategory = prvalue
# 5575|     getStmt(955): [DoStmt] do (...) ...
# 5577|       getCondition(): [Literal] 0
# 5577|           Type = [IntType] int
# 5577|           Value = [Literal] 0
# 5577|           ValueCategory = prvalue
# 5575|       getStmt(): [BlockStmt] { ... }
# 5576|         getStmt(0): [DeclStmt] declaration
# 5576|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x955
# 5576|               Type = [Struct] String
# 5576|             getVariable().getInitializer(): [Initializer] initializer for x955
# 5576|               getExpr(): [ConstructorCall] call to String
# 5576|                   Type = [VoidType] void
# 5576|                   ValueCategory = prvalue
# 5577|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5577|             Type = [VoidType] void
# 5577|             ValueCategory = prvalue
# 5577|           getQualifier(): [VariableAccess] x955
# 5577|               Type = [Struct] String
# 5577|               ValueCategory = lvalue
# 5577|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5577|           Conversion = [BoolConversion] conversion to bool
# 5577|           Type = [BoolType] bool
# 5577|           Value = [CStyleCast] 0
# 5577|           ValueCategory = prvalue
# 5578|     getStmt(956): [DoStmt] do (...) ...
# 5580|       getCondition(): [Literal] 0
# 5580|           Type = [IntType] int
# 5580|           Value = [Literal] 0
# 5580|           ValueCategory = prvalue
# 5578|       getStmt(): [BlockStmt] { ... }
# 5579|         getStmt(0): [DeclStmt] declaration
# 5579|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x956
# 5579|               Type = [Struct] String
# 5579|             getVariable().getInitializer(): [Initializer] initializer for x956
# 5579|               getExpr(): [ConstructorCall] call to String
# 5579|                   Type = [VoidType] void
# 5579|                   ValueCategory = prvalue
# 5580|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5580|             Type = [VoidType] void
# 5580|             ValueCategory = prvalue
# 5580|           getQualifier(): [VariableAccess] x956
# 5580|               Type = [Struct] String
# 5580|               ValueCategory = lvalue
# 5580|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5580|           Conversion = [BoolConversion] conversion to bool
# 5580|           Type = [BoolType] bool
# 5580|           Value = [CStyleCast] 0
# 5580|           ValueCategory = prvalue
# 5581|     getStmt(957): [DoStmt] do (...) ...
# 5583|       getCondition(): [Literal] 0
# 5583|           Type = [IntType] int
# 5583|           Value = [Literal] 0
# 5583|           ValueCategory = prvalue
# 5581|       getStmt(): [BlockStmt] { ... }
# 5582|         getStmt(0): [DeclStmt] declaration
# 5582|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x957
# 5582|               Type = [Struct] String
# 5582|             getVariable().getInitializer(): [Initializer] initializer for x957
# 5582|               getExpr(): [ConstructorCall] call to String
# 5582|                   Type = [VoidType] void
# 5582|                   ValueCategory = prvalue
# 5583|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5583|             Type = [VoidType] void
# 5583|             ValueCategory = prvalue
# 5583|           getQualifier(): [VariableAccess] x957
# 5583|               Type = [Struct] String
# 5583|               ValueCategory = lvalue
# 5583|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5583|           Conversion = [BoolConversion] conversion to bool
# 5583|           Type = [BoolType] bool
# 5583|           Value = [CStyleCast] 0
# 5583|           ValueCategory = prvalue
# 5584|     getStmt(958): [DoStmt] do (...) ...
# 5586|       getCondition(): [Literal] 0
# 5586|           Type = [IntType] int
# 5586|           Value = [Literal] 0
# 5586|           ValueCategory = prvalue
# 5584|       getStmt(): [BlockStmt] { ... }
# 5585|         getStmt(0): [DeclStmt] declaration
# 5585|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x958
# 5585|               Type = [Struct] String
# 5585|             getVariable().getInitializer(): [Initializer] initializer for x958
# 5585|               getExpr(): [ConstructorCall] call to String
# 5585|                   Type = [VoidType] void
# 5585|                   ValueCategory = prvalue
# 5586|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5586|             Type = [VoidType] void
# 5586|             ValueCategory = prvalue
# 5586|           getQualifier(): [VariableAccess] x958
# 5586|               Type = [Struct] String
# 5586|               ValueCategory = lvalue
# 5586|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5586|           Conversion = [BoolConversion] conversion to bool
# 5586|           Type = [BoolType] bool
# 5586|           Value = [CStyleCast] 0
# 5586|           ValueCategory = prvalue
# 5587|     getStmt(959): [DoStmt] do (...) ...
# 5589|       getCondition(): [Literal] 0
# 5589|           Type = [IntType] int
# 5589|           Value = [Literal] 0
# 5589|           ValueCategory = prvalue
# 5587|       getStmt(): [BlockStmt] { ... }
# 5588|         getStmt(0): [DeclStmt] declaration
# 5588|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x959
# 5588|               Type = [Struct] String
# 5588|             getVariable().getInitializer(): [Initializer] initializer for x959
# 5588|               getExpr(): [ConstructorCall] call to String
# 5588|                   Type = [VoidType] void
# 5588|                   ValueCategory = prvalue
# 5589|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5589|             Type = [VoidType] void
# 5589|             ValueCategory = prvalue
# 5589|           getQualifier(): [VariableAccess] x959
# 5589|               Type = [Struct] String
# 5589|               ValueCategory = lvalue
# 5589|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5589|           Conversion = [BoolConversion] conversion to bool
# 5589|           Type = [BoolType] bool
# 5589|           Value = [CStyleCast] 0
# 5589|           ValueCategory = prvalue
# 5590|     getStmt(960): [DoStmt] do (...) ...
# 5592|       getCondition(): [Literal] 0
# 5592|           Type = [IntType] int
# 5592|           Value = [Literal] 0
# 5592|           ValueCategory = prvalue
# 5590|       getStmt(): [BlockStmt] { ... }
# 5591|         getStmt(0): [DeclStmt] declaration
# 5591|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x960
# 5591|               Type = [Struct] String
# 5591|             getVariable().getInitializer(): [Initializer] initializer for x960
# 5591|               getExpr(): [ConstructorCall] call to String
# 5591|                   Type = [VoidType] void
# 5591|                   ValueCategory = prvalue
# 5592|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5592|             Type = [VoidType] void
# 5592|             ValueCategory = prvalue
# 5592|           getQualifier(): [VariableAccess] x960
# 5592|               Type = [Struct] String
# 5592|               ValueCategory = lvalue
# 5592|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5592|           Conversion = [BoolConversion] conversion to bool
# 5592|           Type = [BoolType] bool
# 5592|           Value = [CStyleCast] 0
# 5592|           ValueCategory = prvalue
# 5593|     getStmt(961): [DoStmt] do (...) ...
# 5595|       getCondition(): [Literal] 0
# 5595|           Type = [IntType] int
# 5595|           Value = [Literal] 0
# 5595|           ValueCategory = prvalue
# 5593|       getStmt(): [BlockStmt] { ... }
# 5594|         getStmt(0): [DeclStmt] declaration
# 5594|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x961
# 5594|               Type = [Struct] String
# 5594|             getVariable().getInitializer(): [Initializer] initializer for x961
# 5594|               getExpr(): [ConstructorCall] call to String
# 5594|                   Type = [VoidType] void
# 5594|                   ValueCategory = prvalue
# 5595|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5595|             Type = [VoidType] void
# 5595|             ValueCategory = prvalue
# 5595|           getQualifier(): [VariableAccess] x961
# 5595|               Type = [Struct] String
# 5595|               ValueCategory = lvalue
# 5595|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5595|           Conversion = [BoolConversion] conversion to bool
# 5595|           Type = [BoolType] bool
# 5595|           Value = [CStyleCast] 0
# 5595|           ValueCategory = prvalue
# 5596|     getStmt(962): [DoStmt] do (...) ...
# 5598|       getCondition(): [Literal] 0
# 5598|           Type = [IntType] int
# 5598|           Value = [Literal] 0
# 5598|           ValueCategory = prvalue
# 5596|       getStmt(): [BlockStmt] { ... }
# 5597|         getStmt(0): [DeclStmt] declaration
# 5597|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x962
# 5597|               Type = [Struct] String
# 5597|             getVariable().getInitializer(): [Initializer] initializer for x962
# 5597|               getExpr(): [ConstructorCall] call to String
# 5597|                   Type = [VoidType] void
# 5597|                   ValueCategory = prvalue
# 5598|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5598|             Type = [VoidType] void
# 5598|             ValueCategory = prvalue
# 5598|           getQualifier(): [VariableAccess] x962
# 5598|               Type = [Struct] String
# 5598|               ValueCategory = lvalue
# 5598|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5598|           Conversion = [BoolConversion] conversion to bool
# 5598|           Type = [BoolType] bool
# 5598|           Value = [CStyleCast] 0
# 5598|           ValueCategory = prvalue
# 5599|     getStmt(963): [DoStmt] do (...) ...
# 5601|       getCondition(): [Literal] 0
# 5601|           Type = [IntType] int
# 5601|           Value = [Literal] 0
# 5601|           ValueCategory = prvalue
# 5599|       getStmt(): [BlockStmt] { ... }
# 5600|         getStmt(0): [DeclStmt] declaration
# 5600|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x963
# 5600|               Type = [Struct] String
# 5600|             getVariable().getInitializer(): [Initializer] initializer for x963
# 5600|               getExpr(): [ConstructorCall] call to String
# 5600|                   Type = [VoidType] void
# 5600|                   ValueCategory = prvalue
# 5601|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5601|             Type = [VoidType] void
# 5601|             ValueCategory = prvalue
# 5601|           getQualifier(): [VariableAccess] x963
# 5601|               Type = [Struct] String
# 5601|               ValueCategory = lvalue
# 5601|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5601|           Conversion = [BoolConversion] conversion to bool
# 5601|           Type = [BoolType] bool
# 5601|           Value = [CStyleCast] 0
# 5601|           ValueCategory = prvalue
# 5602|     getStmt(964): [DoStmt] do (...) ...
# 5604|       getCondition(): [Literal] 0
# 5604|           Type = [IntType] int
# 5604|           Value = [Literal] 0
# 5604|           ValueCategory = prvalue
# 5602|       getStmt(): [BlockStmt] { ... }
# 5603|         getStmt(0): [DeclStmt] declaration
# 5603|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x964
# 5603|               Type = [Struct] String
# 5603|             getVariable().getInitializer(): [Initializer] initializer for x964
# 5603|               getExpr(): [ConstructorCall] call to String
# 5603|                   Type = [VoidType] void
# 5603|                   ValueCategory = prvalue
# 5604|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5604|             Type = [VoidType] void
# 5604|             ValueCategory = prvalue
# 5604|           getQualifier(): [VariableAccess] x964
# 5604|               Type = [Struct] String
# 5604|               ValueCategory = lvalue
# 5604|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5604|           Conversion = [BoolConversion] conversion to bool
# 5604|           Type = [BoolType] bool
# 5604|           Value = [CStyleCast] 0
# 5604|           ValueCategory = prvalue
# 5605|     getStmt(965): [DoStmt] do (...) ...
# 5607|       getCondition(): [Literal] 0
# 5607|           Type = [IntType] int
# 5607|           Value = [Literal] 0
# 5607|           ValueCategory = prvalue
# 5605|       getStmt(): [BlockStmt] { ... }
# 5606|         getStmt(0): [DeclStmt] declaration
# 5606|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x965
# 5606|               Type = [Struct] String
# 5606|             getVariable().getInitializer(): [Initializer] initializer for x965
# 5606|               getExpr(): [ConstructorCall] call to String
# 5606|                   Type = [VoidType] void
# 5606|                   ValueCategory = prvalue
# 5607|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5607|             Type = [VoidType] void
# 5607|             ValueCategory = prvalue
# 5607|           getQualifier(): [VariableAccess] x965
# 5607|               Type = [Struct] String
# 5607|               ValueCategory = lvalue
# 5607|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5607|           Conversion = [BoolConversion] conversion to bool
# 5607|           Type = [BoolType] bool
# 5607|           Value = [CStyleCast] 0
# 5607|           ValueCategory = prvalue
# 5608|     getStmt(966): [DoStmt] do (...) ...
# 5610|       getCondition(): [Literal] 0
# 5610|           Type = [IntType] int
# 5610|           Value = [Literal] 0
# 5610|           ValueCategory = prvalue
# 5608|       getStmt(): [BlockStmt] { ... }
# 5609|         getStmt(0): [DeclStmt] declaration
# 5609|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x966
# 5609|               Type = [Struct] String
# 5609|             getVariable().getInitializer(): [Initializer] initializer for x966
# 5609|               getExpr(): [ConstructorCall] call to String
# 5609|                   Type = [VoidType] void
# 5609|                   ValueCategory = prvalue
# 5610|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5610|             Type = [VoidType] void
# 5610|             ValueCategory = prvalue
# 5610|           getQualifier(): [VariableAccess] x966
# 5610|               Type = [Struct] String
# 5610|               ValueCategory = lvalue
# 5610|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5610|           Conversion = [BoolConversion] conversion to bool
# 5610|           Type = [BoolType] bool
# 5610|           Value = [CStyleCast] 0
# 5610|           ValueCategory = prvalue
# 5611|     getStmt(967): [DoStmt] do (...) ...
# 5613|       getCondition(): [Literal] 0
# 5613|           Type = [IntType] int
# 5613|           Value = [Literal] 0
# 5613|           ValueCategory = prvalue
# 5611|       getStmt(): [BlockStmt] { ... }
# 5612|         getStmt(0): [DeclStmt] declaration
# 5612|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x967
# 5612|               Type = [Struct] String
# 5612|             getVariable().getInitializer(): [Initializer] initializer for x967
# 5612|               getExpr(): [ConstructorCall] call to String
# 5612|                   Type = [VoidType] void
# 5612|                   ValueCategory = prvalue
# 5613|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5613|             Type = [VoidType] void
# 5613|             ValueCategory = prvalue
# 5613|           getQualifier(): [VariableAccess] x967
# 5613|               Type = [Struct] String
# 5613|               ValueCategory = lvalue
# 5613|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5613|           Conversion = [BoolConversion] conversion to bool
# 5613|           Type = [BoolType] bool
# 5613|           Value = [CStyleCast] 0
# 5613|           ValueCategory = prvalue
# 5614|     getStmt(968): [DoStmt] do (...) ...
# 5616|       getCondition(): [Literal] 0
# 5616|           Type = [IntType] int
# 5616|           Value = [Literal] 0
# 5616|           ValueCategory = prvalue
# 5614|       getStmt(): [BlockStmt] { ... }
# 5615|         getStmt(0): [DeclStmt] declaration
# 5615|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x968
# 5615|               Type = [Struct] String
# 5615|             getVariable().getInitializer(): [Initializer] initializer for x968
# 5615|               getExpr(): [ConstructorCall] call to String
# 5615|                   Type = [VoidType] void
# 5615|                   ValueCategory = prvalue
# 5616|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5616|             Type = [VoidType] void
# 5616|             ValueCategory = prvalue
# 5616|           getQualifier(): [VariableAccess] x968
# 5616|               Type = [Struct] String
# 5616|               ValueCategory = lvalue
# 5616|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5616|           Conversion = [BoolConversion] conversion to bool
# 5616|           Type = [BoolType] bool
# 5616|           Value = [CStyleCast] 0
# 5616|           ValueCategory = prvalue
# 5617|     getStmt(969): [DoStmt] do (...) ...
# 5619|       getCondition(): [Literal] 0
# 5619|           Type = [IntType] int
# 5619|           Value = [Literal] 0
# 5619|           ValueCategory = prvalue
# 5617|       getStmt(): [BlockStmt] { ... }
# 5618|         getStmt(0): [DeclStmt] declaration
# 5618|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x969
# 5618|               Type = [Struct] String
# 5618|             getVariable().getInitializer(): [Initializer] initializer for x969
# 5618|               getExpr(): [ConstructorCall] call to String
# 5618|                   Type = [VoidType] void
# 5618|                   ValueCategory = prvalue
# 5619|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5619|             Type = [VoidType] void
# 5619|             ValueCategory = prvalue
# 5619|           getQualifier(): [VariableAccess] x969
# 5619|               Type = [Struct] String
# 5619|               ValueCategory = lvalue
# 5619|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5619|           Conversion = [BoolConversion] conversion to bool
# 5619|           Type = [BoolType] bool
# 5619|           Value = [CStyleCast] 0
# 5619|           ValueCategory = prvalue
# 5620|     getStmt(970): [DoStmt] do (...) ...
# 5622|       getCondition(): [Literal] 0
# 5622|           Type = [IntType] int
# 5622|           Value = [Literal] 0
# 5622|           ValueCategory = prvalue
# 5620|       getStmt(): [BlockStmt] { ... }
# 5621|         getStmt(0): [DeclStmt] declaration
# 5621|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x970
# 5621|               Type = [Struct] String
# 5621|             getVariable().getInitializer(): [Initializer] initializer for x970
# 5621|               getExpr(): [ConstructorCall] call to String
# 5621|                   Type = [VoidType] void
# 5621|                   ValueCategory = prvalue
# 5622|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5622|             Type = [VoidType] void
# 5622|             ValueCategory = prvalue
# 5622|           getQualifier(): [VariableAccess] x970
# 5622|               Type = [Struct] String
# 5622|               ValueCategory = lvalue
# 5622|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5622|           Conversion = [BoolConversion] conversion to bool
# 5622|           Type = [BoolType] bool
# 5622|           Value = [CStyleCast] 0
# 5622|           ValueCategory = prvalue
# 5623|     getStmt(971): [DoStmt] do (...) ...
# 5625|       getCondition(): [Literal] 0
# 5625|           Type = [IntType] int
# 5625|           Value = [Literal] 0
# 5625|           ValueCategory = prvalue
# 5623|       getStmt(): [BlockStmt] { ... }
# 5624|         getStmt(0): [DeclStmt] declaration
# 5624|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x971
# 5624|               Type = [Struct] String
# 5624|             getVariable().getInitializer(): [Initializer] initializer for x971
# 5624|               getExpr(): [ConstructorCall] call to String
# 5624|                   Type = [VoidType] void
# 5624|                   ValueCategory = prvalue
# 5625|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5625|             Type = [VoidType] void
# 5625|             ValueCategory = prvalue
# 5625|           getQualifier(): [VariableAccess] x971
# 5625|               Type = [Struct] String
# 5625|               ValueCategory = lvalue
# 5625|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5625|           Conversion = [BoolConversion] conversion to bool
# 5625|           Type = [BoolType] bool
# 5625|           Value = [CStyleCast] 0
# 5625|           ValueCategory = prvalue
# 5626|     getStmt(972): [DoStmt] do (...) ...
# 5628|       getCondition(): [Literal] 0
# 5628|           Type = [IntType] int
# 5628|           Value = [Literal] 0
# 5628|           ValueCategory = prvalue
# 5626|       getStmt(): [BlockStmt] { ... }
# 5627|         getStmt(0): [DeclStmt] declaration
# 5627|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x972
# 5627|               Type = [Struct] String
# 5627|             getVariable().getInitializer(): [Initializer] initializer for x972
# 5627|               getExpr(): [ConstructorCall] call to String
# 5627|                   Type = [VoidType] void
# 5627|                   ValueCategory = prvalue
# 5628|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5628|             Type = [VoidType] void
# 5628|             ValueCategory = prvalue
# 5628|           getQualifier(): [VariableAccess] x972
# 5628|               Type = [Struct] String
# 5628|               ValueCategory = lvalue
# 5628|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5628|           Conversion = [BoolConversion] conversion to bool
# 5628|           Type = [BoolType] bool
# 5628|           Value = [CStyleCast] 0
# 5628|           ValueCategory = prvalue
# 5629|     getStmt(973): [DoStmt] do (...) ...
# 5631|       getCondition(): [Literal] 0
# 5631|           Type = [IntType] int
# 5631|           Value = [Literal] 0
# 5631|           ValueCategory = prvalue
# 5629|       getStmt(): [BlockStmt] { ... }
# 5630|         getStmt(0): [DeclStmt] declaration
# 5630|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x973
# 5630|               Type = [Struct] String
# 5630|             getVariable().getInitializer(): [Initializer] initializer for x973
# 5630|               getExpr(): [ConstructorCall] call to String
# 5630|                   Type = [VoidType] void
# 5630|                   ValueCategory = prvalue
# 5631|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5631|             Type = [VoidType] void
# 5631|             ValueCategory = prvalue
# 5631|           getQualifier(): [VariableAccess] x973
# 5631|               Type = [Struct] String
# 5631|               ValueCategory = lvalue
# 5631|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5631|           Conversion = [BoolConversion] conversion to bool
# 5631|           Type = [BoolType] bool
# 5631|           Value = [CStyleCast] 0
# 5631|           ValueCategory = prvalue
# 5632|     getStmt(974): [DoStmt] do (...) ...
# 5634|       getCondition(): [Literal] 0
# 5634|           Type = [IntType] int
# 5634|           Value = [Literal] 0
# 5634|           ValueCategory = prvalue
# 5632|       getStmt(): [BlockStmt] { ... }
# 5633|         getStmt(0): [DeclStmt] declaration
# 5633|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x974
# 5633|               Type = [Struct] String
# 5633|             getVariable().getInitializer(): [Initializer] initializer for x974
# 5633|               getExpr(): [ConstructorCall] call to String
# 5633|                   Type = [VoidType] void
# 5633|                   ValueCategory = prvalue
# 5634|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5634|             Type = [VoidType] void
# 5634|             ValueCategory = prvalue
# 5634|           getQualifier(): [VariableAccess] x974
# 5634|               Type = [Struct] String
# 5634|               ValueCategory = lvalue
# 5634|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5634|           Conversion = [BoolConversion] conversion to bool
# 5634|           Type = [BoolType] bool
# 5634|           Value = [CStyleCast] 0
# 5634|           ValueCategory = prvalue
# 5635|     getStmt(975): [DoStmt] do (...) ...
# 5637|       getCondition(): [Literal] 0
# 5637|           Type = [IntType] int
# 5637|           Value = [Literal] 0
# 5637|           ValueCategory = prvalue
# 5635|       getStmt(): [BlockStmt] { ... }
# 5636|         getStmt(0): [DeclStmt] declaration
# 5636|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x975
# 5636|               Type = [Struct] String
# 5636|             getVariable().getInitializer(): [Initializer] initializer for x975
# 5636|               getExpr(): [ConstructorCall] call to String
# 5636|                   Type = [VoidType] void
# 5636|                   ValueCategory = prvalue
# 5637|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5637|             Type = [VoidType] void
# 5637|             ValueCategory = prvalue
# 5637|           getQualifier(): [VariableAccess] x975
# 5637|               Type = [Struct] String
# 5637|               ValueCategory = lvalue
# 5637|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5637|           Conversion = [BoolConversion] conversion to bool
# 5637|           Type = [BoolType] bool
# 5637|           Value = [CStyleCast] 0
# 5637|           ValueCategory = prvalue
# 5638|     getStmt(976): [DoStmt] do (...) ...
# 5640|       getCondition(): [Literal] 0
# 5640|           Type = [IntType] int
# 5640|           Value = [Literal] 0
# 5640|           ValueCategory = prvalue
# 5638|       getStmt(): [BlockStmt] { ... }
# 5639|         getStmt(0): [DeclStmt] declaration
# 5639|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x976
# 5639|               Type = [Struct] String
# 5639|             getVariable().getInitializer(): [Initializer] initializer for x976
# 5639|               getExpr(): [ConstructorCall] call to String
# 5639|                   Type = [VoidType] void
# 5639|                   ValueCategory = prvalue
# 5640|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5640|             Type = [VoidType] void
# 5640|             ValueCategory = prvalue
# 5640|           getQualifier(): [VariableAccess] x976
# 5640|               Type = [Struct] String
# 5640|               ValueCategory = lvalue
# 5640|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5640|           Conversion = [BoolConversion] conversion to bool
# 5640|           Type = [BoolType] bool
# 5640|           Value = [CStyleCast] 0
# 5640|           ValueCategory = prvalue
# 5641|     getStmt(977): [DoStmt] do (...) ...
# 5643|       getCondition(): [Literal] 0
# 5643|           Type = [IntType] int
# 5643|           Value = [Literal] 0
# 5643|           ValueCategory = prvalue
# 5641|       getStmt(): [BlockStmt] { ... }
# 5642|         getStmt(0): [DeclStmt] declaration
# 5642|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x977
# 5642|               Type = [Struct] String
# 5642|             getVariable().getInitializer(): [Initializer] initializer for x977
# 5642|               getExpr(): [ConstructorCall] call to String
# 5642|                   Type = [VoidType] void
# 5642|                   ValueCategory = prvalue
# 5643|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5643|             Type = [VoidType] void
# 5643|             ValueCategory = prvalue
# 5643|           getQualifier(): [VariableAccess] x977
# 5643|               Type = [Struct] String
# 5643|               ValueCategory = lvalue
# 5643|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5643|           Conversion = [BoolConversion] conversion to bool
# 5643|           Type = [BoolType] bool
# 5643|           Value = [CStyleCast] 0
# 5643|           ValueCategory = prvalue
# 5644|     getStmt(978): [DoStmt] do (...) ...
# 5646|       getCondition(): [Literal] 0
# 5646|           Type = [IntType] int
# 5646|           Value = [Literal] 0
# 5646|           ValueCategory = prvalue
# 5644|       getStmt(): [BlockStmt] { ... }
# 5645|         getStmt(0): [DeclStmt] declaration
# 5645|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x978
# 5645|               Type = [Struct] String
# 5645|             getVariable().getInitializer(): [Initializer] initializer for x978
# 5645|               getExpr(): [ConstructorCall] call to String
# 5645|                   Type = [VoidType] void
# 5645|                   ValueCategory = prvalue
# 5646|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5646|             Type = [VoidType] void
# 5646|             ValueCategory = prvalue
# 5646|           getQualifier(): [VariableAccess] x978
# 5646|               Type = [Struct] String
# 5646|               ValueCategory = lvalue
# 5646|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5646|           Conversion = [BoolConversion] conversion to bool
# 5646|           Type = [BoolType] bool
# 5646|           Value = [CStyleCast] 0
# 5646|           ValueCategory = prvalue
# 5647|     getStmt(979): [DoStmt] do (...) ...
# 5649|       getCondition(): [Literal] 0
# 5649|           Type = [IntType] int
# 5649|           Value = [Literal] 0
# 5649|           ValueCategory = prvalue
# 5647|       getStmt(): [BlockStmt] { ... }
# 5648|         getStmt(0): [DeclStmt] declaration
# 5648|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x979
# 5648|               Type = [Struct] String
# 5648|             getVariable().getInitializer(): [Initializer] initializer for x979
# 5648|               getExpr(): [ConstructorCall] call to String
# 5648|                   Type = [VoidType] void
# 5648|                   ValueCategory = prvalue
# 5649|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5649|             Type = [VoidType] void
# 5649|             ValueCategory = prvalue
# 5649|           getQualifier(): [VariableAccess] x979
# 5649|               Type = [Struct] String
# 5649|               ValueCategory = lvalue
# 5649|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5649|           Conversion = [BoolConversion] conversion to bool
# 5649|           Type = [BoolType] bool
# 5649|           Value = [CStyleCast] 0
# 5649|           ValueCategory = prvalue
# 5650|     getStmt(980): [DoStmt] do (...) ...
# 5652|       getCondition(): [Literal] 0
# 5652|           Type = [IntType] int
# 5652|           Value = [Literal] 0
# 5652|           ValueCategory = prvalue
# 5650|       getStmt(): [BlockStmt] { ... }
# 5651|         getStmt(0): [DeclStmt] declaration
# 5651|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x980
# 5651|               Type = [Struct] String
# 5651|             getVariable().getInitializer(): [Initializer] initializer for x980
# 5651|               getExpr(): [ConstructorCall] call to String
# 5651|                   Type = [VoidType] void
# 5651|                   ValueCategory = prvalue
# 5652|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5652|             Type = [VoidType] void
# 5652|             ValueCategory = prvalue
# 5652|           getQualifier(): [VariableAccess] x980
# 5652|               Type = [Struct] String
# 5652|               ValueCategory = lvalue
# 5652|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5652|           Conversion = [BoolConversion] conversion to bool
# 5652|           Type = [BoolType] bool
# 5652|           Value = [CStyleCast] 0
# 5652|           ValueCategory = prvalue
# 5653|     getStmt(981): [DoStmt] do (...) ...
# 5655|       getCondition(): [Literal] 0
# 5655|           Type = [IntType] int
# 5655|           Value = [Literal] 0
# 5655|           ValueCategory = prvalue
# 5653|       getStmt(): [BlockStmt] { ... }
# 5654|         getStmt(0): [DeclStmt] declaration
# 5654|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x981
# 5654|               Type = [Struct] String
# 5654|             getVariable().getInitializer(): [Initializer] initializer for x981
# 5654|               getExpr(): [ConstructorCall] call to String
# 5654|                   Type = [VoidType] void
# 5654|                   ValueCategory = prvalue
# 5655|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5655|             Type = [VoidType] void
# 5655|             ValueCategory = prvalue
# 5655|           getQualifier(): [VariableAccess] x981
# 5655|               Type = [Struct] String
# 5655|               ValueCategory = lvalue
# 5655|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5655|           Conversion = [BoolConversion] conversion to bool
# 5655|           Type = [BoolType] bool
# 5655|           Value = [CStyleCast] 0
# 5655|           ValueCategory = prvalue
# 5656|     getStmt(982): [DoStmt] do (...) ...
# 5658|       getCondition(): [Literal] 0
# 5658|           Type = [IntType] int
# 5658|           Value = [Literal] 0
# 5658|           ValueCategory = prvalue
# 5656|       getStmt(): [BlockStmt] { ... }
# 5657|         getStmt(0): [DeclStmt] declaration
# 5657|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x982
# 5657|               Type = [Struct] String
# 5657|             getVariable().getInitializer(): [Initializer] initializer for x982
# 5657|               getExpr(): [ConstructorCall] call to String
# 5657|                   Type = [VoidType] void
# 5657|                   ValueCategory = prvalue
# 5658|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5658|             Type = [VoidType] void
# 5658|             ValueCategory = prvalue
# 5658|           getQualifier(): [VariableAccess] x982
# 5658|               Type = [Struct] String
# 5658|               ValueCategory = lvalue
# 5658|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5658|           Conversion = [BoolConversion] conversion to bool
# 5658|           Type = [BoolType] bool
# 5658|           Value = [CStyleCast] 0
# 5658|           ValueCategory = prvalue
# 5659|     getStmt(983): [DoStmt] do (...) ...
# 5661|       getCondition(): [Literal] 0
# 5661|           Type = [IntType] int
# 5661|           Value = [Literal] 0
# 5661|           ValueCategory = prvalue
# 5659|       getStmt(): [BlockStmt] { ... }
# 5660|         getStmt(0): [DeclStmt] declaration
# 5660|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x983
# 5660|               Type = [Struct] String
# 5660|             getVariable().getInitializer(): [Initializer] initializer for x983
# 5660|               getExpr(): [ConstructorCall] call to String
# 5660|                   Type = [VoidType] void
# 5660|                   ValueCategory = prvalue
# 5661|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5661|             Type = [VoidType] void
# 5661|             ValueCategory = prvalue
# 5661|           getQualifier(): [VariableAccess] x983
# 5661|               Type = [Struct] String
# 5661|               ValueCategory = lvalue
# 5661|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5661|           Conversion = [BoolConversion] conversion to bool
# 5661|           Type = [BoolType] bool
# 5661|           Value = [CStyleCast] 0
# 5661|           ValueCategory = prvalue
# 5662|     getStmt(984): [DoStmt] do (...) ...
# 5664|       getCondition(): [Literal] 0
# 5664|           Type = [IntType] int
# 5664|           Value = [Literal] 0
# 5664|           ValueCategory = prvalue
# 5662|       getStmt(): [BlockStmt] { ... }
# 5663|         getStmt(0): [DeclStmt] declaration
# 5663|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x984
# 5663|               Type = [Struct] String
# 5663|             getVariable().getInitializer(): [Initializer] initializer for x984
# 5663|               getExpr(): [ConstructorCall] call to String
# 5663|                   Type = [VoidType] void
# 5663|                   ValueCategory = prvalue
# 5664|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5664|             Type = [VoidType] void
# 5664|             ValueCategory = prvalue
# 5664|           getQualifier(): [VariableAccess] x984
# 5664|               Type = [Struct] String
# 5664|               ValueCategory = lvalue
# 5664|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5664|           Conversion = [BoolConversion] conversion to bool
# 5664|           Type = [BoolType] bool
# 5664|           Value = [CStyleCast] 0
# 5664|           ValueCategory = prvalue
# 5665|     getStmt(985): [DoStmt] do (...) ...
# 5667|       getCondition(): [Literal] 0
# 5667|           Type = [IntType] int
# 5667|           Value = [Literal] 0
# 5667|           ValueCategory = prvalue
# 5665|       getStmt(): [BlockStmt] { ... }
# 5666|         getStmt(0): [DeclStmt] declaration
# 5666|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x985
# 5666|               Type = [Struct] String
# 5666|             getVariable().getInitializer(): [Initializer] initializer for x985
# 5666|               getExpr(): [ConstructorCall] call to String
# 5666|                   Type = [VoidType] void
# 5666|                   ValueCategory = prvalue
# 5667|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5667|             Type = [VoidType] void
# 5667|             ValueCategory = prvalue
# 5667|           getQualifier(): [VariableAccess] x985
# 5667|               Type = [Struct] String
# 5667|               ValueCategory = lvalue
# 5667|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5667|           Conversion = [BoolConversion] conversion to bool
# 5667|           Type = [BoolType] bool
# 5667|           Value = [CStyleCast] 0
# 5667|           ValueCategory = prvalue
# 5668|     getStmt(986): [DoStmt] do (...) ...
# 5670|       getCondition(): [Literal] 0
# 5670|           Type = [IntType] int
# 5670|           Value = [Literal] 0
# 5670|           ValueCategory = prvalue
# 5668|       getStmt(): [BlockStmt] { ... }
# 5669|         getStmt(0): [DeclStmt] declaration
# 5669|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x986
# 5669|               Type = [Struct] String
# 5669|             getVariable().getInitializer(): [Initializer] initializer for x986
# 5669|               getExpr(): [ConstructorCall] call to String
# 5669|                   Type = [VoidType] void
# 5669|                   ValueCategory = prvalue
# 5670|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5670|             Type = [VoidType] void
# 5670|             ValueCategory = prvalue
# 5670|           getQualifier(): [VariableAccess] x986
# 5670|               Type = [Struct] String
# 5670|               ValueCategory = lvalue
# 5670|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5670|           Conversion = [BoolConversion] conversion to bool
# 5670|           Type = [BoolType] bool
# 5670|           Value = [CStyleCast] 0
# 5670|           ValueCategory = prvalue
# 5671|     getStmt(987): [DoStmt] do (...) ...
# 5673|       getCondition(): [Literal] 0
# 5673|           Type = [IntType] int
# 5673|           Value = [Literal] 0
# 5673|           ValueCategory = prvalue
# 5671|       getStmt(): [BlockStmt] { ... }
# 5672|         getStmt(0): [DeclStmt] declaration
# 5672|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x987
# 5672|               Type = [Struct] String
# 5672|             getVariable().getInitializer(): [Initializer] initializer for x987
# 5672|               getExpr(): [ConstructorCall] call to String
# 5672|                   Type = [VoidType] void
# 5672|                   ValueCategory = prvalue
# 5673|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5673|             Type = [VoidType] void
# 5673|             ValueCategory = prvalue
# 5673|           getQualifier(): [VariableAccess] x987
# 5673|               Type = [Struct] String
# 5673|               ValueCategory = lvalue
# 5673|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5673|           Conversion = [BoolConversion] conversion to bool
# 5673|           Type = [BoolType] bool
# 5673|           Value = [CStyleCast] 0
# 5673|           ValueCategory = prvalue
# 5674|     getStmt(988): [DoStmt] do (...) ...
# 5676|       getCondition(): [Literal] 0
# 5676|           Type = [IntType] int
# 5676|           Value = [Literal] 0
# 5676|           ValueCategory = prvalue
# 5674|       getStmt(): [BlockStmt] { ... }
# 5675|         getStmt(0): [DeclStmt] declaration
# 5675|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x988
# 5675|               Type = [Struct] String
# 5675|             getVariable().getInitializer(): [Initializer] initializer for x988
# 5675|               getExpr(): [ConstructorCall] call to String
# 5675|                   Type = [VoidType] void
# 5675|                   ValueCategory = prvalue
# 5676|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5676|             Type = [VoidType] void
# 5676|             ValueCategory = prvalue
# 5676|           getQualifier(): [VariableAccess] x988
# 5676|               Type = [Struct] String
# 5676|               ValueCategory = lvalue
# 5676|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5676|           Conversion = [BoolConversion] conversion to bool
# 5676|           Type = [BoolType] bool
# 5676|           Value = [CStyleCast] 0
# 5676|           ValueCategory = prvalue
# 5677|     getStmt(989): [DoStmt] do (...) ...
# 5679|       getCondition(): [Literal] 0
# 5679|           Type = [IntType] int
# 5679|           Value = [Literal] 0
# 5679|           ValueCategory = prvalue
# 5677|       getStmt(): [BlockStmt] { ... }
# 5678|         getStmt(0): [DeclStmt] declaration
# 5678|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x989
# 5678|               Type = [Struct] String
# 5678|             getVariable().getInitializer(): [Initializer] initializer for x989
# 5678|               getExpr(): [ConstructorCall] call to String
# 5678|                   Type = [VoidType] void
# 5678|                   ValueCategory = prvalue
# 5679|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5679|             Type = [VoidType] void
# 5679|             ValueCategory = prvalue
# 5679|           getQualifier(): [VariableAccess] x989
# 5679|               Type = [Struct] String
# 5679|               ValueCategory = lvalue
# 5679|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5679|           Conversion = [BoolConversion] conversion to bool
# 5679|           Type = [BoolType] bool
# 5679|           Value = [CStyleCast] 0
# 5679|           ValueCategory = prvalue
# 5680|     getStmt(990): [DoStmt] do (...) ...
# 5682|       getCondition(): [Literal] 0
# 5682|           Type = [IntType] int
# 5682|           Value = [Literal] 0
# 5682|           ValueCategory = prvalue
# 5680|       getStmt(): [BlockStmt] { ... }
# 5681|         getStmt(0): [DeclStmt] declaration
# 5681|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x990
# 5681|               Type = [Struct] String
# 5681|             getVariable().getInitializer(): [Initializer] initializer for x990
# 5681|               getExpr(): [ConstructorCall] call to String
# 5681|                   Type = [VoidType] void
# 5681|                   ValueCategory = prvalue
# 5682|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5682|             Type = [VoidType] void
# 5682|             ValueCategory = prvalue
# 5682|           getQualifier(): [VariableAccess] x990
# 5682|               Type = [Struct] String
# 5682|               ValueCategory = lvalue
# 5682|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5682|           Conversion = [BoolConversion] conversion to bool
# 5682|           Type = [BoolType] bool
# 5682|           Value = [CStyleCast] 0
# 5682|           ValueCategory = prvalue
# 5683|     getStmt(991): [DoStmt] do (...) ...
# 5685|       getCondition(): [Literal] 0
# 5685|           Type = [IntType] int
# 5685|           Value = [Literal] 0
# 5685|           ValueCategory = prvalue
# 5683|       getStmt(): [BlockStmt] { ... }
# 5684|         getStmt(0): [DeclStmt] declaration
# 5684|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x991
# 5684|               Type = [Struct] String
# 5684|             getVariable().getInitializer(): [Initializer] initializer for x991
# 5684|               getExpr(): [ConstructorCall] call to String
# 5684|                   Type = [VoidType] void
# 5684|                   ValueCategory = prvalue
# 5685|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5685|             Type = [VoidType] void
# 5685|             ValueCategory = prvalue
# 5685|           getQualifier(): [VariableAccess] x991
# 5685|               Type = [Struct] String
# 5685|               ValueCategory = lvalue
# 5685|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5685|           Conversion = [BoolConversion] conversion to bool
# 5685|           Type = [BoolType] bool
# 5685|           Value = [CStyleCast] 0
# 5685|           ValueCategory = prvalue
# 5686|     getStmt(992): [DoStmt] do (...) ...
# 5688|       getCondition(): [Literal] 0
# 5688|           Type = [IntType] int
# 5688|           Value = [Literal] 0
# 5688|           ValueCategory = prvalue
# 5686|       getStmt(): [BlockStmt] { ... }
# 5687|         getStmt(0): [DeclStmt] declaration
# 5687|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x992
# 5687|               Type = [Struct] String
# 5687|             getVariable().getInitializer(): [Initializer] initializer for x992
# 5687|               getExpr(): [ConstructorCall] call to String
# 5687|                   Type = [VoidType] void
# 5687|                   ValueCategory = prvalue
# 5688|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5688|             Type = [VoidType] void
# 5688|             ValueCategory = prvalue
# 5688|           getQualifier(): [VariableAccess] x992
# 5688|               Type = [Struct] String
# 5688|               ValueCategory = lvalue
# 5688|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5688|           Conversion = [BoolConversion] conversion to bool
# 5688|           Type = [BoolType] bool
# 5688|           Value = [CStyleCast] 0
# 5688|           ValueCategory = prvalue
# 5689|     getStmt(993): [DoStmt] do (...) ...
# 5691|       getCondition(): [Literal] 0
# 5691|           Type = [IntType] int
# 5691|           Value = [Literal] 0
# 5691|           ValueCategory = prvalue
# 5689|       getStmt(): [BlockStmt] { ... }
# 5690|         getStmt(0): [DeclStmt] declaration
# 5690|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x993
# 5690|               Type = [Struct] String
# 5690|             getVariable().getInitializer(): [Initializer] initializer for x993
# 5690|               getExpr(): [ConstructorCall] call to String
# 5690|                   Type = [VoidType] void
# 5690|                   ValueCategory = prvalue
# 5691|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5691|             Type = [VoidType] void
# 5691|             ValueCategory = prvalue
# 5691|           getQualifier(): [VariableAccess] x993
# 5691|               Type = [Struct] String
# 5691|               ValueCategory = lvalue
# 5691|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5691|           Conversion = [BoolConversion] conversion to bool
# 5691|           Type = [BoolType] bool
# 5691|           Value = [CStyleCast] 0
# 5691|           ValueCategory = prvalue
# 5692|     getStmt(994): [DoStmt] do (...) ...
# 5694|       getCondition(): [Literal] 0
# 5694|           Type = [IntType] int
# 5694|           Value = [Literal] 0
# 5694|           ValueCategory = prvalue
# 5692|       getStmt(): [BlockStmt] { ... }
# 5693|         getStmt(0): [DeclStmt] declaration
# 5693|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x994
# 5693|               Type = [Struct] String
# 5693|             getVariable().getInitializer(): [Initializer] initializer for x994
# 5693|               getExpr(): [ConstructorCall] call to String
# 5693|                   Type = [VoidType] void
# 5693|                   ValueCategory = prvalue
# 5694|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5694|             Type = [VoidType] void
# 5694|             ValueCategory = prvalue
# 5694|           getQualifier(): [VariableAccess] x994
# 5694|               Type = [Struct] String
# 5694|               ValueCategory = lvalue
# 5694|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5694|           Conversion = [BoolConversion] conversion to bool
# 5694|           Type = [BoolType] bool
# 5694|           Value = [CStyleCast] 0
# 5694|           ValueCategory = prvalue
# 5695|     getStmt(995): [DoStmt] do (...) ...
# 5697|       getCondition(): [Literal] 0
# 5697|           Type = [IntType] int
# 5697|           Value = [Literal] 0
# 5697|           ValueCategory = prvalue
# 5695|       getStmt(): [BlockStmt] { ... }
# 5696|         getStmt(0): [DeclStmt] declaration
# 5696|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x995
# 5696|               Type = [Struct] String
# 5696|             getVariable().getInitializer(): [Initializer] initializer for x995
# 5696|               getExpr(): [ConstructorCall] call to String
# 5696|                   Type = [VoidType] void
# 5696|                   ValueCategory = prvalue
# 5697|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5697|             Type = [VoidType] void
# 5697|             ValueCategory = prvalue
# 5697|           getQualifier(): [VariableAccess] x995
# 5697|               Type = [Struct] String
# 5697|               ValueCategory = lvalue
# 5697|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5697|           Conversion = [BoolConversion] conversion to bool
# 5697|           Type = [BoolType] bool
# 5697|           Value = [CStyleCast] 0
# 5697|           ValueCategory = prvalue
# 5698|     getStmt(996): [DoStmt] do (...) ...
# 5700|       getCondition(): [Literal] 0
# 5700|           Type = [IntType] int
# 5700|           Value = [Literal] 0
# 5700|           ValueCategory = prvalue
# 5698|       getStmt(): [BlockStmt] { ... }
# 5699|         getStmt(0): [DeclStmt] declaration
# 5699|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x996
# 5699|               Type = [Struct] String
# 5699|             getVariable().getInitializer(): [Initializer] initializer for x996
# 5699|               getExpr(): [ConstructorCall] call to String
# 5699|                   Type = [VoidType] void
# 5699|                   ValueCategory = prvalue
# 5700|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5700|             Type = [VoidType] void
# 5700|             ValueCategory = prvalue
# 5700|           getQualifier(): [VariableAccess] x996
# 5700|               Type = [Struct] String
# 5700|               ValueCategory = lvalue
# 5700|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5700|           Conversion = [BoolConversion] conversion to bool
# 5700|           Type = [BoolType] bool
# 5700|           Value = [CStyleCast] 0
# 5700|           ValueCategory = prvalue
# 5701|     getStmt(997): [DoStmt] do (...) ...
# 5703|       getCondition(): [Literal] 0
# 5703|           Type = [IntType] int
# 5703|           Value = [Literal] 0
# 5703|           ValueCategory = prvalue
# 5701|       getStmt(): [BlockStmt] { ... }
# 5702|         getStmt(0): [DeclStmt] declaration
# 5702|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x997
# 5702|               Type = [Struct] String
# 5702|             getVariable().getInitializer(): [Initializer] initializer for x997
# 5702|               getExpr(): [ConstructorCall] call to String
# 5702|                   Type = [VoidType] void
# 5702|                   ValueCategory = prvalue
# 5703|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5703|             Type = [VoidType] void
# 5703|             ValueCategory = prvalue
# 5703|           getQualifier(): [VariableAccess] x997
# 5703|               Type = [Struct] String
# 5703|               ValueCategory = lvalue
# 5703|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5703|           Conversion = [BoolConversion] conversion to bool
# 5703|           Type = [BoolType] bool
# 5703|           Value = [CStyleCast] 0
# 5703|           ValueCategory = prvalue
# 5704|     getStmt(998): [DoStmt] do (...) ...
# 5706|       getCondition(): [Literal] 0
# 5706|           Type = [IntType] int
# 5706|           Value = [Literal] 0
# 5706|           ValueCategory = prvalue
# 5704|       getStmt(): [BlockStmt] { ... }
# 5705|         getStmt(0): [DeclStmt] declaration
# 5705|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x998
# 5705|               Type = [Struct] String
# 5705|             getVariable().getInitializer(): [Initializer] initializer for x998
# 5705|               getExpr(): [ConstructorCall] call to String
# 5705|                   Type = [VoidType] void
# 5705|                   ValueCategory = prvalue
# 5706|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5706|             Type = [VoidType] void
# 5706|             ValueCategory = prvalue
# 5706|           getQualifier(): [VariableAccess] x998
# 5706|               Type = [Struct] String
# 5706|               ValueCategory = lvalue
# 5706|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5706|           Conversion = [BoolConversion] conversion to bool
# 5706|           Type = [BoolType] bool
# 5706|           Value = [CStyleCast] 0
# 5706|           ValueCategory = prvalue
# 5707|     getStmt(999): [DoStmt] do (...) ...
# 5709|       getCondition(): [Literal] 0
# 5709|           Type = [IntType] int
# 5709|           Value = [Literal] 0
# 5709|           ValueCategory = prvalue
# 5707|       getStmt(): [BlockStmt] { ... }
# 5708|         getStmt(0): [DeclStmt] declaration
# 5708|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x999
# 5708|               Type = [Struct] String
# 5708|             getVariable().getInitializer(): [Initializer] initializer for x999
# 5708|               getExpr(): [ConstructorCall] call to String
# 5708|                   Type = [VoidType] void
# 5708|                   ValueCategory = prvalue
# 5709|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5709|             Type = [VoidType] void
# 5709|             ValueCategory = prvalue
# 5709|           getQualifier(): [VariableAccess] x999
# 5709|               Type = [Struct] String
# 5709|               ValueCategory = lvalue
# 5709|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5709|           Conversion = [BoolConversion] conversion to bool
# 5709|           Type = [BoolType] bool
# 5709|           Value = [CStyleCast] 0
# 5709|           ValueCategory = prvalue
# 5710|     getStmt(1000): [DoStmt] do (...) ...
# 5712|       getCondition(): [Literal] 0
# 5712|           Type = [IntType] int
# 5712|           Value = [Literal] 0
# 5712|           ValueCategory = prvalue
# 5710|       getStmt(): [BlockStmt] { ... }
# 5711|         getStmt(0): [DeclStmt] declaration
# 5711|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1000
# 5711|               Type = [Struct] String
# 5711|             getVariable().getInitializer(): [Initializer] initializer for x1000
# 5711|               getExpr(): [ConstructorCall] call to String
# 5711|                   Type = [VoidType] void
# 5711|                   ValueCategory = prvalue
# 5712|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5712|             Type = [VoidType] void
# 5712|             ValueCategory = prvalue
# 5712|           getQualifier(): [VariableAccess] x1000
# 5712|               Type = [Struct] String
# 5712|               ValueCategory = lvalue
# 5712|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5712|           Conversion = [BoolConversion] conversion to bool
# 5712|           Type = [BoolType] bool
# 5712|           Value = [CStyleCast] 0
# 5712|           ValueCategory = prvalue
# 5713|     getStmt(1001): [DoStmt] do (...) ...
# 5715|       getCondition(): [Literal] 0
# 5715|           Type = [IntType] int
# 5715|           Value = [Literal] 0
# 5715|           ValueCategory = prvalue
# 5713|       getStmt(): [BlockStmt] { ... }
# 5714|         getStmt(0): [DeclStmt] declaration
# 5714|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1001
# 5714|               Type = [Struct] String
# 5714|             getVariable().getInitializer(): [Initializer] initializer for x1001
# 5714|               getExpr(): [ConstructorCall] call to String
# 5714|                   Type = [VoidType] void
# 5714|                   ValueCategory = prvalue
# 5715|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5715|             Type = [VoidType] void
# 5715|             ValueCategory = prvalue
# 5715|           getQualifier(): [VariableAccess] x1001
# 5715|               Type = [Struct] String
# 5715|               ValueCategory = lvalue
# 5715|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5715|           Conversion = [BoolConversion] conversion to bool
# 5715|           Type = [BoolType] bool
# 5715|           Value = [CStyleCast] 0
# 5715|           ValueCategory = prvalue
# 5716|     getStmt(1002): [DoStmt] do (...) ...
# 5718|       getCondition(): [Literal] 0
# 5718|           Type = [IntType] int
# 5718|           Value = [Literal] 0
# 5718|           ValueCategory = prvalue
# 5716|       getStmt(): [BlockStmt] { ... }
# 5717|         getStmt(0): [DeclStmt] declaration
# 5717|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1002
# 5717|               Type = [Struct] String
# 5717|             getVariable().getInitializer(): [Initializer] initializer for x1002
# 5717|               getExpr(): [ConstructorCall] call to String
# 5717|                   Type = [VoidType] void
# 5717|                   ValueCategory = prvalue
# 5718|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5718|             Type = [VoidType] void
# 5718|             ValueCategory = prvalue
# 5718|           getQualifier(): [VariableAccess] x1002
# 5718|               Type = [Struct] String
# 5718|               ValueCategory = lvalue
# 5718|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5718|           Conversion = [BoolConversion] conversion to bool
# 5718|           Type = [BoolType] bool
# 5718|           Value = [CStyleCast] 0
# 5718|           ValueCategory = prvalue
# 5719|     getStmt(1003): [DoStmt] do (...) ...
# 5721|       getCondition(): [Literal] 0
# 5721|           Type = [IntType] int
# 5721|           Value = [Literal] 0
# 5721|           ValueCategory = prvalue
# 5719|       getStmt(): [BlockStmt] { ... }
# 5720|         getStmt(0): [DeclStmt] declaration
# 5720|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1003
# 5720|               Type = [Struct] String
# 5720|             getVariable().getInitializer(): [Initializer] initializer for x1003
# 5720|               getExpr(): [ConstructorCall] call to String
# 5720|                   Type = [VoidType] void
# 5720|                   ValueCategory = prvalue
# 5721|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5721|             Type = [VoidType] void
# 5721|             ValueCategory = prvalue
# 5721|           getQualifier(): [VariableAccess] x1003
# 5721|               Type = [Struct] String
# 5721|               ValueCategory = lvalue
# 5721|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5721|           Conversion = [BoolConversion] conversion to bool
# 5721|           Type = [BoolType] bool
# 5721|           Value = [CStyleCast] 0
# 5721|           ValueCategory = prvalue
# 5722|     getStmt(1004): [DoStmt] do (...) ...
# 5724|       getCondition(): [Literal] 0
# 5724|           Type = [IntType] int
# 5724|           Value = [Literal] 0
# 5724|           ValueCategory = prvalue
# 5722|       getStmt(): [BlockStmt] { ... }
# 5723|         getStmt(0): [DeclStmt] declaration
# 5723|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1004
# 5723|               Type = [Struct] String
# 5723|             getVariable().getInitializer(): [Initializer] initializer for x1004
# 5723|               getExpr(): [ConstructorCall] call to String
# 5723|                   Type = [VoidType] void
# 5723|                   ValueCategory = prvalue
# 5724|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5724|             Type = [VoidType] void
# 5724|             ValueCategory = prvalue
# 5724|           getQualifier(): [VariableAccess] x1004
# 5724|               Type = [Struct] String
# 5724|               ValueCategory = lvalue
# 5724|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5724|           Conversion = [BoolConversion] conversion to bool
# 5724|           Type = [BoolType] bool
# 5724|           Value = [CStyleCast] 0
# 5724|           ValueCategory = prvalue
# 5725|     getStmt(1005): [DoStmt] do (...) ...
# 5727|       getCondition(): [Literal] 0
# 5727|           Type = [IntType] int
# 5727|           Value = [Literal] 0
# 5727|           ValueCategory = prvalue
# 5725|       getStmt(): [BlockStmt] { ... }
# 5726|         getStmt(0): [DeclStmt] declaration
# 5726|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1005
# 5726|               Type = [Struct] String
# 5726|             getVariable().getInitializer(): [Initializer] initializer for x1005
# 5726|               getExpr(): [ConstructorCall] call to String
# 5726|                   Type = [VoidType] void
# 5726|                   ValueCategory = prvalue
# 5727|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5727|             Type = [VoidType] void
# 5727|             ValueCategory = prvalue
# 5727|           getQualifier(): [VariableAccess] x1005
# 5727|               Type = [Struct] String
# 5727|               ValueCategory = lvalue
# 5727|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5727|           Conversion = [BoolConversion] conversion to bool
# 5727|           Type = [BoolType] bool
# 5727|           Value = [CStyleCast] 0
# 5727|           ValueCategory = prvalue
# 5728|     getStmt(1006): [DoStmt] do (...) ...
# 5730|       getCondition(): [Literal] 0
# 5730|           Type = [IntType] int
# 5730|           Value = [Literal] 0
# 5730|           ValueCategory = prvalue
# 5728|       getStmt(): [BlockStmt] { ... }
# 5729|         getStmt(0): [DeclStmt] declaration
# 5729|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1006
# 5729|               Type = [Struct] String
# 5729|             getVariable().getInitializer(): [Initializer] initializer for x1006
# 5729|               getExpr(): [ConstructorCall] call to String
# 5729|                   Type = [VoidType] void
# 5729|                   ValueCategory = prvalue
# 5730|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5730|             Type = [VoidType] void
# 5730|             ValueCategory = prvalue
# 5730|           getQualifier(): [VariableAccess] x1006
# 5730|               Type = [Struct] String
# 5730|               ValueCategory = lvalue
# 5730|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5730|           Conversion = [BoolConversion] conversion to bool
# 5730|           Type = [BoolType] bool
# 5730|           Value = [CStyleCast] 0
# 5730|           ValueCategory = prvalue
# 5731|     getStmt(1007): [DoStmt] do (...) ...
# 5733|       getCondition(): [Literal] 0
# 5733|           Type = [IntType] int
# 5733|           Value = [Literal] 0
# 5733|           ValueCategory = prvalue
# 5731|       getStmt(): [BlockStmt] { ... }
# 5732|         getStmt(0): [DeclStmt] declaration
# 5732|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1007
# 5732|               Type = [Struct] String
# 5732|             getVariable().getInitializer(): [Initializer] initializer for x1007
# 5732|               getExpr(): [ConstructorCall] call to String
# 5732|                   Type = [VoidType] void
# 5732|                   ValueCategory = prvalue
# 5733|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5733|             Type = [VoidType] void
# 5733|             ValueCategory = prvalue
# 5733|           getQualifier(): [VariableAccess] x1007
# 5733|               Type = [Struct] String
# 5733|               ValueCategory = lvalue
# 5733|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5733|           Conversion = [BoolConversion] conversion to bool
# 5733|           Type = [BoolType] bool
# 5733|           Value = [CStyleCast] 0
# 5733|           ValueCategory = prvalue
# 5734|     getStmt(1008): [DoStmt] do (...) ...
# 5736|       getCondition(): [Literal] 0
# 5736|           Type = [IntType] int
# 5736|           Value = [Literal] 0
# 5736|           ValueCategory = prvalue
# 5734|       getStmt(): [BlockStmt] { ... }
# 5735|         getStmt(0): [DeclStmt] declaration
# 5735|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1008
# 5735|               Type = [Struct] String
# 5735|             getVariable().getInitializer(): [Initializer] initializer for x1008
# 5735|               getExpr(): [ConstructorCall] call to String
# 5735|                   Type = [VoidType] void
# 5735|                   ValueCategory = prvalue
# 5736|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5736|             Type = [VoidType] void
# 5736|             ValueCategory = prvalue
# 5736|           getQualifier(): [VariableAccess] x1008
# 5736|               Type = [Struct] String
# 5736|               ValueCategory = lvalue
# 5736|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5736|           Conversion = [BoolConversion] conversion to bool
# 5736|           Type = [BoolType] bool
# 5736|           Value = [CStyleCast] 0
# 5736|           ValueCategory = prvalue
# 5737|     getStmt(1009): [DoStmt] do (...) ...
# 5739|       getCondition(): [Literal] 0
# 5739|           Type = [IntType] int
# 5739|           Value = [Literal] 0
# 5739|           ValueCategory = prvalue
# 5737|       getStmt(): [BlockStmt] { ... }
# 5738|         getStmt(0): [DeclStmt] declaration
# 5738|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1009
# 5738|               Type = [Struct] String
# 5738|             getVariable().getInitializer(): [Initializer] initializer for x1009
# 5738|               getExpr(): [ConstructorCall] call to String
# 5738|                   Type = [VoidType] void
# 5738|                   ValueCategory = prvalue
# 5739|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5739|             Type = [VoidType] void
# 5739|             ValueCategory = prvalue
# 5739|           getQualifier(): [VariableAccess] x1009
# 5739|               Type = [Struct] String
# 5739|               ValueCategory = lvalue
# 5739|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5739|           Conversion = [BoolConversion] conversion to bool
# 5739|           Type = [BoolType] bool
# 5739|           Value = [CStyleCast] 0
# 5739|           ValueCategory = prvalue
# 5740|     getStmt(1010): [DoStmt] do (...) ...
# 5742|       getCondition(): [Literal] 0
# 5742|           Type = [IntType] int
# 5742|           Value = [Literal] 0
# 5742|           ValueCategory = prvalue
# 5740|       getStmt(): [BlockStmt] { ... }
# 5741|         getStmt(0): [DeclStmt] declaration
# 5741|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1010
# 5741|               Type = [Struct] String
# 5741|             getVariable().getInitializer(): [Initializer] initializer for x1010
# 5741|               getExpr(): [ConstructorCall] call to String
# 5741|                   Type = [VoidType] void
# 5741|                   ValueCategory = prvalue
# 5742|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5742|             Type = [VoidType] void
# 5742|             ValueCategory = prvalue
# 5742|           getQualifier(): [VariableAccess] x1010
# 5742|               Type = [Struct] String
# 5742|               ValueCategory = lvalue
# 5742|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5742|           Conversion = [BoolConversion] conversion to bool
# 5742|           Type = [BoolType] bool
# 5742|           Value = [CStyleCast] 0
# 5742|           ValueCategory = prvalue
# 5743|     getStmt(1011): [DoStmt] do (...) ...
# 5745|       getCondition(): [Literal] 0
# 5745|           Type = [IntType] int
# 5745|           Value = [Literal] 0
# 5745|           ValueCategory = prvalue
# 5743|       getStmt(): [BlockStmt] { ... }
# 5744|         getStmt(0): [DeclStmt] declaration
# 5744|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1011
# 5744|               Type = [Struct] String
# 5744|             getVariable().getInitializer(): [Initializer] initializer for x1011
# 5744|               getExpr(): [ConstructorCall] call to String
# 5744|                   Type = [VoidType] void
# 5744|                   ValueCategory = prvalue
# 5745|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5745|             Type = [VoidType] void
# 5745|             ValueCategory = prvalue
# 5745|           getQualifier(): [VariableAccess] x1011
# 5745|               Type = [Struct] String
# 5745|               ValueCategory = lvalue
# 5745|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5745|           Conversion = [BoolConversion] conversion to bool
# 5745|           Type = [BoolType] bool
# 5745|           Value = [CStyleCast] 0
# 5745|           ValueCategory = prvalue
# 5746|     getStmt(1012): [DoStmt] do (...) ...
# 5748|       getCondition(): [Literal] 0
# 5748|           Type = [IntType] int
# 5748|           Value = [Literal] 0
# 5748|           ValueCategory = prvalue
# 5746|       getStmt(): [BlockStmt] { ... }
# 5747|         getStmt(0): [DeclStmt] declaration
# 5747|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1012
# 5747|               Type = [Struct] String
# 5747|             getVariable().getInitializer(): [Initializer] initializer for x1012
# 5747|               getExpr(): [ConstructorCall] call to String
# 5747|                   Type = [VoidType] void
# 5747|                   ValueCategory = prvalue
# 5748|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5748|             Type = [VoidType] void
# 5748|             ValueCategory = prvalue
# 5748|           getQualifier(): [VariableAccess] x1012
# 5748|               Type = [Struct] String
# 5748|               ValueCategory = lvalue
# 5748|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5748|           Conversion = [BoolConversion] conversion to bool
# 5748|           Type = [BoolType] bool
# 5748|           Value = [CStyleCast] 0
# 5748|           ValueCategory = prvalue
# 5749|     getStmt(1013): [DoStmt] do (...) ...
# 5751|       getCondition(): [Literal] 0
# 5751|           Type = [IntType] int
# 5751|           Value = [Literal] 0
# 5751|           ValueCategory = prvalue
# 5749|       getStmt(): [BlockStmt] { ... }
# 5750|         getStmt(0): [DeclStmt] declaration
# 5750|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1013
# 5750|               Type = [Struct] String
# 5750|             getVariable().getInitializer(): [Initializer] initializer for x1013
# 5750|               getExpr(): [ConstructorCall] call to String
# 5750|                   Type = [VoidType] void
# 5750|                   ValueCategory = prvalue
# 5751|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5751|             Type = [VoidType] void
# 5751|             ValueCategory = prvalue
# 5751|           getQualifier(): [VariableAccess] x1013
# 5751|               Type = [Struct] String
# 5751|               ValueCategory = lvalue
# 5751|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5751|           Conversion = [BoolConversion] conversion to bool
# 5751|           Type = [BoolType] bool
# 5751|           Value = [CStyleCast] 0
# 5751|           ValueCategory = prvalue
# 5752|     getStmt(1014): [DoStmt] do (...) ...
# 5754|       getCondition(): [Literal] 0
# 5754|           Type = [IntType] int
# 5754|           Value = [Literal] 0
# 5754|           ValueCategory = prvalue
# 5752|       getStmt(): [BlockStmt] { ... }
# 5753|         getStmt(0): [DeclStmt] declaration
# 5753|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1014
# 5753|               Type = [Struct] String
# 5753|             getVariable().getInitializer(): [Initializer] initializer for x1014
# 5753|               getExpr(): [ConstructorCall] call to String
# 5753|                   Type = [VoidType] void
# 5753|                   ValueCategory = prvalue
# 5754|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5754|             Type = [VoidType] void
# 5754|             ValueCategory = prvalue
# 5754|           getQualifier(): [VariableAccess] x1014
# 5754|               Type = [Struct] String
# 5754|               ValueCategory = lvalue
# 5754|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5754|           Conversion = [BoolConversion] conversion to bool
# 5754|           Type = [BoolType] bool
# 5754|           Value = [CStyleCast] 0
# 5754|           ValueCategory = prvalue
# 5755|     getStmt(1015): [DoStmt] do (...) ...
# 5757|       getCondition(): [Literal] 0
# 5757|           Type = [IntType] int
# 5757|           Value = [Literal] 0
# 5757|           ValueCategory = prvalue
# 5755|       getStmt(): [BlockStmt] { ... }
# 5756|         getStmt(0): [DeclStmt] declaration
# 5756|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1015
# 5756|               Type = [Struct] String
# 5756|             getVariable().getInitializer(): [Initializer] initializer for x1015
# 5756|               getExpr(): [ConstructorCall] call to String
# 5756|                   Type = [VoidType] void
# 5756|                   ValueCategory = prvalue
# 5757|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5757|             Type = [VoidType] void
# 5757|             ValueCategory = prvalue
# 5757|           getQualifier(): [VariableAccess] x1015
# 5757|               Type = [Struct] String
# 5757|               ValueCategory = lvalue
# 5757|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5757|           Conversion = [BoolConversion] conversion to bool
# 5757|           Type = [BoolType] bool
# 5757|           Value = [CStyleCast] 0
# 5757|           ValueCategory = prvalue
# 5758|     getStmt(1016): [DoStmt] do (...) ...
# 5760|       getCondition(): [Literal] 0
# 5760|           Type = [IntType] int
# 5760|           Value = [Literal] 0
# 5760|           ValueCategory = prvalue
# 5758|       getStmt(): [BlockStmt] { ... }
# 5759|         getStmt(0): [DeclStmt] declaration
# 5759|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1016
# 5759|               Type = [Struct] String
# 5759|             getVariable().getInitializer(): [Initializer] initializer for x1016
# 5759|               getExpr(): [ConstructorCall] call to String
# 5759|                   Type = [VoidType] void
# 5759|                   ValueCategory = prvalue
# 5760|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5760|             Type = [VoidType] void
# 5760|             ValueCategory = prvalue
# 5760|           getQualifier(): [VariableAccess] x1016
# 5760|               Type = [Struct] String
# 5760|               ValueCategory = lvalue
# 5760|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5760|           Conversion = [BoolConversion] conversion to bool
# 5760|           Type = [BoolType] bool
# 5760|           Value = [CStyleCast] 0
# 5760|           ValueCategory = prvalue
# 5761|     getStmt(1017): [DoStmt] do (...) ...
# 5763|       getCondition(): [Literal] 0
# 5763|           Type = [IntType] int
# 5763|           Value = [Literal] 0
# 5763|           ValueCategory = prvalue
# 5761|       getStmt(): [BlockStmt] { ... }
# 5762|         getStmt(0): [DeclStmt] declaration
# 5762|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1017
# 5762|               Type = [Struct] String
# 5762|             getVariable().getInitializer(): [Initializer] initializer for x1017
# 5762|               getExpr(): [ConstructorCall] call to String
# 5762|                   Type = [VoidType] void
# 5762|                   ValueCategory = prvalue
# 5763|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5763|             Type = [VoidType] void
# 5763|             ValueCategory = prvalue
# 5763|           getQualifier(): [VariableAccess] x1017
# 5763|               Type = [Struct] String
# 5763|               ValueCategory = lvalue
# 5763|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5763|           Conversion = [BoolConversion] conversion to bool
# 5763|           Type = [BoolType] bool
# 5763|           Value = [CStyleCast] 0
# 5763|           ValueCategory = prvalue
# 5764|     getStmt(1018): [DoStmt] do (...) ...
# 5766|       getCondition(): [Literal] 0
# 5766|           Type = [IntType] int
# 5766|           Value = [Literal] 0
# 5766|           ValueCategory = prvalue
# 5764|       getStmt(): [BlockStmt] { ... }
# 5765|         getStmt(0): [DeclStmt] declaration
# 5765|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1018
# 5765|               Type = [Struct] String
# 5765|             getVariable().getInitializer(): [Initializer] initializer for x1018
# 5765|               getExpr(): [ConstructorCall] call to String
# 5765|                   Type = [VoidType] void
# 5765|                   ValueCategory = prvalue
# 5766|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5766|             Type = [VoidType] void
# 5766|             ValueCategory = prvalue
# 5766|           getQualifier(): [VariableAccess] x1018
# 5766|               Type = [Struct] String
# 5766|               ValueCategory = lvalue
# 5766|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5766|           Conversion = [BoolConversion] conversion to bool
# 5766|           Type = [BoolType] bool
# 5766|           Value = [CStyleCast] 0
# 5766|           ValueCategory = prvalue
# 5767|     getStmt(1019): [DoStmt] do (...) ...
# 5769|       getCondition(): [Literal] 0
# 5769|           Type = [IntType] int
# 5769|           Value = [Literal] 0
# 5769|           ValueCategory = prvalue
# 5767|       getStmt(): [BlockStmt] { ... }
# 5768|         getStmt(0): [DeclStmt] declaration
# 5768|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1019
# 5768|               Type = [Struct] String
# 5768|             getVariable().getInitializer(): [Initializer] initializer for x1019
# 5768|               getExpr(): [ConstructorCall] call to String
# 5768|                   Type = [VoidType] void
# 5768|                   ValueCategory = prvalue
# 5769|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5769|             Type = [VoidType] void
# 5769|             ValueCategory = prvalue
# 5769|           getQualifier(): [VariableAccess] x1019
# 5769|               Type = [Struct] String
# 5769|               ValueCategory = lvalue
# 5769|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5769|           Conversion = [BoolConversion] conversion to bool
# 5769|           Type = [BoolType] bool
# 5769|           Value = [CStyleCast] 0
# 5769|           ValueCategory = prvalue
# 5770|     getStmt(1020): [DoStmt] do (...) ...
# 5772|       getCondition(): [Literal] 0
# 5772|           Type = [IntType] int
# 5772|           Value = [Literal] 0
# 5772|           ValueCategory = prvalue
# 5770|       getStmt(): [BlockStmt] { ... }
# 5771|         getStmt(0): [DeclStmt] declaration
# 5771|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1020
# 5771|               Type = [Struct] String
# 5771|             getVariable().getInitializer(): [Initializer] initializer for x1020
# 5771|               getExpr(): [ConstructorCall] call to String
# 5771|                   Type = [VoidType] void
# 5771|                   ValueCategory = prvalue
# 5772|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5772|             Type = [VoidType] void
# 5772|             ValueCategory = prvalue
# 5772|           getQualifier(): [VariableAccess] x1020
# 5772|               Type = [Struct] String
# 5772|               ValueCategory = lvalue
# 5772|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5772|           Conversion = [BoolConversion] conversion to bool
# 5772|           Type = [BoolType] bool
# 5772|           Value = [CStyleCast] 0
# 5772|           ValueCategory = prvalue
# 5773|     getStmt(1021): [DoStmt] do (...) ...
# 5775|       getCondition(): [Literal] 0
# 5775|           Type = [IntType] int
# 5775|           Value = [Literal] 0
# 5775|           ValueCategory = prvalue
# 5773|       getStmt(): [BlockStmt] { ... }
# 5774|         getStmt(0): [DeclStmt] declaration
# 5774|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1021
# 5774|               Type = [Struct] String
# 5774|             getVariable().getInitializer(): [Initializer] initializer for x1021
# 5774|               getExpr(): [ConstructorCall] call to String
# 5774|                   Type = [VoidType] void
# 5774|                   ValueCategory = prvalue
# 5775|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5775|             Type = [VoidType] void
# 5775|             ValueCategory = prvalue
# 5775|           getQualifier(): [VariableAccess] x1021
# 5775|               Type = [Struct] String
# 5775|               ValueCategory = lvalue
# 5775|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5775|           Conversion = [BoolConversion] conversion to bool
# 5775|           Type = [BoolType] bool
# 5775|           Value = [CStyleCast] 0
# 5775|           ValueCategory = prvalue
# 5776|     getStmt(1022): [DoStmt] do (...) ...
# 5778|       getCondition(): [Literal] 0
# 5778|           Type = [IntType] int
# 5778|           Value = [Literal] 0
# 5778|           ValueCategory = prvalue
# 5776|       getStmt(): [BlockStmt] { ... }
# 5777|         getStmt(0): [DeclStmt] declaration
# 5777|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1022
# 5777|               Type = [Struct] String
# 5777|             getVariable().getInitializer(): [Initializer] initializer for x1022
# 5777|               getExpr(): [ConstructorCall] call to String
# 5777|                   Type = [VoidType] void
# 5777|                   ValueCategory = prvalue
# 5778|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5778|             Type = [VoidType] void
# 5778|             ValueCategory = prvalue
# 5778|           getQualifier(): [VariableAccess] x1022
# 5778|               Type = [Struct] String
# 5778|               ValueCategory = lvalue
# 5778|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5778|           Conversion = [BoolConversion] conversion to bool
# 5778|           Type = [BoolType] bool
# 5778|           Value = [CStyleCast] 0
# 5778|           ValueCategory = prvalue
# 5779|     getStmt(1023): [DoStmt] do (...) ...
# 5781|       getCondition(): [Literal] 0
# 5781|           Type = [IntType] int
# 5781|           Value = [Literal] 0
# 5781|           ValueCategory = prvalue
# 5779|       getStmt(): [BlockStmt] { ... }
# 5780|         getStmt(0): [DeclStmt] declaration
# 5780|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1023
# 5780|               Type = [Struct] String
# 5780|             getVariable().getInitializer(): [Initializer] initializer for x1023
# 5780|               getExpr(): [ConstructorCall] call to String
# 5780|                   Type = [VoidType] void
# 5780|                   ValueCategory = prvalue
# 5781|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5781|             Type = [VoidType] void
# 5781|             ValueCategory = prvalue
# 5781|           getQualifier(): [VariableAccess] x1023
# 5781|               Type = [Struct] String
# 5781|               ValueCategory = lvalue
# 5781|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5781|           Conversion = [BoolConversion] conversion to bool
# 5781|           Type = [BoolType] bool
# 5781|           Value = [CStyleCast] 0
# 5781|           ValueCategory = prvalue
# 5782|     getStmt(1024): [DoStmt] do (...) ...
# 5784|       getCondition(): [Literal] 0
# 5784|           Type = [IntType] int
# 5784|           Value = [Literal] 0
# 5784|           ValueCategory = prvalue
# 5782|       getStmt(): [BlockStmt] { ... }
# 5783|         getStmt(0): [DeclStmt] declaration
# 5783|           getDeclarationEntry(0): [VariableDeclarationEntry] definition of x1024
# 5783|               Type = [Struct] String
# 5783|             getVariable().getInitializer(): [Initializer] initializer for x1024
# 5783|               getExpr(): [ConstructorCall] call to String
# 5783|                   Type = [VoidType] void
# 5783|                   ValueCategory = prvalue
# 5784|         getImplicitDestructorCall(0): [DestructorCall] call to ~String
# 5784|             Type = [VoidType] void
# 5784|             ValueCategory = prvalue
# 5784|           getQualifier(): [VariableAccess] x1024
# 5784|               Type = [Struct] String
# 5784|               ValueCategory = lvalue
# 5784|       getCondition().getFullyConverted(): [CStyleCast] (bool)...
# 5784|           Conversion = [BoolConversion] conversion to bool
# 5784|           Type = [BoolType] bool
# 5784|           Value = [CStyleCast] 0
# 5784|           ValueCategory = prvalue
# 5785|     getStmt(1025): [ReturnStmt] return ...
perf-regression.cpp:
#    4| [CopyAssignmentOperator] Big& Big::operator=(Big const&)
#    4|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Big &
#    4| [MoveAssignmentOperator] Big& Big::operator=(Big&&)
#    4|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] Big &&
#    4| [CopyConstructor] void Big::Big(Big const&)
#    4|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Big &
#    4| [MoveConstructor] void Big::Big(Big&&)
#    4|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] Big &&
#    6| [Constructor] void Big::Big()
#    6|   <params>: 
#    6|   <initializations>: 
#    6|     getInitializer(0): [ConstructorFieldInit] constructor init of field buffer
#    6|         Type = [ArrayType] char[1073741824]
#    6|         ValueCategory = prvalue
#    6|       getExpr(): [ArrayAggregateLiteral] {...}
#    6|           Type = [ArrayType] char[1073741824]
#    6|           ValueCategory = prvalue
#    6|   getEntryPoint(): [BlockStmt] { ... }
#    6|     getStmt(0): [ReturnStmt] return ...
#    9| [TopLevelFunction] int main()
#    9|   <params>: 
#    9|   getEntryPoint(): [BlockStmt] { ... }
#   10|     getStmt(0): [DeclStmt] declaration
#   10|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of big
#   10|           Type = [PointerType] Big *
#   10|         getVariable().getInitializer(): [Initializer] initializer for big
#   10|           getExpr(): [NewExpr] new
#   10|               Type = [PointerType] Big *
#   10|               ValueCategory = prvalue
#   10|             getInitializer(): [ConstructorCall] call to Big
#   10|                 Type = [VoidType] void
#   10|                 ValueCategory = prvalue
#   12|     getStmt(1): [ReturnStmt] return ...
#   12|       getExpr(): [Literal] 0
#   12|           Type = [IntType] int
#   12|           Value = [Literal] 0
#   12|           ValueCategory = prvalue
smart_ptr.cpp:
#    8| [TopLevelFunction] void unique_ptr_arg(std::unique_ptr<int, std::default_delete<int>>)
#    8|   <params>: 
#    8|     getParameter(0): [Parameter] up
#    8|         Type = [ClassTemplateInstantiation] unique_ptr<int, default_delete<int>>
#   10| [TopLevelFunction] void call_unique_ptr_arg(int*)
#   10|   <params>: 
#   10|     getParameter(0): [Parameter] p
#   10|         Type = [IntPointerType] int *
#   10|   getEntryPoint(): [BlockStmt] { ... }
#   11|     getStmt(0): [DeclStmt] declaration
#   11|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of up
#   11|           Type = [ClassTemplateInstantiation] unique_ptr<int, default_delete<int>>
#   11|         getVariable().getInitializer(): [Initializer] initializer for up
#   11|           getExpr(): [ConstructorCall] call to unique_ptr
#   11|               Type = [VoidType] void
#   11|               ValueCategory = prvalue
#   11|             getArgument(0): [VariableAccess] p
#   11|                 Type = [IntPointerType] int *
#   11|                 ValueCategory = prvalue(load)
#   12|     getStmt(1): [ExprStmt] ExprStmt
#   12|       getExpr(): [FunctionCall] call to unique_ptr_arg
#   12|           Type = [VoidType] void
#   12|           ValueCategory = prvalue
#   12|         getArgument(0): [FunctionCall] call to move
#   12|             Type = [RValueReferenceType] type &&
#   12|             ValueCategory = prvalue
#   12|           getArgument(0): [VariableAccess] up
#   12|               Type = [ClassTemplateInstantiation] unique_ptr<int, default_delete<int>>
#   12|               ValueCategory = lvalue
#   12|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   12|               Type = [LValueReferenceType] unique_ptr<int, default_delete<int>> &
#   12|               ValueCategory = prvalue
#   12|         getImplicitDestructorCall(0): [DestructorCall] call to ~unique_ptr
#   12|             Type = [VoidType] void
#   12|             ValueCategory = prvalue
#   12|           getQualifier(): [ReuseExpr] reuse of temporary object
#   12|               Type = [ClassTemplateInstantiation] unique_ptr<int, default_delete<int>>
#   12|               ValueCategory = xvalue
#   12|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   12|             Type = [ClassTemplateInstantiation] unique_ptr<int, default_delete<int>>
#   12|             ValueCategory = lvalue
#   12|           getExpr(): [ReferenceDereferenceExpr] (reference dereference)
#   12|               Type = [CTypedefType,NestedTypedefType] type
#   12|               ValueCategory = prvalue(load)
#   13|     getStmt(2): [ReturnStmt] return ...
#   13|       getImplicitDestructorCall(0): [DestructorCall] call to ~unique_ptr
#   13|           Type = [VoidType] void
#   13|           ValueCategory = prvalue
#   13|         getQualifier(): [VariableAccess] up
#   13|             Type = [ClassTemplateInstantiation] unique_ptr<int, default_delete<int>>
#   13|             ValueCategory = lvalue
#   15| [TopLevelFunction] void shared_ptr_arg(std::shared_ptr<float>)
#   15|   <params>: 
#   15|     getParameter(0): [Parameter] sp
#   15|         Type = [ClassTemplateInstantiation] shared_ptr<float>
#   17| [TopLevelFunction] void call_shared_ptr_arg(float*)
#   17|   <params>: 
#   17|     getParameter(0): [Parameter] p
#   17|         Type = [PointerType] float *
#   17|   getEntryPoint(): [BlockStmt] { ... }
#   18|     getStmt(0): [DeclStmt] declaration
#   18|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of sp
#   18|           Type = [ClassTemplateInstantiation] shared_ptr<float>
#   18|         getVariable().getInitializer(): [Initializer] initializer for sp
#   18|           getExpr(): [ConstructorCall] call to shared_ptr
#   18|               Type = [VoidType] void
#   18|               ValueCategory = prvalue
#   18|             getArgument(0): [VariableAccess] p
#   18|                 Type = [PointerType] float *
#   18|                 ValueCategory = prvalue(load)
#   19|     getStmt(1): [ExprStmt] ExprStmt
#   19|       getExpr(): [FunctionCall] call to shared_ptr_arg
#   19|           Type = [VoidType] void
#   19|           ValueCategory = prvalue
#   19|         getArgument(0): [ConstructorCall] call to shared_ptr
#   19|             Type = [VoidType] void
#   19|             ValueCategory = prvalue
#   19|           getArgument(0): [VariableAccess] sp
#   19|               Type = [ClassTemplateInstantiation] shared_ptr<float>
#   19|               ValueCategory = lvalue
#   19|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   19|               Type = [LValueReferenceType] const shared_ptr<float> &
#   19|               ValueCategory = prvalue
#   19|             getExpr(): [CStyleCast] (const shared_ptr<float>)...
#   19|                 Conversion = [GlvalueConversion] glvalue conversion
#   19|                 Type = [SpecifiedType] const shared_ptr<float>
#   19|                 ValueCategory = lvalue
#   19|         getImplicitDestructorCall(0): [DestructorCall] call to ~shared_ptr
#   19|             Type = [VoidType] void
#   19|             ValueCategory = prvalue
#   19|           getQualifier(): [ReuseExpr] reuse of temporary object
#   19|               Type = [ClassTemplateInstantiation] shared_ptr<float>
#   19|               ValueCategory = xvalue
#   19|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   19|             Type = [ClassTemplateInstantiation] shared_ptr<float>
#   19|             ValueCategory = lvalue
#   20|     getStmt(2): [ReturnStmt] return ...
#   20|       getImplicitDestructorCall(0): [DestructorCall] call to ~shared_ptr
#   20|           Type = [VoidType] void
#   20|           ValueCategory = prvalue
#   20|         getQualifier(): [VariableAccess] sp
#   20|             Type = [ClassTemplateInstantiation] shared_ptr<float>
#   20|             ValueCategory = lvalue
#   22| [TopLevelFunction] void shared_ptr_const_int(std::shared_ptr<int const>)
#   22|   <params>: 
#   22|     getParameter(0): [Parameter] (unnamed parameter 0)
#   22|         Type = [ClassTemplateInstantiation] shared_ptr<const int>
#   23| [TopLevelFunction] void shared_ptr_const_int_ptr(std::shared_ptr<int* const>)
#   23|   <params>: 
#   23|     getParameter(0): [Parameter] (unnamed parameter 0)
#   23|         Type = [ClassTemplateInstantiation] shared_ptr<int *const>
#   24| [TopLevelFunction] void shared_ptr_shared_ptr_const_int(std::shared_ptr<std::shared_ptr<int const>>)
#   24|   <params>: 
#   24|     getParameter(0): [Parameter] (unnamed parameter 0)
#   24|         Type = [ClassTemplateInstantiation] shared_ptr<shared_ptr<const int>>
#   25| [TopLevelFunction] void shared_ptr_const_shared_ptr_int(std::shared_ptr<std::shared_ptr<int> const>)
#   25|   <params>: 
#   25|     getParameter(0): [Parameter] (unnamed parameter 0)
#   25|         Type = [ClassTemplateInstantiation] shared_ptr<const shared_ptr<int>>
#   26| [TopLevelFunction] void shared_ptr_const_shared_ptr_const_int(std::shared_ptr<std::shared_ptr<int const> const>)
#   26|   <params>: 
#   26|     getParameter(0): [Parameter] (unnamed parameter 0)
#   26|         Type = [ClassTemplateInstantiation] shared_ptr<const shared_ptr<const int>>
#   28| [TopLevelFunction] void call_shared_ptr_consts()
#   28|   <params>: 
#   28|   getEntryPoint(): [BlockStmt] { ... }
#   29|     getStmt(0): [DeclStmt] declaration
#   29|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of sp_const_int
#   29|           Type = [ClassTemplateInstantiation] shared_ptr<const int>
#   31|     getStmt(1): [ExprStmt] ExprStmt
#   31|       getExpr(): [FunctionCall] call to shared_ptr_const_int
#   31|           Type = [VoidType] void
#   31|           ValueCategory = prvalue
#   31|         getArgument(0): [ConstructorCall] call to shared_ptr
#   31|             Type = [VoidType] void
#   31|             ValueCategory = prvalue
#   31|           getArgument(0): [VariableAccess] sp_const_int
#   31|               Type = [ClassTemplateInstantiation] shared_ptr<const int>
#   31|               ValueCategory = lvalue
#   31|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   31|               Type = [LValueReferenceType] const shared_ptr<const int> &
#   31|               ValueCategory = prvalue
#   31|             getExpr(): [CStyleCast] (const shared_ptr<const int>)...
#   31|                 Conversion = [GlvalueConversion] glvalue conversion
#   31|                 Type = [SpecifiedType] const shared_ptr<const int>
#   31|                 ValueCategory = lvalue
#   31|         getImplicitDestructorCall(0): [DestructorCall] call to ~shared_ptr
#   31|             Type = [VoidType] void
#   31|             ValueCategory = prvalue
#   31|           getQualifier(): [ReuseExpr] reuse of temporary object
#   31|               Type = [ClassTemplateInstantiation] shared_ptr<const int>
#   31|               ValueCategory = xvalue
#   31|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   31|             Type = [ClassTemplateInstantiation] shared_ptr<const int>
#   31|             ValueCategory = lvalue
#   33|     getStmt(2): [DeclStmt] declaration
#   33|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of sp_const_int_pointer
#   33|           Type = [ClassTemplateInstantiation] shared_ptr<int *const>
#   35|     getStmt(3): [ExprStmt] ExprStmt
#   35|       getExpr(): [FunctionCall] call to shared_ptr_const_int_ptr
#   35|           Type = [VoidType] void
#   35|           ValueCategory = prvalue
#   35|         getArgument(0): [ConstructorCall] call to shared_ptr
#   35|             Type = [VoidType] void
#   35|             ValueCategory = prvalue
#   35|           getArgument(0): [VariableAccess] sp_const_int_pointer
#   35|               Type = [ClassTemplateInstantiation] shared_ptr<int *const>
#   35|               ValueCategory = lvalue
#   35|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   35|               Type = [LValueReferenceType] const shared_ptr<int *const> &
#   35|               ValueCategory = prvalue
#   35|             getExpr(): [CStyleCast] (const shared_ptr<int *const>)...
#   35|                 Conversion = [GlvalueConversion] glvalue conversion
#   35|                 Type = [SpecifiedType] const shared_ptr<int *const>
#   35|                 ValueCategory = lvalue
#   35|         getImplicitDestructorCall(0): [DestructorCall] call to ~shared_ptr
#   35|             Type = [VoidType] void
#   35|             ValueCategory = prvalue
#   35|           getQualifier(): [ReuseExpr] reuse of temporary object
#   35|               Type = [ClassTemplateInstantiation] shared_ptr<int *const>
#   35|               ValueCategory = xvalue
#   35|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   35|             Type = [ClassTemplateInstantiation] shared_ptr<int *const>
#   35|             ValueCategory = lvalue
#   37|     getStmt(4): [DeclStmt] declaration
#   37|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of sp_sp_const_int
#   37|           Type = [ClassTemplateInstantiation] shared_ptr<shared_ptr<const int>>
#   39|     getStmt(5): [ExprStmt] ExprStmt
#   39|       getExpr(): [FunctionCall] call to shared_ptr_shared_ptr_const_int
#   39|           Type = [VoidType] void
#   39|           ValueCategory = prvalue
#   39|         getArgument(0): [ConstructorCall] call to shared_ptr
#   39|             Type = [VoidType] void
#   39|             ValueCategory = prvalue
#   39|           getArgument(0): [VariableAccess] sp_sp_const_int
#   39|               Type = [ClassTemplateInstantiation] shared_ptr<shared_ptr<const int>>
#   39|               ValueCategory = lvalue
#   39|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   39|               Type = [LValueReferenceType] const shared_ptr<shared_ptr<const int>> &
#   39|               ValueCategory = prvalue
#   39|             getExpr(): [CStyleCast] (const shared_ptr<shared_ptr<const int>>)...
#   39|                 Conversion = [GlvalueConversion] glvalue conversion
#   39|                 Type = [SpecifiedType] const shared_ptr<shared_ptr<const int>>
#   39|                 ValueCategory = lvalue
#   39|         getImplicitDestructorCall(0): [DestructorCall] call to ~shared_ptr
#   39|             Type = [VoidType] void
#   39|             ValueCategory = prvalue
#   39|           getQualifier(): [ReuseExpr] reuse of temporary object
#   39|               Type = [ClassTemplateInstantiation] shared_ptr<shared_ptr<const int>>
#   39|               ValueCategory = xvalue
#   39|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   39|             Type = [ClassTemplateInstantiation] shared_ptr<shared_ptr<const int>>
#   39|             ValueCategory = lvalue
#   41|     getStmt(6): [DeclStmt] declaration
#   41|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of sp_const_sp_int
#   41|           Type = [ClassTemplateInstantiation] shared_ptr<const shared_ptr<int>>
#   43|     getStmt(7): [ExprStmt] ExprStmt
#   43|       getExpr(): [FunctionCall] call to shared_ptr_const_shared_ptr_int
#   43|           Type = [VoidType] void
#   43|           ValueCategory = prvalue
#   43|         getArgument(0): [ConstructorCall] call to shared_ptr
#   43|             Type = [VoidType] void
#   43|             ValueCategory = prvalue
#   43|           getArgument(0): [VariableAccess] sp_const_sp_int
#   43|               Type = [ClassTemplateInstantiation] shared_ptr<const shared_ptr<int>>
#   43|               ValueCategory = lvalue
#   43|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   43|               Type = [LValueReferenceType] const shared_ptr<const shared_ptr<int>> &
#   43|               ValueCategory = prvalue
#   43|             getExpr(): [CStyleCast] (const shared_ptr<const shared_ptr<int>>)...
#   43|                 Conversion = [GlvalueConversion] glvalue conversion
#   43|                 Type = [SpecifiedType] const shared_ptr<const shared_ptr<int>>
#   43|                 ValueCategory = lvalue
#   43|         getImplicitDestructorCall(0): [DestructorCall] call to ~shared_ptr
#   43|             Type = [VoidType] void
#   43|             ValueCategory = prvalue
#   43|           getQualifier(): [ReuseExpr] reuse of temporary object
#   43|               Type = [ClassTemplateInstantiation] shared_ptr<const shared_ptr<int>>
#   43|               ValueCategory = xvalue
#   43|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   43|             Type = [ClassTemplateInstantiation] shared_ptr<const shared_ptr<int>>
#   43|             ValueCategory = lvalue
#   45|     getStmt(8): [DeclStmt] declaration
#   45|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of sp_const_sp_const_int
#   45|           Type = [ClassTemplateInstantiation] shared_ptr<const shared_ptr<const int>>
#   47|     getStmt(9): [ExprStmt] ExprStmt
#   47|       getExpr(): [FunctionCall] call to shared_ptr_const_shared_ptr_const_int
#   47|           Type = [VoidType] void
#   47|           ValueCategory = prvalue
#   47|         getArgument(0): [ConstructorCall] call to shared_ptr
#   47|             Type = [VoidType] void
#   47|             ValueCategory = prvalue
#   47|           getArgument(0): [VariableAccess] sp_const_sp_const_int
#   47|               Type = [ClassTemplateInstantiation] shared_ptr<const shared_ptr<const int>>
#   47|               ValueCategory = lvalue
#   47|           getArgument(0).getFullyConverted(): [ReferenceToExpr] (reference to)
#   47|               Type = [LValueReferenceType] const shared_ptr<const shared_ptr<const int>> &
#   47|               ValueCategory = prvalue
#   47|             getExpr(): [CStyleCast] (const shared_ptr<const shared_ptr<const int>>)...
#   47|                 Conversion = [GlvalueConversion] glvalue conversion
#   47|                 Type = [SpecifiedType] const shared_ptr<const shared_ptr<const int>>
#   47|                 ValueCategory = lvalue
#   47|         getImplicitDestructorCall(0): [DestructorCall] call to ~shared_ptr
#   47|             Type = [VoidType] void
#   47|             ValueCategory = prvalue
#   47|           getQualifier(): [ReuseExpr] reuse of temporary object
#   47|               Type = [ClassTemplateInstantiation] shared_ptr<const shared_ptr<const int>>
#   47|               ValueCategory = xvalue
#   47|         getArgument(0).getFullyConverted(): [TemporaryObjectExpr] temporary object
#   47|             Type = [ClassTemplateInstantiation] shared_ptr<const shared_ptr<const int>>
#   47|             ValueCategory = lvalue
#   48|     getStmt(10): [ReturnStmt] return ...
#   48|       getImplicitDestructorCall(0): [DestructorCall] call to ~shared_ptr
#   48|           Type = [VoidType] void
#   48|           ValueCategory = prvalue
#   48|         getQualifier(): [VariableAccess] sp_const_sp_const_int
#   48|             Type = [ClassTemplateInstantiation] shared_ptr<const shared_ptr<const int>>
#   48|             ValueCategory = lvalue
#   48|       getImplicitDestructorCall(1): [DestructorCall] call to ~shared_ptr
#   48|           Type = [VoidType] void
#   48|           ValueCategory = prvalue
#   48|         getQualifier(): [VariableAccess] sp_const_sp_int
#   48|             Type = [ClassTemplateInstantiation] shared_ptr<const shared_ptr<int>>
#   48|             ValueCategory = lvalue
#   48|       getImplicitDestructorCall(2): [DestructorCall] call to ~shared_ptr
#   48|           Type = [VoidType] void
#   48|           ValueCategory = prvalue
#   48|         getQualifier(): [VariableAccess] sp_sp_const_int
#   48|             Type = [ClassTemplateInstantiation] shared_ptr<shared_ptr<const int>>
#   48|             ValueCategory = lvalue
#   48|       getImplicitDestructorCall(3): [DestructorCall] call to ~shared_ptr
#   48|           Type = [VoidType] void
#   48|           ValueCategory = prvalue
#   48|         getQualifier(): [VariableAccess] sp_const_int_pointer
#   48|             Type = [ClassTemplateInstantiation] shared_ptr<int *const>
#   48|             ValueCategory = lvalue
#   48|       getImplicitDestructorCall(4): [DestructorCall] call to ~shared_ptr
#   48|           Type = [VoidType] void
#   48|           ValueCategory = prvalue
#   48|         getQualifier(): [VariableAccess] sp_const_int
#   48|             Type = [ClassTemplateInstantiation] shared_ptr<const int>
#   48|             ValueCategory = lvalue
struct_init.cpp:
#    1| [TopLevelFunction] int handler1(void*)
#    1|   <params>: 
#    1|     getParameter(0): [Parameter] p
#    1|         Type = [VoidPointerType] void *
#    2| [TopLevelFunction] int handler2(void*)
#    2|   <params>: 
#    2|     getParameter(0): [Parameter] p
#    2|         Type = [VoidPointerType] void *
#    4| [CopyAssignmentOperator] Info& Info::operator=(Info const&)
#    4|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [LValueReferenceType] const Info &
#    4| [MoveAssignmentOperator] Info& Info::operator=(Info&&)
#    4|   <params>: 
#-----|     getParameter(0): [Parameter] (unnamed parameter 0)
#-----|         Type = [RValueReferenceType] Info &&
#    9| [GlobalVariable] Info infos_in_file[]
#    9|   getInitializer(): [Initializer] initializer for infos_in_file
#    9|     getExpr(): [ArrayAggregateLiteral] {...}
#    9|         Type = [ArrayType] Info[2]
#    9|         ValueCategory = prvalue
#   10|       getAnElementExpr(0): [ClassAggregateLiteral] {...}
#   10|           Type = [Struct] Info
#   10|           ValueCategory = prvalue
#   10|         getAFieldExpr(name): 1
#   10|             Type = [ArrayType] const char[2]
#   10|             Value = [StringLiteral] "1"
#   10|             ValueCategory = lvalue
#   10|         getAFieldExpr(handler): [FunctionAccess] handler1
#   10|             Type = [FunctionPointerType] ..(*)(..)
#   10|             ValueCategory = prvalue(load)
#   10|         getAFieldExpr(name).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#   10|             Type = [PointerType] const char *
#   10|             ValueCategory = prvalue
#   11|       getAnElementExpr(1): [ClassAggregateLiteral] {...}
#   11|           Type = [Struct] Info
#   11|           ValueCategory = prvalue
#   11|         getAFieldExpr(name): 3
#   11|             Type = [ArrayType] const char[2]
#   11|             Value = [StringLiteral] "3"
#   11|             ValueCategory = lvalue
#   11|         getAFieldExpr(handler): [AddressOfExpr] & ...
#   11|             Type = [FunctionPointerType] ..(*)(..)
#   11|             ValueCategory = prvalue
#   11|           getOperand(): [FunctionAccess] handler2
#   11|               Type = [RoutineType] ..()(..)
#   11|               ValueCategory = lvalue
#   11|         getAFieldExpr(name).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#   11|             Type = [PointerType] const char *
#   11|             ValueCategory = prvalue
#   16| [TopLevelFunction] void let_info_escape(Info*)
#   16|   <params>: 
#   16|     getParameter(0): [Parameter] info
#   16|         Type = [PointerType] Info *
#   16|   getEntryPoint(): [BlockStmt] { ... }
#   17|     getStmt(0): [ExprStmt] ExprStmt
#   17|       getExpr(): [AssignExpr] ... = ...
#   17|           Type = [PointerType] Info *
#   17|           ValueCategory = lvalue
#   17|         getLValue(): [VariableAccess] global_pointer
#   17|             Type = [PointerType] Info *
#   17|             ValueCategory = lvalue
#   17|         getRValue(): [VariableAccess] info
#   17|             Type = [PointerType] Info *
#   17|             ValueCategory = prvalue(load)
#   18|     getStmt(1): [ReturnStmt] return ...
#   20| [TopLevelFunction] void declare_static_infos()
#   20|   <params>: 
#   20|   getEntryPoint(): [BlockStmt] { ... }
#   21|     getStmt(0): [DeclStmt] declaration
#   21|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of static_infos
#   21|           Type = [ArrayType] Info[]
#   21|         getVariable().getInitializer(): [Initializer] initializer for static_infos
#   21|           getExpr(): [ArrayAggregateLiteral] {...}
#   21|               Type = [ArrayType] Info[2]
#   21|               ValueCategory = prvalue
#   22|             getAnElementExpr(0): [ClassAggregateLiteral] {...}
#   22|                 Type = [Struct] Info
#   22|                 ValueCategory = prvalue
#   22|               getAFieldExpr(name): 1
#   22|                   Type = [ArrayType] const char[2]
#   22|                   Value = [StringLiteral] "1"
#   22|                   ValueCategory = lvalue
#   22|               getAFieldExpr(handler): [FunctionAccess] handler1
#   22|                   Type = [FunctionPointerType] ..(*)(..)
#   22|                   ValueCategory = prvalue(load)
#   22|               getAFieldExpr(name).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#   22|                   Type = [PointerType] const char *
#   22|                   ValueCategory = prvalue
#   23|             getAnElementExpr(1): [ClassAggregateLiteral] {...}
#   23|                 Type = [Struct] Info
#   23|                 ValueCategory = prvalue
#   23|               getAFieldExpr(name): 2
#   23|                   Type = [ArrayType] const char[2]
#   23|                   Value = [StringLiteral] "2"
#   23|                   ValueCategory = lvalue
#   23|               getAFieldExpr(handler): [AddressOfExpr] & ...
#   23|                   Type = [FunctionPointerType] ..(*)(..)
#   23|                   ValueCategory = prvalue
#   23|                 getOperand(): [FunctionAccess] handler2
#   23|                     Type = [RoutineType] ..()(..)
#   23|                     ValueCategory = lvalue
#   23|               getAFieldExpr(name).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#   23|                   Type = [PointerType] const char *
#   23|                   ValueCategory = prvalue
#   25|     getStmt(1): [ExprStmt] ExprStmt
#   25|       getExpr(): [FunctionCall] call to let_info_escape
#   25|           Type = [VoidType] void
#   25|           ValueCategory = prvalue
#   25|         getArgument(0): [VariableAccess] static_infos
#   25|             Type = [ArrayType] Info[2]
#   25|             ValueCategory = lvalue
#   25|         getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#   25|             Type = [PointerType] Info *
#   25|             ValueCategory = prvalue
#   26|     getStmt(2): [ReturnStmt] return ...
#   28| [TopLevelFunction] void declare_local_infos()
#   28|   <params>: 
#   28|   getEntryPoint(): [BlockStmt] { ... }
#   29|     getStmt(0): [DeclStmt] declaration
#   29|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of local_infos
#   29|           Type = [ArrayType] Info[]
#   29|         getVariable().getInitializer(): [Initializer] initializer for local_infos
#   29|           getExpr(): [ArrayAggregateLiteral] {...}
#   29|               Type = [ArrayType] Info[2]
#   29|               ValueCategory = prvalue
#   30|             getAnElementExpr(0): [ClassAggregateLiteral] {...}
#   30|                 Type = [Struct] Info
#   30|                 ValueCategory = prvalue
#   30|               getAFieldExpr(name): 1
#   30|                   Type = [ArrayType] const char[2]
#   30|                   Value = [StringLiteral] "1"
#   30|                   ValueCategory = lvalue
#   30|               getAFieldExpr(handler): [FunctionAccess] handler1
#   30|                   Type = [FunctionPointerType] ..(*)(..)
#   30|                   ValueCategory = prvalue(load)
#   30|               getAFieldExpr(name).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#   30|                   Type = [PointerType] const char *
#   30|                   ValueCategory = prvalue
#   31|             getAnElementExpr(1): [ClassAggregateLiteral] {...}
#   31|                 Type = [Struct] Info
#   31|                 ValueCategory = prvalue
#   31|               getAFieldExpr(name): 2
#   31|                   Type = [ArrayType] const char[2]
#   31|                   Value = [StringLiteral] "2"
#   31|                   ValueCategory = lvalue
#   31|               getAFieldExpr(handler): [AddressOfExpr] & ...
#   31|                   Type = [FunctionPointerType] ..(*)(..)
#   31|                   ValueCategory = prvalue
#   31|                 getOperand(): [FunctionAccess] handler2
#   31|                     Type = [RoutineType] ..()(..)
#   31|                     ValueCategory = lvalue
#   31|               getAFieldExpr(name).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#   31|                   Type = [PointerType] const char *
#   31|                   ValueCategory = prvalue
#   33|     getStmt(1): [ExprStmt] ExprStmt
#   33|       getExpr(): [FunctionCall] call to let_info_escape
#   33|           Type = [VoidType] void
#   33|           ValueCategory = prvalue
#   33|         getArgument(0): [VariableAccess] local_infos
#   33|             Type = [ArrayType] Info[2]
#   33|             ValueCategory = lvalue
#   33|         getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#   33|             Type = [PointerType] Info *
#   33|             ValueCategory = prvalue
#   34|     getStmt(2): [ReturnStmt] return ...
#   36| [TopLevelFunction] void declare_static_runtime_infos(char const*)
#   36|   <params>: 
#   36|     getParameter(0): [Parameter] name1
#   36|         Type = [PointerType] const char *
#   36|   getEntryPoint(): [BlockStmt] { ... }
#   37|     getStmt(0): [DeclStmt] declaration
#   37|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of static_infos
#   37|           Type = [ArrayType] Info[]
#   37|         getVariable().getInitializer(): [Initializer] initializer for static_infos
#   37|           getExpr(): [ArrayAggregateLiteral] {...}
#   37|               Type = [ArrayType] Info[2]
#   37|               ValueCategory = prvalue
#   38|             getAnElementExpr(0): [ClassAggregateLiteral] {...}
#   38|                 Type = [Struct] Info
#   38|                 ValueCategory = prvalue
#   38|               getAFieldExpr(name): [VariableAccess] name1
#   38|                   Type = [PointerType] const char *
#   38|                   ValueCategory = prvalue(load)
#   38|               getAFieldExpr(handler): [FunctionAccess] handler1
#   38|                   Type = [FunctionPointerType] ..(*)(..)
#   38|                   ValueCategory = prvalue(load)
#   39|             getAnElementExpr(1): [ClassAggregateLiteral] {...}
#   39|                 Type = [Struct] Info
#   39|                 ValueCategory = prvalue
#   39|               getAFieldExpr(name): 2
#   39|                   Type = [ArrayType] const char[2]
#   39|                   Value = [StringLiteral] "2"
#   39|                   ValueCategory = lvalue
#   39|               getAFieldExpr(handler): [AddressOfExpr] & ...
#   39|                   Type = [FunctionPointerType] ..(*)(..)
#   39|                   ValueCategory = prvalue
#   39|                 getOperand(): [FunctionAccess] handler2
#   39|                     Type = [RoutineType] ..()(..)
#   39|                     ValueCategory = lvalue
#   39|               getAFieldExpr(name).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#   39|                   Type = [PointerType] const char *
#   39|                   ValueCategory = prvalue
#   41|     getStmt(1): [ExprStmt] ExprStmt
#   41|       getExpr(): [FunctionCall] call to let_info_escape
#   41|           Type = [VoidType] void
#   41|           ValueCategory = prvalue
#   41|         getArgument(0): [VariableAccess] static_infos
#   41|             Type = [ArrayType] Info[2]
#   41|             ValueCategory = lvalue
#   41|         getArgument(0).getFullyConverted(): [ArrayToPointerConversion] array to pointer conversion
#   41|             Type = [PointerType] Info *
#   41|             ValueCategory = prvalue
#   42|     getStmt(2): [ReturnStmt] return ...
try_except.c:
#    3| [TopLevelFunction] void ProbeFunction()
#    3|   <params>: 
#    4| [TopLevelFunction] void sink()
#    4|   <params>: 
#    6| [TopLevelFunction] void f()
#    6|   <params>: 
#    6|   getEntryPoint(): [BlockStmt] { ... }
#    7|     getStmt(0): [DeclStmt] declaration
#    7|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#    7|           Type = [IntType] int
#    7|       getDeclarationEntry(1): [VariableDeclarationEntry] definition of y
#    7|           Type = [IntType] int
#    7|         getVariable().getInitializer(): [Initializer] initializer for y
#    7|           getExpr(): [Literal] 0
#    7|               Type = [IntType] int
#    7|               Value = [Literal] 0
#    7|               ValueCategory = prvalue
#    8|     getStmt(1): [MicrosoftTryExceptStmt] __try { ... } __except( ... ) { ... }
#    8|       getStmt(): [BlockStmt] { ... }
#    9|         getStmt(0): [ExprStmt] ExprStmt
#    9|           getExpr(): [FunctionCall] call to ProbeFunction
#    9|               Type = [VoidType] void
#    9|               ValueCategory = prvalue
#    9|             getArgument(0): [Literal] 0
#    9|                 Type = [IntType] int
#    9|                 Value = [Literal] 0
#    9|                 ValueCategory = prvalue
#   10|         getStmt(1): [ExprStmt] ExprStmt
#   10|           getExpr(): [AssignExpr] ... = ...
#   10|               Type = [IntType] int
#   10|               ValueCategory = prvalue
#   10|             getLValue(): [VariableAccess] x
#   10|                 Type = [IntType] int
#   10|                 ValueCategory = lvalue
#   10|             getRValue(): [VariableAccess] y
#   10|                 Type = [IntType] int
#   10|                 ValueCategory = prvalue(load)
#   11|         getStmt(2): [ExprStmt] ExprStmt
#   11|           getExpr(): [FunctionCall] call to ProbeFunction
#   11|               Type = [VoidType] void
#   11|               ValueCategory = prvalue
#   11|             getArgument(0): [Literal] 0
#   11|                 Type = [IntType] int
#   11|                 Value = [Literal] 0
#   11|                 ValueCategory = prvalue
#   13|       getCondition(): [Literal] 0
#   13|           Type = [IntType] int
#   13|           Value = [Literal] 0
#   13|           ValueCategory = prvalue
#   13|       getExcept(): [BlockStmt] { ... }
#   14|         getStmt(0): [ExprStmt] ExprStmt
#   14|           getExpr(): [FunctionCall] call to sink
#   14|               Type = [VoidType] void
#   14|               ValueCategory = prvalue
#   14|             getArgument(0): [VariableAccess] x
#   14|                 Type = [IntType] int
#   14|                 ValueCategory = prvalue(load)
#   16|     getStmt(2): [ReturnStmt] return ...
#   18| [TopLevelFunction] void g()
#   18|   <params>: 
#   18|   getEntryPoint(): [BlockStmt] { ... }
#   19|     getStmt(0): [DeclStmt] declaration
#   19|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#   19|           Type = [IntType] int
#   19|       getDeclarationEntry(1): [VariableDeclarationEntry] definition of y
#   19|           Type = [IntType] int
#   19|         getVariable().getInitializer(): [Initializer] initializer for y
#   19|           getExpr(): [Literal] 0
#   19|               Type = [IntType] int
#   19|               Value = [Literal] 0
#   19|               ValueCategory = prvalue
#   20|     getStmt(1): [MicrosoftTryFinallyStmt] __try { ... } __finally { ... }
#   20|       getStmt(): [BlockStmt] { ... }
#   21|         getStmt(0): [ExprStmt] ExprStmt
#   21|           getExpr(): [FunctionCall] call to ProbeFunction
#   21|               Type = [VoidType] void
#   21|               ValueCategory = prvalue
#   21|             getArgument(0): [Literal] 0
#   21|                 Type = [IntType] int
#   21|                 Value = [Literal] 0
#   21|                 ValueCategory = prvalue
#   22|         getStmt(1): [ExprStmt] ExprStmt
#   22|           getExpr(): [AssignExpr] ... = ...
#   22|               Type = [IntType] int
#   22|               ValueCategory = prvalue
#   22|             getLValue(): [VariableAccess] x
#   22|                 Type = [IntType] int
#   22|                 ValueCategory = lvalue
#   22|             getRValue(): [VariableAccess] y
#   22|                 Type = [IntType] int
#   22|                 ValueCategory = prvalue(load)
#   23|         getStmt(2): [ExprStmt] ExprStmt
#   23|           getExpr(): [FunctionCall] call to ProbeFunction
#   23|               Type = [VoidType] void
#   23|               ValueCategory = prvalue
#   23|             getArgument(0): [Literal] 0
#   23|                 Type = [IntType] int
#   23|                 Value = [Literal] 0
#   23|                 ValueCategory = prvalue
#   25|       getFinally(): [BlockStmt] { ... }
#   26|         getStmt(0): [ExprStmt] ExprStmt
#   26|           getExpr(): [FunctionCall] call to sink
#   26|               Type = [VoidType] void
#   26|               ValueCategory = prvalue
#   26|             getArgument(0): [VariableAccess] x
#   26|                 Type = [IntType] int
#   26|                 ValueCategory = prvalue(load)
#   28|     getStmt(2): [ReturnStmt] return ...
#   30| [TopLevelFunction] void AfxThrowMemoryException()
#   30|   <params>: 
#   32| [TopLevelFunction] void h(int)
#   32|   <params>: 
#   32|     getParameter(0): [Parameter] b
#   32|         Type = [IntType] int
#   32|   getEntryPoint(): [BlockStmt] { ... }
#   33|     getStmt(0): [DeclStmt] declaration
#   33|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#   33|           Type = [IntType] int
#   33|         getVariable().getInitializer(): [Initializer] initializer for x
#   33|           getExpr(): [Literal] 0
#   33|               Type = [IntType] int
#   33|               Value = [Literal] 0
#   33|               ValueCategory = prvalue
#   34|     getStmt(1): [MicrosoftTryExceptStmt] __try { ... } __except( ... ) { ... }
#   34|       getStmt(): [BlockStmt] { ... }
#   35|         getStmt(0): [IfStmt] if (...) ... 
#   35|           getCondition(): [VariableAccess] b
#   35|               Type = [IntType] int
#   35|               ValueCategory = prvalue(load)
#   35|           getThen(): [BlockStmt] { ... }
#   36|             getStmt(0): [ExprStmt] ExprStmt
#   36|               getExpr(): [FunctionCall] call to AfxThrowMemoryException
#   36|                   Type = [VoidType] void
#   36|                   ValueCategory = prvalue
#   39|       getCondition(): [Literal] 1
#   39|           Type = [IntType] int
#   39|           Value = [Literal] 1
#   39|           ValueCategory = prvalue
#   39|       getExcept(): [BlockStmt] { ... }
#   40|         getStmt(0): [ExprStmt] ExprStmt
#   40|           getExpr(): [FunctionCall] call to sink
#   40|               Type = [VoidType] void
#   40|               ValueCategory = prvalue
#   40|             getArgument(0): [VariableAccess] x
#   40|                 Type = [IntType] int
#   40|                 ValueCategory = prvalue(load)
#   42|     getStmt(2): [ReturnStmt] return ...
try_except.cpp:
#    3| [TopLevelFunction] void ProbeFunction()
#    3|   <params>: 
#    4| [TopLevelFunction] void sink()
#    4|   <params>: 
#    6| [TopLevelFunction] void f_cpp()
#    6|   <params>: 
#    6|   getEntryPoint(): [BlockStmt] { ... }
#    7|     getStmt(0): [DeclStmt] declaration
#    7|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#    7|           Type = [IntType] int
#    7|       getDeclarationEntry(1): [VariableDeclarationEntry] definition of y
#    7|           Type = [IntType] int
#    7|         getVariable().getInitializer(): [Initializer] initializer for y
#    7|           getExpr(): [Literal] 0
#    7|               Type = [IntType] int
#    7|               Value = [Literal] 0
#    7|               ValueCategory = prvalue
#    8|     getStmt(1): [MicrosoftTryExceptStmt] __try { ... } __except( ... ) { ... }
#    8|       getStmt(): [BlockStmt] { ... }
#    9|         getStmt(0): [ExprStmt] ExprStmt
#    9|           getExpr(): [FunctionCall] call to ProbeFunction
#    9|               Type = [VoidType] void
#    9|               ValueCategory = prvalue
#    9|             getArgument(0): [Literal] 0
#    9|                 Type = [IntType] int
#    9|                 Value = [Literal] 0
#    9|                 ValueCategory = prvalue
#   10|         getStmt(1): [ExprStmt] ExprStmt
#   10|           getExpr(): [AssignExpr] ... = ...
#   10|               Type = [IntType] int
#   10|               ValueCategory = lvalue
#   10|             getLValue(): [VariableAccess] x
#   10|                 Type = [IntType] int
#   10|                 ValueCategory = lvalue
#   10|             getRValue(): [VariableAccess] y
#   10|                 Type = [IntType] int
#   10|                 ValueCategory = prvalue(load)
#   11|         getStmt(2): [ExprStmt] ExprStmt
#   11|           getExpr(): [FunctionCall] call to ProbeFunction
#   11|               Type = [VoidType] void
#   11|               ValueCategory = prvalue
#   11|             getArgument(0): [Literal] 0
#   11|                 Type = [IntType] int
#   11|                 Value = [Literal] 0
#   11|                 ValueCategory = prvalue
#   13|       getCondition(): [Literal] 0
#   13|           Type = [IntType] int
#   13|           Value = [Literal] 0
#   13|           ValueCategory = prvalue
#   13|       getExcept(): [BlockStmt] { ... }
#   14|         getStmt(0): [ExprStmt] ExprStmt
#   14|           getExpr(): [FunctionCall] call to sink
#   14|               Type = [VoidType] void
#   14|               ValueCategory = prvalue
#   14|             getArgument(0): [VariableAccess] x
#   14|                 Type = [IntType] int
#   14|                 ValueCategory = prvalue(load)
#   16|     getStmt(2): [ReturnStmt] return ...
#   18| [TopLevelFunction] void g_cpp()
#   18|   <params>: 
#   18|   getEntryPoint(): [BlockStmt] { ... }
#   19|     getStmt(0): [DeclStmt] declaration
#   19|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#   19|           Type = [IntType] int
#   19|       getDeclarationEntry(1): [VariableDeclarationEntry] definition of y
#   19|           Type = [IntType] int
#   19|         getVariable().getInitializer(): [Initializer] initializer for y
#   19|           getExpr(): [Literal] 0
#   19|               Type = [IntType] int
#   19|               Value = [Literal] 0
#   19|               ValueCategory = prvalue
#   20|     getStmt(1): [MicrosoftTryFinallyStmt] __try { ... } __finally { ... }
#   20|       getStmt(): [BlockStmt] { ... }
#   21|         getStmt(0): [ExprStmt] ExprStmt
#   21|           getExpr(): [FunctionCall] call to ProbeFunction
#   21|               Type = [VoidType] void
#   21|               ValueCategory = prvalue
#   21|             getArgument(0): [Literal] 0
#   21|                 Type = [IntType] int
#   21|                 Value = [Literal] 0
#   21|                 ValueCategory = prvalue
#   22|         getStmt(1): [ExprStmt] ExprStmt
#   22|           getExpr(): [AssignExpr] ... = ...
#   22|               Type = [IntType] int
#   22|               ValueCategory = lvalue
#   22|             getLValue(): [VariableAccess] x
#   22|                 Type = [IntType] int
#   22|                 ValueCategory = lvalue
#   22|             getRValue(): [VariableAccess] y
#   22|                 Type = [IntType] int
#   22|                 ValueCategory = prvalue(load)
#   23|         getStmt(2): [ExprStmt] ExprStmt
#   23|           getExpr(): [FunctionCall] call to ProbeFunction
#   23|               Type = [VoidType] void
#   23|               ValueCategory = prvalue
#   23|             getArgument(0): [Literal] 0
#   23|                 Type = [IntType] int
#   23|                 Value = [Literal] 0
#   23|                 ValueCategory = prvalue
#   25|       getFinally(): [BlockStmt] { ... }
#   26|         getStmt(0): [ExprStmt] ExprStmt
#   26|           getExpr(): [FunctionCall] call to sink
#   26|               Type = [VoidType] void
#   26|               ValueCategory = prvalue
#   26|             getArgument(0): [VariableAccess] x
#   26|                 Type = [IntType] int
#   26|                 ValueCategory = prvalue(load)
#   28|     getStmt(2): [ReturnStmt] return ...
#   30| [TopLevelFunction] void AfxThrowMemoryException()
#   30|   <params>: 
#   32| [TopLevelFunction] void h_cpp(int)
#   32|   <params>: 
#   32|     getParameter(0): [Parameter] b
#   32|         Type = [IntType] int
#   32|   getEntryPoint(): [BlockStmt] { ... }
#   33|     getStmt(0): [DeclStmt] declaration
#   33|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#   33|           Type = [IntType] int
#   33|         getVariable().getInitializer(): [Initializer] initializer for x
#   33|           getExpr(): [Literal] 0
#   33|               Type = [IntType] int
#   33|               Value = [Literal] 0
#   33|               ValueCategory = prvalue
#   34|     getStmt(1): [MicrosoftTryExceptStmt] __try { ... } __except( ... ) { ... }
#   34|       getStmt(): [BlockStmt] { ... }
#   35|         getStmt(0): [IfStmt] if (...) ... 
#   35|           getCondition(): [VariableAccess] b
#   35|               Type = [IntType] int
#   35|               ValueCategory = prvalue(load)
#   35|           getThen(): [BlockStmt] { ... }
#   36|             getStmt(0): [ExprStmt] ExprStmt
#   36|               getExpr(): [FunctionCall] call to AfxThrowMemoryException
#   36|                   Type = [VoidType] void
#   36|                   ValueCategory = prvalue
#   35|           getCondition().getFullyConverted(): [CStyleCast] (bool)...
#   35|               Conversion = [BoolConversion] conversion to bool
#   35|               Type = [BoolType] bool
#   35|               ValueCategory = prvalue
#   39|       getCondition(): [Literal] 1
#   39|           Type = [IntType] int
#   39|           Value = [Literal] 1
#   39|           ValueCategory = prvalue
#   39|       getExcept(): [BlockStmt] { ... }
#   40|         getStmt(0): [ExprStmt] ExprStmt
#   40|           getExpr(): [FunctionCall] call to sink
#   40|               Type = [VoidType] void
#   40|               ValueCategory = prvalue
#   40|             getArgument(0): [VariableAccess] x
#   40|                 Type = [IntType] int
#   40|                 ValueCategory = prvalue(load)
#   42|     getStmt(2): [ReturnStmt] return ...
#   44| [TopLevelFunction] void throw_cpp(int)
#   44|   <params>: 
#   44|     getParameter(0): [Parameter] b
#   44|         Type = [IntType] int
#   44|   getEntryPoint(): [BlockStmt] { ... }
#   45|     getStmt(0): [DeclStmt] declaration
#   45|       getDeclarationEntry(0): [VariableDeclarationEntry] definition of x
#   45|           Type = [IntType] int
#   45|         getVariable().getInitializer(): [Initializer] initializer for x
#   45|           getExpr(): [Literal] 0
#   45|               Type = [IntType] int
#   45|               Value = [Literal] 0
#   45|               ValueCategory = prvalue
#   46|     getStmt(1): [MicrosoftTryExceptStmt] __try { ... } __except( ... ) { ... }
#   46|       getStmt(): [BlockStmt] { ... }
#   47|         getStmt(0): [IfStmt] if (...) ... 
#   47|           getCondition(): [VariableAccess] b
#   47|               Type = [IntType] int
#   47|               ValueCategory = prvalue(load)
#   47|           getThen(): [BlockStmt] { ... }
#   48|             getStmt(0): [ExprStmt] ExprStmt
#   48|               getExpr(): [ThrowExpr] throw ...
#   48|                   Type = [IntType] int
#   48|                   ValueCategory = prvalue
#   48|                 getExpr(): [Literal] 1
#   48|                     Type = [IntType] int
#   48|                     Value = [Literal] 1
#   48|                     ValueCategory = prvalue
#   47|           getCondition().getFullyConverted(): [CStyleCast] (bool)...
#   47|               Conversion = [BoolConversion] conversion to bool
#   47|               Type = [BoolType] bool
#   47|               ValueCategory = prvalue
#   51|       getCondition(): [Literal] 1
#   51|           Type = [IntType] int
#   51|           Value = [Literal] 1
#   51|           ValueCategory = prvalue
#   51|       getExcept(): [BlockStmt] { ... }
#   52|         getStmt(0): [ExprStmt] ExprStmt
#   52|           getExpr(): [FunctionCall] call to sink
#   52|               Type = [VoidType] void
#   52|               ValueCategory = prvalue
#   52|             getArgument(0): [VariableAccess] x
#   52|                 Type = [IntType] int
#   52|                 ValueCategory = prvalue(load)
#   54|     getStmt(2): [ReturnStmt] return ...
